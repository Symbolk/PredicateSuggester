id	oracle
5800	notify
5801	listeners[i] == AnnotationChangeListener.class
5802	notify
6861	margin == null
6862	frame == null
6863	padding == null
6864	bounds == null
6865	c == null
6866	c.equals(RectangleConstraint.NONE)
6867	r == null
6868	r.getLowerBound() > 0.0
6869	r.getUpperBound() < Double.POSITIVE_INFINITY
6870	r == null
6871	r.getLowerBound() > 0.0
6872	r.getUpperBound() < Double.POSITIVE_INFINITY
6873	obj == this
6874	obj instanceof AbstractBlock
6875	ObjectUtilities.equal(this.id, that.id)
6876	this.frame.equals(that.frame)
6877	this.bounds.equals(that.bounds)
6878	this.margin.equals(that.margin)
6879	this.padding.equals(that.padding)
6880	this.height != that.height
6881	this.width != that.width
6882	this.frame instanceof PublicCloneable
2279	labelFormat == null
2280	formatter == null
2281	percentFormatter == null
2282	labelFormat == null
2283	formatter == null
2284	dataset == null
2285	value != null
2286	this.numberFormat != null
2287	this.dateFormat != null
2288	value != null
2289	obj == this
2290	obj instanceof AbstractCategoryItemLabelGenerator
2291	this.labelFormat.equals(that.labelFormat)
2292	ObjectUtilities.equal(this.dateFormat, that.dateFormat)
2293	ObjectUtilities.equal(this.numberFormat, that.numberFormat)
2294	this.numberFormat != null
2295	this.dateFormat != null
8781	plot == null
8782	generator == null
8783	notify
8784	notify
8785	result == null
8786	notify
8787	notify
8788	generator == null
8789	notify
8790	notify
8791	annotation == null
8792	layer.equals(Layer.FOREGROUND)
8793	layer.equals(Layer.BACKGROUND)
8794	generator == null
8795	isSeriesVisible(row)
8796	dataset != null
8797	dataset instanceof SelectableCategoryDataset
8798	info != null
8798	selectionState == null
8799	cri != null
8800	dataset == null
8801	getDataBoundsIncludesVisibleSeriesOnly()
8802	isSeriesVisible(s)
8803	paint == null
8804	stroke == null
8805	orientation == PlotOrientation.HORIZONTAL
8806	orientation == PlotOrientation.VERTICAL
8807	range.contains(value)
8808	orientation == PlotOrientation.HORIZONTAL
8809	orientation == PlotOrientation.VERTICAL
8810	columnIndex < 0
8811	marker.getDrawAsLine()
8812	orientation == PlotOrientation.HORIZONTAL
8813	orientation == PlotOrientation.VERTICAL
8814	orientation == PlotOrientation.HORIZONTAL
8815	orientation == PlotOrientation.VERTICAL
8816	label != null
8817	marker instanceof ValueMarker
8818	range.contains(value)
8819	orientation == PlotOrientation.HORIZONTAL
8820	orientation == PlotOrientation.VERTICAL
8821	label != null
8822	marker instanceof IntervalMarker
8823	range.intersects(start, end)
8824	orientation == PlotOrientation.HORIZONTAL
8825	orientation == PlotOrientation.VERTICAL
8826	p instanceof GradientPaint
8827	t != null
8828	im.getOutlinePaint() != null
8828	im.getOutlineStroke() != null
8829	orientation == PlotOrientation.VERTICAL
8830	range.contains(start)
8831	range.contains(end)
8832	range.contains(start)
8833	range.contains(end)
8834	label != null
8835	orientation == PlotOrientation.HORIZONTAL
8836	orientation == PlotOrientation.VERTICAL
8837	orientation == PlotOrientation.HORIZONTAL
8838	orientation == PlotOrientation.VERTICAL
8839	p == null
8840	isSeriesVisible(series)
8840	isSeriesVisibleInLegend(series)
8841	this.legendItemToolTipGenerator != null
8842	this.legendItemURLGenerator != null
8843	labelPaint != null
8844	obj == this
8845	obj instanceof AbstractCategoryItemRenderer
8846	ObjectUtilities.equal(this.itemLabelGeneratorList, that.itemLabelGeneratorList)
8847	ObjectUtilities.equal(this.baseItemLabelGenerator, that.baseItemLabelGenerator)
8848	ObjectUtilities.equal(this.toolTipGeneratorList, that.toolTipGeneratorList)
8849	ObjectUtilities.equal(this.baseToolTipGenerator, that.baseToolTipGenerator)
8850	ObjectUtilities.equal(this.urlGeneratorList, that.urlGeneratorList)
8851	ObjectUtilities.equal(this.baseURLGenerator, that.baseURLGenerator)
8852	ObjectUtilities.equal(this.legendItemLabelGenerator, that.legendItemLabelGenerator)
8853	ObjectUtilities.equal(this.legendItemToolTipGenerator, that.legendItemToolTipGenerator)
8854	ObjectUtilities.equal(this.legendItemURLGenerator, that.legendItemURLGenerator)
8855	ObjectUtilities.equal(this.backgroundAnnotations, that.backgroundAnnotations)
8856	ObjectUtilities.equal(this.foregroundAnnotations, that.foregroundAnnotations)
8857	cp != null
8858	orientation == null
8859	crosshairState != null
8860	this.plot.isRangeCrosshairLockedOnData()
8861	generator != null
8862	negative
8863	layer.equals(Layer.FOREGROUND)
8864	layer.equals(Layer.BACKGROUND)
8865	this.itemLabelGeneratorList != null
8866	this.baseItemLabelGenerator != null
8867	this.baseItemLabelGenerator instanceof PublicCloneable
8868	this.toolTipGeneratorList != null
8869	this.baseToolTipGenerator != null
8870	this.baseToolTipGenerator instanceof PublicCloneable
8871	this.urlGeneratorList != null
8872	this.baseURLGenerator != null
8873	this.baseURLGenerator instanceof PublicCloneable
8874	this.legendItemLabelGenerator instanceof PublicCloneable
8875	this.legendItemToolTipGenerator instanceof PublicCloneable
8876	this.legendItemURLGenerator instanceof PublicCloneable
8877	result == null
8878	this.plot == null
8879	dataset != null
8880	plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)
8881	isSeriesVisibleInLegend(i)
8882	item != null
8883	isSeriesVisibleInLegend(i)
8884	item != null
8885	hotspot == null
8886	getItemCreateEntity(row, column, selected)
8887	hotspot == null
8888	getPlot().getOrientation() == PlotOrientation.VERTICAL
8889	generator != null
8890	urlster != null
8891	result == null
8892	y == null
8893	bounds == null
1547	group == null
1548	listeners[i] == DatasetChangeListener.class
4083	obj == this
4084	obj instanceof AbstractDialLayer
4085	listeners[i] == DialLayerChangeListener.class
445	x != null
446	x != null
447	y != null
448	y != null
2073	index >= 0
2073	index < this.size
2074	index < 0
2075	index >= this.objects.length
2076	this.objects[index] == object
2077	obj == null
2078	obj == this
2079	obj instanceof AbstractObjectList
2080	ObjectUtilities.equal(get(i), other.get(i))
2081	size > 0
2082	size > 1
2083	size > 2
2084	this.objects != null
2085	object instanceof Serializable
2085	object != null
2086	index != -1
5566	listener == null
5567	listener == null
5568	listeners[i] == OverlayChangeListener.class
2380	labelFormat == null
2381	numberFormat == null
2382	percentFormat == null
2383	value != null
2384	value != null
2385	v > 0.0
2386	dataset != null
2387	obj == this
2388	obj instanceof AbstractPieItemLabelGenerator
2389	this.labelFormat.equals(that.labelFormat)
2390	this.numberFormat.equals(that.numberFormat)
2391	this.percentFormat.equals(that.percentFormat)
2392	this.numberFormat != null
2393	this.percentFormat != null
3982	record == null
9018	b != null
9019	notify
9020	notify
9021	b != null
9022	notify
9023	notify
9024	selected
9025	result == null
9026	this.autoPopulateSeriesPaint
9026	seriesPaint == null
9027	supplier != null
9028	seriesPaint == null
9029	notify
9030	notify
9031	notify
9032	selected
9033	result == null
9034	seriesFillPaint == null
9034	this.autoPopulateSeriesFillPaint
9035	supplier != null
9036	seriesFillPaint == null
9037	notify
9038	paint == null
9039	notify
9040	selected
9041	result == null
9042	seriesOutlinePaint == null
9042	this.autoPopulateSeriesOutlinePaint
9043	supplier != null
9044	seriesOutlinePaint == null
9045	notify
9046	paint == null
9047	notify
9048	this.autoPopulateSeriesStroke
9048	result == null
9049	supplier != null
9050	result == null
9051	notify
9052	notify
9053	stroke == null
9054	notify
9055	result == null
9055	this.autoPopulateSeriesOutlineStroke
9056	supplier != null
9057	result == null
9058	notify
9059	stroke == null
9060	notify
9061	selected
9062	result == null
9063	this.autoPopulateSeriesShape
9063	result == null
9064	supplier != null
9065	result == null
9066	notify
9067	shape == null
9068	notify
9069	b != null
9070	notify
9071	notify
9072	result == null
9073	notify
9074	font == null
9075	notify
9076	result == null
9077	notify
9078	paint == null
9079	notify
9080	position == null
9081	notify
9082	position == null
9083	notify
9084	position == null
9085	notify
9086	position == null
9087	notify
9088	b != null
9089	notify
9090	notify
9091	result == null
9092	result == null
9093	this.treatLegendShapeAsLine != treatAsLine
9094	result == null
9095	result == null
9096	anchor == ItemLabelAnchor.CENTER
9097	anchor == ItemLabelAnchor.INSIDE1
9098	anchor == ItemLabelAnchor.INSIDE2
9099	anchor == ItemLabelAnchor.INSIDE3
9100	anchor == ItemLabelAnchor.INSIDE4
9101	anchor == ItemLabelAnchor.INSIDE5
9102	anchor == ItemLabelAnchor.INSIDE6
9103	anchor == ItemLabelAnchor.INSIDE7
9104	anchor == ItemLabelAnchor.INSIDE8
9105	anchor == ItemLabelAnchor.INSIDE9
9106	anchor == ItemLabelAnchor.INSIDE10
9107	anchor == ItemLabelAnchor.INSIDE11
9108	anchor == ItemLabelAnchor.INSIDE12
9109	anchor == ItemLabelAnchor.OUTSIDE1
9110	anchor == ItemLabelAnchor.OUTSIDE2
9111	anchor == ItemLabelAnchor.OUTSIDE3
9112	anchor == ItemLabelAnchor.OUTSIDE4
9113	anchor == ItemLabelAnchor.OUTSIDE5
9114	anchor == ItemLabelAnchor.OUTSIDE6
9115	anchor == ItemLabelAnchor.OUTSIDE7
9116	anchor == ItemLabelAnchor.OUTSIDE8
9117	anchor == ItemLabelAnchor.OUTSIDE9
9118	anchor == ItemLabelAnchor.OUTSIDE10
9119	anchor == ItemLabelAnchor.OUTSIDE11
9120	anchor == ItemLabelAnchor.OUTSIDE12
9121	listener == null
9122	listener == null
9123	ls[i] == RendererChangeListener.class
9124	obj == this
9125	obj instanceof AbstractRenderer
9126	this.dataBoundsIncludesVisibleSeriesOnly != that.dataBoundsIncludesVisibleSeriesOnly
9127	this.treatLegendShapeAsLine != that.treatLegendShapeAsLine
9128	this.defaultEntityRadius != that.defaultEntityRadius
9129	this.seriesVisibleList.equals(that.seriesVisibleList)
9130	this.baseSeriesVisible != that.baseSeriesVisible
9131	this.seriesVisibleInLegendList.equals( that.seriesVisibleInLegendList)
9132	this.baseSeriesVisibleInLegend != that.baseSeriesVisibleInLegend
9133	ObjectUtilities.equal(this.paintList, that.paintList)
9134	PaintUtilities.equal(this.basePaint, that.basePaint)
9135	ObjectUtilities.equal(this.fillPaintList, that.fillPaintList)
9136	PaintUtilities.equal(this.baseFillPaint, that.baseFillPaint)
9137	ObjectUtilities.equal(this.outlinePaintList, that.outlinePaintList)
9138	PaintUtilities.equal(this.baseOutlinePaint, that.baseOutlinePaint)
9139	ObjectUtilities.equal(this.strokeList, that.strokeList)
9140	ObjectUtilities.equal(this.baseStroke, that.baseStroke)
9141	ObjectUtilities.equal(this.outlineStrokeList, that.outlineStrokeList)
9142	ObjectUtilities.equal( this.baseOutlineStroke, that.baseOutlineStroke)
9143	ObjectUtilities.equal(this.shapeList, that.shapeList)
9144	ShapeUtilities.equal(this.baseShape, that.baseShape)
9145	ObjectUtilities.equal(this.itemLabelsVisibleList, that.itemLabelsVisibleList)
9146	this.baseItemLabelsVisible != that.baseItemLabelsVisible
9147	ObjectUtilities.equal(this.itemLabelFontList, that.itemLabelFontList)
9148	ObjectUtilities.equal(this.baseItemLabelFont, that.baseItemLabelFont)
9149	ObjectUtilities.equal(this.itemLabelPaintList, that.itemLabelPaintList)
9150	PaintUtilities.equal(this.baseItemLabelPaint, that.baseItemLabelPaint)
9151	ObjectUtilities.equal(this.positiveItemLabelPositionList, that.positiveItemLabelPositionList)
9152	ObjectUtilities.equal(this.basePositiveItemLabelPosition, that.basePositiveItemLabelPosition)
9153	ObjectUtilities.equal(this.negativeItemLabelPositionList, that.negativeItemLabelPositionList)
9154	ObjectUtilities.equal(this.baseNegativeItemLabelPosition, that.baseNegativeItemLabelPosition)
9155	this.itemLabelAnchorOffset != that.itemLabelAnchorOffset
9156	ObjectUtilities.equal(this.createEntitiesList, that.createEntitiesList)
9157	this.baseCreateEntities != that.baseCreateEntities
9158	ObjectUtilities.equal(this.legendShapeList, that.legendShapeList)
9159	ShapeUtilities.equal(this.baseLegendShape, that.baseLegendShape)
9160	ObjectUtilities.equal(this.legendTextFont, that.legendTextFont)
9161	ObjectUtilities.equal(this.baseLegendTextFont, that.baseLegendTextFont)
9162	ObjectUtilities.equal(this.legendTextPaint, that.legendTextPaint)
9163	PaintUtilities.equal(this.baseLegendTextPaint, that.baseLegendTextPaint)
9164	this.seriesVisibleList != null
9165	this.seriesVisibleInLegendList != null
9166	this.paintList != null
9167	this.fillPaintList != null
9168	this.outlinePaintList != null
9169	this.strokeList != null
9170	this.outlineStrokeList != null
9171	this.shapeList != null
9172	this.baseShape != null
9173	this.itemLabelsVisibleList != null
9174	this.itemLabelFontList != null
9175	this.itemLabelPaintList != null
9176	this.positiveItemLabelPositionList != null
9177	this.negativeItemLabelPositionList != null
9178	this.createEntitiesList != null
9179	this.legendShapeList != null
9180	this.legendTextFont != null
9181	this.legendTextPaint != null
1507	getSeriesKey(s).equals(seriesKey)
5875	info == null
5876	entities == null
5877	obj == this
5878	obj instanceof AbstractXYAnnotation
5879	ObjectUtilities.equal(this.toolTipText, that.toolTipText)
5880	ObjectUtilities.equal(this.url, that.url)
5881	this.toolTipText != null
5882	this.url != null
419	x != null
420	y != null
2360	formatString == null
2361	xFormat == null
2362	yFormat == null
2363	this.xDateFormat != null
2364	Double.isNaN(y)
2364	dataset.getY(series, item) == null
2365	this.yDateFormat != null
2366	obj == this
2367	obj instanceof AbstractXYItemLabelGenerator
2368	this.formatString.equals(that.formatString)
2369	ObjectUtilities.equal(this.xFormat, that.xFormat)
2370	ObjectUtilities.equal(this.xDateFormat, that.xDateFormat)
2371	ObjectUtilities.equal(this.yFormat, that.yFormat)
2372	ObjectUtilities.equal(this.yDateFormat, that.yDateFormat)
2373	this.nullYString.equals(that.nullYString)
2374	this.xFormat != null
2375	this.yFormat != null
2376	this.xDateFormat != null
2377	this.yDateFormat != null
7865	dataset instanceof SelectableXYDataset
7866	selectionState == null
7866	info != null
7867	cri != null
7868	generator == null
7869	notify
7870	notify
7871	generator == null
7872	notify
7873	notify
7874	generator == null
7875	notify
7876	notify
7877	annotation == null
7878	layer.equals(Layer.FOREGROUND)
7879	layer.equals(Layer.BACKGROUND)
7880	generator == null
7881	dataset == null
7882	getDataBoundsIncludesVisibleSeriesOnly()
7883	isSeriesVisible(s)
7884	dataset == null
7885	getDataBoundsIncludesVisibleSeriesOnly()
7886	isSeriesVisible(s)
7887	p != null
7888	index >= 0
7889	xAxis != null
7890	xRange == null
7891	this.plot == null
7892	dataset != null
7893	isSeriesVisibleInLegend(i)
7894	item != null
7895	xyplot == null
7896	dataset == null
7897	getLegendItemToolTipGenerator() != null
7898	getLegendItemURLGenerator() != null
7899	labelPaint != null
7900	getTreatLegendShapeAsLine()
7901	result == null
7902	bounds == null
7903	plot.getOrientation() == PlotOrientation.VERTICAL
7904	paint != null
7905	plot.getOrientation() == PlotOrientation.VERTICAL
7906	paint != null
7907	range.contains(value)
7908	orientation == PlotOrientation.HORIZONTAL
7909	orientation == PlotOrientation.VERTICAL
7910	range.contains(value)
7911	orientation == PlotOrientation.HORIZONTAL
7912	orientation == PlotOrientation.VERTICAL
7913	range.contains(value)
7914	orientation == PlotOrientation.HORIZONTAL
7915	orientation == PlotOrientation.VERTICAL
7916	marker instanceof ValueMarker
7917	range.contains(value)
7918	orientation == PlotOrientation.HORIZONTAL
7919	orientation == PlotOrientation.VERTICAL
7920	label != null
7921	marker instanceof IntervalMarker
7922	range.intersects(start, end)
7923	orientation == PlotOrientation.HORIZONTAL
7924	orientation == PlotOrientation.VERTICAL
7925	p instanceof GradientPaint
7926	t != null
7927	im.getOutlineStroke() != null
7927	im.getOutlinePaint() != null
7928	orientation == PlotOrientation.VERTICAL
7929	range.contains(start)
7930	range.contains(end)
7931	range.contains(start)
7932	range.contains(end)
7933	label != null
7934	orientation == PlotOrientation.HORIZONTAL
7935	orientation == PlotOrientation.VERTICAL
7936	marker instanceof ValueMarker
7937	range.contains(value)
7938	orientation == PlotOrientation.HORIZONTAL
7939	orientation == PlotOrientation.VERTICAL
7940	label != null
7941	marker instanceof IntervalMarker
7942	range.intersects(start, end)
7943	orientation == PlotOrientation.HORIZONTAL
7944	orientation == PlotOrientation.VERTICAL
7945	p instanceof GradientPaint
7946	t != null
7947	im.getOutlineStroke() != null
7947	im.getOutlinePaint() != null
7948	orientation == PlotOrientation.VERTICAL
7949	range.contains(start)
7950	range.contains(end)
7951	range.contains(start)
7952	range.contains(end)
7953	label != null
7954	orientation == PlotOrientation.HORIZONTAL
7955	orientation == PlotOrientation.VERTICAL
7956	this.baseItemLabelGenerator != null
7956	this.baseItemLabelGenerator instanceof PublicCloneable
7957	this.baseToolTipGenerator != null
7957	this.baseToolTipGenerator instanceof PublicCloneable
7958	clone.legendItemLabelGenerator instanceof PublicCloneable
7959	clone.legendItemToolTipGenerator instanceof PublicCloneable
7960	clone.legendItemURLGenerator instanceof PublicCloneable
7961	clone.legendItemLabelGenerator instanceof PublicCloneable
7962	clone.legendItemToolTipGenerator instanceof PublicCloneable
7963	clone.legendItemURLGenerator instanceof PublicCloneable
7964	obj == this
7965	obj instanceof AbstractXYItemRenderer
7966	this.itemLabelGeneratorList.equals(that.itemLabelGeneratorList)
7967	ObjectUtilities.equal(this.baseItemLabelGenerator, that.baseItemLabelGenerator)
7968	this.toolTipGeneratorList.equals(that.toolTipGeneratorList)
7969	ObjectUtilities.equal(this.baseToolTipGenerator, that.baseToolTipGenerator)
7970	this.urlGeneratorList.equals(that.urlGeneratorList)
7971	ObjectUtilities.equal(this.baseURLGenerator, that.baseURLGenerator)
7972	this.foregroundAnnotations.equals(that.foregroundAnnotations)
7973	this.backgroundAnnotations.equals(that.backgroundAnnotations)
7974	ObjectUtilities.equal(this.legendItemLabelGenerator, that.legendItemLabelGenerator)
7975	ObjectUtilities.equal(this.legendItemToolTipGenerator, that.legendItemToolTipGenerator)
7976	ObjectUtilities.equal(this.legendItemURLGenerator, that.legendItemURLGenerator)
7977	p != null
7978	orientation == null
7979	crosshairState != null
7980	this.plot.isDomainCrosshairLockedOnData()
7981	this.plot.isRangeCrosshairLockedOnData()
7982	this.plot.isRangeCrosshairLockedOnData()
7983	generator != null
7984	negative
7985	layer.equals(Layer.FOREGROUND)
7986	layer.equals(Layer.BACKGROUND)
7987	getItemCreateEntity(series, item, selected)
7988	hotspot == null
7989	getPlot().getOrientation() == PlotOrientation.VERTICAL
7990	generator != null
7991	urlster != null
444	z != null
1845	(align & FIT_VERTICAL) == FIT_VERTICAL
1846	(align & FIT_HORIZONTAL) == FIT_HORIZONTAL
1847	(align & TOP) == TOP
1848	(align & BOTTOM) == BOTTOM
1849	(align & LEFT) == LEFT
1850	(align & RIGHT) == RIGHT
2056	event.getWindow() == this
4069	paint == null
4070	paint == null
4071	stroke == null
4072	radius < 0.0
4073	radius < 0.0
4074	obj == this
4075	obj instanceof ArcDialFrame
4076	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
4077	PaintUtilities.equal(this.foregroundPaint, that.foregroundPaint)
4078	this.startAngle != that.startAngle
4079	this.extent != that.extent
4080	this.innerRadius != that.innerRadius
4081	this.outerRadius != that.outerRadius
4082	this.stroke.equals(that.stroke)
8927	type == null
8928	cp == null
8929	isSeriesVisibleInLegend(series)
8929	isSeriesVisible(series)
8930	getLegendItemToolTipGenerator() != null
8931	getLegendItemURLGenerator() != null
8932	labelPaint != null
8933	getItemVisible(row, column)
8934	value == null
8935	this.endType == AreaRendererEndType.TRUNCATE
8936	column == 0
8937	column == getColumnCount() - 1
8938	this.endType == AreaRendererEndType.LEVEL
8939	column > 0
8940	n0 != null
8941	column < dataset.getColumnCount() - 1
8942	n2 != null
8943	this.endType == AreaRendererEndType.LEVEL
8944	orientation == PlotOrientation.VERTICAL
8945	orientation == PlotOrientation.HORIZONTAL
8946	isItemLabelVisible(row, column, selected)
8947	entities != null
8948	obj == this
8949	obj instanceof AreaRenderer
8950	this.endType.equals(that.endType)
8967	this == obj
8968	obj instanceof AreaRendererEndType
8969	this.name.equals(t.toString())
8970	this.equals(AreaRendererEndType.LEVEL)
8971	this.equals(AreaRendererEndType.TAPER)
8972	this.equals(AreaRendererEndType.TRUNCATE)
2162	array == null
2163	array1 == null
2164	array2 == null
2165	array1.length != array2.length
2166	array1[i] == null
2167	array2[i] != null
2168	array2[i] == null
2169	array1[i] != null
2170	array1[i] != array2[i]
2171	array1 == null
2172	array2 == null
2173	array1.length != array2.length
2174	Arrays.equals(array1[i], array2[i])
2175	o1 != null
2175	o2 != null
2176	o1.equals(o2)
2177	o1 == null
2177	o2 == null
2178	o1 == null
2179	o2 == null
2180	retval != 0
5421	this.isArrowAtTop
5422	angle != 0
5422	rotate != null
5423	rotate != null
5423	angle != 0
5424	obj == this
5425	obj instanceof ArrowNeedle
5426	super.equals(obj)
5427	this.isArrowAtTop != that.isArrowAtTop
2023	s1 == null
2024	s2 == null
2025	limit1 != limit2
2026	m1.equals(m2)
2027	c1 != c2
5099	flag != this.visible
5100	existing != null
5101	existing.equals(label)
5102	label != null
5103	font == null
5104	this.labelFont.equals(font)
5105	paint == null
5106	insets == null
5107	insets.equals(this.labelInsets)
5108	notify
5109	paint == null
5110	stroke == null
5111	flag != this.tickLabelsVisible
5112	flag != this.minorTickMarksVisible
5113	font == null
5114	this.tickLabelFont.equals(font)
5115	paint == null
5116	insets == null
5117	this.tickLabelInsets.equals(insets)
5118	flag != this.tickMarksVisible
5119	stroke == null
5120	this.tickMarkStroke.equals(stroke)
5121	paint == null
5122	plotState == null
5122	plotState.getOwner() == null
5123	edge.equals(RectangleEdge.TOP)
5124	edge.equals(RectangleEdge.BOTTOM)
5125	edge.equals(RectangleEdge.LEFT)
5126	edge.equals(RectangleEdge.RIGHT)
5127	e != null
5128	listeners[i] == AxisChangeListener.class
5129	axisLabel.equals("")
5129	axisLabel != null
5130	edge == RectangleEdge.RIGHT
5130	edge == RectangleEdge.LEFT
5131	state == null
5132	label.equals("")
5132	label == null
5133	edge == RectangleEdge.TOP
5134	edge == RectangleEdge.BOTTOM
5135	edge == RectangleEdge.LEFT
5136	edge == RectangleEdge.RIGHT
5137	plotState != null
5137	hotspot != null
5138	owner != null
5139	entities != null
5140	edge == RectangleEdge.TOP
5141	edge == RectangleEdge.BOTTOM
5142	edge == RectangleEdge.LEFT
5143	edge == RectangleEdge.RIGHT
5144	obj == this
5145	obj instanceof Axis
5146	this.visible != that.visible
5147	ObjectUtilities.equal(this.label, that.label)
5148	ObjectUtilities.equal(this.labelFont, that.labelFont)
5149	PaintUtilities.equal(this.labelPaint, that.labelPaint)
5150	ObjectUtilities.equal(this.labelInsets, that.labelInsets)
5151	this.labelAngle != that.labelAngle
5152	ObjectUtilities.equal(this.labelToolTip, that.labelToolTip)
5153	ObjectUtilities.equal(this.labelURL, that.labelURL)
5154	this.axisLineVisible != that.axisLineVisible
5155	ObjectUtilities.equal(this.axisLineStroke, that.axisLineStroke)
5156	PaintUtilities.equal(this.axisLinePaint, that.axisLinePaint)
5157	this.tickLabelsVisible != that.tickLabelsVisible
5158	ObjectUtilities.equal(this.tickLabelFont, that.tickLabelFont)
5159	PaintUtilities.equal(this.tickLabelPaint, that.tickLabelPaint)
5160	ObjectUtilities.equal( this.tickLabelInsets, that.tickLabelInsets )
5161	this.tickMarksVisible != that.tickMarksVisible
5162	this.tickMarkInsideLength != that.tickMarkInsideLength
5163	this.tickMarkOutsideLength != that.tickMarkOutsideLength
5164	PaintUtilities.equal(this.tickMarkPaint, that.tickMarkPaint)
5165	ObjectUtilities.equal(this.tickMarkStroke, that.tickMarkStroke)
5166	this.minorTickMarksVisible != that.minorTickMarksVisible
5167	this.minorTickMarkInsideLength != that.minorTickMarkInsideLength
5168	this.minorTickMarkOutsideLength != that.minorTickMarkOutsideLength
5169	this.fixedDimension != that.fixedDimension
5337	axis == null
5338	edge == null
5339	edge == RectangleEdge.TOP
5340	edge == RectangleEdge.BOTTOM
5341	edge == RectangleEdge.LEFT
5342	edge == RectangleEdge.RIGHT
5600	axis == null
5601	obj == this
5602	obj instanceof AxisEntity
5603	getArea().equals(that.getArea())
5604	ObjectUtilities.equal(getToolTipText(), that.getToolTipText())
5605	ObjectUtilities.equal(getURLText(), that.getURLText())
5606	this.axis.equals(that.axis)
5635	axis == null
5310	this == obj
5311	obj instanceof AxisLocation
5312	this.name.equals(location.toString())
5313	location == null
5314	location == AxisLocation.TOP_OR_LEFT
5315	location == AxisLocation.TOP_OR_RIGHT
5316	location == AxisLocation.BOTTOM_OR_LEFT
5317	location == AxisLocation.BOTTOM_OR_RIGHT
5318	this.equals(AxisLocation.TOP_OR_RIGHT)
5319	this.equals(AxisLocation.BOTTOM_OR_RIGHT)
5320	this.equals(AxisLocation.TOP_OR_LEFT)
5321	this.equals(AxisLocation.BOTTOM_OR_LEFT)
4827	edge == null
4828	edge == RectangleEdge.TOP
4829	edge == RectangleEdge.BOTTOM
4830	edge == RectangleEdge.LEFT
4831	edge == RectangleEdge.RIGHT
4832	edge == RectangleEdge.TOP
4833	this.top < space
4834	edge == RectangleEdge.BOTTOM
4835	this.bottom < space
4836	edge == RectangleEdge.LEFT
4837	this.left < space
4838	edge == RectangleEdge.RIGHT
4839	this.right < space
4840	result == null
4841	result == null
4842	edge == RectangleEdge.TOP
4843	edge == RectangleEdge.BOTTOM
4844	edge == RectangleEdge.LEFT
4845	edge == RectangleEdge.RIGHT
4846	obj == this
4847	obj instanceof AxisSpace
4848	this.top != that.top
4849	this.bottom != that.bottom
4850	this.left != that.left
4851	this.right != that.right
4431	edge == RectangleEdge.TOP
4432	edge == RectangleEdge.BOTTOM
4433	edge == RectangleEdge.LEFT
4434	edge == RectangleEdge.RIGHT
8623	painter == null
8624	min < 0.0
8625	this.includeBaseInRange != include
8626	painter == null
8627	paint == null
8628	dataset != null
8629	orientation == PlotOrientation.HORIZONTAL
8630	orientation == PlotOrientation.VERTICAL
8631	columns > 1
8632	rows > 1
8633	(rows * columns) > 0
8634	orientation == PlotOrientation.HORIZONTAL
8635	seriesCount > 1
8636	barHigh < min
8637	barLow > max
8638	dataset == null
8639	result != null
8640	this.includeBaseInRange
8641	cp == null
8642	isSeriesVisibleInLegend(series)
8642	isSeriesVisible(series)
8643	getLegendItemToolTipGenerator() != null
8644	getLegendItemURLGenerator() != null
8645	labelPaint != null
8646	this.gradientPaintTransformer != null
8647	visibleRow < 0
8648	dataValue == null
8649	barL0L1 == null
8650	barLength < getMinimumBarLength()
8650	barLength > 0.0
8651	orientation == PlotOrientation.HORIZONTAL
8652	inverted
8652	positive
8652	positive
8652	inverted
8653	positive
8653	inverted
8653	positive
8653	inverted
8654	orientation == PlotOrientation.HORIZONTAL
8655	getShadowsVisible()
8656	generator != null
8656	isItemLabelVisible(row, column, selected)
8657	entities != null
8658	categories > 1
8659	label == null
8660	negative
8661	isInternalAnchor(position.getItemLabelAnchor())
8662	bounds != null
8663	bar.contains(bounds.getBounds2D())
8664	negative
8665	position != null
8666	position != null
8667	anchor == ItemLabelAnchor.CENTER
8668	anchor == ItemLabelAnchor.INSIDE1
8669	anchor == ItemLabelAnchor.INSIDE2
8670	anchor == ItemLabelAnchor.INSIDE3
8671	anchor == ItemLabelAnchor.INSIDE4
8672	anchor == ItemLabelAnchor.INSIDE5
8673	anchor == ItemLabelAnchor.INSIDE6
8674	anchor == ItemLabelAnchor.INSIDE7
8675	anchor == ItemLabelAnchor.INSIDE8
8676	anchor == ItemLabelAnchor.INSIDE9
8677	anchor == ItemLabelAnchor.INSIDE10
8678	anchor == ItemLabelAnchor.INSIDE11
8679	anchor == ItemLabelAnchor.INSIDE12
8680	anchor == ItemLabelAnchor.OUTSIDE1
8681	anchor == ItemLabelAnchor.OUTSIDE2
8682	anchor == ItemLabelAnchor.OUTSIDE3
8683	anchor == ItemLabelAnchor.OUTSIDE4
8684	anchor == ItemLabelAnchor.OUTSIDE5
8685	anchor == ItemLabelAnchor.OUTSIDE6
8686	anchor == ItemLabelAnchor.OUTSIDE7
8687	anchor == ItemLabelAnchor.OUTSIDE8
8688	anchor == ItemLabelAnchor.OUTSIDE9
8689	anchor == ItemLabelAnchor.OUTSIDE10
8690	anchor == ItemLabelAnchor.OUTSIDE11
8691	anchor == ItemLabelAnchor.OUTSIDE12
8692	obj == this
8693	obj instanceof BarRenderer
8694	this.base != that.base
8695	this.itemMargin != that.itemMargin
8696	this.drawBarOutline != that.drawBarOutline
8697	this.maximumBarWidth != that.maximumBarWidth
8698	this.minimumBarLength != that.minimumBarLength
8699	ObjectUtilities.equal(this.gradientPaintTransformer, that.gradientPaintTransformer)
8700	ObjectUtilities.equal(this.positiveItemLabelPositionFallback, that.positiveItemLabelPositionFallback)
8701	ObjectUtilities.equal(this.negativeItemLabelPositionFallback, that.negativeItemLabelPositionFallback)
8702	this.barPainter.equals(that.barPainter)
8703	this.shadowsVisible != that.shadowsVisible
8704	PaintUtilities.equal(this.shadowPaint, that.shadowPaint)
8705	this.shadowXOffset != that.shadowXOffset
8706	this.shadowYOffset != that.shadowYOffset
8707	visibleRow < 0
8708	this.getItemVisible(row, column)
8709	dataValue == null
8710	barL0L1 == null
8711	barLength > 0.0
8711	barLength < getMinimumBarLength()
8712	orientation == PlotOrientation.HORIZONTAL
8713	inverted
8713	positive
8713	positive
8713	inverted
8714	inverted
8714	positive
8714	positive
8714	inverted
8715	orientation == PlotOrientation.HORIZONTAL
8187	paint == null
8188	backgroundPaint != null
8189	backgroundImage != null
8190	outlineStroke != null
8190	outlinePaint != null
8191	orientation == PlotOrientation.HORIZONTAL
8192	orientation == PlotOrientation.VERTICAL
8193	range.contains(value)
8194	orientation == PlotOrientation.HORIZONTAL
8195	orientation == PlotOrientation.VERTICAL
8196	range.contains(value)
8197	orientation == PlotOrientation.HORIZONTAL
8198	orientation == PlotOrientation.VERTICAL
8199	marker instanceof ValueMarker
8200	range.contains(value)
8201	orientation == PlotOrientation.HORIZONTAL
8202	orientation == PlotOrientation.VERTICAL
8203	label != null
8204	dataValue == null
8205	barL0L1 == null
8206	orientation == PlotOrientation.HORIZONTAL
8207	barLength > 0.0
8208	itemPaint instanceof Color
8209	isDrawBarOutline()
8209	state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD
8210	bar3dRight != null
8211	bar3dTop != null
8212	generator != null
8212	isItemLabelVisible(row, column, selected)
8213	entities != null
8214	obj == this
8215	obj instanceof BarRenderer3D
8216	this.xOffset != that.xOffset
8217	this.yOffset != that.yOffset
8218	PaintUtilities.equal(this.wallPaint, that.wallPaint)
6139	library == null
6140	l != null
6141	libraryClass == null
6142	library == null
6958	insets == null
6959	paint == null
6960	t > 0.0
6961	b > 0.0
6962	l > 0.0
6963	r > 0.0
6964	obj == this
6965	obj instanceof BlockBorder
6966	this.insets.equals(that.insets)
6967	PaintUtilities.equal(this.paint, that.paint)
6814	arrangement == null
6815	arrangement == null
6816	params instanceof EntityBlockParams
6817	ebp.getGenerateEntities()
6818	sec != null
6819	r instanceof EntityBlockResult
6820	sec != null
6821	obj == this
6822	obj instanceof BlockContainer
6823	super.equals(obj)
6824	this.arrangement.equals(that.arrangement)
6825	this.blocks.equals(that.blocks)
1844	obj instanceof BooleanList
6883	key == null
6884	edge == RectangleEdge.TOP
6885	edge == RectangleEdge.BOTTOM
6886	edge == RectangleEdge.LEFT
6887	edge == RectangleEdge.RIGHT
6888	w == LengthConstraintType.NONE
6889	h == LengthConstraintType.NONE
6890	h == LengthConstraintType.FIXED
6891	h == LengthConstraintType.RANGE
6892	w == LengthConstraintType.FIXED
6893	h == LengthConstraintType.NONE
6894	h == LengthConstraintType.FIXED
6895	h == LengthConstraintType.RANGE
6896	w == LengthConstraintType.RANGE
6897	h == LengthConstraintType.NONE
6898	h == LengthConstraintType.FIXED
6899	h == LengthConstraintType.RANGE
6900	this.topBlock != null
6901	this.bottomBlock != null
6902	this.leftBlock != null
6903	this.rightBlock != null
6904	this.centerBlock != null
6905	this.topBlock != null
6906	this.bottomBlock != null
6907	this.leftBlock != null
6908	this.rightBlock != null
6909	this.centerBlock != null
6910	constraint.getHeightRange().contains(size1.getHeight())
6911	this.topBlock != null
6912	this.bottomBlock != null
6913	this.leftBlock != null
6914	this.rightBlock != null
6915	this.centerBlock != null
6916	this.topBlock != null
6917	this.bottomBlock != null
6918	this.leftBlock != null
6919	this.rightBlock != null
6920	this.centerBlock != null
6921	this.topBlock != null
6922	this.bottomBlock != null
6923	this.leftBlock != null
6924	this.rightBlock != null
6925	this.centerBlock != null
6926	this.topBlock != null
6927	this.bottomBlock != null
6928	this.leftBlock != null
6929	this.rightBlock != null
6930	this.centerBlock != null
6931	this.topBlock != null
6932	this.bottomBlock != null
6933	this.leftBlock != null
6934	this.rightBlock != null
6935	this.centerBlock != null
6936	obj == this
6937	obj instanceof BorderArrangement
6938	ObjectUtilities.equal(this.topBlock, that.topBlock)
6939	ObjectUtilities.equal(this.bottomBlock, that.bottomBlock)
6940	ObjectUtilities.equal(this.leftBlock, that.leftBlock)
6941	ObjectUtilities.equal(this.rightBlock, that.rightBlock)
6942	ObjectUtilities.equal(this.centerBlock, that.centerBlock)
894	values == null
895	stripNullAndNaNItems
896	obj instanceof Number
897	Double.isNaN(v)
898	value > upperOutlierThreshold
899	value <= upperFaroutThreshold
899	value > maxOutlier
900	value < lowerOutlierThreshold
901	value >= lowerFaroutThreshold
901	value < minOutlier
902	values == null
903	count > 0
904	count % 2 == 1
905	count > 1
906	values == null
907	count > 0
908	count % 2 == 1
909	count > 1
824	this.outliers == null
825	obj == this
826	obj instanceof BoxAndWhiskerItem
827	ObjectUtilities.equal(this.mean, that.mean)
828	ObjectUtilities.equal(this.median, that.median)
829	ObjectUtilities.equal(this.q1, that.q1)
830	ObjectUtilities.equal(this.q3, that.q3)
831	ObjectUtilities.equal(this.minRegularValue, that.minRegularValue)
832	ObjectUtilities.equal(this.maxRegularValue, that.maxRegularValue)
833	ObjectUtilities.equal(this.minOutlier, that.minOutlier)
834	ObjectUtilities.equal(this.maxOutlier, that.maxOutlier)
835	ObjectUtilities.equal(this.outliers, that.outliers)
8445	paint == null
8446	this.meanVisible == visible
8447	cp == null
8448	isSeriesVisibleInLegend(series)
8448	isSeriesVisible(series)
8449	getLegendItemToolTipGenerator() != null
8450	getLegendItemURLGenerator() != null
8451	labelPaint != null
8452	dataset != null
8453	orientation == PlotOrientation.HORIZONTAL
8454	orientation == PlotOrientation.VERTICAL
8455	columns > 1
8456	rows > 1
8457	(rows * columns) > 0
8458	getItemVisible(row, column)
8459	dataset instanceof BoxAndWhiskerCategoryDataset
8460	orientation == PlotOrientation.HORIZONTAL
8461	orientation == PlotOrientation.VERTICAL
8462	seriesCount > 1
8463	xMax != null
8463	xQ1 != null
8463	xQ3 != null
8463	xMin != null
8464	this.fillBox
8465	this.meanVisible
8466	xMean != null
8467	xxMean > (dataArea.getMinX() - aRadius)
8467	xxMean < (dataArea.getMaxX() + aRadius)
8468	this.medianVisible
8469	xMedian != null
8470	state.getInfo() != null
8470	box != null
8471	entities != null
8472	seriesCount > 1
8473	yQ3 != null
8473	yMax != null
8473	yQ1 != null
8473	yMin != null
8474	this.fillBox
8475	this.meanVisible
8476	yMean != null
8477	yyAverage < (dataArea.getMaxY() + aRadius)
8477	yyAverage > (dataArea.getMinY() - aRadius)
8478	this.medianVisible
8479	yMedian != null
8480	yOutliers != null
8481	outlier > maxOutlier.doubleValue()
8482	outlier < minOutlier.doubleValue()
8483	outlier > maxRegular.doubleValue()
8484	outlier < minRegular.doubleValue()
8485	list.isMultiple()
8486	outlierListCollection.isHighFarOut()
8487	outlierListCollection.isLowFarOut()
8488	state.getInfo() != null
8488	box != null
8489	entities != null
8490	obj == this
8491	obj instanceof BoxAndWhiskerRenderer
8492	this.fillBox != that.fillBox
8493	this.itemMargin != that.itemMargin
8494	this.maximumBarWidth != that.maximumBarWidth
8495	this.meanVisible != that.meanVisible
8496	this.medianVisible != that.medianVisible
8497	PaintUtilities.equal(this.artifactPaint, that.artifactPaint)
2414	dataset instanceof BoxAndWhiskerCategoryDataset
2415	obj == this
2416	obj instanceof BoxAndWhiskerToolTipGenerator
2322	getXDateFormat() != null
2323	dataset instanceof BoxAndWhiskerXYDataset
2324	obj == this
2325	obj instanceof BoxAndWhiskerXYToolTipGenerator
2345	zFormat == null
2346	zFormat == null
2347	dataset instanceof XYZDataset
2348	xf != null
2349	yf != null
2350	this.zDateFormat != null
2351	obj == this
2352	obj instanceof BubbleXYItemLabelGenerator
2353	super.equals(obj)
2354	ObjectUtilities.equal(this.zFormat, that.zFormat)
2355	ObjectUtilities.equal(this.zDateFormat, that.zDateFormat)
5798	image == null
5799	das.getDataset() == dataset
1736	lineIndex == 0
1737	line.charAt(i) == this.fieldDelimiter
1738	fieldIndex > 0
1739	line.charAt(i) == this.fieldDelimiter
1740	fieldIndex == 0
1741	k.charAt(0) == this.textDelimiter
1742	k.charAt(k.length() - 1) == this.textDelimiter
7308	width != this.candleWidth
7309	this.autoWidthMethod != autoWidthMethod
7310	this.autoWidthFactor != autoWidthFactor
7311	this.autoWidthGap != autoWidthGap
7312	this.drawVolume != flag
7313	paint == null
7314	this.useOutlinePaint != use
7315	this.drawVolume
7316	volume > this.maxVolume
7317	orientation == PlotOrientation.HORIZONTAL
7318	orientation == PlotOrientation.VERTICAL
7319	state.getInfo() != null
7320	this.candleWidth > 0
7321	horiz
7322	lastPos != -1
7323	this.useOutlinePaint
7324	this.drawVolume
7325	horiz
7326	horiz
7327	this.useOutlinePaint
7328	yHigh > maxOpenClose
7329	horiz
7330	yLow < minOpenClose
7331	horiz
7332	horiz
7333	yClose > yOpen
7334	this.upPaint != null
7335	this.downPaint != null
7336	this.useOutlinePaint
7337	entities != null
7338	obj == this
7339	obj instanceof CandlestickRenderer
7340	this.candleWidth != that.candleWidth
7341	PaintUtilities.equal(this.upPaint, that.upPaint)
7342	PaintUtilities.equal(this.downPaint, that.downPaint)
7343	this.drawVolume != that.drawVolume
7344	this.maxCandleWidthInMilliseconds != that.maxCandleWidthInMilliseconds
7345	this.autoWidthMethod != that.autoWidthMethod
7346	this.autoWidthFactor != that.autoWidthFactor
7347	this.autoWidthGap != that.autoWidthGap
7348	this.useOutlinePaint != that.useOutlinePaint
7349	PaintUtilities.equal(this.volumePaint, that.volumePaint)
4971	this == obj
4972	obj instanceof CategoryAnchor
4973	this.name.equals(position.toString())
4974	this.equals(CategoryAnchor.START)
4975	this.equals(CategoryAnchor.MIDDLE)
4976	this.equals(CategoryAnchor.END)
4523	positions == null
4524	category == null
4525	result == null
4526	category == null
4527	font == null
4528	category == null
4529	result == null
4530	category == null
4531	paint == null
4532	category == null
4533	category == null
4534	category == null
4535	anchor == CategoryAnchor.START
4536	anchor == CategoryAnchor.MIDDLE
4537	anchor == CategoryAnchor.END
4538	edge == RectangleEdge.BOTTOM
4538	edge == RectangleEdge.TOP
4539	edge == RectangleEdge.RIGHT
4539	edge == RectangleEdge.LEFT
4540	category >= categoryCount
4540	category < 0
4541	categories == null
4542	seriesCount == 1
4543	seriesCount == 1
4544	edge == RectangleEdge.BOTTOM
4544	edge == RectangleEdge.TOP
4545	edge == RectangleEdge.LEFT
4545	edge == RectangleEdge.RIGHT
4546	categoryCount > 1
4547	edge == RectangleEdge.BOTTOM
4547	edge == RectangleEdge.TOP
4548	edge == RectangleEdge.LEFT
4548	edge == RectangleEdge.RIGHT
4549	categoryCount > 1
4550	space == null
4551	isVisible()
4552	isTickLabelsVisible()
4553	edge == RectangleEdge.TOP
4554	edge == RectangleEdge.BOTTOM
4555	edge == RectangleEdge.LEFT
4556	edge == RectangleEdge.RIGHT
4557	RectangleEdge.isTopOrBottom(edge)
4558	RectangleEdge.isLeftOrRight(edge)
4559	isVisible()
4560	isAxisLineVisible()
4561	isTickMarksVisible()
4562	state == null
4563	isTickLabelsVisible()
4564	edge == RectangleEdge.TOP
4565	edge == RectangleEdge.BOTTOM
4566	edge == RectangleEdge.LEFT
4567	edge == RectangleEdge.RIGHT
4568	plotState != null
4568	plotState.getOwner() != null
4569	entities != null
4570	edge.equals(RectangleEdge.TOP)
4571	edge.equals(RectangleEdge.BOTTOM)
4572	edge == RectangleEdge.LEFT
4573	edge == RectangleEdge.RIGHT
4574	dataArea.getHeight() <= 0.0
4574	dataArea.getWidth() < 0.0
4575	categories != null
4576	r <= 0.0
4577	position.getWidthType() == CategoryLabelWidthType.CATEGORY
4578	RectangleEdge.isLeftOrRight(edge)
4579	edge == RectangleEdge.BOTTOM
4579	edge == RectangleEdge.TOP
4580	edge == RectangleEdge.RIGHT
4580	edge == RectangleEdge.LEFT
4581	p == null
4582	edge.equals(RectangleEdge.TOP)
4583	edge.equals(RectangleEdge.BOTTOM)
4584	edge.equals(RectangleEdge.LEFT)
4585	edge.equals(RectangleEdge.RIGHT)
4586	obj == this
4587	obj instanceof CategoryAxis
4588	super.equals(obj)
4589	that.lowerMargin != this.lowerMargin
4590	that.upperMargin != this.upperMargin
4591	that.categoryMargin != this.categoryMargin
4592	that.maximumCategoryLabelWidthRatio != this.maximumCategoryLabelWidthRatio
4593	that.categoryLabelPositionOffset != this.categoryLabelPositionOffset
4594	ObjectUtilities.equal(that.categoryLabelPositions, this.categoryLabelPositions)
4595	ObjectUtilities.equal(that.categoryLabelToolTips, this.categoryLabelToolTips)
4596	ObjectUtilities.equal(this.tickLabelFontMap, that.tickLabelFontMap)
4597	equalPaintMaps(this.tickLabelPaintMap, that.tickLabelPaintMap)
4598	getLabel() != null
4599	isNull
4600	map == null
4601	map1.size() != map2.size()
4602	PaintUtilities.equal(p1, p2)
5190	isVisible()
5191	plot.getRenderer() instanceof Effect3D
5192	edge == RectangleEdge.LEFT
5192	edge == RectangleEdge.BOTTOM
5193	edge == RectangleEdge.RIGHT
5193	edge == RectangleEdge.TOP
5194	isAxisLineVisible()
5195	isTickMarksVisible()
5196	renderer instanceof Effect3D
5197	edge == RectangleEdge.LEFT
5197	edge == RectangleEdge.BOTTOM
5198	edge == RectangleEdge.RIGHT
5198	edge == RectangleEdge.TOP
5199	anchor == CategoryAnchor.START
5200	anchor == CategoryAnchor.MIDDLE
5201	anchor == CategoryAnchor.END
3221	anchor != null
3222	orientation == PlotOrientation.HORIZONTAL
3223	d < getCrosshairDistance()
3224	anchor != null
3225	orientation == PlotOrientation.HORIZONTAL
3226	d < getCrosshairDistance()
40	current != this
41	qName.equals(CATEGORYDATASET_TAG)
42	qName.equals(SERIES_TAG)
43	current != this
5618	dataset == null
5619	dataset == null
5620	obj == this
5621	obj instanceof CategoryItemEntity
5622	this.rowKey.equals(that.rowKey)
5623	this.columnKey.equals(that.columnKey)
5624	ObjectUtilities.equal(this.dataset, that.dataset)
8538	this.visibleSeries == null
8539	this.visibleSeries[vRow] == rowIndex
8540	this.visibleSeries == null
8541	this.visibleSeries == null
5597	obj == this
5598	obj instanceof CategoryLabelEntity
5599	ObjectUtilities.equal(this.key, that.key)
5382	categoryAnchor == null
5383	labelAnchor == null
5384	rotationAnchor == null
5385	widthType == null
5386	obj == this
5387	obj instanceof CategoryLabelPosition
5388	this.categoryAnchor.equals(that.categoryAnchor)
5389	this.labelAnchor.equals(that.labelAnchor)
5390	this.rotationAnchor.equals(that.rotationAnchor)
5391	this.angle != that.angle
5392	this.widthType != that.widthType
5393	this.widthRatio != that.widthRatio
5077	top == null
5078	bottom == null
5079	left == null
5080	right == null
5081	edge == RectangleEdge.TOP
5082	edge == RectangleEdge.BOTTOM
5083	edge == RectangleEdge.LEFT
5084	edge == RectangleEdge.RIGHT
5085	base == null
5086	top == null
5087	base == null
5088	bottom == null
5089	base == null
5090	left == null
5091	base == null
5092	right == null
5093	this == obj
5094	obj instanceof CategoryLabelPositions
5095	this.positionForAxisAtTop.equals(that.positionForAxisAtTop)
5096	this.positionForAxisAtBottom.equals( that.positionForAxisAtBottom)
5097	this.positionForAxisAtLeft.equals(that.positionForAxisAtLeft)
5098	this.positionForAxisAtRight.equals(that.positionForAxisAtRight)
5071	name == null
5072	this == obj
5073	obj instanceof CategoryLabelWidthType
5074	this.name.equals(t.toString())
5075	this.equals(CategoryLabelWidthType.CATEGORY)
5076	this.equals(CategoryLabelWidthType.RANGE)
5857	category1 == null
5858	category2 == null
5859	paint == null
5860	stroke == null
5861	category == null
5862	category == null
5863	paint == null
5864	stroke == null
5865	orientation == PlotOrientation.HORIZONTAL
5866	orientation == PlotOrientation.VERTICAL
5867	obj == this
5868	obj instanceof CategoryLineAnnotation
5869	this.category1.equals(that.getCategory1())
5870	this.value1 != that.getValue1()
5871	this.category2.equals(that.getCategory2())
5872	this.value2 != that.getValue2()
5873	PaintUtilities.equal(this.paint, that.paint)
5874	ObjectUtilities.equal(this.stroke, that.stroke)
3227	key == null
3228	obj == null
3229	obj instanceof CategoryMarker
3230	super.equals(obj)
3231	this.key.equals(that.key)
3232	this.drawAsLine != that.drawAsLine
2538	dataset != null
2539	renderer != null
2540	domainAxis != null
2541	rangeAxis != null
2542	orientation == null
2543	offset == null
2544	index < this.domainAxes.size()
2545	result == null
2546	parent instanceof CategoryPlot
2547	existing != null
2548	axis != null
2549	axis != null
2550	notify
2551	axis == null
2552	index < this.domainAxisLocations.size()
2553	result == null
2554	index == 0
2554	location == null
2555	notify
2556	location != null
2557	axis != null
2558	axis != null
2559	index < this.rangeAxes.size()
2560	result == null
2561	parent instanceof CategoryPlot
2562	existing != null
2563	axis != null
2564	axis != null
2565	notify
2566	axis == null
2567	result < 0
2568	parent instanceof CategoryPlot
2569	index < this.rangeAxisLocations.size()
2570	result == null
2571	index == 0
2571	location == null
2572	notify
2573	result == null
2574	axis != null
2575	axis != null
2576	this.datasets.size() > index
2577	existing != null
2578	dataset != null
2579	dataset == this.datasets.get(i)
2580	index < 0
2581	indices == null
2582	count == 0
2583	item instanceof Integer
2584	set.contains(item)
2585	index < 0
2586	axisIndices != null
2587	index < 0
2588	index < 0
2589	axisIndices != null
2590	this.renderers.size() > index
2591	existing != null
2592	renderer != null
2593	notify
2594	this.datasets.get(i) == dataset
2595	order == null
2596	order == null
2597	order == null
2598	this.domainGridlinesVisible != visible
2599	position == null
2600	stroke == null
2601	paint == null
2602	stroke == null
2603	paint == null
2604	this.rangeGridlinesVisible != visible
2605	stroke == null
2606	paint == null
2607	this.rangeMinorGridlinesVisible != visible
2608	stroke == null
2609	paint == null
2610	this.fixedLegendItems != null
2611	dataset != null
2612	renderer != null
2613	dataArea.contains(x, y)
2614	this.orientation == PlotOrientation.HORIZONTAL
2615	this.orientation == PlotOrientation.VERTICAL
2616	percent > 0.0
2617	getParent() != null
2618	yAxis != null
2619	getParent() != null
2620	parent != null
2621	parent instanceof RendererChangeListener
2622	marker == null
2623	layer == null
2624	layer == Layer.FOREGROUND
2625	markers == null
2626	layer == Layer.BACKGROUND
2627	markers == null
2628	notify
2629	this.backgroundDomainMarkers != null
2630	this.foregroundDomainMarkers != null
2631	layer == Layer.FOREGROUND
2632	layer == Layer.BACKGROUND
2633	result != null
2634	this.backgroundDomainMarkers != null
2635	markers != null
2636	this.foregroundDomainMarkers != null
2637	markers != null
2638	layer == Layer.FOREGROUND
2639	markers == null
2640	notify
2640	removed
2641	layer == Layer.FOREGROUND
2642	markers == null
2643	layer == Layer.BACKGROUND
2644	markers == null
2645	notify
2646	this.backgroundRangeMarkers != null
2647	this.foregroundRangeMarkers != null
2648	layer == Layer.FOREGROUND
2649	layer == Layer.BACKGROUND
2650	result != null
2651	this.backgroundRangeMarkers != null
2652	markers != null
2653	this.foregroundRangeMarkers != null
2654	markers != null
2655	marker == null
2656	layer == Layer.FOREGROUND
2657	markers == null
2658	notify
2658	removed
2659	this.domainCrosshairVisible != flag
2660	notify
2661	notify
2662	notify
2663	paint == null
2664	stroke == null
2665	this.rangeCrosshairVisible != flag
2666	this.rangeCrosshairLockedOnData != flag
2667	isRangeCrosshairVisible()
2667	notify
2668	stroke == null
2669	paint == null
2670	annotation == null
2671	notify
2672	annotation == null
2673	removed
2673	notify
2674	space == null
2675	this.fixedDomainAxisSpace != null
2676	this.orientation == PlotOrientation.HORIZONTAL
2677	this.orientation == PlotOrientation.VERTICAL
2678	this.drawSharedDomainAxis
2679	xAxis != null
2680	space == null
2681	this.fixedRangeAxisSpace != null
2682	this.orientation == PlotOrientation.HORIZONTAL
2683	this.orientation == PlotOrientation.VERTICAL
2684	yAxis != null
2685	b1
2685	b2
2686	state == null
2687	dataArea.isEmpty()
2688	getRenderer() != null
2689	dataArea.contains(anchor)
2689	anchor != null
2690	anchor != null
2691	rangeAxis != null
2692	getOrientation() == PlotOrientation.VERTICAL
2693	rangeAxisState == null
2694	parentState != null
2695	rangeAxisState != null
2696	this.shadowGenerator != null
2697	order == DatasetRenderingOrder.FORWARD
2698	r != null
2699	r != null
2700	r != null
2701	r != null
2702	this.shadowGenerator != null
2703	foundData
2704	columnKey != null
2704	isDomainCrosshairVisible()
2705	this.rangeCrosshairLockedOnData
2705	anchor != null
2706	getOrientation() == PlotOrientation.VERTICAL
2707	isRangeCrosshairVisible()
2708	isOutlineVisible()
2709	getRenderer() != null
2710	xAxis != null
2711	yAxis != null
2712	axis != null
2713	axis != null
2714	axis != null
2715	axis != null
2716	hasData
2716	renderer != null
2717	this.columnRenderingOrder == SortOrder.ASCENDING
2718	this.rowRenderingOrder == SortOrder.ASCENDING
2719	selectionState != null
2720	selectionState != null
2721	this.rowRenderingOrder == SortOrder.ASCENDING
2722	selectionState != null
2723	selectionState != null
2724	isDomainGridlinesVisible()
2725	dataset == null
2726	axis != null
2727	renderer1 != null
2728	isRangeMinorGridlinesVisible()
2728	isRangeGridlinesVisible()
2729	axis == null
2730	r == null
2731	isRangeMinorGridlinesVisible()
2731	tick.getTickType() == TickType.MINOR
2732	tick.getTickType() == TickType.MAJOR
2732	isRangeGridlinesVisible()
2733	isRangeZeroBaselineVisible()
2733	tick.getValue() != 0.0
2733	paintLine
2734	isRangeZeroBaselineVisible()
2735	r == null
2736	axis != null
2736	markers != null
2737	r == null
2738	axis != null
2738	markers != null
2739	this.orientation == PlotOrientation.HORIZONTAL
2740	this.orientation == PlotOrientation.VERTICAL
2741	orientation == PlotOrientation.VERTICAL
2742	axis.getRange().contains(value)
2743	orientation == PlotOrientation.HORIZONTAL
2744	rangeIndex >= 0
2745	axis == getRangeAxis()
2746	r != null
2747	mappedAxes == null
2748	key.equals(ZERO)
2749	dataset != null
2750	mappedAxes.contains(key)
2751	dataset != null
2752	mappedAxes == null
2753	key.equals(ZERO)
2754	mappedAxes.contains(key)
2755	notify
2756	notify
2757	getDataset() != null
2758	result.contains(category)
2759	isRangePannable()
2760	axis == null
2761	axis.isInverted()
2762	rangeAxis != null
2763	useAnchor
2764	this.orientation == PlotOrientation.HORIZONTAL
2765	rangeAxis != null
2766	notify
2767	obj == this
2768	obj instanceof CategoryPlot
2769	this.orientation != that.orientation
2770	ObjectUtilities.equal(this.axisOffset, that.axisOffset)
2771	this.domainAxes.equals(that.domainAxes)
2772	this.domainAxisLocations.equals(that.domainAxisLocations)
2773	this.drawSharedDomainAxis != that.drawSharedDomainAxis
2774	this.rangeAxes.equals(that.rangeAxes)
2775	this.rangeAxisLocations.equals(that.rangeAxisLocations)
2776	ObjectUtilities.equal(this.datasetToDomainAxesMap, that.datasetToDomainAxesMap)
2777	ObjectUtilities.equal(this.datasetToRangeAxesMap, that.datasetToRangeAxesMap)
2778	ObjectUtilities.equal(this.renderers, that.renderers)
2779	this.renderingOrder != that.renderingOrder
2780	this.columnRenderingOrder != that.columnRenderingOrder
2781	this.rowRenderingOrder != that.rowRenderingOrder
2782	this.domainGridlinesVisible != that.domainGridlinesVisible
2783	this.domainGridlinePosition != that.domainGridlinePosition
2784	ObjectUtilities.equal(this.domainGridlineStroke, that.domainGridlineStroke)
2785	PaintUtilities.equal(this.domainGridlinePaint, that.domainGridlinePaint)
2786	this.rangeGridlinesVisible != that.rangeGridlinesVisible
2787	ObjectUtilities.equal(this.rangeGridlineStroke, that.rangeGridlineStroke)
2788	PaintUtilities.equal(this.rangeGridlinePaint, that.rangeGridlinePaint)
2789	this.anchorValue != that.anchorValue
2790	this.rangeCrosshairVisible != that.rangeCrosshairVisible
2791	this.rangeCrosshairValue != that.rangeCrosshairValue
2792	ObjectUtilities.equal(this.rangeCrosshairStroke, that.rangeCrosshairStroke)
2793	PaintUtilities.equal(this.rangeCrosshairPaint, that.rangeCrosshairPaint)
2794	this.rangeCrosshairLockedOnData != that.rangeCrosshairLockedOnData
2795	ObjectUtilities.equal(this.foregroundDomainMarkers, that.foregroundDomainMarkers)
2796	ObjectUtilities.equal(this.backgroundDomainMarkers, that.backgroundDomainMarkers)
2797	ObjectUtilities.equal(this.foregroundRangeMarkers, that.foregroundRangeMarkers)
2798	ObjectUtilities.equal(this.backgroundRangeMarkers, that.backgroundRangeMarkers)
2799	ObjectUtilities.equal(this.annotations, that.annotations)
2800	this.weight != that.weight
2801	ObjectUtilities.equal(this.fixedDomainAxisSpace, that.fixedDomainAxisSpace)
2802	ObjectUtilities.equal(this.fixedRangeAxisSpace, that.fixedRangeAxisSpace)
2803	ObjectUtilities.equal(this.fixedLegendItems, that.fixedLegendItems)
2804	this.domainCrosshairVisible != that.domainCrosshairVisible
2805	this.crosshairDatasetIndex != that.crosshairDatasetIndex
2806	ObjectUtilities.equal(this.domainCrosshairColumnKey, that.domainCrosshairColumnKey)
2807	ObjectUtilities.equal(this.domainCrosshairRowKey, that.domainCrosshairRowKey)
2808	PaintUtilities.equal(this.domainCrosshairPaint, that.domainCrosshairPaint)
2809	ObjectUtilities.equal(this.domainCrosshairStroke, that.domainCrosshairStroke)
2810	this.rangeMinorGridlinesVisible != that.rangeMinorGridlinesVisible
2811	PaintUtilities.equal(this.rangeMinorGridlinePaint, that.rangeMinorGridlinePaint)
2812	ObjectUtilities.equal(this.rangeMinorGridlineStroke, that.rangeMinorGridlineStroke)
2813	this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible
2814	PaintUtilities.equal(this.rangeZeroBaselinePaint, that.rangeZeroBaselinePaint)
2815	ObjectUtilities.equal(this.rangeZeroBaselineStroke, that.rangeZeroBaselineStroke)
2816	ObjectUtilities.equal(this.shadowGenerator, that.shadowGenerator)
2817	xAxis != null
2818	yAxis != null
2819	dataset != null
2820	renderer2 instanceof PublicCloneable
2821	this.fixedDomainAxisSpace != null
2822	this.fixedRangeAxisSpace != null
2823	this.fixedLegendItems != null
2824	xAxis != null
2825	yAxis != null
2826	dataset != null
2827	renderer != null
2828	dataset == null
2829	state == null
2830	renderer.hitTest(x, y, null, dataArea, this, getDomainAxisForDataset(d), getRangeAxisForDataset(d), dataset, r, c, false, rs)
2831	dataset instanceof SelectableCategoryDataset
2832	scd.getSelectionState() != null
2833	dataset instanceof SelectableCategoryDataset
5803	stroke == null
5804	paint == null
5805	orientation == PlotOrientation.HORIZONTAL
5806	obj == this
5807	obj instanceof CategoryPointerAnnotation
5808	super.equals(obj)
5809	this.angle != that.angle
5810	this.tipRadius != that.tipRadius
5811	this.baseRadius != that.baseRadius
5812	this.arrowLength != that.arrowLength
5813	this.arrowWidth != that.arrowWidth
5814	this.arrowPaint.equals(that.arrowPaint)
5815	ObjectUtilities.equal(this.arrowStroke, that.arrowStroke)
5816	this.labelOffset != that.labelOffset
25	qName.equals(SERIES_TAG)
26	qName.equals(ITEM_TAG)
27	this.root instanceof CategoryDatasetHandler
8762	p == null
8763	isSeriesVisibleInLegend(series)
8763	isSeriesVisible(series)
8764	getLegendItemToolTipGenerator() != null
8765	getLegendItemURLGenerator() != null
8766	labelPaint != null
8767	orientation == PlotOrientation.VERTICAL
8768	orientation == PlotOrientation.HORIZONTAL
8769	getItemVisible(row, column)
8770	value == null
8771	column != 0
8772	previousValue != null
8773	getStagger()
8774	xStagger > (x1s - x0e)
8775	isItemLabelVisible(row, column, selected)
8776	entities != null
8777	orientation == PlotOrientation.VERTICAL
8778	obj == this
8779	obj instanceof CategoryStepRenderer
8780	this.stagger != that.stagger
551	notify
552	notify
553	includeInterval
554	obj instanceof CategoryTableXYDataset
555	this.intervalDelegate.equals(that.intervalDelegate)
556	this.values.equals(that.values)
5830	category == null
5831	category == null
5832	anchor == null
5833	orientation == PlotOrientation.HORIZONTAL
5834	orientation == PlotOrientation.VERTICAL
5835	obj == this
5836	obj instanceof CategoryTextAnnotation
5837	super.equals(obj)
5838	this.category.equals(that.getCategory())
5839	this.categoryAnchor.equals(that.getCategoryAnchor())
5840	this.value != that.getValue()
5280	this == obj
5281	super.equals(obj)
5281	obj instanceof CategoryTick
5282	ObjectUtilities.equal(this.category, that.category)
5283	ObjectUtilities.equal(this.label, that.label)
5284	ObjectUtilities.equal(this.labelAnchor, that.labelAnchor)
668	extract == null
669	this.source != null
670	this.source != null
671	this.extract == TableOrder.BY_ROW
672	this.extract == TableOrder.BY_COLUMN
673	item < 0
673	item >= getItemCount()
674	this.extract == TableOrder.BY_ROW
675	this.extract == TableOrder.BY_COLUMN
676	index < 0
676	index >= getItemCount()
677	this.extract == TableOrder.BY_ROW
678	this.extract == TableOrder.BY_COLUMN
679	this.source != null
680	this.extract == TableOrder.BY_ROW
681	this.extract == TableOrder.BY_COLUMN
682	this.source != null
683	this.extract == TableOrder.BY_ROW
684	this.extract == TableOrder.BY_COLUMN
685	keyIndex != -1
686	this.extract == TableOrder.BY_ROW
687	this.extract == TableOrder.BY_COLUMN
688	obj == this
689	obj instanceof PieDataset
690	that.getItemCount() != count
691	k1.equals(k2)
692	v1 == null
693	v2 != null
694	v1.equals(v2)
6972	w == LengthConstraintType.NONE
6973	h == LengthConstraintType.NONE
6974	h == LengthConstraintType.FIXED
6975	h == LengthConstraintType.RANGE
6976	w == LengthConstraintType.FIXED
6977	h == LengthConstraintType.NONE
6978	h == LengthConstraintType.FIXED
6979	h == LengthConstraintType.RANGE
6980	w == LengthConstraintType.RANGE
6981	h == LengthConstraintType.NONE
6982	h == LengthConstraintType.FIXED
6983	h == LengthConstraintType.RANGE
6984	constraint.getHeightRange().contains(s.height)
6985	constraint.getWidthRange().contains(s1.width)
6986	constraint.getWidthRange().contains(s.width)
6987	constraint.getWidthRange().contains(s1.width)
6988	obj == this
6989	obj instanceof CenterArrangement
7042	this == obj
7043	obj instanceof ChartChangeEventType
7044	this.name.equals(that.toString())
7045	this.equals(ChartChangeEventType.GENERAL)
7046	this.equals(ChartChangeEventType.NEW_DATASET)
7047	this.equals(ChartChangeEventType.DATASET_UPDATED)
7013	file.exists()
9190	f == null
5654	area == null
5655	area == null
5656	this.area instanceof Rectangle2D
5657	this.area instanceof Rectangle2D
5658	rectangle == null
5659	x2 == x1
5660	y2 == y1
5661	shape == null
5662	first
5663	hasToolTip
5663	hasURL
5664	hasToolTip
5665	hasURL
5666	hasToolTip
5667	obj == this
5668	obj instanceof ChartEntity
5669	this.area.equals(that.area)
5670	ObjectUtilities.equal(this.toolTipText, that.toolTipText)
5671	ObjectUtilities.equal(this.urlText, that.urlText)
6349	theme == null
6350	theme instanceof StandardChartTheme
6351	sct.getName().equals("Legacy")
6352	showDifference
6353	oldValue == null
6354	greenForIncrease
6355	showDifference
6356	greenForIncrease
6356	greenForIncrease
6356	newValue.doubleValue() > oldValue.doubleValue()
6356	newValue.doubleValue() < oldValue.doubleValue()
6357	showDifference
6358	showDifference
6359	subTitle
6360	showDifference
6361	oldValue == null
6362	greenForIncrease
6363	showDifference
6364	newValue.doubleValue() > oldValue.doubleValue()
6364	newValue.doubleValue() < oldValue.doubleValue()
6364	greenForIncrease
6364	greenForIncrease
6365	showDifference
6366	showDifference
6367	subTitle
6368	order == null
6369	order == null
6370	dateAxis
6371	dateAxis
5797	scrollPane
5672	print
5672	zoom
5672	properties
5672	copy
5672	save
5673	osName.startsWith("mac os x")
5674	this.chart != null
5675	chart != null
5676	plot instanceof Zoomable
5677	this.useBuffer
5678	flag
5679	plot instanceof Zoomable
5680	flag
5681	plot instanceof Zoomable
5682	directory != null
5683	directory.isDirectory()
5684	paint == null
5685	flag
5685	this.mouseWheelHandler == null
5686	flag
5686	this.mouseWheelHandler != null
5687	overlay == null
5688	overlay == null
5689	removed
5690	handler == null
5691	handler == null
5692	flag
5693	this.info != null
5694	entities != null
5695	entity != null
5696	this.info != null
5697	this.chart == null
5698	drawWidth < this.minimumDrawWidth
5699	drawWidth > this.maximumDrawWidth
5700	drawHeight < this.minimumDrawHeight
5701	drawHeight > this.maximumDrawHeight
5702	this.useBuffer
5703	this.chartBufferWidth != available.getWidth()
5703	this.chartBufferHeight != available.getHeight()
5703	this.chartBuffer == null
5704	this.refreshBuffer
5705	scale
5706	scale
5707	plot instanceof Zoomable
5708	this.zoomPoint != null
5709	command.equals(PROPERTIES_COMMAND)
5710	command.equals(COPY_COMMAND)
5711	command.equals(SAVE_COMMAND)
5712	command.equals(PRINT_COMMAND)
5713	command.equals(ZOOM_IN_BOTH_COMMAND)
5714	command.equals(ZOOM_IN_DOMAIN_COMMAND)
5715	command.equals(ZOOM_IN_RANGE_COMMAND)
5716	command.equals(ZOOM_OUT_BOTH_COMMAND)
5717	command.equals(ZOOM_OUT_DOMAIN_COMMAND)
5718	command.equals(ZOOM_OUT_RANGE_COMMAND)
5719	command.equals(ZOOM_RESET_BOTH_COMMAND)
5720	command.equals(ZOOM_RESET_DOMAIN_COMMAND)
5721	command.equals(ZOOM_RESET_RANGE_COMMAND)
5722	this.ownToolTipDelaysActive
5723	this.liveMouseHandler != null
5724	this.ownToolTipDelaysActive
5725	this.liveMouseHandler != null
5726	this.chart == null
5727	e.isPopupTrigger()
5728	this.popup != null
5729	this.liveMouseHandler != null
5730	h.getModifier() == 0
5730	nomod == null
5731	found
5731	nomod != null
5732	found
5733	this.popup != null
5733	this.popup.isShowing()
5734	this.liveMouseHandler != null
5735	e.isPopupTrigger()
5736	this.popup != null
5737	this.liveMouseHandler != null
5738	this.liveMouseHandler != null
5739	listeners.length == 0
5740	this.info != null
5741	entities != null
5742	this.chart != null
5743	plot == null
5744	plot instanceof Zoomable
5745	plot instanceof Zoomable
5746	plot == null
5747	plot instanceof Zoomable
5748	plot instanceof Zoomable
5749	selection.getWidth() > 0
5749	selection.getHeight() > 0
5750	p instanceof Zoomable
5751	z.getOrientation() == PlotOrientation.HORIZONTAL
5752	plot == null
5753	plot instanceof Zoomable
5754	plot instanceof Zoomable
5755	plotInfo.getSubplotCount() == 0
5756	subplotIndex == -1
5757	this.zoomRectangle != null
5758	xor
5759	this.fillZoomRectangle
5760	xor
5761	this.selectionShape != null
5762	xor
5763	this.selectionFillPaint != null
5764	xor
5765	result == JOptionPane.OK_OPTION
5766	option == JFileChooser.APPROVE_OPTION
5767	isEnforceFileExtensions()
5768	filename.endsWith(".png")
5769	pf2 != pf
5770	job.printDialog()
5771	pageIndex != 0
5772	listener == null
5773	listenerType == ChartMouseListener.class
5774	properties
5775	copy
5776	separator
5777	save
5778	separator
5779	print
5780	separator
5781	zoom
5782	separator
5783	this.popup != null
5784	plot instanceof Zoomable
5785	this.zoomInDomainMenuItem != null
5786	this.zoomOutDomainMenuItem != null
5787	this.zoomResetDomainMenuItem != null
5788	this.zoomInRangeMenuItem != null
5789	this.zoomOutRangeMenuItem != null
5790	this.zoomResetRangeMenuItem != null
5791	this.zoomInBothMenuItem != null
5792	this.zoomOutBothMenuItem != null
5793	this.zoomResetBothMenuItem != null
5794	this.popup != null
5795	this.chart != null
5796	das.getDataset() == dataset
5399	this.entities != null
5400	obj == this
5401	obj instanceof ChartRenderingInfo
5402	ObjectUtilities.equal(this.chartArea, that.chartArea)
5403	ObjectUtilities.equal(this.plotInfo, that.plotInfo)
5404	ObjectUtilities.equal(this.entities, that.entities)
5405	this.chartArea != null
5406	this.entities instanceof PublicCloneable
1820	this.imageFlavor.equals(flavor)
1821	drawWidth < minDrawW
1822	drawWidth > maxDrawW
1823	drawHeight < minDrawH
1824	drawHeight > maxDrawH
1825	scale
5576	chart == null
5577	out == null
5578	chart == null
5579	out == null
5580	chart == null
5581	heightScaleFactor != 1
5581	widthScaleFactor != 1
5582	scale
5583	file == null
5584	file == null
5585	chart == null
5586	chart == null
5587	chart == null
5588	file == null
5589	chart == null
5590	file == null
5591	chart == null
5592	useOverLibForToolTips
7781	dataset == null
7782	this.centerBarAtStartValue
7783	dataset == null
7784	minimum > maximum
7785	getUseYInterval()
7786	Double.isNaN(y0)
7786	Double.isNaN(y1)
7787	this.centerBarAtStartValue
7788	m > 0.0
7789	orientation == PlotOrientation.HORIZONTAL
7790	orientation == PlotOrientation.VERTICAL
7791	orientation == PlotOrientation.HORIZONTAL
7792	inverted
7792	positive
7792	inverted
7792	positive
7793	positive
7793	inverted
7793	positive
7793	inverted
7794	pass == 0
7794	getShadowsVisible()
7795	pass == 1
7796	isItemLabelVisible(series, item, selected)
7797	state.getInfo() != null
7798	entities != null
7799	obj == this
7800	obj instanceof ClusteredXYBarRenderer
7801	this.centerBarAtStartValue != that.centerBarAtStartValue
6968	paint == null
6969	obj == this
6970	obj instanceof ColorBlock
6971	PaintUtilities.equal(this.paint, that.paint)
6786	w == LengthConstraintType.NONE
6787	h == LengthConstraintType.NONE
6788	h == LengthConstraintType.FIXED
6789	h == LengthConstraintType.RANGE
6790	w == LengthConstraintType.FIXED
6791	h == LengthConstraintType.NONE
6792	h == LengthConstraintType.FIXED
6793	h == LengthConstraintType.RANGE
6794	w == LengthConstraintType.RANGE
6795	h == LengthConstraintType.NONE
6796	h == LengthConstraintType.FIXED
6797	h == LengthConstraintType.RANGE
6798	height <= 0.0
6799	y + size.height <= height
6800	itemsInColumn.isEmpty()
6801	constraint.getHeightRange().contains(s1.height)
6802	constraint.getWidthRange().contains(s.width)
6803	blockCount > 0
6804	blockCount > 1
6805	this.horizontalAlignment != HorizontalAlignment.LEFT
6806	this.horizontalAlignment == HorizontalAlignment.CENTER
6807	this.horizontalAlignment == HorizontalAlignment.RIGHT
6808	obj == this
6809	obj instanceof ColumnArrangement
6810	this.horizontalAlignment != that.horizontalAlignment
6811	this.verticalAlignment != that.verticalAlignment
6812	this.horizontalGap != that.horizontalGap
6813	this.verticalGap != that.verticalGap
2902	subplot == null
2903	weight < 1
2904	axis != null
2905	subplot == null
2906	this.subplots.get(i) == subplot
2907	position != -1
2908	domain != null
2909	this.subplots != null
2910	info == null
2911	source == null
2912	subplotIndex >= 0
2913	subplot != null
2914	subplot != null
2915	fixed != null
2916	orientation == PlotOrientation.HORIZONTAL
2917	orientation == PlotOrientation.VERTICAL
2918	categoryAxis != null
2919	getDrawSharedDomainAxis()
2920	orientation == PlotOrientation.HORIZONTAL
2921	orientation == PlotOrientation.VERTICAL
2922	orientation == PlotOrientation.HORIZONTAL
2923	orientation == PlotOrientation.VERTICAL
2924	info != null
2925	parentState == null
2926	info != null
2927	anchor != null
2927	this.subplotAreas[i].contains(anchor)
2928	info != null
2929	result == null
2930	this.subplots != null
2931	this.subplots != null
2932	result.contains(category)
2933	dataArea.contains(x, y)
2934	obj == this
2935	obj instanceof CombinedDomainCategoryPlot
2936	this.gap != that.gap
2937	ObjectUtilities.equal(this.subplots, that.subplots)
4176	this.subplots != null
4177	subplot == null
4178	weight <= 0
4179	axis != null
4180	subplot == null
4181	this.subplots.get(i) == subplot
4182	position != -1
4183	domain != null
4184	this.subplots != null
4185	fixed != null
4186	orientation == PlotOrientation.HORIZONTAL
4187	orientation == PlotOrientation.VERTICAL
4188	xAxis != null
4189	orientation == PlotOrientation.HORIZONTAL
4190	orientation == PlotOrientation.VERTICAL
4191	orientation == PlotOrientation.HORIZONTAL
4192	orientation == PlotOrientation.VERTICAL
4193	info != null
4194	parentState == null
4195	info != null
4196	info != null
4197	result == null
4198	this.subplots != null
4199	subplot != null
4200	subplot != null
4201	info == null
4202	source == null
4203	subplotIndex >= 0
4204	dataArea.contains(x, y)
4205	obj == this
4206	obj instanceof CombinedDomainXYPlot
4207	this.gap != that.gap
4208	ObjectUtilities.equal(this.subplots, that.subplots)
4209	domainAxis != null
2834	subplot == null
2835	weight <= 0
2836	axis != null
2837	subplot == null
2838	this.subplots.get(i) == subplot
2839	position != -1
2840	range != null
2841	range2 != null
2842	this.subplots != null
2843	fixed != null
2844	orientation == PlotOrientation.VERTICAL
2845	orientation == PlotOrientation.HORIZONTAL
2846	valueAxis != null
2847	orientation == PlotOrientation.VERTICAL
2848	orientation == PlotOrientation.HORIZONTAL
2849	orientation == PlotOrientation.VERTICAL
2850	orientation == PlotOrientation.HORIZONTAL
2851	info != null
2852	parentState == null
2853	info != null
2854	anchor != null
2854	this.subplotArea[i].contains(anchor)
2855	info != null
2856	this.subplots != null
2857	result == null
2858	this.subplots != null
2859	dataArea.contains(x, y)
2860	obj == this
2861	obj instanceof CombinedRangeCategoryPlot
2862	this.gap != that.gap
2863	ObjectUtilities.equal(this.subplots, that.subplots)
2864	rangeAxis != null
2865	rangeAxis != null
2871	weight <= 0
2872	subplot == null
2873	this.subplots.get(i) == subplot
2874	position != -1
2875	this.subplots != null
2876	fixed != null
2877	orientation == PlotOrientation.VERTICAL
2878	orientation == PlotOrientation.HORIZONTAL
2879	valueAxis != null
2880	orientation == PlotOrientation.VERTICAL
2881	orientation == PlotOrientation.HORIZONTAL
2882	orientation == PlotOrientation.VERTICAL
2883	orientation == PlotOrientation.HORIZONTAL
2884	info != null
2885	parentState == null
2886	info != null
2887	info != null
2888	result == null
2889	this.subplots != null
2890	subplot != null
2891	subplot != null
2892	info == null
2893	source == null
2894	subplotIndex >= 0
2895	this.subplots != null
2896	dataArea.contains(x, y)
2897	obj == this
2898	obj instanceof CombinedRangeXYPlot
2899	this.gap != that.gap
2900	ObjectUtilities.equal(this.subplots, that.subplots)
2901	rangeAxis != null
1743	x == null
1744	o1 instanceof ComparableObjectItem
1745	obj == this
1746	obj instanceof ComparableObjectItem
1747	this.x.equals(that.x)
1748	ObjectUtilities.equal(this.obj, that.obj)
54	dataRemoved
55	item == null
56	this.autoSort
57	index < 0
58	this.allowDuplicateXValues
59	index < this.data.size()
60	this.allowDuplicateXValues
61	index >= 0
62	getItemCount() > this.maximumItemCount
63	notify
64	this.autoSort
65	item.getComparable().equals(x)
66	index < 0
67	this.data.size() > 0
68	obj == this
69	obj instanceof ComparableObjectSeries
70	super.equals(obj)
71	this.maximumItemCount != that.maximumItemCount
72	this.autoSort != that.autoSort
73	this.allowDuplicateXValues != that.allowDuplicateXValues
74	ObjectUtilities.equal(this.data, that.data)
75	count > 0
76	count > 1
77	count > 2
4740	direction < 0.0
4349	dataset != null
4350	type != NO_LABELS
4350	type != VALUE_LABELS
4351	this.labelType != type
4352	font == null
4353	paint == null
4354	paint == null
4355	paint == null
4356	series < this.seriesNeedle.length
4356	series >= 0
4357	series < this.seriesNeedle.length
4357	series >= 0
4358	series < this.seriesNeedle.length
4358	series >= 0
4359	needle != null
4359	index < this.seriesNeedle.length
4360	dataset != null
4361	info != null
4362	this.drawBorder
4363	midY < midX
4364	data != null
4364	data.getValue() != null
4365	this.drawBorder
4366	fontSize < 8
4367	obj == this
4368	obj instanceof CompassPlot
4369	super.equals(obj)
4370	this.labelType != that.labelType
4371	ObjectUtilities.equal(this.labelFont, that.labelFont)
4372	this.drawBorder != that.drawBorder
4373	PaintUtilities.equal(this.roseHighlightPaint, that.roseHighlightPaint)
4374	PaintUtilities.equal(this.rosePaint, that.rosePaint)
4375	PaintUtilities.equal(this.roseCenterPaint, that.roseCenterPaint)
4376	ObjectUtilities.equal(this.compassFont, that.compassFont)
4377	Arrays.equals(this.seriesNeedle, that.seriesNeedle)
4378	getRevolutionDistance() != that.getRevolutionDistance()
4379	this.circle1 != null
4380	this.circle2 != null
4381	this.a1 != null
4382	this.a2 != null
4383	this.rect1 != null
4384	clone.datasets[i] != null
4385	size > 0
6690	container == null
6691	container == null
6692	this.backgroundPaint != null
6693	obj == this
6694	obj instanceof CompositeTitle
6695	this.container.equals(that.container)
6696	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
3320	paint == null
3321	stroke == null
3322	generator == null
3323	font == null
3324	paint == null
3325	paint == null
3326	stroke == null
3327	obj == this
3328	obj instanceof Crosshair
3329	this.visible != that.visible
3330	this.value != that.value
3331	PaintUtilities.equal(this.paint, that.paint)
3332	this.stroke.equals(that.stroke)
3333	this.labelVisible != that.labelVisible
3334	this.labelGenerator.equals(that.labelGenerator)
3335	this.labelAnchor.equals(that.labelAnchor)
3336	this.labelXOffset != that.labelXOffset
3337	this.labelYOffset != that.labelYOffset
3338	this.labelFont.equals(that.labelFont)
3339	PaintUtilities.equal(this.labelPaint, that.labelPaint)
3340	PaintUtilities.equal(this.labelBackgroundPaint, that.labelBackgroundPaint)
3341	this.labelOutlineVisible != that.labelOutlineVisible
3342	PaintUtilities.equal(this.labelOutlinePaint, that.labelOutlinePaint)
3343	this.labelOutlineStroke.equals(that.labelOutlineStroke)
5507	crosshair == null
5508	crosshair == null
5509	this.xCrosshairs.remove(crosshair)
5510	this.xCrosshairs.isEmpty()
5511	crosshair == null
5512	crosshair == null
5513	this.yCrosshairs.remove(crosshair)
5514	this.yCrosshairs.isEmpty()
5515	ch.isVisible()
5516	plot.getOrientation() == PlotOrientation.VERTICAL
5517	ch.isVisible()
5518	plot.getOrientation() == PlotOrientation.VERTICAL
5519	y >= dataArea.getMinY()
5519	y <= dataArea.getMaxY()
5520	crosshair.isLabelVisible()
5521	dataArea.contains(hotspot.getBounds2D())
5522	x <= dataArea.getMaxX()
5522	x >= dataArea.getMinX()
5523	crosshair.isLabelVisible()
5524	dataArea.contains(hotspot.getBounds2D())
5525	line.getX1() == line.getX2()
5526	left
5527	right
5528	top
5529	bottom
5530	left
5531	right
5532	top
5533	bottom
5534	anchor.equals(RectangleAnchor.TOP_LEFT)
5535	anchor.equals(RectangleAnchor.TOP)
5536	anchor.equals(RectangleAnchor.TOP_RIGHT)
5537	anchor.equals(RectangleAnchor.LEFT)
5538	anchor.equals(RectangleAnchor.RIGHT)
5539	anchor.equals(RectangleAnchor.BOTTOM_LEFT)
5540	anchor.equals(RectangleAnchor.BOTTOM)
5541	anchor.equals(RectangleAnchor.BOTTOM_RIGHT)
5542	anchor.equals(RectangleAnchor.TOP_LEFT)
5543	anchor.equals(RectangleAnchor.TOP)
5544	anchor.equals(RectangleAnchor.TOP_RIGHT)
5545	anchor.equals(RectangleAnchor.LEFT)
5546	anchor.equals(RectangleAnchor.RIGHT)
5547	anchor.equals(RectangleAnchor.BOTTOM_LEFT)
5548	anchor.equals(RectangleAnchor.BOTTOM)
5549	anchor.equals(RectangleAnchor.BOTTOM_RIGHT)
5550	anchor.equals(RectangleAnchor.TOP_LEFT)
5551	anchor.equals(RectangleAnchor.TOP_RIGHT)
5552	anchor.equals(RectangleAnchor.LEFT)
5553	anchor.equals(RectangleAnchor.RIGHT)
5554	anchor.equals(RectangleAnchor.BOTTOM_LEFT)
5555	anchor.equals(RectangleAnchor.BOTTOM_RIGHT)
5556	anchor.equals(RectangleAnchor.TOP_LEFT)
5557	anchor.equals(RectangleAnchor.TOP_RIGHT)
5558	anchor.equals(RectangleAnchor.TOP)
5559	anchor.equals(RectangleAnchor.BOTTOM)
5560	anchor.equals(RectangleAnchor.BOTTOM_LEFT)
5561	anchor.equals(RectangleAnchor.BOTTOM_RIGHT)
5562	obj == this
5563	obj instanceof CrosshairOverlay
5564	this.xCrosshairs.equals(that.xCrosshairs)
5565	this.yCrosshairs.equals(that.yCrosshairs)
4170	this.anchor != null
4171	this.calculateDistanceInDataSpace
4172	orientation == PlotOrientation.HORIZONTAL
4173	d < this.distance
4174	d < this.distance
4175	d < this.distance
6289	urls != null
6290	series < getListCount()
6291	urls != null
6292	item < urls.size()
6293	urls != null
6294	obj == this
6295	obj instanceof CustomCategoryURLGenerator
6296	listCount != generator.getListCount()
6297	urlCount != generator.getURLCount(series)
6298	u1 != null
6299	u1.equals(u2)
6300	u2 != null
6309	urlMap != null
6310	mapIndex < getListCount()
6311	urlMap != null
6312	o == this
6313	o instanceof CustomPieURLGenerator
6314	getListCount() != generator.getListCount()
6315	getURLCount(pieItem) != generator.getURLCount(pieItem)
6316	getURL(key, pieItem).equals( generator.getURL(key, pieItem))
2256	tooltips != null
2257	series < getListCount()
2258	tooltips != null
2259	item < tooltips.size()
2260	this.toolTipSeries != null
2261	obj == this
2262	obj instanceof CustomXYToolTipGenerator
2263	t1 != null
6317	urls != null
6318	series < getListCount()
6319	urls != null
6320	item < urls.size()
6321	urls != null
6322	obj == this
6323	obj instanceof CustomXYURLGenerator
6324	listCount != that.getListCount()
6325	urlCount != that.getURLCount(series)
6326	u1 != null
6327	u1.equals(u2)
6328	u2 != null
4670	paint == null
4671	stroke == null
4672	tick instanceof CycleBoundTick
4673	isAutoTickUnitSelection()
4674	upperValue == cycleBound
4675	cycled
4675	currentTickValue + unit > upperValue
4676	formatter != null
4677	isVerticalTickLabels()
4678	edge == RectangleEdge.TOP
4679	lastTick != null
4679	lastX == x
4679	currentTickValue != cycleBound
4680	edge == RectangleEdge.TOP
4681	currentTickValue != cycleBound
4681	lastTick != null
4681	lastX == x
4682	lastX == x
4682	lastTick != null
4682	currentTickValue != cycleBound
4683	currentTickValue == cycleBound
4684	cyclenow
4685	isAutoTickUnitSelection()
4686	upperValue == cycleBound
4687	currentTickValue + unit > upperValue
4687	cycled
4688	formatter != null
4689	isVerticalTickLabels()
4690	edge == RectangleEdge.LEFT
4691	lastTick != null
4691	lastY == y
4691	currentTickValue != cycleBound
4692	lastY == y
4692	currentTickValue != cycleBound
4692	lastTick != null
4693	edge == RectangleEdge.LEFT
4694	lastTick != null
4694	currentTickValue != cycleBound
4694	lastY == y
4695	lastY == y
4695	currentTickValue != cycleBound
4695	lastTick != null
4696	currentTickValue == cycleBound
4697	currentTickValue == cycleBound
4698	cyclenow
4699	RectangleEdge.isTopOrBottom(edge)
4700	RectangleEdge.isLeftOrRight(edge)
4701	isInverted()
4702	java2DValue >= jbreak
4703	java2DValue <= jbreak
4704	value > vmax
4704	value < vmin
4705	RectangleEdge.isTopOrBottom(edge)
4706	RectangleEdge.isLeftOrRight(edge)
4707	isInverted()
4708	value == vp
4709	value > vp
4710	value == vp
4711	value >= vp
4712	size > this.period
4713	size > this.period
4714	this.internalMarkerWhenTicksOverlap
4715	isVerticalTickLabels()
4716	isTickMarksVisible()
4717	edge == RectangleEdge.LEFT
4718	edge == RectangleEdge.RIGHT
4719	edge == RectangleEdge.TOP
4720	edge == RectangleEdge.BOTTOM
4721	isAdvanceLineVisible()
4722	edge == RectangleEdge.LEFT
4723	edge == RectangleEdge.RIGHT
4724	edge == RectangleEdge.TOP
4725	edge == RectangleEdge.BOTTOM
4726	this.internalMarkerCycleBoundTick == null
4727	RectangleEdge.isTopOrBottom(edge)
4728	isVerticalTickLabels()
4729	RectangleEdge.isLeftOrRight(edge)
4730	isVerticalTickLabels()
4731	obj == this
4732	obj instanceof CyclicNumberAxis
4733	super.equals(obj)
4734	this.period != that.period
4735	this.offset != that.offset
4736	PaintUtilities.equal(this.advanceLinePaint, that.advanceLinePaint)
4737	ObjectUtilities.equal(this.advanceLineStroke, that.advanceLineStroke)
4738	this.advanceLineVisible != that.advanceLineVisible
4739	this.boundMappedToLastCycle != that.boundMappedToLastCycle
7498	domainAxis instanceof CyclicNumberAxis
7498	item <= 0
7498	rangeAxis instanceof CyclicNumberAxis
7498	getPlotLines()
7499	Double.isNaN(yn)
7500	Double.isNaN(yn)
7501	domainAxis instanceof CyclicNumberAxis
7502	xcycleBound <= x[1]
7502	xcycleBound >= x[1]
7502	xcycleBound >= x[0]
7502	xcycleBound <= x[0]
7502	x[0] != x[1]
7503	rangeAxis instanceof CyclicNumberAxis
7504	ycycleBound >= y[1]
7504	ycycleBound <= y[0]
7504	ycycleBound >= y[0]
7504	y[0] != y[1]
7504	ycycleBound <= y[1]
7505	x.length == 3
7506	x.length == 3
7506	ycycleBound >= y[1]
7506	ycycleBound <= y[2]
7506	y[1] != y[2]
7506	ycycleBound >= y[2]
7506	ycycleBound <= y[1]
7507	x.length == 2
7508	cnax != null
7509	xcycleBound == x[0]
7510	xcycleBound == x[1]
7511	cnay != null
7512	ycycleBound == y[0]
7513	ycycleBound == y[1]
7514	cnax != null
7515	xcycleBound == x[1]
7516	xcycleBound == x[2]
7517	cnay != null
7518	ycycleBound == y[1]
7519	ycycleBound == y[2]
7520	x.length == 4
7521	cnax != null
7522	xcycleBound == x[2]
7523	xcycleBound == x[3]
7524	cnay != null
7525	ycycleBound == y[2]
7526	ycycleBound == y[3]
7527	cnax != null
7528	cnay != null
576	a == null
577	b == null
578	a.length != b.length
579	Arrays.equals(a[i], b[i])
580	source == null
581	source[i] != null
582	data == null
583	n != null
584	data == null
585	row < rowCount
586	n != null
587	data == null
588	n != null
589	data == null
590	col < colCount
591	n != null
592	data == null
593	data == null
594	data == null
595	v != null
596	v != null
1782	info == null
1551	id == null
1552	obj == this
1553	obj instanceof DatasetGroup
1554	this.id.equals(that.id)
3360	this == obj
3361	obj instanceof DatasetRenderingOrder
3362	this.name.equals(order.toString())
3363	this.equals(DatasetRenderingOrder.FORWARD)
3364	this.equals(DatasetRenderingOrder.REVERSE)
1555	dataset == null
1556	current != null
1557	value != null
1558	v > 0
1559	dataValue != null
1560	value / total < minimumPercent
1561	dataValue != null
1562	otherKeys.size() >= minItems
1562	otherKeys.contains(currentKey)
1563	otherKeys.size() >= minItems
1564	rowKeys == null
1565	columnKeys == null
1566	ArrayUtilities.hasDuplicateItems(rowKeys)
1567	ArrayUtilities.hasDuplicateItems(columnKeys)
1568	rowKeys.length != data.length
1569	columnKeys.length != columnCount
1570	rowKey == null
1571	rowData == null
1572	f == null
1573	seriesKey == null
1574	start >= end
1575	samples < 2
1576	dataset == null
1577	itemCount == 0
1578	y != null
1579	yy > 0.0
1580	dataset == null
1581	rowCount == 0
1581	columnCount == 0
1582	dataset.getValue(r, c) != null
1583	dataset != null
1584	dataset.getItemCount(s) > 0
1585	dataset == null
1586	dataset instanceof DomainInfo
1587	dataset == null
1588	dataset instanceof XYDomainInfo
1589	dataset == null
1590	dataset instanceof IntervalXYDataset
1590	includeInterval
1591	Double.isNaN(value)
1592	Double.isNaN(lvalue)
1593	Double.isNaN(uvalue)
1594	Double.isNaN(lvalue)
1595	minimum > maximum
1596	dataset == null
1597	dataset instanceof RangeInfo
1598	dataset == null
1599	dataset instanceof CategoryRangeInfo
1600	dataset == null
1601	dataset instanceof RangeInfo
1602	dataset == null
1603	dataset instanceof XYRangeInfo
1604	includeInterval
1604	dataset instanceof IntervalCategoryDataset
1605	value != null
1605	Double.isNaN(v = value.doubleValue())
1606	Double.isNaN(v = lvalue.doubleValue())
1606	lvalue != null
1607	uvalue != null
1607	Double.isNaN(v = uvalue.doubleValue())
1608	value != null
1609	Double.isNaN(v)
1610	minimum == Double.POSITIVE_INFINITY
1611	dataset == null
1612	visibleSeriesKeys == null
1613	dataset instanceof BoxAndWhiskerCategoryDataset
1613	includeInterval
1614	lvalue == null
1615	uvalue == null
1616	lvalue != null
1617	uvalue != null
1618	dataset instanceof IntervalCategoryDataset
1618	includeInterval
1619	lvalue != null
1619	Double.isNaN(lvalue.doubleValue())
1620	Double.isNaN(uvalue.doubleValue())
1620	uvalue != null
1621	includeInterval
1621	dataset instanceof MultiValueCategoryDataset
1622	o instanceof Number
1623	Double.isNaN(v)
1624	dataset instanceof StatisticalCategoryDataset
1624	includeInterval
1625	meanN != null
1626	stdN != null
1627	Double.isNaN(std)
1628	Double.isNaN(mean)
1629	value != null
1630	Double.isNaN(v)
1631	minimum == Double.POSITIVE_INFINITY
1632	dataset instanceof IntervalXYDataset
1632	includeInterval
1633	Double.isNaN(value)
1634	Double.isNaN(lvalue)
1635	Double.isNaN(uvalue)
1636	includeInterval
1636	dataset instanceof OHLCDataset
1637	Double.isNaN(lvalue)
1638	Double.isNaN(uvalue)
1639	Double.isNaN(value)
1640	minimum == Double.POSITIVE_INFINITY
1641	dataset == null
1642	visibleSeriesKeys == null
1643	includeInterval
1643	dataset instanceof IntervalXYDataset
1644	Double.isNaN(lvalue)
1645	Double.isNaN(uvalue)
1646	Double.isNaN(x)
1647	minimum == Double.POSITIVE_INFINITY
1648	dataset == null
1649	visibleSeriesKeys == null
1650	xRange == null
1651	dataset instanceof OHLCDataset
1651	includeInterval
1652	xRange.contains(x)
1653	Double.isNaN(lvalue)
1654	Double.isNaN(uvalue)
1655	includeInterval
1655	dataset instanceof BoxAndWhiskerXYDataset
1656	xRange.contains(x)
1657	lvalue != null
1658	uvalue != null
1659	includeInterval
1659	dataset instanceof IntervalXYDataset
1660	xRange.contains(x)
1661	Double.isNaN(lvalue)
1662	Double.isNaN(uvalue)
1663	xRange.contains(x)
1664	Double.isNaN(y)
1665	minimum == Double.POSITIVE_INFINITY
1666	dataset == null
1667	dataset instanceof DomainInfo
1668	dataset instanceof IntervalXYDataset
1669	Double.isNaN(value)
1670	minimum == Double.POSITIVE_INFINITY
1671	dataset == null
1672	dataset instanceof DomainInfo
1673	dataset instanceof IntervalXYDataset
1674	Double.isNaN(value)
1675	maximum == Double.NEGATIVE_INFINITY
1676	dataset == null
1677	dataset instanceof RangeInfo
1678	dataset instanceof IntervalCategoryDataset
1679	value != null
1680	minimum == Double.POSITIVE_INFINITY
1681	dataset == null
1682	dataset instanceof RangeInfo
1683	dataset instanceof IntervalXYDataset
1684	dataset instanceof OHLCDataset
1685	Double.isNaN(value)
1686	minimum == Double.POSITIVE_INFINITY
1687	dataset == null
1688	dataset instanceof RangeInfo
1689	dataset instanceof IntervalCategoryDataset
1690	value != null
1691	maximum == Double.NEGATIVE_INFINITY
1692	dataset == null
1693	dataset instanceof RangeInfo
1694	dataset instanceof IntervalXYDataset
1695	dataset instanceof OHLCDataset
1696	Double.isNaN(value)
1697	maximum == Double.NEGATIVE_INFINITY
1698	dataset == null
1699	number != null
1700	value > 0.0
1701	value < 0.0
1702	minimum <= maximum
1703	dataset == null
1704	number != null
1705	value > 0.0
1706	value < 0.0
1707	hasValidData
1708	dataset == null
1709	number != null
1710	value < 0.0
1711	hasValidData
1712	dataset == null
1713	number != null
1714	value > 0.0
1715	hasValidData
1716	dataset == null
1717	Double.isNaN(y)
1718	y > 0.0
1719	positive > maximum
1720	negative < minimum
1721	minimum <= maximum
1722	Double.isNaN(value)
1723	dataset == null
1724	n != null
1725	Double.isNaN(value)
1726	allItemsNull
4862	zone == null
4863	this.timeZone.equals(zone)
4864	this.timeline != timeline
4865	turnOffAutoSelection
4866	notify
4867	range == null
4868	range instanceof DateRange
4869	lower.getTime() >= upper.getTime()
4870	lower >= upper
4871	range instanceof DateRange
4872	date == null
4873	maxMillis <= newMinMillis
4874	range instanceof DateRange
4875	maximumDate == null
4876	minMillis >= newMaxMillis
4877	position == null
4878	isAutoRange()
4879	RectangleEdge.isTopOrBottom(edge)
4880	isInverted()
4881	RectangleEdge.isLeftOrRight(edge)
4882	isInverted()
4883	RectangleEdge.isTopOrBottom(edge)
4884	RectangleEdge.isLeftOrRight(edge)
4885	isInverted()
4886	t.equals(DateTickUnitType.MILLISECOND)
4887	mm.getTime() >= date.getTime()
4888	t.equals(DateTickUnitType.SECOND)
4889	this.tickMarkPosition == DateTickMarkPosition.START
4890	this.tickMarkPosition == DateTickMarkPosition.MIDDLE
4891	dd.getTime() >= date.getTime()
4892	t.equals(DateTickUnitType.MINUTE)
4893	this.tickMarkPosition == DateTickMarkPosition.START
4894	this.tickMarkPosition == DateTickMarkPosition.MIDDLE
4895	d0.getTime() >= date.getTime()
4896	t.equals(DateTickUnitType.HOUR)
4897	this.tickMarkPosition == DateTickMarkPosition.START
4898	this.tickMarkPosition == DateTickMarkPosition.MIDDLE
4899	d1.getTime() >= date.getTime()
4900	t.equals(DateTickUnitType.DAY)
4901	this.tickMarkPosition == DateTickMarkPosition.START
4902	this.tickMarkPosition == DateTickMarkPosition.MIDDLE
4903	d2.getTime() >= date.getTime()
4904	t.equals(DateTickUnitType.MONTH)
4905	millis >= date.getTime()
4906	t.equals(DateTickUnitType.YEAR)
4907	this.tickMarkPosition == DateTickMarkPosition.START
4908	this.tickMarkPosition == DateTickMarkPosition.MIDDLE
4909	d3.getTime() >= date.getTime()
4910	position == null
4911	position == DateTickMarkPosition.START
4912	position == DateTickMarkPosition.MIDDLE
4913	position == DateTickMarkPosition.END
4914	zone == null
4915	locale == null
4916	plot == null
4917	plot instanceof ValueAxisPlot
4918	r == null
4919	this.timeline instanceof SegmentedTimeline
4920	fixedAutoRange > 0.0
4921	range < minRange
4922	RectangleEdge.isTopOrBottom(edge)
4923	RectangleEdge.isLeftOrRight(edge)
4924	this.timeline instanceof SegmentedTimeline
4925	tickLabelWidth > unit2Width
4926	labelHeight2 < unit2Height
4927	isVerticalTickLabels()
4928	formatter != null
4929	isVerticalTickLabels()
4930	formatter != null
4931	RectangleEdge.isTopOrBottom(edge)
4932	RectangleEdge.isLeftOrRight(edge)
4933	t.equals(DateTickUnitType.MONTH)
4934	t.equals(DateTickUnitType.YEAR)
4935	isAutoTickUnitSelection()
4936	minorTickSpaces <= 0
4937	getRange().contains(minorTickTime)
4937	minorTickTime > 0
4937	isHiddenValue(minorTickTime)
4938	isHiddenValue(tickDate.getTime())
4939	formatter != null
4940	isVerticalTickLabels()
4941	edge == RectangleEdge.TOP
4942	edge == RectangleEdge.TOP
4943	isHiddenValue(minorTickTime)
4943	getRange().contains(minorTickTime)
4944	isAutoTickUnitSelection()
4945	minorTickSpaces <= 0
4946	getRange().contains(minorTickTime)
4946	isHiddenValue(minorTickTime)
4946	minorTickTime > 0
4947	isHiddenValue(tickDate.getTime())
4948	formatter != null
4949	isVerticalTickLabels()
4950	edge == RectangleEdge.LEFT
4951	edge == RectangleEdge.LEFT
4952	getRange().contains(minorTickTime)
4952	isHiddenValue(minorTickTime)
4953	isVisible()
4954	isInverted()
4955	obj == this
4956	obj instanceof DateAxis
4957	ObjectUtilities.equal(this.tickUnit, that.tickUnit)
4958	ObjectUtilities.equal(this.dateFormatOverride, that.dateFormatOverride)
4959	ObjectUtilities.equal(this.tickMarkPosition, that.tickMarkPosition)
4960	ObjectUtilities.equal(this.timeline, that.timeline)
4961	getLabel() != null
4962	this.dateFormatOverride != null
5182	obj == this
5183	obj instanceof DateTick
5184	ObjectUtilities.equal(this.date, that.date)
5176	this == obj
5177	obj instanceof DateTickMarkPosition
5178	this.name.equals(position.toString())
5179	this.equals(DateTickMarkPosition.START)
5180	this.equals(DateTickMarkPosition.MIDDLE)
5181	this.equals(DateTickMarkPosition.END)
5365	formatter == null
5366	multiple <= 0
5367	rollMultiple <= 0
5368	unit.equals(DateTickUnitType.YEAR)
5369	unit.equals(DateTickUnitType.MONTH)
5370	unit.equals(DateTickUnitType.DAY)
5371	unit.equals(DateTickUnitType.HOUR)
5372	unit.equals(DateTickUnitType.MINUTE)
5373	unit.equals(DateTickUnitType.SECOND)
5374	unit.equals(DateTickUnitType.MILLISECOND)
5375	formatter == null
5376	obj == this
5377	obj instanceof DateTickUnit
5378	super.equals(obj)
5379	this.unitType.equals(that.unitType)
5380	this.count != that.count
5381	ObjectUtilities.equal(this.formatter, that.formatter)
5270	this == obj
5271	obj instanceof DateTickUnitType
5272	this.name.equals(t.toString())
5273	this.equals(DateTickUnitType.YEAR)
5274	this.equals(DateTickUnitType.MONTH)
5275	this.equals(DateTickUnitType.DAY)
5276	this.equals(DateTickUnitType.HOUR)
5277	this.equals(DateTickUnitType.MINUTE)
5278	this.equals(DateTickUnitType.SECOND)
5279	this.equals(DateTickUnitType.MILLISECOND)
1294	serialDate == null
1295	time == null
1296	zone == null
1297	serial > SerialDate.SERIAL_LOWER_BOUND
1298	serial < SerialDate.SERIAL_UPPER_BOUND
1299	obj == this
1300	obj instanceof Day
1301	this.serialDate.equals(that.getSerialDate())
1302	o1 instanceof Day
1303	o1 instanceof RegularTimePeriod
9253	axis != null
9254	axis instanceof NumberAxis
9255	command.equals("SelectLabelFont")
9256	command.equals("SelectLabelPaint")
9257	command.equals("SelectTickLabelFont")
9258	result == JOptionPane.OK_OPTION
9259	c != null
9260	result == JOptionPane.OK_OPTION
836	this.maximumRangeValueColumn == c
836	this.minimumRangeValueRow == r
836	this.maximumRangeValueRow == r
836	this.minimumRangeValueColumn == c
837	item.getMinOutlier() != null
838	item.getMaxOutlier() != null
839	Double.isNaN(this.maximumRangeValue)
840	maxval > this.maximumRangeValue
841	Double.isNaN(this.minimumRangeValue)
842	minval < this.minimumRangeValue
843	this.maximumRangeValueColumn == c
843	this.minimumRangeValueColumn == c
843	this.minimumRangeValueRow == r
843	this.maximumRangeValueRow == r
844	item != null
845	item != null
846	item != null
847	item != null
848	item != null
849	item != null
850	item != null
851	item != null
852	item != null
853	item != null
854	item != null
855	item != null
856	item != null
857	item != null
858	item != null
859	item != null
860	item != null
861	item != null
862	item != null
863	min != null
864	Double.isNaN(minv)
865	minv < this.minimumRangeValue
865	Double.isNaN( this.minimumRangeValue)
866	max != null
867	Double.isNaN(maxv)
868	maxv > this.maximumRangeValue
868	Double.isNaN( this.maximumRangeValue)
869	obj == this
870	obj instanceof DefaultBoxAndWhiskerCategoryDataset
770	faroutCoefficient > getOutlierCoefficient()
771	this.minimumRangeValue == null
772	item.getMinRegularValue().doubleValue() < this.minimumRangeValue.doubleValue()
773	this.maximumRangeValue == null
774	item.getMaxRegularValue().doubleValue() > this.maximumRangeValue.doubleValue()
775	stats != null
776	stats != null
777	stats != null
778	stats != null
779	stats != null
780	stats != null
781	stats != null
782	stats != null
783	stats != null
784	this.minimumRangeValue != null
785	this.maximumRangeValue != null
786	obj == this
787	obj instanceof DefaultBoxAndWhiskerXYDataset
788	ObjectUtilities.equal(this.seriesKey, that.seriesKey)
789	this.dates.equals(that.dates)
790	this.items.equals(that.items)
657	sv == null
658	sv != null
659	n != null
660	obj == this
661	obj instanceof CategoryDataset
662	getRowKeys().equals(that.getRowKeys())
663	getColumnKeys().equals(that.getColumnKeys())
664	v1 == null
665	v2 != null
666	v1.equals(v2)
667	notify
9191	command.equals("BackgroundPaint")
9192	c != null
3344	obj == this
3345	obj instanceof DefaultDrawingSupplier
3346	Arrays.equals(this.paintSequence, that.paintSequence)
3347	this.paintIndex != that.paintIndex
3348	Arrays.equals(this.outlinePaintSequence, that.outlinePaintSequence)
3349	this.outlinePaintIndex != that.outlinePaintIndex
3350	Arrays.equals(this.strokeSequence, that.strokeSequence)
3351	this.strokeIndex != that.strokeIndex
3352	Arrays.equals(this.outlineStrokeSequence, that.outlineStrokeSequence)
3353	this.outlineStrokeIndex != that.outlineStrokeIndex
3354	equalShapes(this.shapeSequence, that.shapeSequence)
3355	this.shapeIndex != that.shapeIndex
3356	s1 == null
3357	s2 == null
3358	s1.length != s2.length
3359	ShapeUtilities.equal(s1[i], s2[i])
1517	xSamples < 1
1518	ySamples < 1
1519	Double.isNaN(minX)
1519	Double.isInfinite(minX)
1520	Double.isNaN(maxX)
1520	Double.isInfinite(maxX)
1521	Double.isInfinite(minY)
1521	Double.isNaN(minY)
1522	Double.isNaN(maxY)
1522	Double.isInfinite(maxY)
1523	notify
1524	obj == this
1525	obj instanceof DefaultHeatMapDataset
1526	this.xSamples != that.xSamples
1527	this.ySamples != that.ySamples
1528	this.minX != that.minX
1529	this.maxX != that.maxX
1530	this.minY != that.minY
1531	this.maxY != that.maxY
1532	DataUtilities.equal(this.zValues, that.zValues)
237	seriesKey == null
238	date == null
239	n != null
240	low != null
241	open != null
242	close != null
243	volume != null
244	obj == this
245	obj instanceof DefaultHighLowDataset
246	this.seriesKey.equals(that.seriesKey)
247	Arrays.equals(this.date, that.date)
248	Arrays.equals(this.open, that.open)
249	Arrays.equals(this.high, that.high)
250	Arrays.equals(this.low, that.low)
251	Arrays.equals(this.close, that.close)
252	Arrays.equals(this.volume, that.volume)
253	series != 0
254	notify
597	starts != null
597	ends != null
598	seriesCount != ends.length
599	seriesCount > 0
600	seriesKeys != null
601	seriesKeys.length != seriesCount
602	categoryCount != ends[0].length
603	categoryKeys != null
604	categoryKeys.length != categoryCount
605	this.startData != null
606	seriesKey.equals(this.seriesKeys[i])
607	series >= getSeriesCount()
607	series < 0
608	seriesKeys == null
609	seriesKeys.length != getSeriesCount()
610	this.startData != null
611	getSeriesCount() > 0
612	this.categoryKeys == null
613	categoryKeys == null
614	categoryKeys.length != getCategoryCount()
615	categoryKeys[i] == null
616	seriesIndex < 0
617	itemIndex < 0
618	seriesIndex < 0
619	itemIndex < 0
620	series < 0
620	series >= getSeriesCount()
621	category < 0
621	category >= getCategoryCount()
622	seriesIndex < 0
623	itemIndex < 0
624	series < 0
624	series >= getSeriesCount()
625	category >= getCategoryCount()
625	category < 0
626	series < 0
626	series > getSeriesCount() - 1
627	categoryIndex < 0
628	series > getSeriesCount() - 1
628	series < 0
629	categoryIndex < 0
630	category.equals(this.categoryKeys[i])
631	columnKey == null
632	this.seriesKeys == null
633	row < 0
633	row >= getRowCount()
634	obj == this
635	obj instanceof DefaultIntervalCategoryDataset
636	Arrays.equals(this.seriesKeys, that.seriesKeys)
637	Arrays.equals(this.categoryKeys, that.categoryKeys)
638	equal(this.startData, that.startData)
639	equal(this.endData, that.endData)
640	array1 == null
641	array2 == null
642	array1.length != array2.length
643	Arrays.equals(array1[i], array2[i])
644	array == null
421	series < 0
421	series >= getSeriesCount()
422	series >= getSeriesCount()
422	series < 0
423	seriesKey == null
424	data == null
425	data.length != 6
426	length != data[1].length
426	length != data[3].length
426	length != data[4].length
426	length != data[5].length
426	length != data[2].length
427	seriesIndex == -1
428	obj == this
429	obj instanceof DefaultIntervalXYDataset
430	this.seriesKeys.equals(that.seriesKeys)
431	Arrays.equals(d1x, d2x)
432	Arrays.equals(d1xs, d2xs)
433	Arrays.equals(d1xe, d2xe)
434	Arrays.equals(d1y, d2y)
435	Arrays.equals(d1ys, d2ys)
436	Arrays.equals(d1ye, d2ye)
17	key == null
18	obj == this
19	obj instanceof DefaultKeyedValue
20	this.key.equals(that.key)
21	this.value != null ? !this.value.equals(that.value) : that.value != null
21	this.value.equals(that.value)
1727	this.data != null
1728	this.data != null
1729	this.data == null
1730	obj == this
1731	obj instanceof KeyedValueDataset
1732	this.data == null
1733	that.getValue() != null
1733	that.getKey() != null
1734	ObjectUtilities.equal(this.data.getKey(), that.getKey())
1735	ObjectUtilities.equal(this.data.getValue(), that.getValue())
0	key == null
1	i == null
2	index < 0
3	key == null
4	keyIndex >= 0
5	position < 0
5	position > getItemCount()
6	key == null
7	pos == position
8	pos >= 0
9	index < 0
10	obj == this
11	obj instanceof KeyedValues
12	count != that.getItemCount()
13	k1.equals(k2)
14	v1 == null
15	v2 != null
16	v1.equals(v2)
1783	rowData != null
1784	index >= 0
1785	key == null
1786	this.sortRowKeys
1787	key == null
1788	rowKey == null
1789	columnKey == null
1790	this.columnKeys.contains(columnKey)
1791	row >= 0
1792	rowIndex >= 0
1793	this.sortRowKeys
1794	columnIndex < 0
1795	row.getValue(item) != null
1796	allNull
1797	row.getValue(columnIndex) != null
1797	columnIndex >= 0
1798	allNull
1799	columnIndex >= 0
1800	rowKey == null
1801	index >= 0
1802	columnKey == null
1803	this.columnKeys.contains(columnKey)
1804	index >= 0
1805	o == null
1806	o == this
1807	o instanceof KeyedValues2D
1808	getRowKeys().equals(kv2D.getRowKeys())
1809	getColumnKeys().equals(kv2D.getColumnKeys())
1810	rowCount != kv2D.getRowCount()
1811	colCount != kv2D.getColumnCount()
1812	v1 == null
1813	v2 != null
1814	v1.equals(v2)
735	values == null
736	rowKey == null
737	columnKey == null
738	obj instanceof Number
739	Double.isNaN(v)
740	vlist.size() > 0
741	this.maximumRangeValue == null
742	maxval > this.maximumRangeValue.doubleValue()
743	this.minimumRangeValue == null
744	minval < this.minimumRangeValue.doubleValue()
745	values != null
746	l != null
746	l.size() > 0
747	count > 0
748	count == 0
749	l.size() > 0
749	l != null
750	count > 0
751	count == 0
752	this.minimumRangeValue != null
753	this.maximumRangeValue != null
754	obj == this
755	obj instanceof DefaultMultiValueCategoryDataset
9240	command.equals("GridStroke")
9241	command.equals("GridPaint")
9242	command.equals("AutoRangeOnOff")
9243	command.equals("MinimumRange")
9244	command.equals("MaximumRange")
9245	result == JOptionPane.OK_OPTION
9246	c != null
9247	event.getSource() == this.minimumRangeValue
9248	event.getSource() == this.maximumRangeValue
9249	this.autoRange
9250	newMin >= this.maximumValue
9251	newMax <= this.minimumValue
9252	this.autoRange
346	high != null
347	low != null
348	open != null
349	close != null
350	volume != null
351	this == obj
352	obj instanceof DefaultOHLCDataset
353	this.key.equals(that.key)
354	Arrays.equals(this.data, that.data)
1009	data == null
1010	getItemCount() > item
1011	key == null
1012	index >= 0
1013	getItemCount() > 0
1014	obj == this
1015	obj instanceof PieDataset
1016	that.getItemCount() != count
1017	k1.equals(k2)
1018	v1 == null
1019	v2 != null
1020	v1.equals(v2)
1021	notify
9193	plot instanceof CategoryPlot
9194	plot instanceof XYPlot
9195	plot instanceof CategoryPlot
9196	renderer instanceof LineAndShapeRenderer
9197	plot instanceof XYPlot
9198	renderer instanceof StandardXYItemRenderer
9199	this.plotOrientation != null
9200	this.drawLines != null
9201	this.drawShapes != null
9202	plot instanceof CategoryPlot
9203	plot instanceof XYPlot
9204	this.domainAxisPropertyPanel != null
9205	plot instanceof CategoryPlot
9206	plot instanceof XYPlot
9207	this.rangeAxisPropertyPanel != null
9208	this.plotInsets == null
9209	command.equals("BackgroundPaint")
9210	command.equals("OutlineStroke")
9211	command.equals("OutlinePaint")
9212	command.equals("Orientation")
9213	command.equals("DrawLines")
9214	command.equals("DrawShapes")
9215	c != null
9216	result == JOptionPane.OK_OPTION
9217	c != null
9218	index == ORIENTATION_VERTICAL
9219	this.domainAxisPropertyPanel != null
9220	plot instanceof CategoryPlot
9221	plot instanceof XYPlot
9222	domainAxis != null
9223	this.rangeAxisPropertyPanel != null
9224	plot instanceof CategoryPlot
9225	plot instanceof XYPlot
9226	rangeAxis != null
9227	this.plotOrientation != null
9228	plot instanceof CategoryPlot
9229	plot instanceof XYPlot
9230	this.drawLines != null
9231	plot instanceof CategoryPlot
9232	r instanceof LineAndShapeRenderer
9233	plot instanceof XYPlot
9234	r instanceof StandardXYItemRenderer
9235	this.drawShapes != null
9236	plot instanceof CategoryPlot
9237	r instanceof LineAndShapeRenderer
9238	plot instanceof XYPlot
9239	r instanceof StandardXYItemRenderer
7115	p != null
7116	b != null
7117	isSeriesFilled(seriesIndex)
7118	plot.isAngleLabelsVisible()
7119	polarPlot != null
7120	dataset != null
7121	obj == null
7122	obj instanceof DefaultPolarItemRenderer
7123	this.seriesFilled.equals(that.seriesFilled)
1920	color == null
1921	++historyIdx >= shadowSize
1922	++historyIdx >= shadowSize
1923	obj == this
1924	obj instanceof DefaultShadowGenerator
1925	this.shadowSize != that.shadowSize
1926	this.shadowColor.equals(that.shadowColor)
1927	this.shadowOpacity != that.shadowOpacity
1928	this.distance != that.distance
1929	this.angle != that.angle
917	masd != null
918	masd != null
919	masd != null
920	masd != null
921	mean != null
922	standardDeviation != null
923	c == this.minimumRangeValueColumn
923	c == this.maximumRangeValueColumn
923	c == this.maximumRangeValueIncStdDevColumn
923	r == this.maximumRangeValueIncStdDevRow
923	r == this.minimumRangeValueRow
923	c == this.minimumRangeValueIncStdDevColumn
923	r == this.maximumRangeValueRow
923	r == this.minimumRangeValueIncStdDevRow
924	Double.isNaN(m)
925	m > this.maximumRangeValue
925	Double.isNaN(this.maximumRangeValue)
926	Double.isNaN(m + sd)
927	Double.isNaN(this.maximumRangeValueIncStdDev)
927	(m + sd) > this.maximumRangeValueIncStdDev
928	Double.isNaN(m)
929	Double.isNaN(this.minimumRangeValue)
929	m < this.minimumRangeValue
930	Double.isNaN(m - sd)
931	Double.isNaN(this.minimumRangeValueIncStdDev)
931	(m - sd) < this.minimumRangeValueIncStdDev
932	c == this.minimumRangeValueIncStdDevColumn
932	r == this.maximumRangeValueIncStdDevRow
932	r == this.maximumRangeValueRow
932	c == this.minimumRangeValueColumn
932	r == this.minimumRangeValueIncStdDevRow
932	c == this.maximumRangeValueColumn
932	r == this.minimumRangeValueRow
932	c == this.maximumRangeValueIncStdDevColumn
933	masd == null
934	Double.isNaN(m)
935	Double.isNaN(this.maximumRangeValue)
936	m > this.maximumRangeValue
937	Double.isNaN(this.minimumRangeValue)
938	m < this.minimumRangeValue
939	Double.isNaN(sd)
940	Double.isNaN(this.maximumRangeValueIncStdDev)
941	m + sd > this.maximumRangeValueIncStdDev
942	Double.isNaN(this.minimumRangeValueIncStdDev)
943	m - sd < this.minimumRangeValueIncStdDev
944	includeInterval
945	includeInterval
946	includeInterval
947	Double.isNaN(this.maximumRangeValueIncStdDev)
947	Double.isNaN(this.minimumRangeValueIncStdDev)
948	Double.isNaN(this.minimumRangeValue)
948	Double.isNaN(this.maximumRangeValue)
949	obj == this
950	obj instanceof DefaultStatisticalCategoryDataset
951	this.data.equals(that.data)
367	series == null
368	series.getAllowDuplicateXValues()
369	series == null
370	this.xPoints.contains(xValue)
371	dataSeries.equals(series)
372	seriesXPoints.contains(xPoint)
373	this.autoPrune
374	this.xPoints == null
375	series >= getSeriesCount()
375	series < 0
376	series == null
377	this.data.contains(series)
378	this.data.size() == 0
379	series > getSeriesCount()
379	series < 0
380	this.data.size() == 0
381	this.autoPrune
382	x == null
383	series.getY(series.indexOf(x)) != null
384	canPrune(x)
385	this.propagateEvents
386	obj == this
387	obj instanceof DefaultTableXYDataset
388	this.autoPrune != that.autoPrune
389	this.propagateEvents != that.propagateEvents
390	this.intervalDelegate.equals(that.intervalDelegate)
391	ObjectUtilities.equal(this.data, that.data)
392	includeInterval
9183	command.equals("SelectFont")
9184	command.equals("SelectPaint")
9185	command.equals("ShowTitle")
9186	result == JOptionPane.OK_OPTION
9187	c != null
9188	this.showTitle
9189	title == null
1541	obj == this
1542	obj instanceof ValueDataset
400	seriesKeys == null
401	seriesKeys.size() != data.length
402	xObject != null
403	xObject instanceof Number
404	xObject instanceof Date
405	series < 0
405	series >= getSeriesCount()
406	series < 0
406	series >= getSeriesCount()
407	this == obj
408	obj instanceof DefaultWindDataset
409	this.seriesKeys.equals(that.seriesKeys)
410	this.allSeriesData.equals(that.allSeriesData)
411	object instanceof WindDataItem
412	this.x.doubleValue() > item.x.doubleValue()
413	this.x.equals(item.x)
414	this == obj
415	obj instanceof WindDataItem
416	this.x.equals(that.x)
417	this.windDir.equals(that.windDir)
418	this.windForce.equals(that.windForce)
533	series >= getSeriesCount()
533	series < 0
534	series < 0
534	series >= getSeriesCount()
535	seriesKey == null
536	data == null
537	data.length != 2
538	data[0].length != data[1].length
539	seriesIndex == -1
540	seriesIndex >= 0
541	obj == this
542	obj instanceof DefaultXYDataset
543	this.seriesKeys.equals(that.seriesKeys)
544	Arrays.equals(d1x, d2x)
545	Arrays.equals(d1y, d2y)
514	series < 0
514	series >= getSeriesCount()
515	series < 0
515	series >= getSeriesCount()
516	seriesKey == null
517	data == null
518	data.length != 3
519	data[0].length != data[2].length
519	data[0].length != data[1].length
520	seriesIndex == -1
521	seriesIndex >= 0
522	obj == this
523	obj instanceof DefaultXYZDataset
524	this.seriesKeys.equals(that.seriesKeys)
525	Arrays.equals(d1x, d2x)
526	Arrays.equals(d1y, d2y)
527	Arrays.equals(d1z, d2z)
7420	alpha > 1.0f
7420	alpha < 0.0f
7421	getItemVisible(series, item)
7422	pass == 0
7423	orientation == PlotOrientation.HORIZONTAL
7424	orientation == PlotOrientation.VERTICAL
7425	item == (dataset.getItemCount(series) - 1)
7426	isLinePass(pass)
7427	item == 0
7428	getItemLineVisible(series, item)
7429	isItemPass(pass)
7430	state.getInfo() != null
7431	obj == this
7432	obj instanceof DeviationRenderer
7433	this.alpha != that.alpha
4051	paint == null
4052	paint == null
4053	t == null
4054	p instanceof GradientPaint
4055	obj == this
4056	obj instanceof DialBackground
4057	PaintUtilities.equal(this.paint, that.paint)
4058	this.gradientPaintTransformer.equals( that.gradientPaintTransformer)
4117	radius <= 0.0
4118	paint == null
4119	paint == null
4120	stroke == null
4121	obj == this
4122	obj instanceof DialCap
4123	this.radius != that.radius
4124	PaintUtilities.equal(this.fillPaint, that.fillPaint)
4125	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
4126	this.outlineStroke.equals(that.outlineStroke)
4127	dataset != null
4128	this.background != null
4129	background != null
4130	this.cap != null
4131	cap != null
4132	frame == null
4133	layer == null
4134	layer == null
4135	layer != null
4136	pointer == null
4137	pointer == null
4138	pointer != null
4139	p.getDatasetIndex() == datasetIndex
4140	this.datasets.size() > index
4141	existing != null
4142	dataset != null
4143	this.background != null
4143	this.background.isVisible()
4144	this.background.isClippedToWindow()
4145	current.isVisible()
4146	current.isClippedToWindow()
4147	current.isVisible()
4148	current.isClippedToWindow()
4149	this.cap != null
4149	this.cap.isVisible()
4150	this.cap.isClippedToWindow()
4151	this.dialFrame.isVisible()
4152	dataset != null
4153	n != null
4154	scale == null
4155	existing != null
4156	this.scales.size() > index
4157	scaleIndex != null
4158	rect == null
4159	obj == this
4160	obj instanceof DialPlot
4161	ObjectUtilities.equal(this.background, that.background)
4162	ObjectUtilities.equal(this.cap, that.cap)
4163	this.dialFrame.equals(that.dialFrame)
4164	this.viewX != that.viewX
4165	this.viewY != that.viewY
4166	this.viewW != that.viewW
4167	this.viewH != that.viewH
4168	this.layers.equals(that.layers)
4169	this.pointers.equals(that.pointers)
4047	obj == this
4048	obj instanceof DialPointer
4049	this.datasetIndex != that.datasetIndex
4050	this.radius != that.radius
3757	this == obj
3758	obj instanceof DialShape
3759	this.name.equals(shape.toString())
3760	this.equals(DialShape.CIRCLE)
3761	this.equals(DialShape.CHORD)
3762	this.equals(DialShape.PIE)
4019	label == null
4020	label == null
4021	font == null
4022	paint == null
4023	radius < 0.0
4024	anchor == null
4025	obj == this
4026	obj instanceof DialTextAnnotation
4027	this.label.equals(that.label)
4028	this.font.equals(that.font)
4029	PaintUtilities.equal(this.paint, that.paint)
4030	this.radius != that.radius
4031	this.angle != that.angle
4032	this.anchor.equals(that.anchor)
4086	anchor == null
4087	value == null
4088	formatter == null
4089	font == null
4090	paint == null
4091	paint == null
4092	stroke == null
4093	paint == null
4094	insets == null
4095	anchor == null
4096	anchor == null
4097	this.maxTemplateValue != null
4098	minX > maxX
4099	x < minX
4100	x > maxX
4101	obj == this
4102	obj instanceof DialValueIndicator
4103	this.datasetIndex != that.datasetIndex
4104	this.angle != that.angle
4105	this.radius != that.radius
4106	this.frameAnchor.equals(that.frameAnchor)
4107	this.templateValue.equals(that.templateValue)
4108	ObjectUtilities.equal(this.maxTemplateValue, that.maxTemplateValue)
4109	this.font.equals(that.font)
4110	PaintUtilities.equal(this.paint, that.paint)
4111	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
4112	this.outlineStroke.equals(that.outlineStroke)
4113	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
4114	this.insets.equals(that.insets)
4115	this.valueAnchor.equals(that.valueAnchor)
4116	this.textAnchor.equals(that.textAnchor)
7034	filename == null
7035	file.exists()
7036	chartDeleter != null
7037	filename.length() >= 6
7038	filename.substring(0, 6).equals("public")
7039	filename.startsWith(ServletUtilities.getTempOneTimeFilePrefix())
7040	isOneTimeChart
7040	isChartPublic
7040	isChartInUserList
7041	isOneTimeChart
570	this == obj
571	obj instanceof DomainOrder
572	this.name.equals(that.toString())
573	this.equals(DomainOrder.ASCENDING)
574	this.equals(DomainOrder.DESCENDING)
575	this.equals(DomainOrder.NONE)
1046	this.timePeriodClass == Second.class
1047	this.timePeriodClass == Minute.class
1048	this.timePeriodClass == Hour.class
1049	this.pointsInTime[0] == null
1050	this.domainIsPointsInTime
1051	values == null
1052	seriesNumber >= this.valueHistory.length
1053	this.valueHistory[seriesNumber] == null
1054	srcLength < this.historyCount
1055	fillNeeded
1056	seriesKey != null
1057	seriesNumber >= this.valueHistory.length
1058	this.valueHistory[seriesNumber] == null
1059	this.oldestAt == 0
1060	newIndex >= this.historyCount
1061	tmp >= this.historyCount
1062	tmp < 0
1063	this.maxValue != null
1064	this.valueHistory[s].getData(this.oldestAt) == oldMax
1065	extremaChanged
1066	extremaChanged
1067	this.oldestAt >= this.historyCount
1068	tmp > max
1069	nDataPoints > this.valueHistory.length
1070	this.valueHistory[s] == null
1071	nDataPoints > this.valueHistory.length
1072	this.valueHistory[s] == null
1073	refresh > 0
1074	insertionIndex % refresh == 0
1075	this.domainRange == null
1076	this.minValue != null
1077	this.maxValue != null
1078	this.valueRange == null
4440	font == null
4441	paint == null
4442	s != null
4443	edge == RectangleEdge.TOP
4443	edge == RectangleEdge.BOTTOM
4444	edge == RectangleEdge.LEFT
4444	edge == RectangleEdge.RIGHT
4445	line != null
4446	obj == this
4447	obj instanceof ExtendedCategoryAxis
4448	this.sublabelFont.equals(that.sublabelFont)
4449	PaintUtilities.equal(this.sublabelPaint, that.sublabelPaint)
4450	this.sublabels.equals(that.sublabels)
6121	file.isDirectory()
6122	name.endsWith(this.extension)
3163	domainAxis == null
3164	rangeAxis == null
3165	axis == null
3166	axis == null
3167	paint == null
3168	this.domainGridlinesVisible != visible
3169	stroke == null
3170	paint == null
3171	this.rangeGridlinesVisible != visible
3172	stroke == null
3173	paint == null
3174	info != null
3175	info != null
3176	this.data != null
3177	isDomainGridlinesVisible()
3178	isRangeGridlinesVisible()
3179	axis == this.domainAxis
3180	axis == this.rangeAxis
3181	data != null
3182	v < lowest
3183	v > highest
3184	lowest <= highest
3185	data != null
3186	v < lowest
3187	v > highest
3188	lowest <= highest
3189	useAnchor
3190	useAnchor
3191	isDomainPannable()
3191	this.domainAxis == null
3192	this.domainAxis.isInverted()
3193	this.rangeAxis == null
3193	isRangePannable()
3194	this.rangeAxis.isInverted()
3195	obj == this
3196	super.equals(obj)
3197	obj instanceof FastScatterPlot
3198	this.domainPannable != that.domainPannable
3199	this.rangePannable != that.rangePannable
3200	ArrayUtilities.equal(this.data, that.data)
3201	ObjectUtilities.equal(this.domainAxis, that.domainAxis)
3202	ObjectUtilities.equal(this.rangeAxis, that.rangeAxis)
3203	PaintUtilities.equal(this.paint, that.paint)
3204	this.domainGridlinesVisible != that.domainGridlinesVisible
3205	PaintUtilities.equal(this.domainGridlinePaint, that.domainGridlinePaint)
3206	ObjectUtilities.equal(this.domainGridlineStroke, that.domainGridlineStroke)
3207	this.rangeGridlinesVisible
3207	!this.rangeGridlinesVisible == that.rangeGridlinesVisible
3208	PaintUtilities.equal(this.rangeGridlinePaint, that.rangeGridlinePaint)
3209	ObjectUtilities.equal(this.rangeGridlineStroke, that.rangeGridlineStroke)
3210	this.data != null
3211	this.domainAxis != null
3212	this.rangeAxis != null
3213	this.domainAxis != null
3214	this.rangeAxis != null
1039	t != Long.MIN_VALUE
1040	t != Long.MAX_VALUE
1041	object instanceof FixedMillisecond
1042	o1 instanceof FixedMillisecond
1043	difference > 0
1044	difference < 0
1045	o1 instanceof RegularTimePeriod
6832	w == LengthConstraintType.NONE
6833	h == LengthConstraintType.NONE
6834	h == LengthConstraintType.FIXED
6835	h == LengthConstraintType.RANGE
6836	w == LengthConstraintType.FIXED
6837	h == LengthConstraintType.NONE
6838	h == LengthConstraintType.FIXED
6839	h == LengthConstraintType.RANGE
6840	w == LengthConstraintType.RANGE
6841	h == LengthConstraintType.NONE
6842	h == LengthConstraintType.FIXED
6843	h == LengthConstraintType.RANGE
6844	x + size.width <= width
6845	itemsInRow.isEmpty()
6846	constraint.getHeightRange().contains(s.height)
6847	constraint.getWidthRange().contains(s1.width)
6848	constraint.getWidthRange().contains(s.width)
6849	constraint.getWidthRange().contains(s1.width)
6850	blockCount > 0
6851	blockCount > 1
6852	this.verticalAlignment != VerticalAlignment.TOP
6853	this.verticalAlignment == VerticalAlignment.CENTER
6854	this.verticalAlignment == VerticalAlignment.BOTTOM
6855	obj == this
6856	obj instanceof FlowArrangement
6857	this.horizontalAlignment != that.horizontalAlignment
6858	this.verticalAlignment != that.verticalAlignment
6859	this.horizontalGap != that.horizontalGap
6860	this.verticalGap != that.verticalGap
6130	this.bold.isSelected()
6130	this.italic.isSelected()
6131	this.bold.isSelected()
6132	this.italic.isSelected()
6133	selected != null
6134	font == null
6135	fontName.equals(model.getElementAt(i))
6136	fontSize.equals(model.getElementAt(i))
6129	font != null
8498	paint == null
8499	paint == null
8500	dataset instanceof GanttCategoryDataset
8501	count == 0
8502	value0 == null
8503	value1 == null
8504	translatedValue1 < translatedValue0
8505	plot.getOrientation() == PlotOrientation.HORIZONTAL
8506	plot.getOrientation() == PlotOrientation.VERTICAL
8507	percent != null
8508	orientation == PlotOrientation.HORIZONTAL
8509	orientation == PlotOrientation.VERTICAL
8510	getShadowsVisible()
8511	completeBar != null
8512	incompleteBar != null
8513	isDrawBarOutline()
8513	state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD
8514	subinterval == count - 1
8515	state.getInfo() != null
8516	entities != null
8517	value0 == null
8518	value1 == null
8519	java2dValue1 < java2dValue0
8520	orientation == PlotOrientation.HORIZONTAL
8521	orientation == PlotOrientation.VERTICAL
8522	percent != null
8523	plot.getOrientation() == PlotOrientation.HORIZONTAL
8524	plot.getOrientation() == PlotOrientation.VERTICAL
8525	getShadowsVisible()
8526	completeBar != null
8527	incompleteBar != null
8528	state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD
8528	isDrawBarOutline()
8529	paint != null
8529	stroke != null
8530	generator != null
8530	isItemLabelVisible(row, column, selected)
8531	entities != null
8532	obj == this
8533	obj instanceof GanttRenderer
8534	PaintUtilities.equal(this.completePaint, that.completePaint)
8535	PaintUtilities.equal(this.incompletePaint, that.incompletePaint)
8536	this.startPercent != that.startPercent
8537	this.endPercent != that.endPercent
8716	itemPaint instanceof Color
8717	itemPaint instanceof GradientPaint
8718	c0.getAlpha() == 0
8719	base == RectangleEdge.TOP
8719	base == RectangleEdge.BOTTOM
8720	base == RectangleEdge.LEFT
8720	base == RectangleEdge.RIGHT
8721	renderer.isDrawBarOutline()
8722	stroke != null
8722	paint != null
8723	itemPaint instanceof Color
8724	c.getAlpha() == 0
8725	base == RectangleEdge.TOP
8726	pegShadow
8727	base == RectangleEdge.BOTTOM
8728	pegShadow
8729	base == RectangleEdge.LEFT
8730	pegShadow
8731	base == RectangleEdge.RIGHT
8732	pegShadow
8733	obj == this
8734	obj instanceof GradientBarPainter
8735	this.g1 != that.g1
8736	this.g2 != that.g2
8737	this.g3 != that.g3
2090	this == obj
2091	obj instanceof GradientPaintTransformType
2092	this.name.equals(t.name)
2093	this.equals(GradientPaintTransformType.HORIZONTAL)
2094	this.equals(GradientPaintTransformType.VERTICAL)
2095	this.equals(GradientPaintTransformType.CENTER_HORIZONTAL)
2096	this.equals(GradientPaintTransformType.CENTER_VERTICAL)
7826	itemPaint instanceof Color
7827	itemPaint instanceof GradientPaint
7828	c0.getAlpha() == 0
7829	base == RectangleEdge.BOTTOM
7829	base == RectangleEdge.TOP
7830	base == RectangleEdge.RIGHT
7830	base == RectangleEdge.LEFT
7831	renderer.isDrawBarOutline()
7832	paint != null
7832	stroke != null
7833	itemPaint instanceof Color
7834	c.getAlpha() == 0
7835	base == RectangleEdge.TOP
7836	pegShadow
7837	base == RectangleEdge.BOTTOM
7838	pegShadow
7839	base == RectangleEdge.LEFT
7840	pegShadow
7841	base == RectangleEdge.RIGHT
7842	pegShadow
7843	obj == this
7844	obj instanceof GradientXYBarPainter
7845	this.g1 != that.g1
7846	this.g2 != that.g2
7847	this.g3 != that.g3
8111	lowerBound >= upperBound
8112	alpha < 0
8112	alpha > 255
8113	obj == this
8114	obj instanceof GrayPaintScale
8115	this.lowerBound != that.lowerBound
8116	this.upperBound != that.upperBound
8117	this.alpha != that.alpha
6756	w == LengthConstraintType.NONE
6757	h == LengthConstraintType.NONE
6758	h == LengthConstraintType.FIXED
6759	h == LengthConstraintType.RANGE
6760	w == LengthConstraintType.FIXED
6761	h == LengthConstraintType.NONE
6762	h == LengthConstraintType.FIXED
6763	h == LengthConstraintType.RANGE
6764	w == LengthConstraintType.RANGE
6765	h == LengthConstraintType.NONE
6766	h == LengthConstraintType.FIXED
6767	h == LengthConstraintType.RANGE
6768	b != null
6769	index >= blocks.size()
6770	b != null
6771	constraint.getHeightRange().contains(size1.getHeight())
6772	constraint.getWidthRange().contains(size1.getWidth())
6773	constraint.getWidthRange().contains(size1.getWidth())
6774	constraint.getHeightRange().contains(size1.getHeight())
6775	constraint.getWidthRange().contains(size1.getWidth())
6776	constraint.getHeightRange().contains(size1.getHeight())
6777	constraint.getHeightRange().contains(size1.getHeight())
6778	index >= blocks.size()
6779	b != null
6780	index >= blocks.size()
6781	b != null
6782	obj == this
6783	obj instanceof GridArrangement
6784	this.columns != that.columns
6785	this.rows != that.rows
8738	map == null
8739	dataset == null
8740	data != null
8741	orientation == PlotOrientation.HORIZONTAL
8742	orientation == PlotOrientation.VERTICAL
8743	categories > 1
8744	groups > 1
8745	columns > 0
8746	orientation == PlotOrientation.HORIZONTAL
8747	groupCount > 1
8748	dataValue == null
8749	group.equals(this.seriesToGroupMap.getGroup( dataset.getRowKey(i)))
8750	v != null
8751	d > 0
8752	orientation == PlotOrientation.HORIZONTAL
8753	positive
8753	positive
8753	inverted
8753	inverted
8754	inverted
8754	positive
8754	inverted
8754	positive
8755	value > 0.0
8756	orientation == PlotOrientation.HORIZONTAL
8757	generator != null
8757	isItemLabelVisible(row, column, selected)
8758	entities != null
8759	obj == this
8760	obj instanceof GroupedStackedBarRenderer
8761	this.seriesToGroupMap.equals(that.seriesToGroupMap)
2087	p == null
2088	p instanceof GradientPaint
2089	a == null
1549	dataset == null
1550	paintScale == null
2417	dateFormatter == null
2418	numberFormatter == null
2419	dataset instanceof OHLCDataset
2420	x != null
2421	high != null
2422	low != null
2423	open != null
2424	close != null
2425	this.dateFormatter != null
2426	this.numberFormatter != null
2427	obj == this
2428	obj instanceof HighLowItemLabelGenerator
2429	this.dateFormatter.equals(generator.dateFormatter)
2430	this.numberFormatter.equals(generator.numberFormatter)
7389	dataset != null
7390	domainAxis.getRange().contains(x)
7391	state.getInfo() != null
7392	dataset instanceof OHLCDataset
7393	Double.isNaN(yLow)
7393	Double.isNaN(yHigh)
7394	orientation == PlotOrientation.HORIZONTAL
7395	orientation == PlotOrientation.VERTICAL
7396	domainAxis.isInverted()
7397	getDrawOpenTicks()
7398	Double.isNaN(yOpen)
7399	this.openTickPaint != null
7400	orientation == PlotOrientation.HORIZONTAL
7401	orientation == PlotOrientation.VERTICAL
7402	getDrawCloseTicks()
7403	Double.isNaN(yClose)
7404	this.closeTickPaint != null
7405	orientation == PlotOrientation.HORIZONTAL
7406	orientation == PlotOrientation.VERTICAL
7407	item > 0
7408	Double.isNaN(y0)
7408	Double.isNaN(y)
7408	Double.isNaN(x0)
7409	orientation == PlotOrientation.HORIZONTAL
7410	orientation == PlotOrientation.VERTICAL
7411	entities != null
7412	this == obj
7413	obj instanceof HighLowRenderer
7414	this.drawOpenTicks != that.drawOpenTicks
7415	this.drawCloseTicks != that.drawCloseTicks
7416	PaintUtilities.equal(this.openTickPaint, that.openTickPaint)
7417	PaintUtilities.equal(this.closeTickPaint, that.closeTickPaint)
7418	this.tickLength != that.tickLength
7419	super.equals(obj)
871	startBoundary > endBoundary
872	obj == null
873	obj == this
874	obj instanceof HistogramBin
875	type == null
876	key == null
877	values == null
878	bins < 1
879	i == bins - 1
880	values[i] < maximum
881	fraction < 0.0
882	binIndex >= bins
883	values == null
883	values.length < 1
884	values[i] < min
885	values == null
885	values.length < 1
886	values[i] > max
887	this.type == HistogramType.FREQUENCY
888	this.type == HistogramType.RELATIVE_FREQUENCY
889	this.type == HistogramType.SCALE_AREA_TO_1
890	obj == this
891	obj instanceof HistogramDataset
892	ObjectUtilities.equal(this.type, that.type)
893	ObjectUtilities.equal(this.list, that.list)
910	obj == null
911	obj == this
912	obj instanceof HistogramType
913	this.name.equals(t.name)
914	this.equals(HistogramType.FREQUENCY)
915	this.equals(HistogramType.RELATIVE_FREQUENCY)
916	this.equals(HistogramType.SCALE_AREA_TO_1)
2033	this == obj
2034	obj instanceof HorizontalAlignment
2035	this.name.equals(that.name)
2036	this.equals(HorizontalAlignment.LEFT)
2037	this.equals(HorizontalAlignment.RIGHT)
2038	this.equals(HorizontalAlignment.CENTER)
1440	day == null
1441	time == null
1442	zone == null
1443	this.hour != FIRST_HOUR_IN_DAY
1444	prevDay != null
1445	this.hour != LAST_HOUR_IN_DAY
1446	nextDay != null
1447	obj == this
1448	obj instanceof Hour
1449	this.hour != that.hour
1450	this.day.equals(that.day)
1451	o1 instanceof Hour
1452	result == 0
1453	o1 instanceof RegularTimePeriod
1454	day != null
1455	hour >= FIRST_HOUR_IN_DAY
1455	hour <= LAST_HOUR_IN_DAY
2432	className == null
6372	useOverLibForToolTips
6373	entities != null
6374	entity.getURLText() != null
6374	entity.getToolTipText() != null
6375	area.length() > 0
6376	input == null
6377	c == '&'
6378	c == '\"'
6379	c == '<'
6380	c == '>'
6381	c == '\''
6382	c == '\\'
6383	input == null
6384	c == '\"'
6385	c == '\''
6386	c == '\\'
6547	image == null
6548	image == null
6549	position == RectangleEdge.BOTTOM
6549	position == RectangleEdge.TOP
6550	position == RectangleEdge.RIGHT
6550	position == RectangleEdge.LEFT
6551	getPosition() == RectangleEdge.TOP
6552	horizontalAlignment == HorizontalAlignment.CENTER
6553	horizontalAlignment == HorizontalAlignment.LEFT
6554	horizontalAlignment == HorizontalAlignment.RIGHT
6555	padding != null
6556	getPosition() == RectangleEdge.LEFT
6557	alignment == VerticalAlignment.CENTER
6558	alignment == VerticalAlignment.TOP
6559	alignment == VerticalAlignment.BOTTOM
6560	obj == this
6561	obj instanceof ImageTitle
6562	ObjectUtilities.equal(this.image, that.image)
8894	dataset instanceof IntervalCategoryDataset
8895	visibleRow < 0
8896	value0 == null
8897	value1 == null
8898	java2dValue1 < java2dValue0
8899	orientation == PlotOrientation.HORIZONTAL
8900	seriesCount > 1
8901	orientation == PlotOrientation.VERTICAL
8902	seriesCount > 1
8903	getShadowsVisible()
8904	generator != null
8904	isItemLabelVisible(row, column, selected)
8905	entities != null
8906	obj == this
8907	obj instanceof IntervalBarRenderer
2394	getNumberFormat() != null
2395	getDateFormat() != null
2396	dataset instanceof IntervalCategoryDataset
2397	getNumberFormat() != null
2398	getDateFormat() != null
2328	getNumberFormat() != null
2329	getDateFormat() != null
2330	dataset instanceof IntervalCategoryDataset
2331	getNumberFormat() != null
2332	getDateFormat() != null
2333	obj == this
2334	obj instanceof IntervalCategoryToolTipGenerator
3365	obj == this
3366	obj instanceof IntervalMarker
3367	super.equals(obj)
3368	this.startValue != that.startValue
3369	this.endValue != that.endValue
3370	ObjectUtilities.equal(this.gradientPaintTransformer, that.gradientPaintTransformer)
458	dataset == null
459	b
460	d < 0.0
460	1.0 < d
461	w < 0.0
462	isAutoWidth()
462	Double.isInfinite(this.autoIntervalWidth)
463	x != null
464	x != null
465	r != null
466	r != null
467	range != null
467	includeInterval
468	this.autoWidth
469	itemCount > 1
470	obj == this
471	obj instanceof IntervalXYDelegate
472	this.autoWidth != that.autoWidth
473	this.intervalPositionFactor != that.intervalPositionFactor
474	this.fixedIntervalWidth != that.fixedIntervalWidth
2296	dataset instanceof IntervalXYDataset
2297	intervalDataset != null
2298	xdf != null
2299	dataset.getY(series, item) == null
2299	Double.isNaN(y)
2300	ydf != null
2301	Double.isNaN(ys)
2301	intervalDataset.getStartY(series, item) == null
2302	ydf != null
2303	Double.isNaN(ye)
2303	intervalDataset.getEndY(series, item) == null
2304	ydf != null
2305	obj == this
2306	obj instanceof IntervalXYItemLabelGenerator
32	qName.equals(ITEM_TAG)
33	qName.equals(VALUE_TAG)
34	this.parent instanceof PieDatasetHandler
35	this.parent instanceof CategorySeriesHandler
2228	this == o
2229	o instanceof ItemLabelAnchor
2230	this.name.equals(order.toString())
2231	this.equals(ItemLabelAnchor.CENTER)
2232	this.equals(ItemLabelAnchor.INSIDE1)
2233	this.equals(ItemLabelAnchor.INSIDE2)
2234	this.equals(ItemLabelAnchor.INSIDE3)
2235	this.equals(ItemLabelAnchor.INSIDE4)
2236	this.equals(ItemLabelAnchor.INSIDE5)
2237	this.equals(ItemLabelAnchor.INSIDE6)
2238	this.equals(ItemLabelAnchor.INSIDE7)
2239	this.equals(ItemLabelAnchor.INSIDE8)
2240	this.equals(ItemLabelAnchor.INSIDE9)
2241	this.equals(ItemLabelAnchor.INSIDE10)
2242	this.equals(ItemLabelAnchor.INSIDE11)
2243	this.equals(ItemLabelAnchor.INSIDE12)
2244	this.equals(ItemLabelAnchor.OUTSIDE1)
2245	this.equals(ItemLabelAnchor.OUTSIDE2)
2246	this.equals(ItemLabelAnchor.OUTSIDE3)
2247	this.equals(ItemLabelAnchor.OUTSIDE4)
2248	this.equals(ItemLabelAnchor.OUTSIDE5)
2249	this.equals(ItemLabelAnchor.OUTSIDE6)
2250	this.equals(ItemLabelAnchor.OUTSIDE7)
2251	this.equals(ItemLabelAnchor.OUTSIDE8)
2252	this.equals(ItemLabelAnchor.OUTSIDE9)
2253	this.equals(ItemLabelAnchor.OUTSIDE10)
2254	this.equals(ItemLabelAnchor.OUTSIDE11)
2255	this.equals(ItemLabelAnchor.OUTSIDE12)
2313	itemLabelAnchor == null
2314	textAnchor == null
2315	rotationAnchor == null
2316	obj == this
2317	obj instanceof ItemLabelPosition
2318	this.itemLabelAnchor.equals(that.itemLabelAnchor)
2319	this.textAnchor.equals(that.textAnchor)
2320	this.rotationAnchor.equals(that.rotationAnchor)
2321	this.angle != that.angle
205	connection == null
206	columnCount < 2
207	this.transpose
208	this.transpose
209	this.transpose
210	resultSet != null
211	statement != null
201	con == null
202	columnCount != 2
203	resultSet != null
204	statement != null
188	con == null
189	numberOfValidColumns <= 1
190	columnTypes[column] != Types.NULL
191	this.rows != null
192	this.rows.size() == 0
193	columnTypes[column] != Types.NULL
194	this.rows.size() < 1
195	testValue != null
196	test < this.minValue
197	test > this.maxValue
198	resultSet != null
199	statement != null
200	this.columnNames[seriesIndex] != null
200	seriesIndex < this.columnNames.length
6035	plot == null
6036	createLegend
6037	title != null
6038	titleFont == null
6039	renderingHints == null
6040	padding == null
6041	this.title != null
6042	title != null
6043	text != null
6044	this.title == null
6045	subtitle instanceof LegendTitle
6046	seen == index
6047	subtitles == null
6048	t != null
6049	index >= getSubtitleCount()
6049	index < 0
6050	subtitle == null
6051	index < 0
6051	index > getSubtitleCount()
6052	subtitle == null
6053	val == null
6054	flag
6054	flag
6054	RenderingHints.VALUE_ANTIALIAS_ON.equals(val)
6054	RenderingHints.VALUE_ANTIALIAS_OFF.equals(val)
6055	flag
6056	flag
6057	this.backgroundPaint != null
6058	this.backgroundPaint.equals(paint)
6059	paint != null
6060	this.backgroundImage != null
6061	this.backgroundImage.equals(image)
6062	image != null
6063	this.backgroundImageAlignment != alignment
6064	this.backgroundImageAlpha != alpha
6065	notify
6066	info != null
6067	entities != null
6068	this.backgroundPaint != null
6069	this.backgroundImage != null
6070	isBorderVisible()
6071	stroke != null
6071	paint != null
6072	this.title.isVisible()
6072	this.title != null
6073	e != null
6074	currentTitle.isVisible()
6075	e != null
6076	info != null
6077	hAlign == HorizontalAlignment.LEFT
6078	hAlign == HorizontalAlignment.CENTER
6079	hAlign == HorizontalAlignment.RIGHT
6080	vAlign == VerticalAlignment.TOP
6081	vAlign == VerticalAlignment.CENTER
6082	vAlign == VerticalAlignment.BOTTOM
6083	t == null
6084	area == null
6085	ww <= 0.0
6086	hh <= 0.0
6087	position == RectangleEdge.TOP
6088	position == RectangleEdge.BOTTOM
6089	position == RectangleEdge.RIGHT
6090	position == RectangleEdge.LEFT
6091	retValue instanceof EntityBlockResult
6092	info != null
6093	listener == null
6094	listener == null
6095	this.notify
6096	listeners[i] == ChartChangeListener.class
6097	listeners[i] == ChartProgressListener.class
6098	obj == this
6099	obj instanceof JFreeChart
6100	this.renderingHints.equals(that.renderingHints)
6101	this.borderVisible != that.borderVisible
6102	ObjectUtilities.equal(this.borderStroke, that.borderStroke)
6103	PaintUtilities.equal(this.borderPaint, that.borderPaint)
6104	this.padding.equals(that.padding)
6105	ObjectUtilities.equal(this.title, that.title)
6106	ObjectUtilities.equal(this.subtitles, that.subtitles)
6107	ObjectUtilities.equal(this.plot, that.plot)
6108	PaintUtilities.equal( this.backgroundPaint, that.backgroundPaint )
6109	ObjectUtilities.equal(this.backgroundImage, that.backgroundImage)
6110	this.backgroundImageAlignment != that.backgroundImageAlignment
6111	this.backgroundImageAlpha != that.backgroundImageAlpha
6112	this.notify != that.notify
6113	this.title != null
6114	this.title != null
6115	this.plot != null
6116	logo == null
6117	imageURL != null
5611	chart == null
5612	obj == this
5613	obj instanceof JFreeChartEntity
5614	getArea().equals(that.getArea())
5615	ObjectUtilities.equal(getToolTipText(), that.getToolTipText())
5616	ObjectUtilities.equal(getURLText(), that.getURLText())
5617	this.chart.equals(that.chart)
22	qName.equals(KEY_TAG)
23	qName.equals(KEY_TAG)
24	this.currentText != null
78	defaultGroup == null
79	result.contains(group)
80	result < 0
81	this.defaultGroup.equals(group)
82	key == null
83	group != null
84	key == null
85	currentGroup.equals(this.defaultGroup)
86	currentGroup.equals(group)
87	count == 1
88	group == null
89	this.groups.contains(group)
90	this.defaultGroup.equals(group)
91	group == null
92	group.equals(g)
93	obj == this
94	obj instanceof KeyToGroupMap
95	ObjectUtilities.equal(this.defaultGroup, that.defaultGroup)
96	this.keyToGroupMap.equals(that.keyToGroupMap)
97	object == null
98	Modifier.isPublic(m.getModifiers())
99	list != null
1815	this.object instanceof PublicCloneable
1816	obj == this
1817	obj instanceof KeyedObject
1818	ObjectUtilities.equal(this.key, that.key)
1819	ObjectUtilities.equal(this.object, that.object)
557	order == null
558	o2 == null
559	o1 == null
560	this.type == KeyedObjectComparatorType.BY_KEY
561	this.order.equals(SortOrder.ASCENDING)
562	this.order.equals(SortOrder.DESCENDING)
563	this.type == KeyedObjectComparatorType.BY_VALUE
564	n1 instanceof Comparable
565	n2 instanceof Comparable
566	n2 == null
567	n1 == null
568	this.order.equals(SortOrder.ASCENDING)
569	this.order.equals(SortOrder.DESCENDING)
112	this == obj
113	obj instanceof KeyedObjectComparatorType
114	this.name.equals(type.name)
1764	kobj != null
1765	item != null
1766	key == null
1767	ko.getKey().equals(key)
1768	index < 0
1769	keyIndex >= 0
1770	position < 0
1770	position > this.data.size()
1771	key == null
1772	pos >= 0
1773	position <= this.data.size()
1774	index < 0
1775	obj == this
1776	obj instanceof KeyedObjects
1777	count != that.getItemCount()
1778	k1.equals(k2)
1779	o1 == null
1780	o2 != null
1781	o1.equals(o2)
976	rowData != null
977	columnKey != null
978	index >= 0
979	key == null
980	key == null
981	rowKey == null
982	columnKey == null
983	row < 0
984	column < 0
985	index >= 0
986	rowKey == null
987	columnKey == null
988	rowIndex >= 0
989	columnIndex < 0
990	rowIndex < 0
991	columnIndex < 0
992	row.getObject(item) != null
993	allNull
994	colIndex >= 0
994	row.getObject(colIndex) != null
995	allNull
996	colIndex >= 0
997	index < 0
998	index < 0
999	i >= 0
1000	obj == this
1001	obj instanceof KeyedObjects2D
1002	getRowKeys().equals(that.getRowKeys())
1003	getColumnKeys().equals(that.getColumnKeys())
1004	rowCount != that.getRowCount()
1005	colCount != that.getColumnCount()
1006	v1 == null
1007	v2 != null
1008	v1.equals(v2)
1749	order == null
1750	o2 == null
1751	o1 == null
1752	this.type == KeyedValueComparatorType.BY_KEY
1753	this.order.equals(SortOrder.ASCENDING)
1754	this.order.equals(SortOrder.DESCENDING)
1755	this.type == KeyedValueComparatorType.BY_VALUE
1756	n2 == null
1757	n1 == null
1758	this.order.equals(SortOrder.ASCENDING)
1759	d1 > d2
1760	d1 < d2
1761	this.order.equals(SortOrder.DESCENDING)
1762	d1 > d2
1763	d1 < d2
973	this == o
974	o instanceof KeyedValueComparatorType
975	this.name.equals(type.name)
6143	this.colWidth[c] < d.width
6144	this.rowHeight[r] < d.height
6145	this.colWidth[c] < d.width
6146	this.rowHeight[r] < d.height
6147	this.colWidth[c] < d.width
6148	this.rowHeight[r] < d.height
6149	i < ncomponents
6150	c == 0
6151	c == 1
6943	font == null
6944	paint == null
6945	anchor == null
6946	params instanceof EntityBlockParams
6947	ebp.getGenerateEntities()
6948	sec != null
6948	ebp != null
6949	this.urlText != null
6949	this.toolTipText != null
6950	obj instanceof LabelBlock
6951	this.text.equals(that.text)
6952	this.font.equals(that.font)
6953	PaintUtilities.equal(this.paint, that.paint)
6954	ObjectUtilities.equal(this.toolTipText, that.toolTipText)
6955	ObjectUtilities.equal(this.urlText, that.urlText)
6956	this.contentAlignmentPoint.equals(that.contentAlignmentPoint)
6957	this.textAnchor.equals(that.textAnchor)
2028	this == obj
2029	obj instanceof Layer
2030	this.name.equals(layer.name)
2031	this.equals(Layer.FOREGROUND)
2032	this.equals(Layer.BACKGROUND)
8583	n != null
8584	dataset != null
8585	orientation == PlotOrientation.HORIZONTAL
8586	orientation == PlotOrientation.VERTICAL
8587	columns > 1
8588	(rows * columns) > 0
8589	orientation == PlotOrientation.HORIZONTAL
8590	orientation == PlotOrientation.VERTICAL
8591	dataValue == null
8592	uclip <= 0.0
8593	value >= uclip
8594	value <= lclip
8595	lclip <= 0.0
8596	value >= uclip
8597	value <= lclip
8598	value <= lclip
8599	value >= uclip
8600	Double.isNaN(seriesBarWidth)
8601	seriesCount > 1
8602	t != null
8602	itemPaint instanceof GradientPaint
8603	state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD
8603	isDrawBarOutline()
8604	stroke != null
8604	paint != null
8605	generator != null
8605	isItemLabelVisible(row, column, selected)
8606	entities != null
8607	dataValue == null
8608	uclip <= 0.0
8609	value >= uclip
8610	value <= lclip
8611	lclip <= 0.0
8612	value >= uclip
8613	value <= lclip
8614	value <= lclip
8615	value >= uclip
8616	Double.isNaN(seriesBarWidth)
8617	seriesCount > 1
8618	itemPaint instanceof GradientPaint
8618	t != null
8619	isDrawBarOutline()
8619	state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD
8620	stroke != null
8620	paint != null
8621	isItemLabelVisible(row, column, selected)
8621	generator != null
8622	entities != null
6629	shape == null
6630	fillPaint == null
6631	transformer == null
6632	anchor == null
6633	location == null
6634	w == LengthConstraintType.NONE
6635	h == LengthConstraintType.NONE
6636	h == LengthConstraintType.RANGE
6637	h == LengthConstraintType.FIXED
6638	w == LengthConstraintType.RANGE
6639	h == LengthConstraintType.NONE
6640	h == LengthConstraintType.RANGE
6641	h == LengthConstraintType.FIXED
6642	w == LengthConstraintType.FIXED
6643	h == LengthConstraintType.NONE
6644	h == LengthConstraintType.RANGE
6645	h == LengthConstraintType.FIXED
6646	this.line != null
6647	this.shape != null
6648	this.lineVisible
6649	this.shapeVisible
6650	this.shapeFilled
6651	p instanceof GradientPaint
6652	this.shapeOutlineVisible
6653	obj instanceof LegendGraphic
6654	this.shapeVisible != that.shapeVisible
6655	ShapeUtilities.equal(this.shape, that.shape)
6656	this.shapeFilled != that.shapeFilled
6657	PaintUtilities.equal(this.fillPaint, that.fillPaint)
6658	ObjectUtilities.equal(this.fillPaintTransformer, that.fillPaintTransformer)
6659	this.shapeOutlineVisible != that.shapeOutlineVisible
6660	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
6661	ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)
6662	this.shapeAnchor != that.shapeAnchor
6663	this.shapeLocation != that.shapeLocation
6664	this.lineVisible != that.lineVisible
6665	ShapeUtilities.equal(this.line, that.line)
6666	PaintUtilities.equal(this.linePaint, that.linePaint)
6667	ObjectUtilities.equal(this.lineStroke, that.lineStroke)
7048	label == null
7049	fillPaint == null
7050	lineStroke == null
7051	outlinePaint == null
7052	outlineStroke == null
7053	label == null
7054	fillPaint == null
7055	lineStroke == null
7056	line == null
7057	linePaint == null
7058	outlinePaint == null
7059	outlineStroke == null
7060	count <= 0
7061	shape == null
7062	paint == null
7063	paint == null
7064	paint == null
7065	line == null
7066	transformer == null
7067	obj == this
7068	obj instanceof LegendItem
7069	this.datasetIndex != that.datasetIndex
7070	this.series != that.series
7071	this.label.equals(that.label)
7072	AttributedStringUtilities.equal(this.attributedLabel, that.attributedLabel)
7073	ObjectUtilities.equal(this.description, that.description)
7074	this.shapeVisible != that.shapeVisible
7075	ShapeUtilities.equal(this.shape, that.shape)
7076	this.shapeFilled != that.shapeFilled
7077	PaintUtilities.equal(this.fillPaint, that.fillPaint)
7078	ObjectUtilities.equal(this.fillPaintTransformer, that.fillPaintTransformer)
7079	this.shapeOutlineVisible != that.shapeOutlineVisible
7080	this.outlineStroke.equals(that.outlineStroke)
7081	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
7082	this.lineVisible
7082	!this.lineVisible == that.lineVisible
7083	ShapeUtilities.equal(this.line, that.line)
7084	this.lineStroke.equals(that.lineStroke)
7085	PaintUtilities.equal(this.linePaint, that.linePaint)
7086	ObjectUtilities.equal(this.labelFont, that.labelFont)
7087	PaintUtilities.equal(this.labelPaint, that.labelPaint)
7088	this.seriesKey instanceof PublicCloneable
7089	this.fillPaintTransformer instanceof PublicCloneable
6668	params instanceof EntityBlockParams
6669	ebp.getGenerateEntities()
6118	obj == this
6119	obj instanceof LegendItemCollection
6120	this.items.equals(that.items)
5593	obj == this
5594	obj instanceof LegendItemEntity
5595	ObjectUtilities.equal(this.seriesKey, that.seriesKey)
5596	ObjectUtilities.equal(this.dataset, that.dataset)
7008	this == obj
7009	obj instanceof LegendRenderingOrder
7010	this.name.equals(order.toString())
7011	this.equals(LegendRenderingOrder.STANDARD)
7012	this.equals(LegendRenderingOrder.REVERSE)
6714	sources == null
6715	edge == null
6716	anchor == null
6717	padding == null
6718	font == null
6719	paint == null
6720	padding == null
6721	RectangleEdge.isTopOrBottom(p)
6722	legendItems != null
6723	textFont == null
6724	textPaint == null
6725	this.items.isEmpty()
6726	container == null
6727	params instanceof EntityBlockParams
6727	((EntityBlockParams) params).getGenerateEntities()
6728	this.backgroundPaint != null
6729	container == null
6730	val instanceof BlockResult
6731	sec != null
6731	ec != null
6732	obj == this
6733	obj instanceof LegendTitle
6734	super.equals(obj)
6735	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
6736	this.legendItemGraphicEdge != that.legendItemGraphicEdge
6737	this.legendItemGraphicAnchor != that.legendItemGraphicAnchor
6738	this.legendItemGraphicLocation != that.legendItemGraphicLocation
6739	this.itemFont.equals(that.itemFont)
6740	this.itemPaint.equals(that.itemPaint)
6741	this.hLayout.equals(that.hLayout)
6742	this.vLayout.equals(that.vLayout)
2151	obj == this
2152	obj instanceof LengthAdjustmentType
2153	this.name.equals(that.name)
2154	this.equals(LengthAdjustmentType.NO_CHANGE)
2155	this.equals(LengthAdjustmentType.EXPAND)
2156	this.equals(LengthAdjustmentType.CONTRACT)
6826	this == obj
6827	obj instanceof LengthConstraintType
6828	this.name.equals(that.toString())
6829	this.equals(LengthConstraintType.NONE)
6830	this.equals(LengthConstraintType.RANGE)
6831	this.equals(LengthConstraintType.FIXED)
8908	dataset != null
8909	orientation == PlotOrientation.HORIZONTAL
8910	orientation == PlotOrientation.VERTICAL
8911	columns > 1
8912	rows > 1
8913	(rows * columns) > 0
8914	orientation == PlotOrientation.HORIZONTAL
8915	seriesCount < 0
8916	seriesCount > 1
8917	visibleRow < 0
8918	dataValue == null
8919	orientation == PlotOrientation.HORIZONTAL
8920	isItemLabelVisible(row, column, selected)
8920	generator != null
8921	entities != null
8922	categories > 1
8923	obj == this
8924	obj instanceof LevelRenderer
8925	this.itemMargin != that.itemMargin
8926	this.maxItemWidth != that.maxItemWidth
6126	this == obj
6127	getClass() != obj.getClass()
6127	obj == null
6128	this.name != null ? !this.name.equals(library.name) : library.name != null
6128	this.name.equals(library.name)
6125	singleton == null
8263	flag != null
8264	flag != null
8265	flag != null
8266	margin < 0.0
8266	margin >= 1.0
8267	cp == null
8268	isSeriesVisibleInLegend(series)
8268	isSeriesVisible(series)
8269	getLegendItemToolTipGenerator() != null
8270	getLegendItemURLGenerator() != null
8271	labelPaint != null
8272	getItemVisible(row, column)
8273	getItemLineVisible(row, column)
8273	getItemShapeVisible(row, column)
8274	v == null
8275	visibleRow < 0
8276	this.useSeriesOffset
8277	getItemLineVisible(row, column)
8277	pass == 0
8278	column != 0
8279	previousValue != null
8280	this.useSeriesOffset
8281	orientation == PlotOrientation.HORIZONTAL
8282	orientation == PlotOrientation.VERTICAL
8283	pass == 1
8284	orientation == PlotOrientation.HORIZONTAL
8285	orientation == PlotOrientation.VERTICAL
8286	getItemShapeVisible(row, column)
8287	getItemShapeFilled(row, column)
8288	this.useFillPaint
8289	this.drawOutlines
8290	this.useOutlinePaint
8291	isItemLabelVisible(row, column, selected)
8292	orientation == PlotOrientation.HORIZONTAL
8293	orientation == PlotOrientation.VERTICAL
8294	entities != null
8295	obj == this
8296	obj instanceof LineAndShapeRenderer
8297	this.baseLinesVisible != that.baseLinesVisible
8298	ObjectUtilities.equal(this.seriesLinesVisible, that.seriesLinesVisible)
8299	this.baseShapesVisible != that.baseShapesVisible
8300	ObjectUtilities.equal(this.seriesShapesVisible, that.seriesShapesVisible)
8301	ObjectUtilities.equal(this.seriesShapesFilled, that.seriesShapesFilled)
8302	this.baseShapesFilled != that.baseShapesFilled
8303	this.useOutlinePaint != that.useOutlinePaint
8304	this.useSeriesOffset != that.useSeriesOffset
8305	this.itemMargin != that.itemMargin
6743	paint == null
6744	stroke == null
6745	insets == null
6746	w <= 0.0
6746	h <= 0.0
6747	t > 0.0
6748	b > 0.0
6749	l > 0.0
6750	r > 0.0
6751	obj == this
6752	obj instanceof LineBorder
6753	PaintUtilities.equal(this.paint, that.paint)
6754	ObjectUtilities.equal(this.stroke, that.stroke)
6755	this.insets.equals(that.insets)
104	obj instanceof LineFunction2D
105	this.a != that.a
106	this.b != that.b
5460	rotate != null
5460	angle != 0
5461	obj == this
5462	obj instanceof LineNeedle
8158	paint == null
8159	backgroundPaint != null
8160	backgroundImage != null
8161	outlinePaint != null
8161	outlineStroke != null
8162	orientation == PlotOrientation.HORIZONTAL
8163	orientation == PlotOrientation.VERTICAL
8164	range.contains(value)
8165	orientation == PlotOrientation.HORIZONTAL
8166	orientation == PlotOrientation.VERTICAL
8167	marker instanceof ValueMarker
8168	range.contains(value)
8169	orientation == PlotOrientation.HORIZONTAL
8170	orientation == PlotOrientation.VERTICAL
8171	getItemVisible(row, column)
8172	v == null
8173	orientation == PlotOrientation.HORIZONTAL
8174	orientation == PlotOrientation.VERTICAL
8175	getItemLineVisible(row, column)
8176	column != 0
8177	previousValue != null
8178	orientation == PlotOrientation.HORIZONTAL
8179	orientation == PlotOrientation.VERTICAL
8180	isItemLabelVisible(row, column, selected)
8181	entities != null
8182	obj == this
8183	obj instanceof LineRenderer3D
8184	this.xOffset != that.xOffset
8185	this.yOffset != that.yOffset
8186	PaintUtilities.equal(this.wallPaint, that.wallPaint)
2057	(f1 & f2) != 0
2058	f1 != 0
2059	(f1 & Rectangle2D.OUT_LEFT) == Rectangle2D.OUT_LEFT
2059	dx != 0.0
2060	dx != 0.0
2060	(f1 & Rectangle2D.OUT_RIGHT) == Rectangle2D.OUT_RIGHT
2061	dy != 0.0
2061	(f1 & Rectangle2D.OUT_BOTTOM) == Rectangle2D.OUT_BOTTOM
2062	dy != 0.0
2062	(f1 & Rectangle2D.OUT_TOP) == Rectangle2D.OUT_TOP
2063	f2 != 0
2064	(f2 & Rectangle2D.OUT_LEFT) == Rectangle2D.OUT_LEFT
2064	dx != 0.0
2065	(f2 & Rectangle2D.OUT_RIGHT) == Rectangle2D.OUT_RIGHT
2065	dx != 0.0
2066	(f2 & Rectangle2D.OUT_BOTTOM) == Rectangle2D.OUT_BOTTOM
2066	dy != 0.0
2067	dy != 0.0
2067	(f2 & Rectangle2D.OUT_TOP) == Rectangle2D.OUT_TOP
4386	base <= 1.0
4387	value <= 0.0
4388	unit == null
4389	turnOffAutoSelect
4390	notify
4391	RectangleEdge.isTopOrBottom(edge)
4392	RectangleEdge.isLeftOrRight(edge)
4393	isInverted()
4394	RectangleEdge.isTopOrBottom(edge)
4395	RectangleEdge.isLeftOrRight(edge)
4396	isInverted()
4397	isAutoRange()
4398	plot == null
4399	plot instanceof ValueAxisPlot
4400	r == null
4401	fixedAutoRange > 0.0
4402	range < minRange
4403	isVisible()
4404	RectangleEdge.isTopOrBottom(edge)
4405	RectangleEdge.isLeftOrRight(edge)
4406	edge == RectangleEdge.TOP
4407	isAutoTickUnitSelection()
4408	range.contains(v)
4409	range.contains(minorV)
4410	edge == RectangleEdge.RIGHT
4411	isAutoTickUnitSelection()
4412	range.contains(v)
4413	range.contains(minorV)
4414	RectangleEdge.isTopOrBottom(edge)
4415	RectangleEdge.isLeftOrRight(edge)
4416	tickLabelWidth > unit2Width
4417	tickLabelHeight > unit2Height
4418	isVerticalTickLabels()
4419	formatter != null
4420	isInverted()
4421	this.numberFormatOverride != null
4422	obj == this
4423	obj instanceof LogAxis
4424	this.base != that.base
4425	this.smallestValue != that.smallestValue
4426	this.numberFormatOverride != null
1832	baseLabel == null
1833	powerLabel == null
1834	format == null
1835	this.showBase
1836	this.showBase
1837	obj == this
1838	obj instanceof LogFormat
1839	this.base != that.base
1840	this.baseLabel.equals(that.baseLabel)
1841	this.baseLog != that.baseLog
1842	this.showBase != that.showBase
1843	this.formatter.equals(that.formatter)
5202	this.numberFormatterObj instanceof DecimalFormat
5203	negFlag
5204	val < 10.0
5205	negFlag
5206	val < 1.0
5207	this.allowNegativesFlag
5208	lower > 10.0
5209	lower < -10.0
5210	lower > 0.0
5211	this.allowNegativesFlag
5212	upper > 10.0
5213	upper < -10.0
5214	upper > 0.0
5215	plot == null
5216	plot instanceof ValueAxisPlot
5217	r == null
5218	this.allowNegativesFlag
5218	lower <= 0.0
5218	this.strictValuesFlag
5219	(lowerMargin = getLowerMargin()) > 0.0
5219	lower > 0.0
5220	(logAbs = Math.abs(logLower)) < 1.0
5221	this.autoRangeNextLogFlag
5222	this.allowNegativesFlag
5222	lower < SMALL_LOG_VALUE
5222	lower >= 0.0
5223	(upperMargin = getUpperMargin()) > 0.0
5223	upper > 0.0
5224	(logAbs = Math.abs(logUpper)) < 1.0
5225	lower > 0.0
5225	this.allowNegativesFlag
5225	upper < 1.0
5225	upper > 0.0
5226	upper - lower < minRange
5227	upper - lower < minRange
5228	RectangleEdge.isTopOrBottom(edge)
5229	RectangleEdge.isLeftOrRight(edge)
5230	isInverted()
5231	RectangleEdge.isTopOrBottom(edge)
5232	RectangleEdge.isLeftOrRight(edge)
5233	isInverted()
5234	isInverted()
5235	lowerBoundVal < SMALL_LOG_VALUE
5235	this.smallLogFlag
5236	iBegCount == iEndCount
5236	Math.pow(10, iBegCount) > lowerBoundVal
5236	iBegCount > 0
5237	this.smallLogFlag
5238	currentTickValue < 1.0
5238	this.expTickLabelsFlag
5238	i < 0
5238	currentTickValue > 0.0
5239	currentTickValue >= upperBoundVal
5239	i > -4
5239	j == 0
5239	j < 2
5240	zeroTickFlag
5241	zeroTickFlag
5242	upperBoundVal >= 0.0
5242	lowerBoundVal <= 0.0
5242	Math.abs(currentTickValue - 1.0) < 0.0001
5243	currentTickValue > upperBoundVal
5244	currentTickValue >= lowerBoundVal - SMALL_LOG_VALUE
5245	isVerticalTickLabels()
5246	edge == RectangleEdge.TOP
5247	edge == RectangleEdge.TOP
5248	this.smallLogFlag
5248	lowerBoundVal < SMALL_LOG_VALUE
5249	iBegCount == iEndCount
5249	Math.pow(10, iBegCount) > lowerBoundVal
5249	iBegCount > 0
5250	i == iEndCount
5251	this.smallLogFlag
5252	j == 0
5253	this.log10TickLabelsFlag
5254	this.expTickLabelsFlag
5255	i >= 0
5256	format != null
5257	zeroTickFlag
5258	j == 0
5259	zeroTickFlag
5260	i < iEndCount
5260	i > iBegCount
5260	Math.abs(tickVal - 1.0) < 0.0001
5261	this.log10TickLabelsFlag
5262	this.expTickLabelsFlag
5263	format != null
5264	tickVal > upperBoundVal
5265	tickVal >= lowerBoundVal - SMALL_LOG_VALUE
5266	isVerticalTickLabels()
5267	edge == RectangleEdge.LEFT
5268	edge == RectangleEdge.LEFT
5269	forceFmtFlag
5269	this.expTickLabelsFlag
5428	y < minY
5429	angle != 0
5429	rotate != null
5430	getHighlightPaint() != null
5431	getFillPaint() != null
5432	getOutlinePaint() != null
5433	obj == this
5434	obj instanceof LongNeedle
8951	lowerBound >= upperBound
8952	defaultPaint == null
8953	index >= 0
8954	value < this.lowerBound
8955	value > this.upperBound
8956	count == 0
8957	value < item.value
8958	value >= item.value
8959	high > low
8960	value < item.value
8961	obj == this
8962	obj instanceof LookupPaintScale
8963	this.lowerBound != that.lowerBound
8964	this.upperBound != that.upperBound
8965	PaintUtilities.equal(this.defaultPaint, that.defaultPaint)
8966	this.lookupTable.equals(that.lookupTable)
3955	paint == null
3956	stroke == null
3957	alpha < 0.0f
3957	alpha > 1.0f
3958	paint == null
3959	stroke == null
3960	alpha < 0.0f
3960	alpha > 1.0f
3961	font == null
3962	paint == null
3963	anchor == null
3964	offset == null
3965	adj == null
3966	anchor == null
3967	listeners[i] == MarkerChangeListener.class
3968	obj == this
3969	obj instanceof Marker
3970	PaintUtilities.equal(this.paint, that.paint)
3971	ObjectUtilities.equal(this.stroke, that.stroke)
3972	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
3973	ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)
3974	this.alpha != that.alpha
3975	ObjectUtilities.equal(this.label, that.label)
3976	ObjectUtilities.equal(this.labelFont, that.labelFont)
3977	PaintUtilities.equal(this.labelPaint, that.labelPaint)
3978	this.labelAnchor != that.labelAnchor
3979	this.labelTextAnchor != that.labelTextAnchor
3980	ObjectUtilities.equal(this.labelOffset, that.labelOffset)
3981	this.labelOffsetType.equals(that.labelOffsetType)
4852	this.markers.size() > 0
4853	r.getWidth() < bounds.getWidth()
4854	obj == this
4855	obj instanceof MarkerAxisBand
4856	this.topOuterGap != that.topOuterGap
4857	this.topInnerGap != that.topInnerGap
4858	this.bottomInnerGap != that.bottomInnerGap
4859	this.bottomOuterGap != that.bottomOuterGap
4860	ObjectUtilities.equal(this.font, that.font)
4861	ObjectUtilities.equal(this.markers, that.markers)
528	obj == this
529	obj instanceof MatrixSeries
530	getRowCount() == that.getRowCount()
531	getColumnsCount() == that.getColumnsCount()
532	get(r, c) != that.get(r, c)
449	series != null
450	seriesIndex < 0
450	seriesIndex > getSeriesCount()
451	series == null
452	obj == null
453	obj == this
454	obj instanceof MatrixSeriesCollection
455	series == null
456	this.seriesList.contains(series)
457	seriesIndex > getSeriesCount()
457	seriesIndex < 0
707	this.mean != null
708	this.standardDeviation != null
709	obj == this
710	obj instanceof MeanAndStandardDeviation
711	ObjectUtilities.equal(this.mean, that.mean)
712	ObjectUtilities.equal( this.standardDeviation, that.standardDeviation)
3117	label == null
3118	range == null
3119	obj == this
3120	obj instanceof MeterInterval
3121	this.label.equals(that.label)
3122	this.range.equals(that.range)
3123	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
3124	ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)
3125	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
5440	p != null
5441	s != null
5442	p != null
5443	p != null
5444	this.fillPaint != null
5445	this.outlinePaint != null
5446	obj == this
5447	obj instanceof MeterNeedle
5448	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
5449	ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)
5450	PaintUtilities.equal(this.fillPaint, that.fillPaint)
5451	PaintUtilities.equal(this.highlightPaint, that.highlightPaint)
5452	this.size != that.size
5453	this.rotateX != that.rotateX
5454	this.rotateY != that.rotateY
2938	shape == null
2939	angle > 360
2939	angle < 1
2940	range == null
2941	range.getLength() > 0.0
2942	size <= 0
2943	paint == null
2944	paint == null
2945	this.tickLabelsVisible != visible
2946	font == null
2947	this.tickLabelFont.equals(font)
2948	paint == null
2949	this.tickLabelPaint.equals(paint)
2950	format == null
2951	font == null
2952	paint == null
2953	existing != null
2954	dataset != null
2955	interval == null
2956	color == null
2957	info != null
2958	this.drawBorder
2959	data != null
2960	this.dialBackgroundPaint != null
2961	n != null
2962	this.range.contains(value)
2963	valueAngle < 225
2963	valueAngle < 45
2963	valueAngle > -45
2963	valueAngle > 135
2964	this.drawBorder
2965	backgroundPaint != null
2966	outlinePaint != null
2967	outlineStroke != null
2968	paint != null
2968	stroke != null
2969	paint == null
2970	this.shape == DialShape.PIE
2971	this.shape == DialShape.CHORD
2972	dial
2972	this.meterAngle > 180
2973	this.shape == DialShape.CIRCLE
2974	dial
2975	this.tickLabelsVisible
2975	label
2976	valueAngle == 90
2976	valueAngle == 270
2977	valueAngle < 90
2977	valueAngle > 270
2978	valueAngle < 225
2978	valueAngle > 315
2978	valueAngle < 45
2978	valueAngle > 135
2979	this.dataset != null
2980	n != null
2981	obj == this
2982	obj instanceof MeterPlot
2983	super.equals(obj)
2984	ObjectUtilities.equal(this.units, that.units)
2985	ObjectUtilities.equal(this.range, that.range)
2986	ObjectUtilities.equal(this.intervals, that.intervals)
2987	PaintUtilities.equal(this.dialOutlinePaint, that.dialOutlinePaint)
2988	this.shape != that.shape
2989	PaintUtilities.equal(this.dialBackgroundPaint, that.dialBackgroundPaint)
2990	PaintUtilities.equal(this.needlePaint, that.needlePaint)
2991	ObjectUtilities.equal(this.valueFont, that.valueFont)
2992	PaintUtilities.equal(this.valuePaint, that.valuePaint)
2993	PaintUtilities.equal(this.tickPaint, that.tickPaint)
2994	this.tickSize != that.tickSize
2995	this.tickLabelsVisible != that.tickLabelsVisible
2996	ObjectUtilities.equal(this.tickLabelFont, that.tickLabelFont)
2997	PaintUtilities.equal(this.tickLabelPaint, that.tickLabelPaint)
2998	ObjectUtilities.equal(this.tickLabelFormat, that.tickLabelFormat)
2999	this.drawBorder != that.drawBorder
3000	this.meterAngle != that.meterAngle
3001	this.dataset != null
3002	clone.dataset != null
5435	lenX < 2
5436	rotate != null
5436	angle != 0
5437	object == null
5438	object == this
5439	object instanceof MiddlePinNeedle
5439	super.equals(object)
1376	this.millisecond != FIRST_MILLISECOND_IN_SECOND
1377	previous != null
1378	this.millisecond != LAST_MILLISECOND_IN_SECOND
1379	next != null
1380	obj == this
1381	obj instanceof Millisecond
1382	this.millisecond != that.millisecond
1383	this.second != that.second
1384	this.minute != that.minute
1385	this.hour != that.hour
1386	this.day.equals(that.day)
1387	obj instanceof Millisecond
1388	difference > 0
1389	difference < 0
1390	obj instanceof RegularTimePeriod
8389	this.plotLines != draw
8390	paint == null
8391	stroke == null
8392	icon == null
8393	icon == null
8394	icon == null
8395	value != null
8396	orient == PlotOrientation.VERTICAL
8397	this.lastCategory == column
8398	this.min > value.doubleValue()
8399	this.max < value.doubleValue()
8400	dataset.getRowCount() - 1 == row
8401	orient == PlotOrientation.VERTICAL
8402	this.plotLines
8403	column != 0
8404	previousValue != null
8405	orient == PlotOrientation.VERTICAL
8406	shape != null
8406	entities != null
8407	obj == this
8408	obj instanceof MinMaxCategoryRenderer
8409	this.plotLines != that.plotLines
8410	PaintUtilities.equal(this.groupPaint, that.groupPaint)
8411	this.groupStroke.equals(that.groupStroke)
1079	hour == null
1080	time == null
1081	zone == null
1082	this.minute != FIRST_MINUTE_IN_HOUR
1083	h != null
1084	this.minute != LAST_MINUTE_IN_HOUR
1085	nextHour != null
1086	obj == this
1087	obj instanceof Minute
1088	this.minute != that.minute
1089	this.hour != that.hour
1090	o1 instanceof Minute
1091	result == 0
1092	o1 instanceof RegularTimePeriod
1093	day != null
1094	hour >= 0
1094	hour <= 23
1095	minute <= 59
1095	minute >= 0
5003	this.displayStart < this.displayEnd
5004	this.displayStart < this.displayEnd
5005	v > cutoff
5006	RectangleEdge.isTopOrBottom(edge)
5007	RectangleEdge.isLeftOrRight(edge)
5008	isInverted()
5009	RectangleEdge.isTopOrBottom(edge)
5010	RectangleEdge.isLeftOrRight(edge)
5011	isInverted()
5012	RectangleEdge.isTopOrBottom(edge)
5013	RectangleEdge.isLeftOrRight(edge)
5014	isInverted()
5015	value < lower
5016	this.displayStart < this.displayEnd
5017	this.displayStart < this.displayEnd
5018	percent > 0.0
5019	this.displayEnd > this.displayStart
5020	RectangleEdge.isLeftOrRight(edge)
5021	obj == this
5022	obj instanceof ModuloAxis
5023	this.displayStart != that.displayStart
5024	this.displayEnd != that.displayEnd
5025	this.fixedRange.equals(that.fixedRange)
1456	month < 1
1456	month > 12
1457	month < 1
1457	month > 12
1458	this.month != MonthConstants.JANUARY
1459	this.year > 1900
1460	this.month != MonthConstants.DECEMBER
1461	this.year < 9999
1462	obj == this
1463	obj instanceof Month
1464	this.month != that.month
1465	this.year != that.year
1466	o1 instanceof Month
1467	result == 0
1468	o1 instanceof RegularTimePeriod
1469	s == null
1470	i == -1
1471	y1 == null
1472	y2 == null
1473	yearIsFirst
1474	month == -1
1475	year == null
1476	result == -1
1477	result == -1
1478	result == -1
5322	locale == null
5323	chars > 0
5324	this.showYear[month]
5325	obj == this
5326	obj instanceof MonthDateFormat
5327	super.equals(obj)
5328	Arrays.equals(this.months, that.months)
5329	Arrays.equals(this.showYear, that.showYear)
5330	this.yearFormatter.equals(that.yearFormatter)
5407	chart == null
5408	plot instanceof Zoomable
5409	plot instanceof PiePlot
5410	pinfo.getDataArea().contains(p)
5411	clicks < 0
5412	chartPanel.isDomainZoomable()
5413	chartPanel.isRangeZoomable()
1196	source == null
1197	periodCount < 1
1198	source == null
1199	periodCount < 1
1200	source.getItemCount() > 0
1201	serial >= firstSerial
1202	(i - offset) >= 0
1203	currentIndex > serialLimit
1204	v != null
1205	n > 0
1206	source == null
1207	pointCount < 2
1208	i > pointCount - 1
1209	i == pointCount - 1
1210	source == null
1211	source == null
1212	period < Double.MIN_VALUE
1213	skip < 0.0
1214	source.getItemCount(series) > 0
1215	x >= first
1216	(i - offset) >= 0
1217	xx > limit
1218	yy != null
1219	n > 0
3126	this.dataset != null
3127	dataset != null
3128	pieChart == null
3129	pieChart.getPlot() instanceof PiePlot
3130	order == null
3131	key == null
3132	paint == null
3133	shape == null
3134	DatasetUtilities.isEmptyOrNull(this.dataset)
3135	this.dataExtractOrder == TableOrder.BY_ROW
3136	displayCols > displayRows
3136	area.getWidth() < area.getHeight()
3137	this.dataExtractOrder == TableOrder.BY_ROW
3138	this.limit > 0.0
3139	key.equals(this.aggregatedItemsKey)
3140	info != null
3141	info != null
3142	column == displayCols
3143	row == displayRows - 1
3143	diff != 0
3144	this.dataExtractOrder == TableOrder.BY_ROW
3145	p == null
3146	p == null
3147	p == null
3148	p == null
3149	this.dataset == null
3150	this.dataExtractOrder == TableOrder.BY_ROW
3151	this.dataExtractOrder == TableOrder.BY_COLUMN
3152	keys == null
3153	this.limit > 0.0
3154	obj == this
3155	obj instanceof MultiplePiePlot
3156	this.dataExtractOrder != that.dataExtractOrder
3157	this.limit != that.limit
3158	this.aggregatedItemsKey.equals(that.aggregatedItemsKey)
3159	PaintUtilities.equal(this.aggregatedItemsPaint, that.aggregatedItemsPaint)
3160	ObjectUtilities.equal(this.pieChart, that.pieChart)
3161	ShapeUtilities.equal(this.legendItemShape, that.legendItemShape)
3162	super.equals(obj)
2335	format == null
2336	labelList == null
2337	dataset == null
2338	extraLabels != null
2339	entry instanceof PublicCloneable
2340	obj == this
2341	obj instanceof MultipleXYSeriesLabelGenerator
2342	this.formatPattern.equals(that.formatPattern)
2343	this.additionalFormatPattern.equals( that.additionalFormatPattern)
2344	this.seriesLabelLists.equals(that.seriesLabelLists)
100	std <= 0
101	obj instanceof NormalDistributionFunction2D
102	this.mean != that.mean
103	this.std != that.std
4603	rangeType == null
4604	this.autoRangeIncludesZero != flag
4605	isAutoRange()
4606	this.autoRangeStickyZero != flag
4607	isAutoRange()
4608	unit == null
4609	turnOffAutoSelect
4610	notify
4611	isAutoRange()
4612	plot == null
4613	plot instanceof ValueAxisPlot
4614	r == null
4615	this.rangeType == RangeType.POSITIVE
4616	this.rangeType == RangeType.NEGATIVE
4617	getAutoRangeIncludesZero()
4618	fixedAutoRange > 0.0
4619	range < minRange
4620	lower == upper
4621	this.rangeType == RangeType.POSITIVE
4622	lower < 0.0
4623	this.rangeType == RangeType.NEGATIVE
4624	upper > 0.0
4625	getAutoRangeStickyZero()
4626	upper <= 0.0
4627	lower >= 0.0
4628	RectangleEdge.isTopOrBottom(edge)
4629	RectangleEdge.isLeftOrRight(edge)
4630	isInverted()
4631	RectangleEdge.isTopOrBottom(edge)
4632	RectangleEdge.isLeftOrRight(edge)
4633	isInverted()
4634	isVisible()
4635	isVerticalTickLabels()
4636	formatter != null
4637	RectangleEdge.isTopOrBottom(edge)
4638	RectangleEdge.isLeftOrRight(edge)
4639	tickLabelWidth > unit2Width
4640	tickLabelHeight > unit2Height
4641	RectangleEdge.isTopOrBottom(edge)
4642	RectangleEdge.isLeftOrRight(edge)
4643	isAutoTickUnitSelection()
4644	count <= ValueAxis.MAXIMUM_TICK_COUNT
4645	minorTickSpaces <= 0
4646	getRange().contains(minorTickValue)
4647	formatter != null
4648	isVerticalTickLabels()
4649	edge == RectangleEdge.TOP
4650	edge == RectangleEdge.TOP
4651	getRange().contains(minorTickValue)
4652	isAutoTickUnitSelection()
4653	count <= ValueAxis.MAXIMUM_TICK_COUNT
4654	minorTickSpaces <= 0
4655	getRange().contains(minorTickValue)
4656	formatter != null
4657	isVerticalTickLabels()
4658	edge == RectangleEdge.LEFT
4659	edge == RectangleEdge.LEFT
4660	getRange().contains(minorTickValue)
4661	this.numberFormatOverride != null
4662	obj == this
4663	obj instanceof NumberAxis
4664	this.autoRangeIncludesZero != that.autoRangeIncludesZero
4665	this.autoRangeStickyZero != that.autoRangeStickyZero
4666	ObjectUtilities.equal(this.tickUnit, that.tickUnit)
4667	ObjectUtilities.equal(this.numberFormatOverride, that.numberFormatOverride)
4668	this.rangeType.equals(that.rangeType)
4669	getLabel() != null
5185	isVisible()
5186	plot instanceof CategoryPlot
5187	r instanceof Effect3D
5188	edge == RectangleEdge.LEFT
5188	edge == RectangleEdge.BOTTOM
5189	edge == RectangleEdge.RIGHT
5189	edge == RectangleEdge.TOP
2021	value != null
2022	isSelected
5331	formatter == null
5332	formatter == null
5333	obj == this
5334	obj instanceof NumberTickUnit
5335	super.equals(obj)
5336	this.formatter.equals(that.formatter)
1273	obj == this
1274	obj instanceof OHLC
1275	this.open != that.open
1276	this.close != that.close
1277	this.high != that.high
1278	this.low != that.low
325	date == null
326	obj == this
327	obj instanceof OHLCDataItem
328	this.date.equals(that.date)
329	this.high.equals(that.high)
330	this.low.equals(that.low)
331	this.open.equals(that.open)
332	this.close.equals(that.close)
333	object instanceof OHLCDataItem
1267	ohlc != null
1268	ohlc != null
1269	ohlc != null
1270	ohlc != null
1271	getItemCount() > 0
1272	period.getClass().equals(item0.getPeriod().getClass())
1254	anchor == null
1255	series == null
1256	series >= getSeriesCount()
1256	series < 0
1257	this.xPosition == TimePeriodAnchor.START
1258	this.xPosition == TimePeriodAnchor.MIDDLE
1259	this.xPosition == TimePeriodAnchor.END
1260	series != null
1261	series == null
1262	removed
1263	this.data.size() == 0
1264	obj == this
1265	obj instanceof OHLCSeriesCollection
1266	this.xPosition.equals(that.xPosition)
1898	o1 == o2
1899	o1 != null
1900	object != null
1901	object == null
1902	object instanceof PublicCloneable
1903	Modifier.isPublic(method.getModifiers())
1904	collection == null
1905	item != null
1906	classLoader != null
1907	"ThreadContext".equals(classLoaderSource)
1908	threadLoader != null
1909	applicationCL == null
1910	cl == null
1911	cl == null
1912	name.startsWith("/")
1913	index == -1
1914	url == null
1915	url == null
1916	type.isAssignableFrom(c)
1917	loader != null
1918	version == null
1919	version == null
7109	p1.equals(p2)
7110	p1.getY() < p2.getY()
7110	p1.getX() < p2.getX()
7111	obj == this
7112	obj instanceof Outlier
7113	this.point.equals(that.point)
7114	this.radius != that.radius
9182	other == null
7106	this.outlierLists.isEmpty()
7107	list.isOverlapped(outlier)
7108	updated
1973	obj == null
1974	obj == this
1975	obj instanceof PaintList
1976	PaintUtilities.equal(getPaint(i), that.getPaint(i))
1977	size > 0
1978	size > 1
1979	size > 2
1980	paint != null
1981	index != -1
1967	key == null
1968	key == null
1969	obj == this
1970	obj instanceof PaintMap
1971	this.store.size() != that.store.size()
1972	PaintUtilities.equal(p1, p2)
6504	axis == null
6505	scale == null
6506	axis == null
6507	location == null
6508	paint == null
6509	stroke == null
6510	count <= 0
6511	this.axis == event.getAxis()
6512	w == LengthConstraintType.NONE
6513	h == LengthConstraintType.NONE
6514	h == LengthConstraintType.RANGE
6515	h == LengthConstraintType.FIXED
6516	w == LengthConstraintType.RANGE
6517	h == LengthConstraintType.NONE
6518	h == LengthConstraintType.RANGE
6519	h == LengthConstraintType.FIXED
6520	w == LengthConstraintType.FIXED
6521	h == LengthConstraintType.NONE
6522	h == LengthConstraintType.RANGE
6523	h == LengthConstraintType.FIXED
6524	position == RectangleEdge.TOP
6524	position == RectangleEdge.BOTTOM
6525	position == RectangleEdge.RIGHT
6525	position == RectangleEdge.LEFT
6526	this.backgroundPaint != null
6527	RectangleEdge.isTopOrBottom(getPosition())
6528	axisEdge == RectangleEdge.TOP
6529	isStripOutlineVisible()
6530	axisEdge == RectangleEdge.BOTTOM
6531	isStripOutlineVisible()
6532	axisEdge == RectangleEdge.LEFT
6533	isStripOutlineVisible()
6534	axisEdge == RectangleEdge.RIGHT
6535	isStripOutlineVisible()
6536	obj instanceof PaintScaleLegend
6537	this.scale.equals(that.scale)
6538	this.axis.equals(that.axis)
6539	this.axisLocation.equals(that.axisLocation)
6540	this.axisOffset != that.axisOffset
6541	this.stripWidth != that.stripWidth
6542	this.stripOutlineVisible != that.stripOutlineVisible
6543	PaintUtilities.equal(this.stripOutlinePaint, that.stripOutlinePaint)
6544	this.stripOutlineStroke.equals(that.stripOutlineStroke)
6545	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
6546	this.subdivisions != that.subdivisions
1987	p1 == null
1988	p2 == null
1989	p1 instanceof GradientPaint
1989	p2 instanceof GradientPaint
1990	Modifier.isStatic(f.getModifiers())
1990	Modifier.isFinal(f.getModifiers())
1990	Modifier.isPublic(f.getModifiers())
1991	oColor instanceof Color
1992	c.equals(oColor)
1993	value == null
5569	plot instanceof Pannable
5570	pannable.isRangePannable()
5570	pannable.isDomainPannable()
5571	screenDataArea.contains( e.getPoint())
5571	screenDataArea != null
5572	this.panLast == null
5573	dx == 0.0
5573	dy == 0.0
5574	p.getOrientation() == PlotOrientation.VERTICAL
5575	this.panLast != null
4451	timeZone == null
4452	locale == null
4453	first == null
4454	last == null
4455	zone == null
4456	c == null
4457	c == null
4458	c == null
4459	stroke == null
4460	paint == null
4461	this.isAutoRange()
4462	space == null
4463	isVisible()
4464	dimension > 0.0
4465	RectangleEdge.isTopOrBottom(edge)
4466	RectangleEdge.isLeftOrRight(edge)
4467	isTickMarksVisible()
4468	this.minorTickMarksVisible
4469	isAxisLineVisible()
4470	isTickMarksVisible()
4471	isTickLabelsVisible()
4472	RectangleEdge.isTopOrBottom(edge)
4473	RectangleEdge.isLeftOrRight(edge)
4474	edge == RectangleEdge.TOP
4475	edge == RectangleEdge.BOTTOM
4476	t0 >= firstOnAxis
4477	this.minorTickMarksVisible
4478	edge == RectangleEdge.TOP
4479	edge == RectangleEdge.BOTTOM
4480	tt0 >= firstOnAxis
4481	edge == RectangleEdge.TOP
4482	edge == RectangleEdge.BOTTOM
4483	edge == RectangleEdge.BOTTOM
4484	edge == RectangleEdge.TOP
4485	isInverted()
4486	edge == RectangleEdge.TOP
4487	last > axisMax
4488	(x + bb.getWidth() / 2) > dataArea.getMaxX()
4489	bb.getWidth() < (dataArea.getMaxX() - xstart)
4490	first < axisMin
4491	(x - bb.getWidth() / 2) < dataArea.getX()
4492	bb.getWidth() < (xlast - dataArea.getX())
4493	label != null
4494	lastXX > 0L
4495	this.labelInfo[band].getDrawDividers()
4496	b != null
4497	edge == RectangleEdge.BOTTOM
4498	edge == RectangleEdge.TOP
4499	RectangleEdge.isTopOrBottom(edge)
4500	isInverted()
4501	RectangleEdge.isLeftOrRight(edge)
4502	isInverted()
4503	RectangleEdge.isTopOrBottom(edge)
4504	RectangleEdge.isLeftOrRight(edge)
4505	isInverted()
4506	plot == null
4507	plot instanceof ValueAxisPlot
4508	r == null
4509	obj == this
4510	obj instanceof PeriodAxis
4511	this.first.equals(that.first)
4512	this.last.equals(that.last)
4513	this.timeZone.equals(that.timeZone)
4514	this.locale.equals(that.locale)
4515	this.autoRangeTimePeriodClass.equals( that.autoRangeTimePeriodClass)
4516	isMinorTickMarksVisible() == that.isMinorTickMarksVisible()
4517	this.majorTickTimePeriodClass.equals( that.majorTickTimePeriodClass)
4518	this.minorTickTimePeriodClass.equals( that.minorTickTimePeriodClass)
4519	this.minorTickMarkPaint.equals(that.minorTickMarkPaint)
4520	this.minorTickMarkStroke.equals(that.minorTickMarkStroke)
4521	Arrays.equals(this.labelInfo, that.labelInfo)
4522	getLabel() != null
5293	periodClass == null
5294	dateFormat == null
5295	padding == null
5296	labelFont == null
5297	labelPaint == null
5298	dividerStroke == null
5299	dividerPaint == null
5300	obj == this
5301	obj instanceof PeriodAxisLabelInfo
5302	info.periodClass.equals(this.periodClass)
5303	info.dateFormat.equals(this.dateFormat)
5304	info.padding.equals(this.padding)
5305	info.labelFont.equals(this.labelFont)
5306	info.labelPaint.equals(this.labelPaint)
5307	info.drawDividers != this.drawDividers
5308	info.dividerStroke.equals(this.dividerStroke)
5309	info.dividerPaint.equals(this.dividerPaint)
1022	this == obj
1023	obj instanceof PieDatasetChangeType
1024	this.name.equals(pdct.toString())
1025	this.equals(PieDatasetChangeType.ADD)
28	current != this
29	qName.equals(PIEDATASET_TAG)
30	qName.equals(ITEM_TAG)
31	current != this
3233	isOverlap()
3234	isOverlap()
3235	isOverlap()
3236	y > plr.getLowerY()
3237	lower < upper - 1
3238	r1.getLowerY() < r0.getUpperY()
3239	r2.getUpperY() > r3.getLowerY()
3240	record1.getLowerY() < record0.getUpperY()
3241	record1.getUpperY() > record0.getLowerY()
3242	this.labels.size() > 1
3215	this == obj
3216	obj instanceof PieLabelLinkStyle
3217	this.name.equals(style.toString())
3218	this.equals(PieLabelLinkStyle.STANDARD)
3219	this.equals(PieLabelLinkStyle.QUAD_CURVE)
3220	this.equals(PieLabelLinkStyle.CUBIC_CURVE)
4210	obj instanceof PieLabelRecord
4211	this.baseY < plr.baseY
4212	this.baseY > plr.baseY
4213	obj == this
4214	obj instanceof PieLabelRecord
4215	this.key.equals(that.key)
4216	this.angle != that.angle
4217	this.gap != that.gap
4218	this.allocatedY != that.allocatedY
4219	this.baseY != that.baseY
4220	this.labelHeight != that.labelHeight
4221	this.linkPercent != that.linkPercent
4222	this.label.equals(that.label)
3774	dataset != null
3775	existing != null
3776	dataset != null
3777	direction == null
3778	percent < 0.0
3778	percent > MAX_INTERIOR_GAP
3779	this.interiorGap != percent
3780	notify
3781	selected
3782	result == null
3783	selected
3784	result != null
3785	autoPopulate
3786	ds != null
3787	this.dataset != null
3788	section >= 0
3788	section < this.dataset.getItemCount()
3789	key == null
3790	selected
3791	notify
3792	paint == null
3793	selected
3794	result == null
3795	selected
3796	result != null
3797	autoPopulate
3798	ds != null
3799	notify
3800	paint == null
3801	selected
3802	s == null
3803	result != null
3804	autoPopulate
3805	ds != null
3806	notify
3807	stroke == null
3808	this.explodePercentages != null
3809	percent != null
3810	key == null
3811	this.explodePercentages == null
3812	this.dataset == null
3813	explode != null
3814	style == null
3815	paint == null
3816	stroke == null
3817	font == null
3818	paint == null
3819	padding == null
3820	offset == null
3821	distributor == null
3822	shape == null
3823	generator == null
3824	this.dataset != null
3825	info != null
3826	DatasetUtilities.isEmptyOrNull(this.dataset)
3827	this.shadowGenerator != null
3828	this.shadowGenerator != null
3829	this.simpleLabels
3829	this.labelGenerator != null
3830	DEBUG_DRAW_INTERIOR
3831	this.circular
3832	DEBUG_DRAW_LINK_AREA
3833	this.simpleLabels
3834	DEBUG_DRAW_PIE_AREA
3835	this.dataset.getKeys().size() > 0
3835	this.dataset != null
3836	n != null
3837	value > 0.0
3838	ss != null
3839	this.simpleLabels
3840	n == null
3841	this.direction == Rotation.CLOCKWISE
3842	this.direction == Rotation.ANTICLOCKWISE
3843	Math.abs(angle) > getMinimumArcAngleToDraw()
3844	mep > 0.0
3845	currentPass == 0
3846	this.shadowPaint != null
3847	currentPass == 1
3848	this.sectionOutlinesVisible
3849	state.getInfo() != null
3850	entities != null
3851	this.toolTipGenerator != null
3852	this.urlGenerator != null
3853	n == null
3854	include
3855	labelGenerator == null
3856	label == null
3857	this.labelShadowPaint != null
3857	this.shadowGenerator == null
3858	this.labelBackgroundPaint != null
3859	this.labelOutlinePaint != null
3859	this.labelOutlineStroke != null
3860	n == null
3861	include
3862	Math.cos(Math.toRadians(mid)) < 0.0
3863	this.labelGenerator != null
3864	label != null
3865	this.shadowGenerator == null
3866	label != null
3867	this.shadowGenerator == null
3868	this.dataset == null
3869	n == null
3870	v == 0.0
3871	include
3872	label != null
3873	this.legendLabelToolTipGenerator != null
3874	this.legendLabelURLGenerator != null
3875	explodePercent == 0.0
3876	this.labelLinksVisible
3877	style.equals(PieLabelLinkStyle.STANDARD)
3878	style.equals(PieLabelLinkStyle.QUAD_CURVE)
3879	style.equals(PieLabelLinkStyle.CUBIC_CURVE)
3880	this.labelLinksVisible
3881	style.equals(PieLabelLinkStyle.STANDARD)
3882	style.equals(PieLabelLinkStyle.QUAD_CURVE)
3883	style.equals(PieLabelLinkStyle.CUBIC_CURVE)
3884	dataset instanceof SelectablePieDataset
3885	state == null
3886	this.dataset.getKeys().size() > 0
3886	this.dataset != null
3887	n == null
3888	value > 0.0
3889	Math.abs(angle) > getMinimumArcAngleToDraw()
3890	mep > 0.0
3891	arc.contains(x, y)
3892	this.direction == Rotation.CLOCKWISE
3893	this.direction == Rotation.ANTICLOCKWISE
3894	n == null
3895	this.direction == Rotation.CLOCKWISE
3896	n != null
3897	value >= 0.0
3898	this.direction == Rotation.ANTICLOCKWISE
3899	Math.abs(angle) > getMinimumArcAngleToDraw()
3900	mep > 0.0
3901	obj == this
3902	obj instanceof PiePlot
3903	super.equals(obj)
3904	this.pieIndex != that.pieIndex
3905	this.interiorGap != that.interiorGap
3906	this.circular != that.circular
3907	this.startAngle != that.startAngle
3908	this.direction != that.direction
3909	this.ignoreZeroValues != that.ignoreZeroValues
3910	this.ignoreNullValues != that.ignoreNullValues
3911	ObjectUtilities.equal(this.sectionPaintMap, that.sectionPaintMap)
3912	PaintUtilities.equal(this.baseSectionPaint, that.baseSectionPaint)
3913	this.sectionOutlinesVisible != that.sectionOutlinesVisible
3914	ObjectUtilities.equal(this.sectionOutlinePaintMap, that.sectionOutlinePaintMap)
3915	PaintUtilities.equal(this.baseSectionOutlinePaint, that.baseSectionOutlinePaint)
3916	ObjectUtilities.equal(this.sectionOutlineStrokeMap, that.sectionOutlineStrokeMap)
3917	ObjectUtilities.equal(this.baseSectionOutlineStroke, that.baseSectionOutlineStroke)
3918	PaintUtilities.equal(this.shadowPaint, that.shadowPaint)
3919	this.shadowXOffset == that.shadowXOffset
3920	this.shadowYOffset == that.shadowYOffset
3921	ObjectUtilities.equal(this.explodePercentages, that.explodePercentages)
3922	ObjectUtilities.equal(this.labelGenerator, that.labelGenerator)
3923	ObjectUtilities.equal(this.labelFont, that.labelFont)
3924	PaintUtilities.equal(this.labelPaint, that.labelPaint)
3925	PaintUtilities.equal(this.labelBackgroundPaint, that.labelBackgroundPaint)
3926	PaintUtilities.equal(this.labelOutlinePaint, that.labelOutlinePaint)
3927	ObjectUtilities.equal(this.labelOutlineStroke, that.labelOutlineStroke)
3928	PaintUtilities.equal(this.labelShadowPaint, that.labelShadowPaint)
3929	this.simpleLabels != that.simpleLabels
3930	this.simpleLabelOffset.equals(that.simpleLabelOffset)
3931	this.labelPadding.equals(that.labelPadding)
3932	this.maximumLabelWidth == that.maximumLabelWidth
3933	this.labelGap == that.labelGap
3934	this.labelLinkMargin == that.labelLinkMargin
3935	this.labelLinksVisible != that.labelLinksVisible
3936	this.labelLinkStyle.equals(that.labelLinkStyle)
3937	PaintUtilities.equal(this.labelLinkPaint, that.labelLinkPaint)
3938	ObjectUtilities.equal(this.labelLinkStroke, that.labelLinkStroke)
3939	ObjectUtilities.equal(this.toolTipGenerator, that.toolTipGenerator)
3940	ObjectUtilities.equal(this.urlGenerator, that.urlGenerator)
3941	this.minimumArcAngleToDraw == that.minimumArcAngleToDraw
3942	ShapeUtilities.equal(this.legendItemShape, that.legendItemShape)
3943	ObjectUtilities.equal(this.legendLabelGenerator, that.legendLabelGenerator)
3944	ObjectUtilities.equal(this.legendLabelToolTipGenerator, that.legendLabelToolTipGenerator)
3945	ObjectUtilities.equal(this.legendLabelURLGenerator, that.legendLabelURLGenerator)
3946	this.autoPopulateSectionPaint != that.autoPopulateSectionPaint
3947	this.autoPopulateSectionOutlinePaint != that.autoPopulateSectionOutlinePaint
3948	this.autoPopulateSectionOutlineStroke != that.autoPopulateSectionOutlineStroke
3949	ObjectUtilities.equal(this.shadowGenerator, that.shadowGenerator)
3950	clone.dataset != null
3951	this.urlGenerator instanceof PublicCloneable
3952	this.legendLabelGenerator != null
3953	this.legendLabelToolTipGenerator != null
3954	this.legendLabelURLGenerator instanceof PublicCloneable
4223	info != null
4224	getLabelGenerator() != null
4225	DEBUG_DRAW_INTERIOR
4226	isCircular()
4227	DEBUG_DRAW_LINK_AREA
4228	DatasetUtilities.isEmptyOrNull(getDataset())
4229	dataset.getKeys().size() > plotArea.getWidth()
4230	isCircular()
4231	sectionKeys.size() == 0
4232	depth < 0
4233	dataValue == null
4234	value <= 0
4235	Math.abs(angle2 - angle1) > getMinimumArcAngleToDraw()
4236	arc == null
4237	segment != null
4238	segment != null
4239	arc == null
4240	info != null
4241	entities != null
4242	tipster != null
4243	getURLGenerator() != null
4244	getSimpleLabels()
4245	getDarkerSides()
4246	paint instanceof Color
4247	extent < 0.0
4248	isAngleAtFront(start)
4249	isAngleAtBack(end)
4250	extent > -180.0
4251	drawFront
4252	drawFront
4253	drawBack
4254	drawFront
4255	drawBack
4256	drawBack
4257	drawFront
4258	isAngleAtFront(end)
4259	extent > -180.0
4260	drawBack
4261	drawBack
4262	drawFront
4263	drawBack
4264	drawFront
4265	drawBack
4266	drawFront
4267	extent > 0.0
4268	isAngleAtFront(start)
4269	isAngleAtBack(end)
4270	extent < 180.0
4271	drawFront
4272	drawFront
4273	drawBack
4274	drawFront
4275	drawBack
4276	drawBack
4277	drawFront
4278	isAngleAtFront(end)
4279	extent < 180.0
4280	drawBack
4281	drawBack
4282	drawFront
4283	drawBack
4284	drawFront
4285	drawBack
4286	drawFront
4287	obj == this
4288	obj instanceof PiePlot3D
4289	this.depthFactor != that.depthFactor
4290	this.darkerSides != that.darkerSides
5629	obj == this
5630	obj instanceof PieSectionEntity
5631	ObjectUtilities.equal(this.dataset, that.dataset)
5632	this.pieIndex != that.pieIndex
5633	this.sectionIndex != that.sectionIndex
5634	ObjectUtilities.equal(this.sectionKey, that.sectionKey)
3003	result == null
3004	paint == null
3004	this.allowNull
3005	result == null
3006	paint == null
3006	this.allowNull
3007	result == null
3008	this.allowNull
3008	stroke == null
3009	result == null
3010	this.allowNull
3010	visible == null
3011	result == null
3012	this.allowNull
3012	font == null
3013	result == null
3014	paint == null
3014	this.allowNull
3015	result == null
3016	create == null
3016	this.allowNull
5455	lenX < 2
5456	angle != 0
5456	rotate != null
5457	obj == this
5458	obj instanceof PinNeedle
5459	super.equals(obj)
3017	font == null
3018	paint == null
3019	p == null
3020	insets == null
3021	this.insets.equals(insets)
3022	notify
3023	paint == null
3024	this.backgroundPaint != null
3025	this.backgroundPaint != null
3026	this.backgroundPaint.equals(paint)
3027	this.backgroundAlpha != alpha
3028	p != null
3029	notify
3030	this.backgroundImageAlignment != alignment
3031	alpha > 1.0f
3031	alpha < 0.0f
3032	this.backgroundImageAlpha != alpha
3033	stroke == null
3034	this.outlineStroke != null
3035	this.outlineStroke != null
3036	this.outlineStroke.equals(stroke)
3037	paint == null
3038	this.outlinePaint != null
3039	this.outlinePaint != null
3040	this.outlinePaint.equals(paint)
3041	this.foregroundAlpha != alpha
3042	notify
3043	this.notify
3044	listeners[i] == PlotChangeListener.class
3045	orientation == null
3046	this.backgroundPaint == null
3047	p instanceof GradientPaint
3048	orientation == PlotOrientation.VERTICAL
3049	orientation == PlotOrientation.HORIZONTAL
3050	this.backgroundImage == null
3051	this.outlineVisible
3052	this.outlinePaint != null
3052	this.outlineStroke != null
3053	message != null
3054	plotState.getOwner() != null
3054	plotState != null
3055	e != null
3056	edge == RectangleEdge.LEFT
3057	edge == RectangleEdge.RIGHT
3058	edge == RectangleEdge.TOP
3059	edge == RectangleEdge.BOTTOM
3060	obj == this
3061	obj instanceof Plot
3062	ObjectUtilities.equal(this.noDataMessage, that.noDataMessage)
3063	ObjectUtilities.equal( this.noDataMessageFont, that.noDataMessageFont )
3064	PaintUtilities.equal(this.noDataMessagePaint, that.noDataMessagePaint)
3065	ObjectUtilities.equal(this.insets, that.insets)
3066	this.outlineVisible != that.outlineVisible
3067	ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)
3068	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
3069	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
3070	ObjectUtilities.equal(this.backgroundImage, that.backgroundImage)
3071	this.backgroundImageAlignment != that.backgroundImageAlignment
3072	this.backgroundImageAlpha != that.backgroundImageAlpha
3073	this.foregroundAlpha != that.foregroundAlpha
3074	this.backgroundAlpha != that.backgroundAlpha
3075	this.drawingSupplier.equals(that.drawingSupplier)
3076	this.notify != that.notify
3077	this.datasetGroup != null
3078	location == null
3079	orientation == null
3080	location == AxisLocation.TOP_OR_RIGHT
3081	orientation == PlotOrientation.HORIZONTAL
3082	orientation == PlotOrientation.VERTICAL
3083	location == AxisLocation.TOP_OR_LEFT
3084	orientation == PlotOrientation.HORIZONTAL
3085	orientation == PlotOrientation.VERTICAL
3086	location == AxisLocation.BOTTOM_OR_RIGHT
3087	orientation == PlotOrientation.HORIZONTAL
3088	orientation == PlotOrientation.VERTICAL
3089	location == AxisLocation.BOTTOM_OR_LEFT
3090	orientation == PlotOrientation.HORIZONTAL
3091	orientation == PlotOrientation.VERTICAL
3092	result == null
3093	location == null
3094	orientation == null
3095	location == AxisLocation.TOP_OR_RIGHT
3096	orientation == PlotOrientation.HORIZONTAL
3097	orientation == PlotOrientation.VERTICAL
3098	location == AxisLocation.TOP_OR_LEFT
3099	orientation == PlotOrientation.HORIZONTAL
3100	orientation == PlotOrientation.VERTICAL
3101	location == AxisLocation.BOTTOM_OR_RIGHT
3102	orientation == PlotOrientation.HORIZONTAL
3103	orientation == PlotOrientation.VERTICAL
3104	location == AxisLocation.BOTTOM_OR_LEFT
3105	orientation == PlotOrientation.HORIZONTAL
3106	orientation == PlotOrientation.VERTICAL
3107	result == null
5647	plot == null
5648	obj == this
5649	obj instanceof PlotEntity
5650	getArea().equals(that.getArea())
5651	ObjectUtilities.equal(getToolTipText(), that.getToolTipText())
5652	ObjectUtilities.equal(getURLText(), that.getURLText())
5653	this.plot.equals(that.plot)
2866	this == obj
2867	obj instanceof PlotOrientation
2868	this.name.equals(orientation.toString())
2869	this.equals(PlotOrientation.HORIZONTAL)
2870	this.equals(PlotOrientation.VERTICAL)
3108	source == null
3109	area.contains(source)
3110	this == obj
3111	obj instanceof PlotRenderingInfo
3112	ObjectUtilities.equal(this.dataArea, that.dataArea)
3113	ObjectUtilities.equal(this.plotArea, that.plotArea)
3114	ObjectUtilities.equal(this.subplotInfo, that.subplotInfo)
3115	this.plotArea != null
3116	this.dataArea != null
3768	plot != null
3769	DatasetUtilities.isEmptyOrNull(dataset)
5467	rotate != null
5467	angle != 0
5468	obj == this
5469	obj instanceof PlumNeedle
5470	super.equals(obj)
5414	angle != 0
5414	rotate != null
5415	getFillPaint() != null
5416	getHighlightPaint() != null
5417	getOutlinePaint() != null
5418	obj == this
5419	obj instanceof PointerNeedle
5420	super.equals(obj)
6025	zoom
6026	zoomInIndex != -1
6027	zoomOutIndex != -1
6028	autoIndex != -1
6029	command.equals(POLAR_ZOOM_IN_ACTION_COMMAND)
6030	command.equals(POLAR_ZOOM_OUT_ACTION_COMMAND)
6031	command.equals(POLAR_AUTO_RANGE_ACTION_COMMAND)
6032	plot instanceof PolarPlot
6033	comp instanceof JMenuItem
6034	text.equals(item.getText())
4291	this.dataset != null
4292	this.axis != null
4293	this.renderer != null
4294	text == null
4295	removed
4296	this.cornerTextItems.size() > 0
4297	axis != null
4298	this.axis != null
4299	this.axis != null
4300	existing != null
4301	this.dataset != null
4302	this.renderer != null
4303	this.renderer != null
4304	unit == null
4305	this.angleLabelsVisible != visible
4306	font == null
4307	paint == null
4308	this.angleGridlinesVisible != visible
4309	this.radiusGridlinesVisible != visible
4310	b1
4310	b2
4311	info != null
4312	info != null
4313	this.renderer != null
4314	this.cornerTextItems.isEmpty()
4315	DatasetUtilities.isEmptyOrNull(this.dataset)
4316	this.renderer == null
4317	isAngleGridlinesVisible()
4318	gridStroke != null
4318	gridPaint != null
4319	isRadiusGridlinesVisible()
4320	gridPaint != null
4320	gridStroke != null
4321	percent > 0.0
4322	this.dataset != null
4323	this.axis != null
4324	getParent() != null
4325	this.dataset != null
4326	this.dataset != null
4327	this.renderer != null
4328	obj == this
4329	obj instanceof PolarPlot
4330	ObjectUtilities.equal(this.axis, that.axis)
4331	ObjectUtilities.equal(this.renderer, that.renderer)
4332	this.angleTickUnit.equals(that.angleTickUnit)
4333	this.angleGridlinesVisible != that.angleGridlinesVisible
4334	this.angleLabelsVisible != that.angleLabelsVisible
4335	this.angleLabelFont.equals(that.angleLabelFont)
4336	PaintUtilities.equal(this.angleLabelPaint, that.angleLabelPaint)
4337	ObjectUtilities.equal(this.angleGridlineStroke, that.angleGridlineStroke)
4338	PaintUtilities.equal( this.angleGridlinePaint, that.angleGridlinePaint )
4339	this.radiusGridlinesVisible != that.radiusGridlinesVisible
4340	ObjectUtilities.equal(this.radiusGridlineStroke, that.radiusGridlineStroke)
4341	PaintUtilities.equal(this.radiusGridlinePaint, that.radiusGridlinePaint)
4342	this.cornerTextItems.equals(that.cornerTextItems)
4343	this.axis != null
4344	clone.dataset != null
4345	this.renderer != null
4346	this.axis != null
4347	this.dataset != null
4348	useAnchor
110	coefficients == null
111	obj instanceof PolynomialFunction2D
107	obj instanceof PowerFunction2D
108	this.a != that.a
109	this.b != that.b
6137	this.contributors != null
6138	libraries.length != 0
1026	quarter < FIRST_QUARTER
1026	quarter > LAST_QUARTER
1027	quarter > LAST_QUARTER
1027	quarter < FIRST_QUARTER
1028	this.quarter > FIRST_QUARTER
1029	this.year > 1900
1030	this.quarter < LAST_QUARTER
1031	this.year < 9999
1032	obj != null
1033	obj instanceof Quarter
1034	o1 instanceof Quarter
1035	result == 0
1036	o1 instanceof RegularTimePeriod
1037	i == -1
1038	i == s.length() - 1
5170	zone == null
5171	this.quarterFirst
5172	obj == this
5173	obj instanceof QuarterDateFormat
5174	Arrays.equals(this.quarters, that.quarters)
5175	this.quarterFirst != that.quarterFirst
952	lower > upper
953	b0 <= this.lower
954	contains(value)
955	value > this.upper
956	value < this.lower
957	range1 == null
958	range2 == null
959	range == null
960	value < range.getLowerBound()
961	value > range.getUpperBound()
962	range == null
963	lower > upper
964	base == null
965	allowZeroCrossing
966	value > 0.0
967	value < 0.0
968	base == null
969	factor < 0
970	obj instanceof Range
971	this.lower == range.lower
972	this.upper == range.upper
48	this == obj
49	obj instanceof RangeType
50	this.name.equals(that.toString())
51	this.equals(RangeType.FULL)
52	this.equals(RangeType.POSITIVE)
53	this.equals(RangeType.NEGATIVE)
1937	this == obj
1938	obj instanceof RectangleAnchor
1939	this.name.equals(order.name)
1940	anchor == RectangleAnchor.CENTER
1941	anchor == RectangleAnchor.TOP
1942	anchor == RectangleAnchor.BOTTOM
1943	anchor == RectangleAnchor.LEFT
1944	anchor == RectangleAnchor.RIGHT
1945	anchor == RectangleAnchor.TOP_LEFT
1946	anchor == RectangleAnchor.TOP_RIGHT
1947	anchor == RectangleAnchor.BOTTOM_LEFT
1948	anchor == RectangleAnchor.BOTTOM_RIGHT
1949	anchor == RectangleAnchor.CENTER
1950	anchor == RectangleAnchor.TOP
1951	anchor == RectangleAnchor.BOTTOM
1952	anchor == RectangleAnchor.LEFT
1953	anchor == RectangleAnchor.RIGHT
1954	anchor == RectangleAnchor.TOP_LEFT
1955	anchor == RectangleAnchor.TOP_RIGHT
1956	anchor == RectangleAnchor.BOTTOM_LEFT
1957	anchor == RectangleAnchor.BOTTOM_RIGHT
1958	this.equals(RectangleAnchor.CENTER)
1959	this.equals(RectangleAnchor.TOP)
1960	this.equals(RectangleAnchor.BOTTOM)
1961	this.equals(RectangleAnchor.LEFT)
1962	this.equals(RectangleAnchor.RIGHT)
1963	this.equals(RectangleAnchor.TOP_LEFT)
1964	this.equals(RectangleAnchor.TOP_RIGHT)
1965	this.equals(RectangleAnchor.BOTTOM_LEFT)
1966	this.equals(RectangleAnchor.BOTTOM_RIGHT)
6990	widthConstraintType == null
6991	heightConstraintType == null
6992	this.widthConstraintType == LengthConstraintType.NONE
6993	this.heightConstraintType == LengthConstraintType.NONE
6994	range == null
6995	range == null
6996	this.widthConstraintType == LengthConstraintType.NONE
6997	this.heightConstraintType == LengthConstraintType.NONE
6998	this.heightConstraintType == LengthConstraintType.RANGE
6999	this.heightConstraintType == LengthConstraintType.FIXED
7000	this.widthConstraintType == LengthConstraintType.RANGE
7001	this.heightConstraintType == LengthConstraintType.NONE
7002	this.heightConstraintType == LengthConstraintType.RANGE
7003	this.heightConstraintType == LengthConstraintType.FIXED
7004	this.widthConstraintType == LengthConstraintType.FIXED
7005	this.heightConstraintType == LengthConstraintType.NONE
7006	this.heightConstraintType == LengthConstraintType.RANGE
7007	this.heightConstraintType == LengthConstraintType.FIXED
2130	this == obj
2131	obj instanceof RectangleEdge
2132	this.name.equals(order.name)
2133	edge == RectangleEdge.TOP
2134	edge == RectangleEdge.BOTTOM
2135	edge == RectangleEdge.LEFT
2136	edge == RectangleEdge.RIGHT
2137	edge == RectangleEdge.TOP
2138	edge == RectangleEdge.BOTTOM
2139	edge == RectangleEdge.LEFT
2140	edge == RectangleEdge.RIGHT
2141	this.equals(RectangleEdge.TOP)
2142	this.equals(RectangleEdge.BOTTOM)
2143	this.equals(RectangleEdge.LEFT)
2144	this.equals(RectangleEdge.RIGHT)
2103	unitType == null
2104	obj == this
2105	obj instanceof RectangleInsets
2106	that.unitType != this.unitType
2107	this.left != that.left
2108	this.right != that.right
2109	this.top != that.top
2110	this.bottom != that.bottom
2111	base == null
2112	horizontal == LengthAdjustmentType.EXPAND
2113	horizontal == LengthAdjustmentType.CONTRACT
2114	vertical == LengthAdjustmentType.EXPAND
2115	vertical == LengthAdjustmentType.CONTRACT
2116	base == null
2117	vertical
2118	horizontal
2119	base == null
2120	vertical
2121	horizontal
2122	this.unitType == UnitType.RELATIVE
2123	this.unitType == UnitType.RELATIVE
2124	this.unitType == UnitType.RELATIVE
2125	this.unitType == UnitType.RELATIVE
2126	this.unitType == UnitType.RELATIVE
2127	this.unitType == UnitType.RELATIVE
2128	this.unitType == UnitType.RELATIVE
2129	this.unitType == UnitType.RELATIVE
2181	c.equals(Number.class)
5494	chart == null
5495	chart.getPlot() instanceof Selectable
5496	s.canSelectByRegion()
5497	dataArea.contains(e.getPoint())
5498	e.isShiftDown()
5499	this.lastPoint == null
5500	pt2.distance(this.lastPoint) > 5
5501	this.lastPoint == null
5502	plot instanceof Selectable
5503	p.canSelectByRegion()
5504	dataArea.contains(e.getPoint())
5505	chart.getPlot() instanceof Selectable
5506	s.canSelectByPoint()
695	n < 2
696	n < 2
697	n < 2
698	n < 2
699	dataset == null
700	itemCount < order + 1
701	Double.isNaN(x)
701	Double.isNaN(y)
702	validItems < order + 1
703	equations == 1
704	result[0][0] == 0
705	result[i][0] != 0
706	found
1189	c.equals(Year.class)
1190	c.equals(Quarter.class)
1191	c.equals(Month.class)
1192	c.equals(Day.class)
1193	c.equals(Hour.class)
1194	c.equals(Minute.class)
1195	c.equals(Second.class)
1994	prefix == null
1995	formatter == null
1996	suffix == null
1997	formatter == null
1998	suffix == null
1999	formatter == null
2000	suffix == null
2001	suffix == null
2002	formatter == null
2003	elapsed < 0
2004	this.showZeroDays
2004	days != 0
2005	hours != 0
2005	this.showZeroHours
2006	obj == this
2007	obj instanceof RelativeDateFormat
2008	super.equals(obj)
2009	this.baseMillis != that.baseMillis
2010	this.showZeroDays != that.showZeroDays
2011	this.showZeroHours != that.showZeroHours
2012	this.positivePrefix.equals(that.positivePrefix)
2013	this.daySuffix.equals(that.daySuffix)
2014	this.hourSuffix.equals(that.hourSuffix)
2015	this.minuteSuffix.equals(that.minuteSuffix)
2016	this.secondSuffix.equals(that.secondSuffix)
2017	this.dayFormatter.equals(that.dayFormatter)
2018	this.hourFormatter.equals(that.hourFormatter)
2019	this.minuteFormatter.equals(that.minuteFormatter)
2020	this.secondFormatter.equals(that.secondFormatter)
8998	result == null
8999	this.allowNull
8999	paint == null
9000	result == null
9001	this.allowNull
9001	stroke == null
9002	result == null
9003	shape == null
9003	this.allowNull
9004	result == null
9005	paint == null
9005	this.allowNull
9006	result == null
9007	this.allowNull
9007	paint == null
9008	result == null
9009	stroke == null
9009	this.allowNull
9010	result == null
9011	this.allowNull
9011	visible == null
9012	result == null
9013	font == null
9013	this.allowNull
9014	result == null
9015	paint == null
9015	this.allowNull
9016	result == null
9017	create == null
9017	this.allowNull
8118	this.info != null
8119	owner != null
8973	dataset == null
8974	xLow >= xHigh
8975	itemCount <= 1
8976	dataset.getDomainOrder() == DomainOrder.ASCENDING
8977	lowValue >= xLow
8978	highValue < xLow
8979	midV >= xLow
8980	dataset.getDomainOrder() == DomainOrder.DESCENDING
8981	lowValue <= xHigh
8982	highValue > xHigh
8983	midV > xHigh
8984	index < itemCount
8985	dataset == null
8986	xLow >= xHigh
8987	itemCount <= 1
8988	dataset.getDomainOrder() == DomainOrder.ASCENDING
8989	lowValue > xHigh
8990	highValue <= xHigh
8991	midV <= xHigh
8992	dataset.getDomainOrder() == DomainOrder.DESCENDING
8993	lowValue < xLow
8994	highValue >= xLow
8995	midV >= xLow
8996	index >= 0
8997	i0 > i1
1851	urls[i].sameFile(codeBase)
1852	noCodeBaseClassLoader != null
1853	noCodeBaseClassLoader != null
2438	stroke == null
2439	paint == null
2440	n == null
2441	direction == Rotation.CLOCKWISE
2442	direction == Rotation.ANTICLOCKWISE
2443	Math.abs(angle) > getMinimumArcAngleToDraw()
2444	mep > 0.0
2445	currentPass == 0
2446	shadowPaint != null
2447	currentPass == 1
2448	outlinePaint != null
2448	outlineStroke != null
2449	state.getInfo() != null
2450	entities != null
2451	toolTipGenerator != null
2452	urlGenerator != null
2453	currentPass == 2
2454	this.separatorsVisible
2455	this == obj
2456	obj instanceof RingPlot
2457	this.separatorsVisible != that.separatorsVisible
2458	ObjectUtilities.equal(this.separatorStroke, that.separatorStroke)
2459	PaintUtilities.equal(this.separatorPaint, that.separatorPaint)
2460	this.innerSeparatorExtension != that.innerSeparatorExtension
2461	this.outerSeparatorExtension != that.outerSeparatorExtension
2462	this.sectionDepth != that.sectionDepth
2463	line == null
36	handler != this
37	this.subHandlers != null
38	this.subHandlers.size() > 0
39	top != null
1930	this == o
1931	o instanceof Rotation
1932	this.factor != rotation.factor
1933	this.equals(Rotation.CLOCKWISE)
1934	this.equals(Rotation.ANTICLOCKWISE)
7623	getItemVisible(series, item)
7624	Double.isNaN(transX1)
7624	Double.isNaN(transY1)
7625	orientation == PlotOrientation.HORIZONTAL
7626	s.lastPointGood
7627	Math.abs(x - s.lastX) > s.dX
7628	s.lowY < s.highY
7629	item == s.getLastItemIndex()
7630	this.legendLine != null
7631	obj == this
7632	obj instanceof SamplingXYLineRenderer
7633	super.equals(obj)
7634	ShapeUtilities.equal(this.legendLine, that.legendLine)
8542	margin >= 1.0
8542	margin < 0.0
8543	flag != null
8544	getItemVisible(row, column)
8545	visibleRow < 0
8546	values == null
8547	this.useSeriesOffset
8548	orientation == PlotOrientation.HORIZONTAL
8549	orientation == PlotOrientation.VERTICAL
8550	getItemShapeFilled(row, column)
8551	this.useFillPaint
8552	this.drawOutlines
8553	this.useOutlinePaint
8554	cp == null
8555	isSeriesVisible(series)
8555	isSeriesVisibleInLegend(series)
8556	getLegendItemToolTipGenerator() != null
8557	getLegendItemURLGenerator() != null
8558	labelPaint != null
8559	obj == this
8560	obj instanceof ScatterRenderer
8561	ObjectUtilities.equal(this.seriesShapesFilled, that.seriesShapesFilled)
8562	this.baseShapesFilled != that.baseShapesFilled
8563	this.useFillPaint != that.useFillPaint
8564	this.drawOutlines != that.drawOutlines
8565	this.useOutlinePaint != that.useOutlinePaint
8566	this.useSeriesOffset != that.useSeriesOffset
8567	this.itemMargin != that.itemMargin
1096	minute == null
1097	this.second != FIRST_SECOND_IN_MINUTE
1098	previous != null
1099	this.second != LAST_SECOND_IN_MINUTE
1100	next != null
1101	obj == this
1102	obj instanceof Second
1103	this.second != that.second
1104	this.minute != that.minute
1105	this.hour != that.hour
1106	this.day.equals(that.day)
1107	o1 instanceof Second
1108	this.firstMillisecond < s.firstMillisecond
1109	this.firstMillisecond > s.firstMillisecond
1110	o1 instanceof RegularTimePeriod
1111	day != null
1112	hour <= 23
1112	hour >= 0
1113	minute <= 59
1113	minute >= 0
1114	second >= 0
1114	second <= 59
5343	baseTimeline != null
5344	baseTimeline.getSegmentSize() < this.segmentSize
5345	baseTimeline.getStartTime() > this.startTime
5346	(baseTimeline.getSegmentSize() % this.segmentSize) != 0
5347	((this.startTime - baseTimeline.getStartTime()) % this.segmentSize) != 0
5348	groupMilliseconds >= this.segmentsIncludedSize
5349	segment.inExceptionSegments()
5350	x < this.segmentsIncludedSize
5351	this.adjustForDaylightSaving
5352	domainValueEnd < domainValueStart
5353	segment.contains(domainValueEnd)
5354	segment.inIncludeSegments()
5355	baseSegment.inIncludeSegments()
5356	segment.inIncludeSegments()
5357	segment.inIncludeSegments()
5358	toMillisecond < fromMillisecond
5359	intersection != null
5360	o instanceof SegmentedTimeline
5361	midSegment.contains(segment)
5361	segment.contains(midSegment)
5362	midSegment.before(segment)
5363	midSegment.after(segment)
5364	this.adjustForDaylightSaving
1356	s.equals(shortWeekdayNames[i])
1357	s.equals(weekDayNames[i])
1358	shortened
1359	isValidMonthCode(month)
1360	shortened
1361	result > 12
1361	result < 1
1362	s.equals(shortMonthNames[i])
1363	s.equals(monthNames[i])
1364	(yyyy % 4) != 0
1365	(yyyy % 400) == 0
1366	(yyyy % 100) == 0
1367	month != FEBRUARY
1368	isLeapYear(yyyy)
1369	SerialDate.isValidWeekdayCode(targetWeekday)
1370	baseDOW > targetWeekday
1371	SerialDate.isValidWeekdayCode(targetWeekday)
1372	baseDOW > targetWeekday
1373	SerialDate.isValidWeekdayCode(targetDOW)
1374	adjust >= 4
1375	adjust <= -4
1854	stream == null
1855	isNull
1856	isSerializable(c)
1857	c.equals(GradientPaint.class)
1858	stream == null
1859	paint != null
1860	paint instanceof Serializable
1861	paint instanceof GradientPaint
1862	stream == null
1863	isNull
1864	c.equals(BasicStroke.class)
1865	stream == null
1866	stroke != null
1867	stroke instanceof BasicStroke
1868	stream == null
1869	isNull
1870	c.equals(Line2D.class)
1871	c.equals(Rectangle2D.class)
1872	c.equals(Ellipse2D.class)
1873	c.equals(Arc2D.class)
1874	c.equals(GeneralPath.class)
1875	stream == null
1876	shape != null
1877	shape instanceof Line2D
1878	shape instanceof Rectangle2D
1879	shape instanceof Ellipse2D
1880	shape instanceof Arc2D
1881	shape instanceof GeneralPath
1882	stream == null
1883	isNull
1884	stream == null
1885	p != null
1886	stream == null
1887	isNull
1888	stream == null
1889	as != null
1890	stream == null
1891	isNull
1892	image instanceof BufferedImage
1508	key == null
1509	key == null
1510	this.notify != notify
1511	obj == this
1512	obj instanceof Series
1513	getKey().equals(that.getKey())
1514	ObjectUtilities.equal(getDescription(), that.getDescription())
1515	this.notify
1516	listenerList[i] == SeriesChangeListener.class
1543	this == obj
1544	obj instanceof SeriesChangeType
1545	this.name.equals(style.toString())
1546	this.equals(SeriesChangeType.ADD)
3763	this == obj
3764	obj instanceof SeriesRenderingOrder
3765	this.name.equals(order.toString())
3766	this.equals(SeriesRenderingOrder.FORWARD)
3767	this.equals(SeriesRenderingOrder.REVERSE)
7014	prefix == null
7015	prefix == null
7016	chart == null
7017	session == null
7018	session != null
7019	chart == null
7020	session == null
7021	session != null
7022	tempDirName == null
7023	tempDir.exists()
7024	session != null
7025	chartDeleter == null
7026	filename.length() > 5
7027	filename.substring(filename.length() - 5, filename.length()).equals(".jpeg")
7028	filename.substring(filename.length() - 4, filename.length()).equals(".png")
7029	file.exists()
7030	mimeType != null
7031	length == -1
7032	i == -1
7033	i + searchString.length() < inputString.length()
2043	obj == this
2044	obj instanceof ShapeList
2045	ShapeUtilities.equal((Shape) get(i), (Shape) that.get(i))
2046	shape != null
2047	index != -1
2182	shape instanceof Cloneable
2183	s1 instanceof Line2D
2183	s2 instanceof Line2D
2184	s2 instanceof Ellipse2D
2184	s1 instanceof Ellipse2D
2185	s2 instanceof Arc2D
2185	s1 instanceof Arc2D
2186	s2 instanceof Polygon
2186	s1 instanceof Polygon
2187	s1 instanceof GeneralPath
2187	s2 instanceof GeneralPath
2188	l1 == null
2189	l2 == null
2190	l1.getP1().equals(l2.getP1())
2191	l1.getP2().equals(l2.getP2())
2192	e1 == null
2193	e2 == null
2194	e1.getFrame().equals(e2.getFrame())
2195	a1 == null
2196	a2 == null
2197	a1.getFrame().equals(a2.getFrame())
2198	a1.getAngleStart() != a2.getAngleStart()
2199	a1.getAngleExtent() != a2.getAngleExtent()
2200	a1.getArcType() != a2.getArcType()
2201	p1 == null
2202	p2 == null
2203	p1.npoints != p2.npoints
2204	Arrays.equals(p1.xpoints, p2.xpoints)
2205	Arrays.equals(p1.ypoints, p2.ypoints)
2206	p1 == null
2207	p2 == null
2208	p1.getWindingRule() != p2.getWindingRule()
2209	iterator1.isDone() != iterator2.isDone()
2210	seg1 != seg2
2211	Arrays.equals(d1, d2)
2212	shape == null
2213	shape == null
2214	anchor == null
2215	base == null
2216	(x2 - x1) != 0.0
2217	(f1 & f2) != 0
2218	f1 != 0
2219	(f1 & Rectangle2D.OUT_LEFT) == Rectangle2D.OUT_LEFT
2219	dx != 0.0
2220	(f1 & Rectangle2D.OUT_RIGHT) == Rectangle2D.OUT_RIGHT
2220	dx != 0.0
2221	(f1 & Rectangle2D.OUT_BOTTOM) == Rectangle2D.OUT_BOTTOM
2221	dy != 0.0
2222	(f1 & Rectangle2D.OUT_TOP) == Rectangle2D.OUT_TOP
2222	dy != 0.0
2223	f2 != 0
2224	dx != 0.0
2224	(f2 & Rectangle2D.OUT_LEFT) == Rectangle2D.OUT_LEFT
2225	dx != 0.0
2225	(f2 & Rectangle2D.OUT_RIGHT) == Rectangle2D.OUT_RIGHT
2226	dy != 0.0
2226	(f2 & Rectangle2D.OUT_BOTTOM) == Rectangle2D.OUT_BOTTOM
2227	dy != 0.0
2227	(f2 & Rectangle2D.OUT_TOP) == Rectangle2D.OUT_TOP
5471	rotate != null
5471	angle != 0
5472	object == null
5473	object == this
5474	super.equals(object)
5474	object instanceof ShipNeedle
6697	w == LengthConstraintType.NONE
6698	h == LengthConstraintType.NONE
6699	h == LengthConstraintType.RANGE
6700	h == LengthConstraintType.FIXED
6701	w == LengthConstraintType.RANGE
6702	h == LengthConstraintType.NONE
6703	h == LengthConstraintType.RANGE
6704	h == LengthConstraintType.FIXED
6705	w == LengthConstraintType.FIXED
6706	h == LengthConstraintType.NONE
6707	h == LengthConstraintType.RANGE
6708	h == LengthConstraintType.FIXED
6709	contentSize.height <= 0.0
6709	contentSize.width <= 0.0
6710	widthRange.contains(s.getWidth())
6711	bounds.getWidth() <= w
6712	bounds.getWidth() <= widthRange.getUpperBound()
6712	bounds.getHeight() <= heightRange.getUpperBound()
6713	area.isEmpty()
713	lowerBound >= upperBound
714	Double.isNaN(value)
715	value < this.lowerBound
716	value > this.upperBound
717	value == this.lowerBound
718	value == this.upperBound
719	this.upperBound < bin.lowerBound
720	this.lowerBound > bin.upperBound
721	this.upperBound == bin.lowerBound
722	this.lowerBound == bin.upperBound
723	obj instanceof SimpleHistogramBin
724	this.lowerBound < bin.lowerBound
725	this.lowerBound > bin.lowerBound
726	this.upperBound < bin.upperBound
727	this.upperBound > bin.upperBound
728	obj instanceof SimpleHistogramBin
729	this.lowerBound != that.lowerBound
730	this.upperBound != that.upperBound
731	this.includeLowerBound != that.includeLowerBound
732	this.includeUpperBound != that.includeUpperBound
733	this.itemCount != that.itemCount
734	this.selected != that.selected
756	key == null
757	bin.overlapsWith(existingBin)
758	bin.accepts(value)
759	placed
760	notify
761	this.adjustForBinSize
762	notify
763	bin.isSelected()
764	changed
765	obj == this
766	obj instanceof SimpleHistogramDataset
767	this.key.equals(that.key)
768	this.adjustForBinSize != that.adjustForBinSize
769	this.bins.equals(that.bins)
1496	start > end
1497	obj == this
1498	obj instanceof TimePeriod
1499	this.getStart().equals(that.getStart())
1500	this.getEnd().equals(that.getEnd())
1501	m0 < m1
1502	m0 > m1
1503	t0 < t2
1504	t0 > t2
1505	t1 < t3
1506	t1 > t3
2039	this == obj
2040	obj instanceof Size2D
2041	this.width != that.width
2042	this.height != that.height
645	first >= this.underlying.getColumnCount()
645	first < 0
646	max < 0
647	this.maximumCategoryCount == 0
648	index >= this.firstCategoryIndex
648	index <= lastCategoryIndex()
649	c != -1
650	last == -1
651	obj == this
652	obj instanceof SlidingCategoryDataset
653	this.firstCategoryIndex != that.firstCategoryIndex
654	this.maximumCategoryCount != that.maximumCategoryCount
655	this.underlying.equals(that.underlying)
656	this.underlying instanceof PublicCloneable
115	first >= this.underlying.getColumnCount()
115	first < 0
116	max < 0
117	this.maximumCategoryCount == 0
118	index >= this.firstCategoryIndex
118	index <= lastCategoryIndex()
119	c != -1
120	last == -1
121	c != -1
122	c != -1
123	c != -1
124	c != -1
125	c != -1
126	c != -1
127	c != -1
128	obj == this
129	obj instanceof SlidingGanttCategoryDataset
130	this.firstCategoryIndex != that.firstCategoryIndex
131	this.maximumCategoryCount != that.maximumCategoryCount
132	this.underlying.equals(that.underlying)
133	this.underlying instanceof PublicCloneable
1893	this == obj
1894	obj instanceof SortOrder
1895	this.name.equals(that.toString())
1896	this.equals(SortOrder.ASCENDING)
1897	this.equals(SortOrder.DESCENDING)
3243	extract == null
3244	dataset != null
3245	this.dataset != null
3246	dataset != null
3247	order == null
3248	direction == null
3249	percent > MAX_INTERIOR_GAP
3249	percent < 0.0
3250	this.interiorGap != percent
3251	paint == null
3252	stroke == null
3253	this.seriesPaint != null
3254	result == null
3255	supplier != null
3256	paint == null
3257	this.seriesOutlinePaint != null
3258	result == null
3259	paint == null
3260	this.seriesOutlineStroke != null
3261	result == null
3262	stroke == null
3263	shape == null
3264	font == null
3265	paint == null
3266	generator == null
3267	getDataset() == null
3268	this.dataExtractOrder == TableOrder.BY_ROW
3269	this.dataExtractOrder == TableOrder.BY_COLUMN
3270	keys == null
3271	info != null
3272	DatasetUtilities.isEmptyOrNull(this.dataset)
3273	this.dataExtractOrder == TableOrder.BY_ROW
3274	this.maxValue == DEFAULT_MAX_VALUE
3275	nV != null
3276	v > this.maxValue
3277	info != null
3278	dataValue != null
3279	value >= 0
3280	entities != null
3281	this.dataExtractOrder == TableOrder.BY_ROW
3282	this.toolTipGenerator != null
3283	this.urlGenerator != null
3284	this.webFilled
3285	this.dataExtractOrder == TableOrder.BY_ROW
3286	this.dataExtractOrder == TableOrder.BY_COLUMN
3287	this.dataExtractOrder == TableOrder.BY_ROW
3288	labelX < plotArea.getCenterX()
3289	labelX == plotArea.getCenterX()
3290	labelY > plotArea.getCenterY()
3291	obj == this
3292	obj instanceof SpiderWebPlot
3293	super.equals(obj)
3294	this.dataExtractOrder.equals(that.dataExtractOrder)
3295	this.headPercent != that.headPercent
3296	this.interiorGap != that.interiorGap
3297	this.startAngle != that.startAngle
3298	this.direction.equals(that.direction)
3299	this.maxValue != that.maxValue
3300	this.webFilled != that.webFilled
3301	this.axisLabelGap != that.axisLabelGap
3302	PaintUtilities.equal(this.axisLinePaint, that.axisLinePaint)
3303	this.axisLineStroke.equals(that.axisLineStroke)
3304	ShapeUtilities.equal(this.legendItemShape, that.legendItemShape)
3305	PaintUtilities.equal(this.seriesPaint, that.seriesPaint)
3306	this.seriesPaintList.equals(that.seriesPaintList)
3307	PaintUtilities.equal(this.baseSeriesPaint, that.baseSeriesPaint)
3308	PaintUtilities.equal(this.seriesOutlinePaint, that.seriesOutlinePaint)
3309	this.seriesOutlinePaintList.equals(that.seriesOutlinePaintList)
3310	PaintUtilities.equal(this.baseSeriesOutlinePaint, that.baseSeriesOutlinePaint)
3311	ObjectUtilities.equal(this.seriesOutlineStroke, that.seriesOutlineStroke)
3312	this.seriesOutlineStrokeList.equals( that.seriesOutlineStrokeList)
3313	this.baseSeriesOutlineStroke.equals( that.baseSeriesOutlineStroke)
3314	this.labelFont.equals(that.labelFont)
3315	PaintUtilities.equal(this.labelPaint, that.labelPaint)
3316	this.labelGenerator.equals(that.labelGenerator)
3317	ObjectUtilities.equal(this.toolTipGenerator, that.toolTipGenerator)
3318	ObjectUtilities.equal(this.urlGenerator, that.urlGenerator)
3319	this.dataset != null
1479	year >= 1900
1479	year <= 9999
1480	month <= MonthConstants.DECEMBER
1480	month >= MonthConstants.JANUARY
1481	day >= 1
1481	day <= SerialDate.lastDayOfMonth(month, year)
1482	serial >= SERIAL_LOWER_BOUND
1482	serial <= SERIAL_UPPER_BOUND
1483	underestimatedYYYY == overestimatedYYYY
1484	isLeapYear(this.year)
1485	object instanceof SerialDate
1486	include == SerialDate.INCLUDE_BOTH
1487	include == SerialDate.INCLUDE_FIRST
1488	include == SerialDate.INCLUDE_SECOND
1489	m > MonthConstants.FEBRUARY
1490	SerialDate.isLeapYear(y)
8366	this.renderAsPercentages
8367	n != null
8368	n != null
8369	n != null
8370	y1 >= 0.0
8371	y0 >= 0.0
8372	y2 >= 0.0
8373	y0 >= 0.0
8374	y2 >= 0.0
8375	pass == 0
8376	entities != null
8377	this.renderAsPercentages
8378	n != null
8379	this.renderAsPercentages
8380	isSeriesVisible(i)
8381	n != null
8382	Double.isNaN(v)
8383	v >= 0.0
8384	stack1[0] == 0.0
8384	stack2[0] == 0.0
8385	stack2[1] == 0.0
8385	stack1[1] == 0.0
8386	obj == this
8387	obj instanceof StackedAreaRenderer
8388	this.renderAsPercentages != that.renderAsPercentages
8306	dataset == null
8307	this.renderAsPercentages
8308	data != null
8309	orientation == PlotOrientation.HORIZONTAL
8310	orientation == PlotOrientation.VERTICAL
8311	columns > 1
8312	columns > 0
8313	isSeriesVisible(row)
8314	dataValue == null
8315	this.renderAsPercentages
8316	isSeriesVisible(i)
8316	v != null
8317	this.renderAsPercentages
8318	d > 0
8319	orientation == PlotOrientation.HORIZONTAL
8320	positive
8320	inverted
8320	inverted
8320	positive
8321	positive
8321	inverted
8321	positive
8321	inverted
8322	positive
8323	orientation == PlotOrientation.HORIZONTAL
8324	pass == 0
8325	getShadowsVisible()
8326	pass == 1
8327	entities != null
8328	pass == 2
8329	generator != null
8329	isItemLabelVisible(row, column, selected)
8330	obj == this
8331	obj instanceof StackedBarRenderer
8332	this.renderAsPercentages != that.renderAsPercentages
8120	dataset == null
8121	this.renderAsPercentages
8122	dataset != null
8123	orientation == PlotOrientation.HORIZONTAL
8124	orientation == PlotOrientation.VERTICAL
8125	columns > 1
8126	columns > 0
8127	asPercentages
8128	n == null
8129	asPercentages
8130	this.ignoreZeroValues
8130	v > 0.0
8130	v >= 0.0
8131	baseIndex < 0
8132	v < 0.0
8133	baseIndex < 0
8134	row < dataset.getRowCount() - 1
8135	orientation == PlotOrientation.HORIZONTAL
8136	curr[0] == null
8137	series < 0
8138	fillPaintDark instanceof Color
8139	drawOutlines
8140	f == 5
8141	drawOutlines
8142	entities != null
8143	isItemLabelVisible(series, column, false)
8143	generator != null
8144	inverted
8145	curr[0] == null
8146	series < 0
8147	fillPaintDark instanceof Color
8148	drawOutlines
8149	f == 5
8150	drawOutlines
8151	entities != null
8152	generator != null
8152	isItemLabelVisible(series, column, false)
8153	inverted
8154	obj == this
8155	obj instanceof StackedBarRenderer3D
8156	this.renderAsPercentages != that.getRenderAsPercentages()
8157	this.ignoreZeroValues != that.ignoreZeroValues
7189	dataset != null
7190	Double.isNaN(y1)
7191	pass == 0
7192	item == 0
7193	orientation == PlotOrientation.VERTICAL
7194	orientation == PlotOrientation.HORIZONTAL
7195	orientation == PlotOrientation.VERTICAL
7196	orientation == PlotOrientation.HORIZONTAL
7197	getPlotLines()
7198	item > 0
7199	orientation == PlotOrientation.VERTICAL
7200	orientation == PlotOrientation.HORIZONTAL
7201	item > 0
7201	item == (itemCount - 1)
7201	getPlotArea()
7202	orientation == PlotOrientation.VERTICAL
7203	orientation == PlotOrientation.HORIZONTAL
7204	series != 0
7205	isOutline()
7206	pass == 1
7207	getPlotShapes()
7208	plot.getOrientation() == PlotOrientation.VERTICAL
7209	plot.getOrientation() == PlotOrientation.HORIZONTAL
7210	nullPoint
7211	getShapePaint() != null
7212	getShapeStroke() != null
7213	plot.getOrientation() == PlotOrientation.VERTICAL
7214	plot.getOrientation() == PlotOrientation.HORIZONTAL
7215	entities != null
7216	Double.isNaN(value)
7217	obj == this
7218	super.equals(obj)
7218	obj instanceof StackedXYAreaRenderer
7219	PaintUtilities.equal(this.shapePaint, that.shapePaint)
7220	ObjectUtilities.equal(this.shapeStroke, that.shapeStroke)
7594	dataset == null
7595	min == Double.POSITIVE_INFINITY
7596	state.getInfo() != null
7597	Double.isNaN(y1)
7598	Double.isNaN(y0)
7599	Double.isNaN(y2)
7600	this.roundXCoordinates
7601	y1 >= 0.0
7602	y0 >= 0.0
7603	orientation == PlotOrientation.VERTICAL
7604	orientation == PlotOrientation.VERTICAL
7605	y2 >= 0.0
7606	orientation == PlotOrientation.VERTICAL
7607	orientation == PlotOrientation.VERTICAL
7608	y0 >= 0.0
7609	orientation == PlotOrientation.VERTICAL
7610	orientation == PlotOrientation.VERTICAL
7611	y2 >= 0.0
7612	orientation == PlotOrientation.VERTICAL
7613	orientation == PlotOrientation.VERTICAL
7614	pass == 0
7615	entities != null
7616	Double.isNaN(v)
7617	v >= 0.0
7618	stack1[0] == 0.0
7618	stack2[0] == 0.0
7619	stack2[1] == 0.0
7619	stack1[1] == 0.0
7620	obj == this
7621	obj instanceof StackedXYAreaRenderer2
7622	this.roundXCoordinates != that.roundXCoordinates
7536	dataset != null
7537	this.renderAsPercentages
7538	dataset instanceof TableXYDataset
7538	dataset instanceof IntervalXYDataset
7539	IntervalXYDataset.class.isAssignableFrom(dataset.getClass())
7540	TableXYDataset.class.isAssignableFrom(dataset.getClass())
7541	and
7542	Double.isNaN(value)
7543	this.renderAsPercentages
7544	Double.isNaN(v)
7545	this.renderAsPercentages
7546	v > 0
7547	value > 0.0
7548	Double.isNaN(startX)
7549	Double.isNaN(endX)
7550	getMargin() > 0.0
7551	orientation == PlotOrientation.HORIZONTAL
7552	orientation == PlotOrientation.VERTICAL
7553	orientation == PlotOrientation.HORIZONTAL
7554	inverted
7554	positive
7554	positive
7554	inverted
7555	inverted
7555	inverted
7555	positive
7555	positive
7556	pass == 0
7557	getShadowsVisible()
7558	pass == 1
7559	state.getInfo() != null
7560	entities != null
7561	pass == 2
7562	isItemLabelVisible(series, item, selected)
7563	obj == this
7564	obj instanceof StackedXYBarRenderer
7565	this.renderAsPercentages != that.renderAsPercentages
8568	t != null
8568	itemPaint instanceof GradientPaint
8569	renderer.isDrawBarOutline()
8570	stroke != null
8570	paint != null
8571	itemPaint instanceof Color
8572	c.getAlpha() == 0
8573	base == RectangleEdge.TOP
8574	pegShadow
8575	base == RectangleEdge.BOTTOM
8576	pegShadow
8577	base == RectangleEdge.LEFT
8578	pegShadow
8579	base == RectangleEdge.RIGHT
8580	pegShadow
8581	obj == this
8582	obj instanceof StandardBarPainter
2326	obj == this
2327	obj instanceof StandardCategoryItemLabelGenerator
2264	format == null
2265	dataset == null
2266	obj == this
2267	obj instanceof StandardCategorySeriesLabelGenerator
2268	this.formatPattern.equals(that.formatPattern)
2358	obj == this
2359	obj instanceof StandardCategoryToolTipGenerator
6340	prefix == null
6341	prefix == null
6342	seriesParameterName == null
6343	categoryParameterName == null
6344	obj == this
6345	obj instanceof StandardCategoryURLGenerator
6346	ObjectUtilities.equal(this.prefix, that.prefix)
6347	ObjectUtilities.equal(this.seriesParameterName, that.seriesParameterName)
6348	ObjectUtilities.equal(this.categoryParameterName, that.categoryParameterName)
6152	name == null
6153	font == null
6154	font == null
6155	font == null
6156	font == null
6157	paint == null
6158	paint == null
6159	paint == null
6160	paint == null
6161	paint == null
6162	paint == null
6163	paint == null
6164	style == null
6165	paint == null
6166	paint == null
6167	paint == null
6168	paint == null
6169	paint == null
6170	offset == null
6171	paint == null
6172	paint == null
6173	paint == null
6174	paint == null
6175	painter == null
6176	painter == null
6177	paint == null
6178	paint == null
6179	paint == null
6180	paint == null
6181	paint == null
6182	this.drawingSupplier instanceof PublicCloneable
6183	supplier == null
6184	chart == null
6185	title != null
6186	plot != null
6187	title instanceof TextTitle
6188	title instanceof LegendTitle
6189	lt.getBackgroundPaint() != null
6190	lt.getWrapper() != null
6191	title instanceof PaintScaleLegend
6192	axis != null
6193	title instanceof CompositeTitle
6194	b instanceof Title
6195	b instanceof Title
6196	b instanceof LabelBlock
6197	plot == null
6198	plot.getDrawingSupplier() != null
6199	plot.getBackgroundPaint() != null
6200	plot instanceof PiePlot
6201	plot instanceof MultiplePiePlot
6202	plot instanceof CategoryPlot
6203	plot instanceof XYPlot
6204	plot instanceof FastScatterPlot
6205	plot instanceof MeterPlot
6206	plot instanceof ThermometerPlot
6207	plot instanceof SpiderWebPlot
6208	plot instanceof PolarPlot
6209	plot.getAutoPopulateSectionPaint()
6210	plot.getAutoPopulateSectionOutlinePaint()
6211	plot.getAutoPopulateSectionOutlineStroke()
6212	axis != null
6213	axis != null
6214	r != null
6215	plot instanceof CombinedDomainCategoryPlot
6216	subplot != null
6217	plot instanceof CombinedRangeCategoryPlot
6218	subplot != null
6219	axis != null
6220	axis != null
6221	r != null
6222	plot instanceof CombinedDomainXYPlot
6223	subplot != null
6224	plot instanceof CombinedRangeXYPlot
6225	subplot != null
6226	xAxis != null
6227	yAxis != null
6228	axis != null
6229	axis != null
6230	axis instanceof SubCategoryAxis
6231	axis instanceof SymbolAxis
6232	axis instanceof PeriodAxis
6233	renderer.getAutoPopulateSeriesPaint()
6234	renderer.getAutoPopulateSeriesStroke()
6235	renderer == null
6236	renderer instanceof AbstractRenderer
6237	renderer instanceof BarRenderer
6238	renderer instanceof BarRenderer3D
6239	renderer instanceof LineRenderer3D
6240	renderer instanceof StatisticalBarRenderer
6241	renderer instanceof MinMaxCategoryRenderer
6242	renderer == null
6243	renderer instanceof AbstractRenderer
6244	renderer instanceof XYBarRenderer
6245	annotation == null
6246	annotation instanceof XYTextAnnotation
6247	obj == this
6248	obj instanceof StandardChartTheme
6249	this.name.equals(that.name)
6250	this.extraLargeFont.equals(that.extraLargeFont)
6251	this.largeFont.equals(that.largeFont)
6252	this.regularFont.equals(that.regularFont)
6253	this.smallFont.equals(that.smallFont)
6254	PaintUtilities.equal(this.titlePaint, that.titlePaint)
6255	PaintUtilities.equal(this.subtitlePaint, that.subtitlePaint)
6256	PaintUtilities.equal(this.chartBackgroundPaint, that.chartBackgroundPaint)
6257	PaintUtilities.equal(this.legendBackgroundPaint, that.legendBackgroundPaint)
6258	PaintUtilities.equal(this.legendItemPaint, that.legendItemPaint)
6259	this.drawingSupplier.equals(that.drawingSupplier)
6260	PaintUtilities.equal(this.plotBackgroundPaint, that.plotBackgroundPaint)
6261	PaintUtilities.equal(this.plotOutlinePaint, that.plotOutlinePaint)
6262	this.labelLinkStyle.equals(that.labelLinkStyle)
6263	PaintUtilities.equal(this.labelLinkPaint, that.labelLinkPaint)
6264	PaintUtilities.equal(this.domainGridlinePaint, that.domainGridlinePaint)
6265	PaintUtilities.equal(this.rangeGridlinePaint, that.rangeGridlinePaint)
6266	PaintUtilities.equal(this.crosshairPaint, that.crosshairPaint)
6267	this.axisOffset.equals(that.axisOffset)
6268	PaintUtilities.equal(this.axisLabelPaint, that.axisLabelPaint)
6269	PaintUtilities.equal(this.tickLabelPaint, that.tickLabelPaint)
6270	PaintUtilities.equal(this.itemLabelPaint, that.itemLabelPaint)
6271	this.shadowVisible != that.shadowVisible
6272	PaintUtilities.equal(this.shadowPaint, that.shadowPaint)
6273	this.barPainter.equals(that.barPainter)
6274	this.xyBarPainter.equals(that.xyBarPainter)
6275	PaintUtilities.equal(this.thermometerPaint, that.thermometerPaint)
6276	PaintUtilities.equal(this.wallPaint, that.wallPaint)
6277	PaintUtilities.equal(this.errorIndicatorPaint, that.errorIndicatorPaint)
6278	PaintUtilities.equal(this.gridBandPaint, that.gridBandPaint)
6279	PaintUtilities.equal(this.gridBandAlternatePaint, that.gridBandAlternatePaint)
2307	labelTemplate == null
2308	numberFormat == null
2309	obj == this
2310	obj instanceof StandardCrosshairLabelGenerator
2311	this.labelTemplate.equals(that.labelTemplate)
2312	this.numberFormat.equals(that.numberFormat)
4059	radius <= 0
4060	paint == null
4061	paint == null
4062	stroke == null
4063	obj == this
4064	obj instanceof StandardDialFrame
4065	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
4066	PaintUtilities.equal(this.foregroundPaint, that.foregroundPaint)
4067	this.radius != that.radius
4068	this.stroke.equals(that.stroke)
4033	paint == null
4034	bound >= this.upperBound
4035	bound <= this.lowerBound
4036	lower >= upper
4037	paint == null
4038	scale == null
4039	obj == this
4040	obj instanceof StandardDialRange
4041	this.scaleIndex != that.scaleIndex
4042	this.lowerBound != that.lowerBound
4043	this.upperBound != that.upperBound
4044	PaintUtilities.equal(this.paint, that.paint)
4045	this.innerRadius != that.innerRadius
4046	this.outerRadius != that.outerRadius
3983	radius <= 0.0
3984	increment <= 0.0
3985	length < 0.0
3986	paint == null
3987	stroke == null
3988	count < 0
3989	length < 0.0
3990	paint == null
3991	stroke == null
3992	font == null
3993	paint == null
3994	formatter == null
3995	this.minorTickCount > 0
3995	this.minorTickLength > 0.0
3996	this.tickLabelsVisible
3997	this.firstTickLabelVisible
3997	firstLabel
3998	this.minorTickLength > 0.0
3998	this.minorTickCount > 0
3999	vv >= this.upperBound
4000	obj == this
4001	obj instanceof StandardDialScale
4002	this.lowerBound != that.lowerBound
4003	this.upperBound != that.upperBound
4004	this.startAngle != that.startAngle
4005	this.extent != that.extent
4006	this.tickRadius != that.tickRadius
4007	this.majorTickIncrement != that.majorTickIncrement
4008	this.majorTickLength != that.majorTickLength
4009	PaintUtilities.equal(this.majorTickPaint, that.majorTickPaint)
4010	this.majorTickStroke.equals(that.majorTickStroke)
4011	this.minorTickCount != that.minorTickCount
4012	this.minorTickLength != that.minorTickLength
4013	PaintUtilities.equal(this.minorTickPaint, that.minorTickPaint)
4014	this.minorTickStroke.equals(that.minorTickStroke)
4015	this.tickLabelsVisible != that.tickLabelsVisible
4016	this.tickLabelOffset != that.tickLabelOffset
4017	this.tickLabelFont.equals(that.tickLabelFont)
4018	PaintUtilities.equal(this.tickLabelPaint, that.tickLabelPaint)
5607	entity == null
5608	entity.getArea().contains(x, y)
5609	obj == this
5610	obj instanceof StandardEntityCollection
2048	type == null
2049	this.type.equals(GradientPaintTransformType.VERTICAL)
2050	this.type.equals(GradientPaintTransformType.HORIZONTAL)
2051	this.type.equals( GradientPaintTransformType.CENTER_HORIZONTAL)
2052	this.type.equals(GradientPaintTransformType.CENTER_VERTICAL)
2053	obj == this
2054	obj instanceof StandardGradientPaintTransformer
2055	this.type != that.type
2410	obj == this
2411	obj instanceof StandardPieSectionLabelGenerator
2412	this.attributedLabels.equals(that.attributedLabels)
2413	super.equals(obj)
6280	prefix == null
6281	categoryParameterName == null
6282	url.indexOf("?") > -1
6283	this.indexParameterName != null
6284	obj == this
6285	obj instanceof StandardPieURLGenerator
6286	this.prefix.equals(that.prefix)
6287	this.categoryParameterName.equals(that.categoryParameterName)
6288	ObjectUtilities.equal(this.indexParameterName, that.indexParameterName)
4970	obj == this
7802	t != null
7802	itemPaint instanceof GradientPaint
7803	renderer.isDrawBarOutline()
7804	stroke != null
7804	paint != null
7805	itemPaint instanceof Color
7806	c.getAlpha() == 0
7807	base == RectangleEdge.TOP
7808	pegShadow
7809	base == RectangleEdge.BOTTOM
7810	pegShadow
7811	base == RectangleEdge.LEFT
7812	pegShadow
7813	base == RectangleEdge.RIGHT
7814	pegShadow
7815	obj == this
7816	obj instanceof StandardXYBarPainter
2378	obj == this
2379	obj instanceof StandardXYItemLabelGenerator
7722	(type & SHAPES) != 0
7723	(type & LINES) != 0
7724	(type & IMAGES) != 0
7725	(type & DISCONTINUOUS) != 0
7726	this.baseShapesVisible != flag
7727	flag != null
7728	this.plotLines != flag
7729	thresholdType == null
7730	this.plotImages != flag
7731	this.plotDiscontinuous != flag
7732	line == null
7733	plot == null
7734	dataset != null
7735	getItemVisible(series, 0)
7736	getLegendItemToolTipGenerator() != null
7737	getLegendItemURLGenerator() != null
7738	labelPaint != null
7739	state.getInfo() != null
7740	Double.isNaN(x1)
7740	Double.isNaN(y1)
7741	getPlotLines()
7742	this.drawSeriesLineAsPath
7743	s.getSeriesIndex() != series
7744	Double.isNaN(transX1)
7744	itemVisible
7744	Double.isNaN(transY1)
7745	orientation == PlotOrientation.HORIZONTAL
7746	s.isLastPointGood()
7747	item == dataset.getItemCount(series) - 1
7748	s.seriesIndex == series
7749	item != 0
7749	itemVisible
7750	Double.isNaN(y0)
7750	Double.isNaN(x0)
7751	getPlotDiscontinuous()
7752	this.gapThresholdType == UnitType.ABSOLUTE
7753	drawLine
7754	Double.isNaN(transX0)
7754	Double.isNaN(transY0)
7754	Double.isNaN(transY1)
7754	Double.isNaN(transX1)
7755	orientation == PlotOrientation.HORIZONTAL
7756	orientation == PlotOrientation.VERTICAL
7757	state.workingLine.intersects(dataArea)
7758	itemVisible
7759	getBaseShapesVisible()
7760	orientation == PlotOrientation.HORIZONTAL
7761	orientation == PlotOrientation.VERTICAL
7762	shape.intersects(dataArea)
7763	getItemShapeFilled(series, item)
7764	getPlotImages()
7765	image != null
7766	orientation == PlotOrientation.HORIZONTAL
7767	isItemLabelVisible(series, item, selected)
7768	entities != null
7768	ShapeUtilities.isPointInRect(xx, yy, dataArea)
7769	obj == this
7770	obj instanceof StandardXYItemRenderer
7771	this.baseShapesVisible != that.baseShapesVisible
7772	this.plotLines != that.plotLines
7773	this.plotImages != that.plotImages
7774	this.plotDiscontinuous != that.plotDiscontinuous
7775	this.gapThresholdType != that.gapThresholdType
7776	this.gapThreshold != that.gapThreshold
7777	this.seriesShapesFilled.equals(that.seriesShapesFilled)
7778	this.baseShapesFilled != that.baseShapesFilled
7779	this.drawSeriesLineAsPath != that.drawSeriesLineAsPath
7780	ShapeUtilities.equal(this.legendLine, that.legendLine)
2405	format == null
2406	dataset == null
2407	obj == this
2408	obj instanceof StandardXYSeriesLabelGenerator
2409	this.formatPattern.equals(that.formatPattern)
2356	obj == this
2357	obj instanceof StandardXYToolTipGenerator
6301	prefix == null
6302	seriesParameterName == null
6303	itemParameterName == null
6304	obj == this
6305	obj instanceof StandardXYURLGenerator
6306	ObjectUtilities.equal(that.prefix, this.prefix)
6307	ObjectUtilities.equal(that.seriesParameterName, this.seriesParameterName)
6308	ObjectUtilities.equal(that.itemParameterName, this.itemParameterName)
2269	zFormat == null
2270	zFormat == null
2271	xf != null
2272	yf != null
2273	this.zDateFormat != null
2274	obj == this
2275	obj instanceof StandardXYZToolTipGenerator
2276	super.equals(obj)
2277	ObjectUtilities.equal(this.zFormat, that.zFormat)
2278	ObjectUtilities.equal(this.zDateFormat, that.zDateFormat)
8219	visibleRow < 0
8220	dataset instanceof StatisticalCategoryDataset
8221	orientation == PlotOrientation.HORIZONTAL
8222	orientation == PlotOrientation.VERTICAL
8223	seriesCount > 1
8224	meanValue == null
8225	uclip <= 0.0
8226	value >= uclip
8227	value <= lclip
8228	lclip <= 0.0
8229	value >= uclip
8230	value <= lclip
8231	value <= lclip
8232	value >= uclip
8233	itemPaint instanceof GradientPaint
8233	t != null
8234	isDrawBarOutline()
8234	state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD
8235	stroke != null
8235	paint != null
8236	n != null
8237	this.errorIndicatorPaint != null
8238	this.errorIndicatorStroke != null
8239	generator != null
8239	isItemLabelVisible(row, column, selected)
8240	entities != null
8241	seriesCount > 1
8242	meanValue == null
8243	uclip <= 0.0
8244	value >= uclip
8245	value <= lclip
8246	lclip <= 0.0
8247	value >= uclip
8248	value <= lclip
8249	value <= lclip
8250	value >= uclip
8251	t != null
8251	itemPaint instanceof GradientPaint
8252	isDrawBarOutline()
8252	state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD
8253	paint != null
8253	stroke != null
8254	n != null
8255	this.errorIndicatorPaint != null
8256	this.errorIndicatorStroke != null
8257	generator != null
8257	isItemLabelVisible(row, column, selected)
8258	entities != null
8259	obj == this
8260	obj instanceof StatisticalBarRenderer
8261	PaintUtilities.equal(this.errorIndicatorPaint, that.errorIndicatorPaint)
8262	ObjectUtilities.equal(this.errorIndicatorStroke, that.errorIndicatorStroke)
8412	getItemVisible(row, column)
8413	dataset instanceof StatisticalCategoryDataset
8414	visibleRow < 0
8415	meanValue == null
8416	getUseSeriesOffset()
8417	pass == 1
8417	sdv != null
8418	(meanValue.doubleValue() + valueDelta) > rangeAxis.getRange().getUpperBound()
8419	(meanValue.doubleValue() + valueDelta) < rangeAxis.getRange().getLowerBound()
8420	this.errorIndicatorPaint != null
8421	this.errorIndicatorStroke != null
8422	orientation == PlotOrientation.HORIZONTAL
8423	getItemShapeVisible(row, column)
8423	pass == 1
8424	orientation == PlotOrientation.HORIZONTAL
8425	orientation == PlotOrientation.VERTICAL
8426	getItemShapeFilled(row, column)
8427	getUseFillPaint()
8428	getDrawOutlines()
8429	getUseOutlinePaint()
8430	isItemLabelVisible(row, column, selected)
8431	orientation == PlotOrientation.HORIZONTAL
8432	orientation == PlotOrientation.VERTICAL
8433	pass == 0
8433	getItemLineVisible(row, column)
8434	column != 0
8435	previousValue != null
8436	getUseSeriesOffset()
8437	orientation == PlotOrientation.HORIZONTAL
8438	orientation == PlotOrientation.VERTICAL
8439	pass == 1
8440	entities != null
8441	obj == this
8442	obj instanceof StatisticalLineAndShapeRenderer
8443	PaintUtilities.equal(this.errorIndicatorPaint, that.errorIndicatorPaint)
8444	ObjectUtilities.equal(this.errorIndicatorStroke, that.errorIndicatorStroke)
791	values == null
792	values[i] != null
793	includeNullAndNaN
793	Double.isNaN(current)
794	values == null
795	object == null
796	includeNullAndNaN
797	object instanceof Number
798	Double.isNaN(value)
799	includeNullAndNaN
800	values != null
801	copyAndSort
802	count > 0
803	count % 2 == 1
804	count > 1
805	copyAndSort
806	count > 0
807	count % 2 == 1
808	count > 1
809	data == null
810	data.length == 0
811	xData == null
812	yData == null
813	xData.length != yData.length
814	xData == null
815	yData == null
816	xData.length != yData.length
817	data1 == null
818	data2 == null
819	data1.length != data2.length
820	data1[i] != null
821	data2[i] != null
822	xData.length != yData.length
823	period > xData.length
1935	base.length() < start.length()
1936	base.length() < end.length()
2068	obj == null
2069	obj == this
2070	obj instanceof StrokeList
2071	stroke != null
2072	index != -1
2097	key == null
2098	key == null
2099	obj == this
2100	obj instanceof StrokeMap
2101	this.store.size() != that.store.size()
2102	ObjectUtilities.equal(s1, s2)
6123	this.stroke != null
6124	value instanceof StrokeSample
4977	subCategory == null
4978	font == null
4979	paint == null
4980	space == null
4981	isVisible()
4982	RectangleEdge.isTopOrBottom(edge)
4983	RectangleEdge.isLeftOrRight(edge)
4984	RectangleEdge.isLeftOrRight(edge)
4985	isVisible()
4986	isAxisLineVisible()
4987	state == null
4988	dataset != null
4989	edge == RectangleEdge.TOP
4990	edge == RectangleEdge.BOTTOM
4991	edge == RectangleEdge.LEFT
4992	edge == RectangleEdge.RIGHT
4993	RectangleEdge.isTopOrBottom(edge)
4994	edge.equals(RectangleEdge.TOP)
4995	edge.equals(RectangleEdge.BOTTOM)
4996	edge == RectangleEdge.LEFT
4997	edge == RectangleEdge.RIGHT
4998	obj == this
4999	obj instanceof SubCategoryAxis
4999	super.equals(obj)
5000	this.subCategories.equals(axis.subCategories)
5001	this.subLabelFont.equals(axis.subLabelFont)
5002	this.subLabelPaint.equals(axis.subLabelPaint)
2433	quality > 1.0f
2433	quality < 0.0f
2434	bufferedImage == null
2435	outputStream == null
2436	bufferedImage == null
2437	outputStream == null
5026	this.gridBandsVisible != flag
5027	paint == null
5028	paint == null
5029	isVisible()
5030	this.gridBandsVisible
5031	RectangleEdge.isTopOrBottom(edge)
5032	RectangleEdge.isLeftOrRight(edge)
5033	getPlot().getOutlineStroke() != null
5034	currentGridBandIsDark
5035	outlineStroke instanceof BasicStroke
5035	outlineStroke != null
5036	currentGridBandIsDark
5037	plot == null
5038	plot instanceof ValueAxisPlot
5039	range < minRange
5040	getAutoRangeIncludesZero()
5041	getAutoRangeStickyZero()
5042	upper <= 0.0
5043	lower >= 0.0
5044	getAutoRangeStickyZero()
5045	upper <= 0.0
5046	lower >= 0.0
5047	RectangleEdge.isTopOrBottom(edge)
5048	RectangleEdge.isLeftOrRight(edge)
5049	count <= ValueAxis.MAXIMUM_TICK_COUNT
5050	formatter != null
5051	i > 0
5052	Math.abs(xx - previousDrawnTickLabelPos) < avgTickLabelLength
5053	tickLabelsOverlapping
5054	isVerticalTickLabels()
5055	edge == RectangleEdge.TOP
5056	edge == RectangleEdge.TOP
5057	count <= ValueAxis.MAXIMUM_TICK_COUNT
5058	formatter != null
5059	i > 0
5060	Math.abs(yy - previousDrawnTickLabelPos) < avgTickLabelLength
5061	tickLabelsOverlapping
5062	isVerticalTickLabels()
5063	edge == RectangleEdge.LEFT
5064	edge == RectangleEdge.LEFT
5065	obj == this
5066	obj instanceof SymbolAxis
5067	this.symbols.equals(that.symbols)
5068	this.gridBandsVisible != that.gridBandsVisible
5069	PaintUtilities.equal(this.gridBandPaint, that.gridBandPaint)
5070	PaintUtilities.equal(this.gridBandAlternatePaint, that.gridBandAlternatePaint)
2399	data instanceof YisSymbolic
2400	data instanceof XisSymbolic
2401	data instanceof TimeSeriesCollection
2402	nb <= 0
2403	obj == this
2404	obj instanceof SymbolicXYItemLabelGenerator
2157	this == obj
2158	obj instanceof TableOrder
2159	this.name.equals(that.name)
2160	this.equals(TableOrder.BY_ROW)
2161	this.equals(TableOrder.BY_COLUMN)
134	description == null
135	description == null
136	subtask == null
137	object == this
138	object instanceof Task
139	ObjectUtilities.equal(this.description, that.description)
140	ObjectUtilities.equal(this.duration, that.duration)
141	ObjectUtilities.equal(this.percentComplete, that.percentComplete)
142	ObjectUtilities.equal(this.subtasks, that.subtasks)
156	task == null
157	t.getDescription().equals(description)
158	obj == this
159	obj instanceof TaskSeries
160	super.equals(obj)
161	this.tasks.equals(that.tasks)
162	key == null
163	index >= 0
164	series < 0
164	series >= getSeriesCount()
165	columnKey == null
166	s.getKey().equals(rowKey)
167	series == null
168	index < 0
169	series == null
170	this.data.contains(series)
171	series < 0
171	series >= getSeriesCount()
172	task != null
173	duration != null
174	task != null
175	duration != null
176	task != null
177	task != null
178	task != null
179	sub != null
180	task != null
181	sub != null
182	task != null
183	sub != null
184	index < 0
185	obj == this
186	obj instanceof TaskSeriesCollection
187	ObjectUtilities.equal(this.data, that.data)
6441	this == obj
6442	obj instanceof TextAnchor
6443	this.name.equals(order.name)
6444	this.equals(TextAnchor.TOP_LEFT)
6445	this.equals(TextAnchor.TOP_CENTER)
6446	this.equals(TextAnchor.TOP_RIGHT)
6447	this.equals(TextAnchor.BOTTOM_LEFT)
6448	this.equals(TextAnchor.BOTTOM_CENTER)
6449	this.equals(TextAnchor.BOTTOM_RIGHT)
6450	this.equals(TextAnchor.BASELINE_LEFT)
6451	this.equals(TextAnchor.BASELINE_CENTER)
6452	this.equals(TextAnchor.BASELINE_RIGHT)
6453	this.equals(TextAnchor.CENTER_LEFT)
6454	this.equals(TextAnchor.CENTER)
6455	this.equals(TextAnchor.CENTER_RIGHT)
6456	this.equals(TextAnchor.HALF_ASCENT_LEFT)
6457	this.equals(TextAnchor.HALF_ASCENT_CENTER)
6458	this.equals(TextAnchor.HALF_ASCENT_RIGHT)
5817	text == null
5818	text == null
5819	font == null
5820	paint == null
5821	anchor == null
5822	obj == this
5823	obj instanceof TextAnnotation
5824	ObjectUtilities.equal(this.text, that.getText())
5825	ObjectUtilities.equal(this.font, that.getFont())
5826	PaintUtilities.equal(this.paint, that.getPaint())
5827	ObjectUtilities.equal(this.textAnchor, that.getTextAnchor())
5828	ObjectUtilities.equal(this.rotationAnchor, that.getRotationAnchor())
5829	this.rotationAngle != that.getRotationAngle()
6493	alignment == null
6494	index >= 0
6495	this.lineAlignment == HorizontalAlignment.CENTER
6496	this.lineAlignment == HorizontalAlignment.RIGHT
6497	anchor == TextBlockAnchor.CENTER
6497	anchor == TextBlockAnchor.BOTTOM_CENTER
6497	anchor == TextBlockAnchor.TOP_CENTER
6498	anchor == TextBlockAnchor.CENTER_RIGHT
6498	anchor == TextBlockAnchor.TOP_RIGHT
6498	anchor == TextBlockAnchor.BOTTOM_RIGHT
6499	anchor == TextBlockAnchor.TOP_RIGHT
6499	anchor == TextBlockAnchor.TOP_CENTER
6499	anchor == TextBlockAnchor.TOP_LEFT
6500	anchor == TextBlockAnchor.CENTER
6500	anchor == TextBlockAnchor.CENTER_RIGHT
6500	anchor == TextBlockAnchor.CENTER_LEFT
6501	anchor == TextBlockAnchor.BOTTOM_LEFT
6501	anchor == TextBlockAnchor.BOTTOM_CENTER
6501	anchor == TextBlockAnchor.BOTTOM_RIGHT
6502	obj == this
6503	obj instanceof TextBlock
6473	this == obj
6474	obj instanceof TextBlockAnchor
6475	this.name.equals(other.name)
6476	this.equals(TextBlockAnchor.TOP_CENTER)
6477	this.equals(TextBlockAnchor.TOP_LEFT)
6478	this.equals(TextBlockAnchor.TOP_RIGHT)
6479	this.equals(TextBlockAnchor.CENTER)
6480	this.equals(TextBlockAnchor.CENTER_LEFT)
6481	this.equals(TextBlockAnchor.CENTER_RIGHT)
6482	this.equals(TextBlockAnchor.BOTTOM_CENTER)
6483	this.equals(TextBlockAnchor.BOTTOM_LEFT)
6484	this.equals(TextBlockAnchor.BOTTOM_RIGHT)
6459	text != null
6460	this.shadowPaint != null
6461	this.backgroundPaint != null
6462	this.outlineStroke != null
6462	this.outlinePaint != null
6463	obj == this
6464	obj instanceof TextBox
6465	ObjectUtilities.equal(this.outlinePaint, that.outlinePaint)
6466	ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)
6467	ObjectUtilities.equal(this.interiorGap, that.interiorGap)
6468	ObjectUtilities.equal(this.backgroundPaint, that.backgroundPaint)
6469	ObjectUtilities.equal(this.shadowPaint, that.shadowPaint)
6470	this.shadowXOffset != that.shadowXOffset
6471	this.shadowYOffset != that.shadowYOffset
6472	ObjectUtilities.equal(this.textBlock, that.textBlock)
6387	text == null
6388	font == null
6389	paint == null
6390	anchor == TextAnchor.TOP_RIGHT
6390	anchor == TextAnchor.TOP_LEFT
6390	anchor == TextAnchor.TOP_CENTER
6391	anchor == TextAnchor.BOTTOM_CENTER
6391	anchor == TextAnchor.BOTTOM_LEFT
6391	anchor == TextAnchor.BOTTOM_RIGHT
6392	obj == null
6393	obj == this
6394	obj instanceof TextFragment
6395	this.text.equals(tf.text)
6396	this.font.equals(tf.font)
6397	this.paint.equals(tf.paint)
6485	text == null
6486	font == null
6487	paint == null
6488	this.fragments.size() > 0
6489	this.fragments.size() > 0
6490	obj == null
6491	obj == this
6492	obj instanceof TextLine
6563	text == null
6564	font == null
6565	paint == null
6566	text == null
6567	this.text.equals(text)
6568	alignment == null
6569	font == null
6570	this.font.equals(font)
6571	paint == null
6572	this.paint.equals(paint)
6573	w == LengthConstraintType.NONE
6574	h == LengthConstraintType.NONE
6575	h == LengthConstraintType.RANGE
6576	h == LengthConstraintType.FIXED
6577	w == LengthConstraintType.RANGE
6578	h == LengthConstraintType.NONE
6579	h == LengthConstraintType.RANGE
6580	h == LengthConstraintType.FIXED
6581	w == LengthConstraintType.FIXED
6582	h == LengthConstraintType.NONE
6583	h == LengthConstraintType.RANGE
6584	h == LengthConstraintType.FIXED
6585	position == RectangleEdge.TOP
6585	position == RectangleEdge.BOTTOM
6586	this.expandToFitSpace
6587	position == RectangleEdge.RIGHT
6587	position == RectangleEdge.LEFT
6588	this.expandToFitSpace
6589	widthRange.contains(s.getWidth())
6590	position == RectangleEdge.BOTTOM
6590	position == RectangleEdge.TOP
6591	this.expandToFitSpace
6592	position == RectangleEdge.RIGHT
6592	position == RectangleEdge.LEFT
6593	this.expandToFitSpace
6594	this.content == null
6595	this.text.equals("")
6596	params instanceof EntityBlockParams
6597	p.getGenerateEntities()
6598	this.backgroundPaint != null
6599	position == RectangleEdge.BOTTOM
6599	position == RectangleEdge.TOP
6600	position == RectangleEdge.LEFT
6600	position == RectangleEdge.RIGHT
6601	entity != null
6602	horizontalAlignment == HorizontalAlignment.LEFT
6603	horizontalAlignment == HorizontalAlignment.RIGHT
6604	horizontalAlignment == HorizontalAlignment.CENTER
6605	position == RectangleEdge.TOP
6606	position == RectangleEdge.BOTTOM
6607	horizontalAlignment == HorizontalAlignment.LEFT
6608	horizontalAlignment == HorizontalAlignment.CENTER
6609	horizontalAlignment == HorizontalAlignment.RIGHT
6610	verticalAlignment == VerticalAlignment.TOP
6611	verticalAlignment == VerticalAlignment.BOTTOM
6612	verticalAlignment == VerticalAlignment.CENTER
6613	position == RectangleEdge.LEFT
6614	position == RectangleEdge.RIGHT
6615	verticalAlignment == VerticalAlignment.TOP
6616	verticalAlignment == VerticalAlignment.CENTER
6617	verticalAlignment == VerticalAlignment.BOTTOM
6618	obj == this
6619	obj instanceof TextTitle
6620	ObjectUtilities.equal(this.text, that.text)
6621	ObjectUtilities.equal(this.font, that.font)
6622	PaintUtilities.equal(this.paint, that.paint)
6623	this.textAlignment != that.textAlignment
6624	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
6625	this.maximumLinesToDisplay != that.maximumLinesToDisplay
6626	this.expandToFitSpace != that.expandToFitSpace
6627	ObjectUtilities.equal(this.toolTipText, that.toolTipText)
6628	ObjectUtilities.equal(this.urlText, that.urlText)
6398	text == null
6399	index > start
6400	index < input.length() - 1
6401	index == start
6402	index < input.length() - 1
6403	next == BreakIterator.DONE
6404	current < length
6405	oldStr.length() > 3
6406	newline < 0
6407	x > width
6408	firstWord
6409	end <= start
6410	end > newline
6411	TextUtilities.useFontMetricsGetStringBounds
6412	anchor == TextAnchor.TOP_CENTER
6412	anchor == TextAnchor.CENTER
6412	anchor == TextAnchor.HALF_ASCENT_CENTER
6412	anchor == TextAnchor.BASELINE_CENTER
6412	anchor == TextAnchor.BOTTOM_CENTER
6413	anchor == TextAnchor.TOP_RIGHT
6413	anchor == TextAnchor.BASELINE_RIGHT
6413	anchor == TextAnchor.HALF_ASCENT_RIGHT
6413	anchor == TextAnchor.CENTER_RIGHT
6413	anchor == TextAnchor.BOTTOM_RIGHT
6414	anchor == TextAnchor.TOP_LEFT
6414	anchor == TextAnchor.TOP_RIGHT
6414	anchor == TextAnchor.TOP_CENTER
6415	anchor == TextAnchor.HALF_ASCENT_RIGHT
6415	anchor == TextAnchor.HALF_ASCENT_LEFT
6415	anchor == TextAnchor.HALF_ASCENT_CENTER
6416	anchor == TextAnchor.CENTER_RIGHT
6416	anchor == TextAnchor.CENTER_LEFT
6416	anchor == TextAnchor.CENTER
6417	anchor == TextAnchor.BASELINE_LEFT
6417	anchor == TextAnchor.BASELINE_RIGHT
6417	anchor == TextAnchor.BASELINE_CENTER
6418	anchor == TextAnchor.BOTTOM_LEFT
6418	anchor == TextAnchor.BOTTOM_CENTER
6418	anchor == TextAnchor.BOTTOM_RIGHT
6419	textBounds != null
6420	text.equals("")
6420	text == null
6421	useDrawRotatedStringWorkaround
6422	text == null
6422	text.equals("")
6423	text == null
6423	text.equals("")
6424	text == null
6424	text.equals("")
6425	anchor == TextAnchor.HALF_ASCENT_CENTER
6425	anchor == TextAnchor.BASELINE_CENTER
6425	anchor == TextAnchor.TOP_CENTER
6425	anchor == TextAnchor.CENTER
6425	anchor == TextAnchor.BOTTOM_CENTER
6426	anchor == TextAnchor.TOP_RIGHT
6426	anchor == TextAnchor.BASELINE_RIGHT
6426	anchor == TextAnchor.CENTER_RIGHT
6426	anchor == TextAnchor.BOTTOM_RIGHT
6426	anchor == TextAnchor.HALF_ASCENT_RIGHT
6427	anchor == TextAnchor.TOP_CENTER
6427	anchor == TextAnchor.TOP_LEFT
6427	anchor == TextAnchor.TOP_RIGHT
6428	anchor == TextAnchor.HALF_ASCENT_CENTER
6428	anchor == TextAnchor.HALF_ASCENT_RIGHT
6428	anchor == TextAnchor.HALF_ASCENT_LEFT
6429	anchor == TextAnchor.CENTER
6429	anchor == TextAnchor.CENTER_RIGHT
6429	anchor == TextAnchor.CENTER_LEFT
6430	anchor == TextAnchor.BASELINE_RIGHT
6430	anchor == TextAnchor.BASELINE_LEFT
6430	anchor == TextAnchor.BASELINE_CENTER
6431	anchor == TextAnchor.BOTTOM_CENTER
6431	anchor == TextAnchor.BOTTOM_LEFT
6431	anchor == TextAnchor.BOTTOM_RIGHT
6432	anchor == TextAnchor.TOP_LEFT
6432	anchor == TextAnchor.BOTTOM_LEFT
6432	anchor == TextAnchor.HALF_ASCENT_LEFT
6432	anchor == TextAnchor.BASELINE_LEFT
6432	anchor == TextAnchor.CENTER_LEFT
6433	anchor == TextAnchor.TOP_CENTER
6433	anchor == TextAnchor.BOTTOM_CENTER
6433	anchor == TextAnchor.BASELINE_CENTER
6433	anchor == TextAnchor.CENTER
6433	anchor == TextAnchor.HALF_ASCENT_CENTER
6434	anchor == TextAnchor.BOTTOM_RIGHT
6434	anchor == TextAnchor.BASELINE_RIGHT
6434	anchor == TextAnchor.TOP_RIGHT
6434	anchor == TextAnchor.CENTER_RIGHT
6434	anchor == TextAnchor.HALF_ASCENT_RIGHT
6435	anchor == TextAnchor.TOP_LEFT
6435	anchor == TextAnchor.TOP_RIGHT
6435	anchor == TextAnchor.TOP_CENTER
6436	anchor == TextAnchor.CENTER_RIGHT
6436	anchor == TextAnchor.CENTER
6436	anchor == TextAnchor.CENTER_LEFT
6437	anchor == TextAnchor.HALF_ASCENT_LEFT
6437	anchor == TextAnchor.HALF_ASCENT_CENTER
6437	anchor == TextAnchor.HALF_ASCENT_RIGHT
6438	anchor == TextAnchor.BASELINE_RIGHT
6438	anchor == TextAnchor.BASELINE_LEFT
6438	anchor == TextAnchor.BASELINE_CENTER
6439	anchor == TextAnchor.BOTTOM_RIGHT
6439	anchor == TextAnchor.BOTTOM_LEFT
6439	anchor == TextAnchor.BOTTOM_CENTER
6440	text.equals("")
6440	text == null
2464	dataset != null
2465	existing != null
2466	dataset != null
2467	axis == null
2468	padding == null
2469	s != null
2470	paint != null
2471	u >= 0
2471	u < UNITS.length
2472	this.units != u
2473	location < 4
2473	location >= 0
2474	location >= 0
2474	location < 3
2475	f == null
2476	this.valueFont.equals(f)
2477	paint == null
2478	this.valuePaint.equals(paint)
2479	formatter == null
2480	paint == null
2481	range < 3
2481	range >= 0
2482	range >= 0
2482	range < 3
2483	range < this.subrangeInfo.length
2483	isValidNumber(low)
2483	isValidNumber(high)
2483	range >= 0
2484	high > low
2485	range >= 0
2485	range < this.subrangePaint.length
2486	range >= 0
2486	paint != null
2486	range < this.subrangePaint.length
2487	info != null
2488	this.dataset.getValue() != null
2488	this.dataset != null
2489	k < (getGap() + interior.getMinY())
2490	k < (stemBottom + getBulbRadius())
2491	this.subrangeIndicatorsVisible
2492	range.contains(value)
2493	range.contains(value)
2494	range.contains(value)
2495	this.rangeAxis != null
2495	this.axisLocation != NONE
2496	tickX1 > area.getMinX()
2497	this.dataset != null
2498	vn != null
2499	inSubrange(NORMAL, value)
2500	inSubrange(WARNING, value)
2501	inSubrange(CRITICAL, value)
2502	this.followDataInSubranges
2502	this.subrange >= 0
2503	this.useSubrangePaint
2504	inSubrange(NORMAL, value)
2505	inSubrange(WARNING, value)
2506	inSubrange(CRITICAL, value)
2507	obj == this
2508	obj instanceof ThermometerPlot
2509	super.equals(obj)
2510	ObjectUtilities.equal(this.rangeAxis, that.rangeAxis)
2511	this.axisLocation != that.axisLocation
2512	this.lowerBound != that.lowerBound
2513	this.upperBound != that.upperBound
2514	ObjectUtilities.equal(this.padding, that.padding)
2515	ObjectUtilities.equal(this.thermometerStroke, that.thermometerStroke)
2516	PaintUtilities.equal(this.thermometerPaint, that.thermometerPaint)
2517	this.units != that.units
2518	this.valueLocation != that.valueLocation
2519	ObjectUtilities.equal(this.valueFont, that.valueFont)
2520	PaintUtilities.equal(this.valuePaint, that.valuePaint)
2521	ObjectUtilities.equal(this.valueFormat, that.valueFormat)
2522	PaintUtilities.equal(this.mercuryPaint, that.mercuryPaint)
2523	this.subrange != that.subrange
2524	this.followDataInSubranges != that.followDataInSubranges
2525	equal(this.subrangeInfo, that.subrangeInfo)
2526	this.useSubrangePaint != that.useSubrangePaint
2527	this.bulbRadius != that.bulbRadius
2528	this.columnRadius != that.columnRadius
2529	this.gap != that.gap
2530	PaintUtilities.equal(this.subrangePaint[i], that.subrangePaint[i])
2531	array1 == null
2532	array2 == null
2533	array1.length != array2.length
2534	Arrays.equals(array1[i], array2[i])
2535	clone.dataset != null
2536	clone.rangeAxis != null
2537	this.rangeAxis != null
5285	textAnchor == null
5286	rotationAnchor == null
5287	this == obj
5288	obj instanceof Tick
5289	ObjectUtilities.equal(this.text, t.text)
5290	ObjectUtilities.equal(this.textAnchor, t.textAnchor)
5291	ObjectUtilities.equal(this.rotationAnchor, t.rotationAnchor)
5292	this.angle == t.angle
5394	this == obj
5395	obj instanceof TickType
5396	this.name.equals(that.name)
5397	this.equals(TickType.MAJOR)
5398	this.equals(TickType.MINOR)
4963	object instanceof TickUnit
4964	this.size > other.getSize()
4965	this.size < other.getSize()
4966	obj == this
4967	obj instanceof TickUnit
4968	this.size != that.size
4969	this.minorTickCount != that.minorTickCount
4435	unit == null
4436	index >= 0
4437	index >= 0
4438	obj == this
4439	obj instanceof TickUnits
1350	this == obj
1351	obj instanceof TimePeriodAnchor
1352	this.name.equals(position.name)
1353	this.equals(TimePeriodAnchor.START)
1354	this.equals(TimePeriodAnchor.MIDDLE)
1355	this.equals(TimePeriodAnchor.END)
1491	period == null
1492	this == obj
1493	obj instanceof TimePeriodValue
1494	this.period.equals(timePeriodValue.period)
1494	this.period != null ? !this.period.equals(timePeriodValue.period) : timePeriodValue.period != null
1495	this.value.equals(timePeriodValue.value)
1495	this.value != null ? !this.value.equals(timePeriodValue.value) : timePeriodValue.value != null
1329	item == null
1330	this.minStartIndex >= 0
1331	start < minStart
1332	this.maxStartIndex >= 0
1333	start > maxStart
1334	this.minMiddleIndex >= 0
1335	middle < minMiddle
1336	this.maxMiddleIndex >= 0
1337	middle > maxMiddle
1338	this.minEndIndex >= 0
1339	end < minEnd
1340	this.maxEndIndex >= 0
1341	end > maxEnd
1342	obj == this
1343	obj instanceof TimePeriodValues
1344	super.equals(obj)
1345	ObjectUtilities.equal(this.getDomainDescription(), that.getDomainDescription())
1346	ObjectUtilities.equal(this.getRangeDescription(), that.getRangeDescription())
1347	count != that.getItemCount()
1348	getDataItem(i).equals(that.getDataItem(i))
1349	this.data.size() > 0
1391	series != null
1392	position == null
1393	series < 0
1393	series >= getSeriesCount()
1394	series == null
1395	series == null
1396	series != null
1397	this.xPosition == TimePeriodAnchor.START
1398	this.xPosition == TimePeriodAnchor.MIDDLE
1399	this.xPosition == TimePeriodAnchor.END
1400	r != null
1401	r != null
1402	count > 0
1403	includeInterval
1404	this.xPosition == TimePeriodAnchor.START
1405	this.xPosition == TimePeriodAnchor.MIDDLE
1406	this.xPosition == TimePeriodAnchor.END
1407	obj == this
1408	obj instanceof TimePeriodValuesCollection
1409	this.xPosition != that.xPosition
1410	ObjectUtilities.equal(this.data, that.data)
1115	maximum < 0
1116	count > maximum
1117	periods < 0
1118	index >= 0
1119	index >= 0
1120	index < 0
1121	period == null
1122	index >= 0
1123	item == null
1124	this.timePeriodClass == null
1125	this.timePeriodClass.equals(c)
1126	count == 0
1127	item.getPeriod().compareTo(last) > 0
1128	index < 0
1129	added
1130	getItemCount() > this.maximumItemCount
1131	notify
1132	index < 0
1133	oldYN != null
1134	Double.isNaN(oldY)
1135	iterate
1136	value != null
1137	oldItem != null
1138	item == null
1139	this.timePeriodClass == null
1140	this.timePeriodClass.equals(periodClass)
1141	index >= 0
1142	Double.isNaN(oldY)
1143	iterate
1144	item.getValue() != null
1145	getItemCount() > this.maximumItemCount
1146	getItemCount() > 1
1147	removed
1148	notify
1149	this.data.isEmpty()
1150	removed
1151	notify
1152	this.data.size() > 0
1153	index >= 0
1154	this.data.isEmpty()
1155	end < start
1156	this.data.isEmpty()
1157	notify
1158	start < 0
1159	end < start
1160	this.data.size() > 0
1161	start == null
1162	end == null
1163	start.compareTo(end) > 0
1164	startIndex < 0
1165	startIndex == this.data.size()
1166	endIndex < 0
1167	endIndex < 0
1167	endIndex < startIndex
1168	emptyRange
1169	obj == this
1170	obj instanceof TimeSeries
1171	ObjectUtilities.equal(getDomainDescription(), that.getDomainDescription())
1172	ObjectUtilities.equal(getRangeDescription(), that.getRangeDescription())
1173	ObjectUtilities.equal(this.timePeriodClass, that.timePeriodClass)
1174	getMaximumItemAge() != that.getMaximumItemAge()
1175	getMaximumItemCount() != that.getMaximumItemCount()
1176	count != that.getItemCount()
1177	ObjectUtilities.equal(this.data, that.data)
1178	count > 0
1179	count > 1
1180	count > 2
1181	item.getValue() != null
1182	yN != null
1183	Double.isNaN(y)
1184	y <= this.minY
1184	y >= this.maxY
1185	Double.isNaN(a)
1186	Double.isNaN(b)
1187	Double.isNaN(a)
1188	Double.isNaN(b)
2431	r instanceof XYLineAndShapeRenderer
1304	zone == null
1305	series != null
1306	anchor == null
1307	series == null
1308	series < 0
1308	series >= getSeriesCount()
1309	k != null
1309	k.equals(key)
1310	series == null
1311	series == null
1312	series != null
1313	this.xPosition == TimePeriodAnchor.START
1314	this.xPosition == TimePeriodAnchor.MIDDLE
1315	this.xPosition == TimePeriodAnchor.END
1316	notify
1317	m <= milliseconds
1318	m >= milliseconds
1319	r != null
1320	r != null
1321	count > 0
1322	includeInterval
1323	count > 0
1324	includeInterval
1325	obj == this
1326	obj instanceof TimeSeriesCollection
1327	this.xPosition != that.xPosition
1328	ObjectUtilities.equal(this.data, that.data)
1220	period == null
1221	this == obj
1222	obj instanceof TimeSeriesDataItem
1223	this.period.equals(that.period)
1224	ObjectUtilities.equal(this.value, that.value)
1225	this.selected != that.selected
1226	o1 instanceof TimeSeriesDataItem
1279	column == 0
1280	column == 1
1281	column == 0
1282	column == 1
1283	row < this.series.getItemCount()
1284	column == 0
1285	column == 1
1286	column == 0
1287	column == 1
1288	this.editable
1289	column == 0
1289	column == 1
1290	row < this.series.getItemCount()
1291	column == 1
1292	column == 0
1293	column == 1
6329	dateFormat == null
6330	prefix == null
6331	seriesParameterName == null
6332	itemParameterName == null
6333	seriesKey != null
6334	obj == this
6335	obj instanceof TimeSeriesURLGenerator
6336	this.dateFormat.equals(that.dateFormat)
6337	this.itemParameterName.equals(that.itemParameterName)
6338	this.prefix.equals(that.prefix)
6339	this.seriesParameterName.equals(that.seriesParameterName)
1227	zone == null
1228	locale == null
1229	anchor == null
1230	period instanceof RegularTimePeriod
1231	notify
1232	notify
1233	this.values.getRowCount() > 0
1234	this.xPosition == TimePeriodAnchor.START
1235	this.xPosition == TimePeriodAnchor.MIDDLE
1236	this.xPosition == TimePeriodAnchor.END
1237	r != null
1238	r != null
1239	keys.isEmpty()
1240	this.domainIsPointsInTime
1240	includeInterval
1241	obj == this
1242	obj instanceof TimeTableXYDataset
1243	this.domainIsPointsInTime != that.domainIsPointsInTime
1244	this.xPosition != that.xPosition
1245	this.workingCalendar.getTimeZone().equals( that.workingCalendar.getTimeZone())
1246	this.values.equals(that.values)
6670	position == null
6671	horizontalAlignment == null
6672	verticalAlignment == null
6673	padding == null
6674	position == null
6675	this.position != position
6676	alignment == null
6677	this.horizontalAlignment != alignment
6678	alignment == null
6679	this.verticalAlignment != alignment
6680	flag
6681	this.notify
6682	listeners[i] == TitleChangeListener.class
6683	obj == this
6684	obj instanceof Title
6685	this.visible != that.visible
6686	this.position != that.position
6687	this.horizontalAlignment != that.horizontalAlignment
6688	this.verticalAlignment != that.verticalAlignment
6689	this.notify != that.notify
5636	title == null
5637	obj == this
5638	obj instanceof TitleEntity
5639	getArea().equals(that.getArea())
5640	ObjectUtilities.equal(getToolTipText(), that.getToolTipText())
5641	ObjectUtilities.equal(getURLText(), that.getURLText())
5642	this.title.equals(that.title)
1982	obj == this
1983	obj instanceof UnitType
1984	this.name.equals(that.name)
1985	this.equals(UnitType.ABSOLUTE)
1986	this.equals(UnitType.RELATIVE)
4741	this.verticalTickLabels != flag
4742	arrow == null
4743	arrow == null
4744	arrow == null
4745	arrow == null
4746	edge == RectangleEdge.TOP
4747	edge == RectangleEdge.BOTTOM
4748	edge == RectangleEdge.LEFT
4749	edge == RectangleEdge.RIGHT
4750	this.positiveArrowVisible
4751	this.inverted
4752	this.negativeArrowVisible
4753	this.inverted
4754	drawUpOrRight
4755	edge == RectangleEdge.TOP
4755	edge == RectangleEdge.BOTTOM
4756	edge == RectangleEdge.RIGHT
4756	edge == RectangleEdge.LEFT
4757	drawDownOrLeft
4758	edge == RectangleEdge.BOTTOM
4758	edge == RectangleEdge.TOP
4759	edge == RectangleEdge.RIGHT
4759	edge == RectangleEdge.LEFT
4760	edge == RectangleEdge.TOP
4761	edge == RectangleEdge.BOTTOM
4762	edge == RectangleEdge.LEFT
4763	edge == RectangleEdge.RIGHT
4764	isAxisLineVisible()
4765	isTickLabelsVisible()
4766	isMinorTickMarksVisible()
4766	tick.getTickType().equals(TickType.MINOR)
4766	tick.getTickType().equals( TickType.MAJOR)
4766	isTickMarksVisible()
4767	edge == RectangleEdge.LEFT
4768	edge == RectangleEdge.RIGHT
4769	edge == RectangleEdge.TOP
4770	edge == RectangleEdge.BOTTOM
4771	isTickLabelsVisible()
4772	edge == RectangleEdge.LEFT
4773	edge == RectangleEdge.RIGHT
4774	edge == RectangleEdge.TOP
4775	edge == RectangleEdge.BOTTOM
4776	space == null
4777	isVisible()
4778	dimension > 0.0
4779	isTickLabelsVisible()
4780	RectangleEdge.isTopOrBottom(edge)
4781	RectangleEdge.isLeftOrRight(edge)
4782	RectangleEdge.isTopOrBottom(edge)
4783	RectangleEdge.isLeftOrRight(edge)
4784	vertical
4785	labelBounds.getWidth() + insets.getTop() + insets.getBottom() > maxHeight
4786	vertical
4787	labelBounds.getWidth() + insets.getLeft() + insets.getRight() > maxWidth
4788	this.inverted != flag
4789	this.autoRange != auto
4790	this.autoRange
4791	notify
4792	size <= 0.0
4793	this.autoRangeMinimumSize != size
4794	this.autoRange
4795	notify
4796	range == null
4797	isAutoRange()
4798	isAutoRange()
4799	isAutoRange()
4800	this.range.getUpperBound() > min
4801	this.range.getLowerBound() < max
4802	range == null
4803	turnOffAutoRange
4804	notify
4805	range == null
4806	this.autoTickUnitSelection != flag
4807	notify
4808	percent > 0.0
4809	percent > 0.0
4810	isInverted()
4811	obj == this
4812	obj instanceof ValueAxis
4813	this.positiveArrowVisible != that.positiveArrowVisible
4814	this.negativeArrowVisible != that.negativeArrowVisible
4815	this.inverted != that.inverted
4816	ObjectUtilities.equal(this.range, that.range)
4816	this.autoRange
4817	this.autoRange != that.autoRange
4818	this.autoRangeMinimumSize != that.autoRangeMinimumSize
4819	this.defaultAutoRange.equals(that.defaultAutoRange)
4820	this.upperMargin != that.upperMargin
4821	this.lowerMargin != that.lowerMargin
4822	this.fixedAutoRange != that.fixedAutoRange
4823	this.autoTickUnitSelection != that.autoTickUnitSelection
4824	ObjectUtilities.equal(this.standardTickUnits, that.standardTickUnits)
4825	this.verticalTickLabels != that.verticalTickLabels
4826	this.minorTickCount != that.minorTickCount
44	qName.equals(VALUE_TAG)
45	qName.equals(VALUE_TAG)
46	((Double) value).isNaN()
47	this.currentText != null
3770	obj == this
3771	super.equals(obj)
3772	obj instanceof ValueMarker
3773	this.value != that.value
4427	obj == this
4428	obj instanceof ValueTick
4429	this.value != that.value
4430	this.tickType.equals(that.tickType)
363	obj == this
364	obj instanceof Vector
365	this.x != that.x
366	this.y != that.y
221	vi != null
222	vi != null
8078	dataset == null
8079	dataset instanceof VectorXYDataset
8080	delta < 0.0
8081	minimum > maximum
8082	dataset == null
8083	dataset instanceof VectorXYDataset
8084	delta < 0.0
8085	minimum > maximum
8086	dataset instanceof VectorXYDataset
8087	orientation.equals(PlotOrientation.HORIZONTAL)
8088	dxx != 0.0
8089	orientation == PlotOrientation.VERTICAL
8090	state.getInfo() != null
8091	entities != null
8092	obj == this
8093	obj instanceof VectorRenderer
8094	this.baseLength != that.baseLength
8095	this.headLength != that.headLength
305	series == null
306	series == null
307	removed
308	series >= getSeriesCount()
308	series < 0
309	series == null
310	obj == this
311	obj instanceof VectorSeriesCollection
2145	this == obj
2146	obj instanceof VerticalAlignment
2147	this.name.equals(alignment.name)
2148	this.equals(VerticalAlignment.TOP)
2149	this.equals(VerticalAlignment.BOTTOM)
2150	this.equals(VerticalAlignment.CENTER)
1533	chipSpace == null
1534	isMaxValue(value)
1535	isMinValue(value)
1536	value != null
1537	rowIndex < 0
1538	colIndex < 0
1539	check.doubleValue() > this.maxValue.doubleValue()
1540	check.doubleValue() < this.minValue.doubleValue()
3371	dataset != null
3372	renderer != null
3373	this.dataset != null
3374	dataset != null
3375	this.renderer != null
3376	renderer != null
3377	b1
3377	b2
3378	info != null
3379	this.dataset != null
3380	plotArea.getWidth() != plotArea.getHeight()
3381	plotArea.getWidth() > plotArea.getHeight()
3382	plotArea.getWidth() == minor
3383	this.dataset.getChipValue(x - 1, ychips - y - 1) != null
3384	plotArea.getWidth() != plotArea.getHeight()
3385	plotArea.getWidth() > plotArea.getHeight()
3386	plotArea.getWidth() == minor
3387	this.orientation == PlotOrientation.HORIZONTAL
7090	paintLimit == null
7091	paintIndexMethod != null
7092	isMethodValid(paintIndexMethod.intValue())
7093	p != null
7094	this.plot == null
7095	uniqueValues.size() <= this.paintLimit
7096	++count % valuesPerColor == 0
7097	paint > this.paintLimit
7098	paint > this.paintLimit
7099	this.paintIndex != null
7099	this.paintIndex.size() > 0
7100	this.paintIndex.size() <= this.paintLimit
7101	unique.add(entry.getValue())
7102	((Integer) entry.getValue()).equals(index)
7103	((Number) entry.getKey()).doubleValue() < minValue
7104	((Integer) entry.getValue()).equals(index)
7105	((Number) entry.getKey()).doubleValue() > maxValue
8333	firstBarPaint == null
8334	positiveBarPaint == null
8335	negativeBarPaint == null
8336	lastBarPaint == null
8337	paint == null
8338	paint == null
8339	paint == null
8340	paint == null
8341	dataset == null
8342	n != null
8343	column == columnCount - 1
8344	allItemsNull
8345	column == dataset.getColumnCount() - 1
8346	n != null
8347	j2dy1 < j2dy0
8348	orientation == PlotOrientation.HORIZONTAL
8349	orientation == PlotOrientation.VERTICAL
8350	column == 0
8351	column == categoryCount - 1
8352	valDiff < 0.0
8353	valDiff > 0.0
8354	getGradientPaintTransformer() != null
8354	seriesPaint instanceof GradientPaint
8355	isDrawBarOutline()
8355	state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD
8356	paint != null
8356	stroke != null
8357	generator != null
8357	isItemLabelVisible(row, column, selected)
8358	entities != null
8359	obj == this
8360	super.equals(obj)
8361	obj instanceof WaterfallBarRenderer
8362	PaintUtilities.equal(this.firstBarPaint, that.firstBarPaint)
8363	PaintUtilities.equal(this.lastBarPaint, that.lastBarPaint)
8364	PaintUtilities.equal(this.positiveBarPaint, that.positiveBarPaint)
8365	PaintUtilities.equal(this.negativeBarPaint, that.negativeBarPaint)
1411	week > LAST_WEEK_IN_YEAR
1411	week < FIRST_WEEK_IN_YEAR
1412	week < FIRST_WEEK_IN_YEAR
1412	week > LAST_WEEK_IN_YEAR
1413	time == null
1414	zone == null
1415	locale == null
1416	calendar.get(Calendar.MONTH) == Calendar.DECEMBER
1416	tempWeek == 1
1417	this.week >= 52
1417	calendar.get(Calendar.MONTH) == Calendar.JANUARY
1418	this.week != FIRST_WEEK_IN_YEAR
1419	this.year > 1900
1420	this.week < 52
1421	this.week < actualMaxWeek
1422	this.year < 9999
1423	obj == this
1424	obj instanceof Week
1425	this.week != that.week
1426	this.year != that.year
1427	o1 instanceof Week
1428	result == 0
1429	o1 instanceof RegularTimePeriod
1430	s != null
1431	i != -1
1432	y != null
1433	w == -1
1434	y != null
1435	w == -1
1436	result == -1
1437	result == -1
1438	result == -1
1439	result < 1
1439	result > LAST_WEEK_IN_YEAR
5463	plotArea != null
5463	rotate != null
5464	object == null
5465	object == this
5466	super.equals(object)
5466	object instanceof WindNeedle
360	interval != null
361	interval != null
362	interval != null
334	series == null
335	series >= getSeriesCount()
335	series < 0
336	series >= getSeriesCount()
336	series < 0
337	series == null
338	this.data.contains(series)
339	obj == this
340	obj instanceof XIntervalSeriesCollection
5643	obj == this
5644	super.equals(obj)
5645	obj instanceof XYAnnotationEntity
5646	this.rendererIndex != that.rendererIndex
7241	type == SHAPES
7242	type == LINES
7243	type == SHAPES_AND_LINES
7244	type == AREA
7245	type == AREA_AND_SHAPES
7246	area == null
7247	transformer == null
7248	xyplot != null
7249	dataset != null
7250	getLegendItemToolTipGenerator() != null
7251	getLegendItemURLGenerator() != null
7252	labelPaint != null
7253	getItemVisible(series, item)
7254	Double.isNaN(y1)
7255	Double.isNaN(y0)
7256	Double.isNaN(y2)
7257	plot.getOrientation() == PlotOrientation.HORIZONTAL
7258	item == 0
7259	plot.getOrientation() == PlotOrientation.VERTICAL
7260	plot.getOrientation() == PlotOrientation.HORIZONTAL
7261	plot.getOrientation() == PlotOrientation.VERTICAL
7262	plot.getOrientation() == PlotOrientation.HORIZONTAL
7263	getPlotShapes()
7264	orientation == PlotOrientation.VERTICAL
7265	orientation == PlotOrientation.HORIZONTAL
7266	getPlotLines()
7267	item > 0
7268	plot.getOrientation() == PlotOrientation.VERTICAL
7269	plot.getOrientation() == PlotOrientation.HORIZONTAL
7270	getPlotArea()
7270	item > 0
7270	item == (itemCount - 1)
7271	orientation == PlotOrientation.VERTICAL
7272	orientation == PlotOrientation.HORIZONTAL
7273	this.useFillPaint
7274	paint instanceof GradientPaint
7275	isOutline()
7276	outlineStroke instanceof BasicStroke
7277	bs.getDashArray() != null
7278	hotspot != null
7278	entities != null
7279	obj == this
7280	obj instanceof XYAreaRenderer
7281	this.plotArea != that.plotArea
7282	this.plotLines != that.plotLines
7283	this.plotShapes != that.plotShapes
7284	this.showOutline != that.showOutline
7285	this.useFillPaint != that.useFillPaint
7286	this.gradientTransformer.equals(that.gradientTransformer)
7287	ShapeUtilities.equal(this.legendArea, that.legendArea)
7848	area == null
7849	xyplot != null
7850	dataset != null
7851	getLegendItemToolTipGenerator() != null
7852	getLegendItemURLGenerator() != null
7853	labelPaint != null
7854	getItemVisible(series, item)
7855	Double.isNaN(y1)
7856	Double.isNaN(y0)
7857	Double.isNaN(y2)
7858	plot.getOrientation() == PlotOrientation.HORIZONTAL
7859	isOutline()
7860	entities != null
7861	obj == this
7862	obj instanceof XYAreaRenderer2
7863	this.showOutline != that.showOutline
7864	ShapeUtilities.equal(this.legendArea, that.legendArea)
437	xnum != null
438	xnum != null
439	obj == this
440	obj instanceof XYBarDataset
441	this.underlying.equals(that.underlying)
442	this.barWidth != that.barWidth
443	this.underlying instanceof PublicCloneable
7992	painter == null
7993	this.useYInterval != use
7994	bar == null
7995	painter == null
7996	xyplot != null
7997	dataset != null
7998	getLegendItemToolTipGenerator() != null
7999	getLegendItemURLGenerator() != null
8000	this.drawBarOutline
8001	labelPaint != null
8002	getGradientPaintTransformer() != null
8003	getItemVisible(series, item)
8004	this.useYInterval
8005	Double.isNaN(value1)
8005	Double.isNaN(value0)
8006	value0 <= value1
8007	rangeAxis.getRange().intersects(value0, value1)
8008	rangeAxis.getRange().intersects(value1, value0)
8009	Double.isNaN(startX)
8010	Double.isNaN(endX)
8011	startX <= endX
8012	domainAxis.getRange().intersects(startX, endX)
8013	domainAxis.getRange().intersects(endX, startX)
8014	this.barAlignmentFactor <= 1.0
8014	this.barAlignmentFactor >= 0.0
8015	getMargin() > 0.0
8016	orientation == PlotOrientation.HORIZONTAL
8017	orientation == PlotOrientation.VERTICAL
8018	bar == null
8019	this.useYInterval
8020	plot.getOrientation() == PlotOrientation.HORIZONTAL
8021	inverted
8021	positive
8021	inverted
8021	positive
8022	inverted
8022	inverted
8022	positive
8022	positive
8023	getShadowsVisible()
8024	isItemLabelVisible(series, item, selected)
8025	entities != null
8026	generator == null
8027	label == null
8028	negative
8029	isInternalAnchor(position.getItemLabelAnchor())
8030	bounds != null
8031	bar.contains(bounds.getBounds2D())
8032	negative
8033	position != null
8034	position != null
8035	anchor == ItemLabelAnchor.CENTER
8036	anchor == ItemLabelAnchor.INSIDE1
8037	anchor == ItemLabelAnchor.INSIDE2
8038	anchor == ItemLabelAnchor.INSIDE3
8039	anchor == ItemLabelAnchor.INSIDE4
8040	anchor == ItemLabelAnchor.INSIDE5
8041	anchor == ItemLabelAnchor.INSIDE6
8042	anchor == ItemLabelAnchor.INSIDE7
8043	anchor == ItemLabelAnchor.INSIDE8
8044	anchor == ItemLabelAnchor.INSIDE9
8045	anchor == ItemLabelAnchor.INSIDE10
8046	anchor == ItemLabelAnchor.INSIDE11
8047	anchor == ItemLabelAnchor.INSIDE12
8048	anchor == ItemLabelAnchor.OUTSIDE1
8049	anchor == ItemLabelAnchor.OUTSIDE2
8050	anchor == ItemLabelAnchor.OUTSIDE3
8051	anchor == ItemLabelAnchor.OUTSIDE4
8052	anchor == ItemLabelAnchor.OUTSIDE5
8053	anchor == ItemLabelAnchor.OUTSIDE6
8054	anchor == ItemLabelAnchor.OUTSIDE7
8055	anchor == ItemLabelAnchor.OUTSIDE8
8056	anchor == ItemLabelAnchor.OUTSIDE9
8057	anchor == ItemLabelAnchor.OUTSIDE10
8058	anchor == ItemLabelAnchor.OUTSIDE11
8059	anchor == ItemLabelAnchor.OUTSIDE12
8060	dataset != null
8061	dataset != null
8062	this.gradientPaintTransformer != null
8063	obj == this
8064	obj instanceof XYBarRenderer
8065	this.base != that.base
8066	this.drawBarOutline != that.drawBarOutline
8067	this.margin != that.margin
8068	this.useYInterval != that.useYInterval
8069	ObjectUtilities.equal(this.gradientPaintTransformer, that.gradientPaintTransformer)
8070	ShapeUtilities.equal(this.legendBar, that.legendBar)
8071	ObjectUtilities.equal(this.positiveItemLabelPositionFallback, that.positiveItemLabelPositionFallback)
8072	ObjectUtilities.equal(this.negativeItemLabelPositionFallback, that.negativeItemLabelPositionFallback)
8073	this.barPainter.equals(that.barPainter)
8074	this.shadowsVisible != that.shadowsVisible
8075	this.shadowXOffset != that.shadowXOffset
8076	this.shadowYOffset != that.shadowYOffset
8077	this.barAlignmentFactor != that.barAlignmentFactor
7161	width <= 0.0
7162	height <= 0.0
7163	anchor == null
7164	this.blockAnchor.equals(anchor)
7165	scale == null
7166	this.blockAnchor.equals(RectangleAnchor.BOTTOM_LEFT)
7167	this.blockAnchor.equals(RectangleAnchor.BOTTOM)
7168	this.blockAnchor.equals(RectangleAnchor.BOTTOM_RIGHT)
7169	this.blockAnchor.equals(RectangleAnchor.LEFT)
7170	this.blockAnchor.equals(RectangleAnchor.CENTER)
7171	this.blockAnchor.equals(RectangleAnchor.RIGHT)
7172	this.blockAnchor.equals(RectangleAnchor.TOP_LEFT)
7173	this.blockAnchor.equals(RectangleAnchor.TOP)
7174	this.blockAnchor.equals(RectangleAnchor.TOP_RIGHT)
7175	dataset != null
7176	r == null
7177	dataset != null
7178	r == null
7179	dataset instanceof XYZDataset
7180	orientation.equals(PlotOrientation.HORIZONTAL)
7181	entities != null
7182	obj == this
7183	obj instanceof XYBlockRenderer
7184	this.blockHeight != that.blockHeight
7185	this.blockWidth != that.blockWidth
7186	this.blockAnchor.equals(that.blockAnchor)
7187	this.paintScale.equals(that.paintScale)
7188	this.paintScale instanceof PublicCloneable
7350	width != this.boxWidth
7351	paint == null
7352	p != null
7353	orientation == PlotOrientation.HORIZONTAL
7354	orientation == PlotOrientation.VERTICAL
7355	state.getInfo() != null
7356	yAverage != null
7357	exactBoxWidth <= 0.0
7358	exactBoxWidth < 3
7359	exactBoxWidth > maxBoxWidth
7360	yyQ1Median < yyQ3Median
7361	this.fillBox
7362	yAverage != null
7363	yyAverage > (dataArea.getMinX() - aRadius)
7363	yyAverage < (dataArea.getMaxX() + aRadius)
7364	entities != null
7364	box.intersects(dataArea)
7365	state.getInfo() != null
7366	yAverage != null
7367	exactBoxWidth <= 0.0
7368	exactBoxWidth < 3
7369	exactBoxWidth > maxBoxWidth
7370	yyQ1Median > yyQ3Median
7371	this.fillBox
7372	yAverage != null
7373	yyAverage < (dataArea.getMaxY() + aRadius)
7373	yyAverage > (dataArea.getMinY() - aRadius)
7374	outlier > boxAndWhiskerData.getMaxOutlier(series, item).doubleValue()
7375	outlier < boxAndWhiskerData.getMinOutlier(series, item).doubleValue()
7376	outlier > boxAndWhiskerData.getMaxRegularValue(series, item).doubleValue()
7377	outlier < boxAndWhiskerData.getMinRegularValue(series, item).doubleValue()
7378	list.isMultiple()
7379	outlierListCollection.isHighFarOut()
7380	outlierListCollection.isLowFarOut()
7381	entities != null
7381	box.intersects(dataArea)
7382	obj == this
7383	obj instanceof XYBoxAndWhiskerRenderer
7384	super.equals(obj)
7385	this.boxWidth != that.getBoxWidth()
7386	PaintUtilities.equal(this.boxPaint, that.boxPaint)
7387	PaintUtilities.equal(this.artifactPaint, that.artifactPaint)
7388	this.fillBox != that.fillBox
5984	orientation == PlotOrientation.HORIZONTAL
5985	orientation == PlotOrientation.VERTICAL
5986	this.fillPaint != null
5987	this.outlinePaint != null
5987	this.stroke != null
5988	obj == this
5989	super.equals(obj)
5990	obj instanceof XYBoxAnnotation
5991	this.x0 == that.x0
5992	this.y0 == that.y0
5993	this.x1 == that.x1
5994	this.y1 == that.y1
5995	ObjectUtilities.equal(this.stroke, that.stroke)
5996	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
5997	PaintUtilities.equal(this.fillPaint, that.fillPaint)
7288	scaleType > 2
7288	scaleType < 0
7289	getItemVisible(series, item)
7290	dataset instanceof XYZDataset
7291	Double.isNaN(z)
7292	orientation == PlotOrientation.VERTICAL
7293	orientation == PlotOrientation.HORIZONTAL
7294	isItemLabelVisible(series, item, selected)
7295	orientation == PlotOrientation.VERTICAL
7296	orientation == PlotOrientation.HORIZONTAL
7297	state.getInfo() != null
7298	circle.intersects(dataArea)
7298	entities != null
7299	plot == null
7300	dataset != null
7301	getItemVisible(series, 0)
7302	getLegendItemToolTipGenerator() != null
7303	getLegendItemURLGenerator() != null
7304	labelPaint != null
7305	obj == this
7306	obj instanceof XYBubbleRenderer
7307	this.scaleType != that.scaleType
212	obj == this
213	obj instanceof XYCoordinate
214	this.x != that.x
215	this.y != that.y
216	obj instanceof XYCoordinate
217	this.x > that.x
218	this.x < that.x
219	this.y > that.y
220	this.y < that.y
1826	this == obj
1827	obj instanceof XYCoordinateType
1828	this.name.equals(order.toString())
1829	this.equals(XYCoordinateType.DATA)
1830	this.equals(XYCoordinateType.RELATIVE)
1831	this.equals(XYCoordinateType.INDEX)
5945	image == null
5946	orientation == PlotOrientation.HORIZONTAL
5947	orientation == PlotOrientation.VERTICAL
5948	toolTip != null
5948	url != null
5949	obj == this
5950	super.equals(obj)
5951	obj instanceof XYDataImageAnnotation
5952	this.x != that.x
5953	this.y != that.y
5954	this.w != that.w
5955	this.h != that.h
5956	this.includeInDataBounds != that.includeInDataBounds
5957	ObjectUtilities.equal(this.image, that.image)
312	x == null
313	this.y != null
314	o1 instanceof XYDataItem
315	compare > 0.0
316	compare < 0.0
317	obj == this
318	obj instanceof XYDataItem
319	this.x.equals(that.x)
320	ObjectUtilities.equal(this.y, that.y)
321	this.selected != that.selected
230	this.model == null
231	this.model == null
232	this.model == null
233	column < 1
234	this.model == null
235	column < 1
236	isCellEditable(row, column)
7434	positivePaint == null
7435	negativePaint == null
7436	paint == null
7437	paint == null
7438	line == null
7439	pass == 0
7440	pass == 1
7441	0 == x_series
7441	0 == x_item
7442	isEitherSeriesDegenerate(x_dataset, b_impliedZeroSubtrahend)
7443	b_impliedZeroSubtrahend
7443	areSeriesDisjoint(x_dataset)
7444	b_impliedZeroSubtrahend
7445	b_impliedZeroSubtrahend
7446	l_x2 <= l_x3
7447	l_x4 <= l_x1
7448	l_x1 < l_x4
7448	l_x3 < l_x1
7449	l_x1 < l_x3
7449	l_x3 < l_x2
7450	b_minuendFastForward
7450	b_minuendAdvanced
7450	b_minuendDone
7451	b_minuendAtIntersect
7452	b_subtrahendDone
7452	b_subtrahendFastForward
7452	b_subtrahendAdvanced
7452	b_impliedZeroSubtrahend
7453	b_subtrahendAtIntersect
7454	l_x2 == l_x4
7454	l_y2 == l_y4
7455	l_x1 == l_x3
7455	l_y1 == l_y3
7456	0 == l_numeratorA
7456	0 == l_denominator
7456	0 == l_numeratorB
7457	b_colinear
7458	0 < l_slopeA
7458	l_slopeB <= 1
7458	l_slopeA <= 1
7458	0 < l_slopeB
7459	b_intersect
7460	l_x2 <= l_x4
7461	l_x4 <= l_x2
7462	l_x2 < l_x4
7462	b_minuendDone
7462	l_x3 < l_x2
7463	l_x4 < l_x2
7463	l_x1 < l_x4
7463	b_subtrahendDone
7464	state.getInfo() != null
7465	getShapesVisible()
7466	l_orientation == PlotOrientation.HORIZONTAL
7467	l_shape.intersects(x_dataArea)
7468	null != l_entities
7469	null == l_entityArea
7470	null != l_tipGenerator
7471	null != l_urlGenerator
7472	isItemLabelVisible(x_series, x_item, selected)
7473	0 == x_item
7474	PlotOrientation.HORIZONTAL == l_orientation
7475	PlotOrientation.VERTICAL == l_orientation
7476	null != l_line
7476	l_line.intersects(x_dataArea)
7477	x_impliedZeroSubtrahend
7478	PlotOrientation.VERTICAL == l_orientation
7479	this.roundXCoordinates
7480	this.roundXCoordinates
7481	this.roundXCoordinates
7482	this.roundXCoordinates
7483	l_path.intersects(x_dataArea)
7484	p != null
7485	dataset != null
7486	getItemVisible(series, 0)
7487	getLegendItemToolTipGenerator() != null
7488	getLegendItemURLGenerator() != null
7489	labelPaint != null
7490	obj == this
7491	obj instanceof XYDifferenceRenderer
7492	super.equals(obj)
7493	PaintUtilities.equal(this.positivePaint, that.positivePaint)
7494	PaintUtilities.equal(this.negativePaint, that.negativePaint)
7495	this.shapesVisible != that.shapesVisible
7496	ShapeUtilities.equal(this.legendLine, that.legendLine)
7497	this.roundXCoordinates != that.roundXCoordinates
7645	w < 1
7646	h < 1
7647	shape == null
7648	getItemVisible(series, item)
7649	Double.isNaN(y)
7650	orientation == PlotOrientation.HORIZONTAL
7651	orientation == PlotOrientation.VERTICAL
7652	plot == null
7653	dataset == null
7654	getItemVisible(series, 0)
7655	getLegendItemToolTipGenerator() != null
7656	getLegendItemURLGenerator() != null
7657	labelPaint != null
7658	obj == this
7659	obj instanceof XYDotRenderer
7660	this.dotWidth != that.dotWidth
7661	this.dotHeight != that.dotHeight
7662	ShapeUtilities.equal(this.legendShape, that.legendShape)
5934	drawable == null
5935	url != null
5935	toolTip != null
5936	obj == this
5937	super.equals(obj)
5938	obj instanceof XYDrawableAnnotation
5939	this.x != that.x
5940	this.y != that.y
5941	this.displayWidth != that.displayWidth
5942	this.displayHeight != that.displayHeight
5943	this.drawScaleFactor != that.drawScaleFactor
5944	ObjectUtilities.equal(this.drawable, that.drawable)
7221	this.drawXError != draw
7222	this.drawYError != draw
7223	dataset != null
7224	dataset != null
7225	dataset instanceof IntervalXYDataset
7225	getItemVisible(series, item)
7225	pass == 0
7226	this.drawXError
7227	orientation == PlotOrientation.VERTICAL
7228	this.errorPaint != null
7229	this.errorStroke != null
7230	this.drawYError
7231	orientation == PlotOrientation.VERTICAL
7232	this.errorPaint != null
7233	this.errorStroke != null
7234	obj == this
7235	obj instanceof XYErrorRenderer
7236	this.drawXError != that.drawXError
7237	this.drawYError != that.drawYError
7238	this.capLength != that.capLength
7239	PaintUtilities.equal(this.errorPaint, that.errorPaint)
7240	ObjectUtilities.equal(this.errorStroke, that.errorStroke)
5998	image == null
5999	anchor == null
6000	orientation == PlotOrientation.HORIZONTAL
6001	orientation == PlotOrientation.VERTICAL
6002	toolTip != null
6002	url != null
6003	obj == this
6004	super.equals(obj)
6005	obj instanceof XYImageAnnotation
6006	this.x != that.x
6007	this.y != that.y
6008	ObjectUtilities.equal(this.image, that.image)
6009	this.anchor.equals(that.anchor)
223	obj == this
224	obj instanceof XYInterval
225	this.xLow != that.xLow
226	this.xHigh != that.xHigh
227	this.y != that.y
228	this.yLow != that.yLow
229	this.yHigh != that.yHigh
341	interval != null
342	interval != null
343	interval != null
344	interval != null
345	interval != null
393	series == null
394	series < 0
394	series >= getSeriesCount()
395	series >= getSeriesCount()
395	series < 0
396	series == null
397	this.data.contains(series)
398	obj == this
399	obj instanceof XYIntervalSeriesCollection
5625	obj == this
5626	obj instanceof XYItemEntity
5626	super.equals(obj)
5627	this.series != ie.series
5628	this.item != ie.item
7529	isShadowPass(pass)
7530	getWallPaint() != null
7531	obj == this
7532	obj instanceof XYLine3DRenderer
7533	this.xOffset != that.xOffset
7534	this.yOffset != that.yOffset
7535	PaintUtilities.equal(this.wallPaint, that.wallPaint)
7663	this.drawSeriesLineAsPath != flag
7664	flag != null
7665	line == null
7666	flag != null
7667	flag != null
7668	dataset instanceof SelectableXYDataset
7669	selectionState == null
7669	info != null
7670	cri != null
7671	rs != null
7672	getItemVisible(series, item)
7673	isLinePass(pass)
7674	getItemLineVisible(series, item)
7675	this.drawSeriesLineAsPath
7676	isItemPass(pass)
7677	state.getInfo() != null
7678	item == 0
7679	Double.isNaN(x1)
7679	Double.isNaN(y1)
7680	Double.isNaN(y0)
7680	Double.isNaN(x0)
7681	Double.isNaN(transX1)
7681	Double.isNaN(transY1)
7681	Double.isNaN(transY0)
7681	Double.isNaN(transX0)
7682	orientation == PlotOrientation.HORIZONTAL
7683	orientation == PlotOrientation.VERTICAL
7684	visible
7685	Double.isNaN(transY1)
7685	Double.isNaN(transX1)
7686	orientation == PlotOrientation.HORIZONTAL
7687	s.isLastPointGood()
7688	item == s.getLastItemIndex()
7689	Double.isNaN(y1)
7689	Double.isNaN(x1)
7690	getItemShapeVisible(series, item)
7691	orientation == PlotOrientation.HORIZONTAL
7692	orientation == PlotOrientation.VERTICAL
7693	shape.intersects(dataArea)
7694	getItemShapeFilled(series, item)
7695	this.useFillPaint
7696	this.drawOutlines
7697	getUseOutlinePaint()
7698	orientation == PlotOrientation.HORIZONTAL
7699	isItemLabelVisible(series, item, selected)
7700	entities != null
7700	ShapeUtilities.isPointInRect(xx, yy, dataArea)
7701	plot == null
7702	dataset != null
7703	getItemVisible(series, 0)
7704	getLegendItemToolTipGenerator() != null
7705	getLegendItemURLGenerator() != null
7706	labelPaint != null
7707	this.legendLine != null
7708	obj == this
7709	obj instanceof XYLineAndShapeRenderer
7710	super.equals(obj)
7711	ObjectUtilities.equal(this.seriesLinesVisible, that.seriesLinesVisible)
7712	this.baseLinesVisible != that.baseLinesVisible
7713	ShapeUtilities.equal(this.legendLine, that.legendLine)
7714	ObjectUtilities.equal(this.seriesShapesVisible, that.seriesShapesVisible)
7715	this.baseShapesVisible != that.baseShapesVisible
7716	ObjectUtilities.equal(this.seriesShapesFilled, that.seriesShapesFilled)
7717	this.baseShapesFilled != that.baseShapesFilled
7718	this.drawOutlines != that.drawOutlines
7719	this.useOutlinePaint != that.useOutlinePaint
7720	this.useFillPaint != that.useFillPaint
7721	this.drawSeriesLineAsPath != that.drawSeriesLineAsPath
5919	stroke == null
5920	paint == null
5921	orientation == PlotOrientation.VERTICAL
5922	orientation == PlotOrientation.HORIZONTAL
5923	visible
5924	url != null
5924	toolTip != null
5925	obj == this
5926	super.equals(obj)
5927	obj instanceof XYLineAnnotation
5928	this.x1 != that.x1
5929	this.y1 != that.y1
5930	this.x2 != that.x2
5931	this.y2 != that.y2
5932	PaintUtilities.equal(this.paint, that.paint)
5933	ObjectUtilities.equal(this.stroke, that.stroke)
3388	dataset != null
3389	renderer != null
3390	domainAxis != null
3391	rangeAxis != null
3392	orientation == null
3393	orientation != this.orientation
3394	offset == null
3395	index < this.domainAxes.size()
3396	result == null
3397	parent instanceof XYPlot
3398	existing != null
3399	axis != null
3400	axis != null
3401	notify
3402	axis != null
3403	axis != null
3404	index < this.domainAxisLocations.size()
3405	result == null
3406	location == null
3406	index == 0
3407	notify
3408	result == null
3409	axis != null
3410	existing != null
3411	axis != null
3412	index < this.rangeAxes.size()
3413	result == null
3414	parent instanceof XYPlot
3415	existing != null
3416	axis != null
3417	axis != null
3418	notify
3419	axis != null
3420	axis != null
3421	index < this.rangeAxisLocations.size()
3422	result == null
3423	index == 0
3423	location == null
3424	notify
3425	result == null
3426	this.datasets.size() > index
3427	existing != null
3428	dataset != null
3429	dataset == this.datasets.get(i)
3430	index < 0
3431	index < 0
3432	indices == null
3433	count == 0
3434	item instanceof Integer
3435	set.contains(item)
3436	this.renderers.size() > index
3437	existing != null
3438	renderer != null
3439	notify
3440	order == null
3441	order == null
3442	this.datasets.get(i) == dataset
3443	result == null
3444	this.domainGridlinesVisible != visible
3445	this.domainMinorGridlinesVisible != visible
3446	stroke == null
3447	stroke == null
3448	paint == null
3449	paint == null
3450	this.rangeGridlinesVisible != visible
3451	stroke == null
3452	paint == null
3453	this.rangeMinorGridlinesVisible != visible
3454	stroke == null
3455	paint == null
3456	stroke == null
3457	paint == null
3458	stroke == null
3459	paint == null
3460	origin == null
3461	index < 0
3461	index > 3
3462	index < 0
3462	index > 3
3463	this.backgroundDomainMarkers != null
3464	this.foregroundDomainMarkers != null
3465	this.backgroundDomainMarkers != null
3466	markers != null
3467	this.foregroundRangeMarkers != null
3468	markers != null
3469	marker == null
3470	layer == null
3471	layer == Layer.FOREGROUND
3472	markers == null
3473	layer == Layer.BACKGROUND
3474	markers == null
3475	notify
3476	layer == Layer.FOREGROUND
3477	markers == null
3478	notify
3478	removed
3479	this.backgroundRangeMarkers != null
3480	this.foregroundRangeMarkers != null
3481	layer == Layer.FOREGROUND
3482	markers == null
3483	layer == Layer.BACKGROUND
3484	markers == null
3485	notify
3486	this.backgroundRangeMarkers != null
3487	markers != null
3488	this.foregroundRangeMarkers != null
3489	markers != null
3490	marker == null
3491	layer == Layer.FOREGROUND
3492	markers == null
3493	removed
3493	notify
3494	annotation == null
3495	notify
3496	annotation == null
3497	notify
3497	removed
3498	space == null
3499	this.fixedDomainAxisSpace != null
3500	this.orientation == PlotOrientation.HORIZONTAL
3501	this.orientation == PlotOrientation.VERTICAL
3502	axis != null
3503	space == null
3504	this.fixedRangeAxisSpace != null
3505	this.orientation == PlotOrientation.HORIZONTAL
3506	this.orientation == PlotOrientation.VERTICAL
3507	axis != null
3508	b2
3508	b1
3509	info != null
3510	dataArea.isEmpty()
3511	info != null
3512	anchor != null
3512	dataArea.contains(anchor)
3513	anchor != null
3514	domainAxis != null
3515	orient == PlotOrientation.VERTICAL
3516	rangeAxis != null
3517	orient == PlotOrientation.VERTICAL
3518	domainAxisState == null
3519	parentState != null
3520	rangeAxisState == null
3521	parentState != null
3522	domainAxisState != null
3523	rangeAxisState != null
3524	domainAxisState != null
3525	rangeAxisState != null
3526	this.shadowGenerator != null
3527	order == DatasetRenderingOrder.FORWARD
3528	r != null
3529	r != null
3530	order == DatasetRenderingOrder.REVERSE
3531	i >= getDatasetCount()
3532	r != null
3533	i >= getDatasetCount()
3534	r != null
3535	anchor != null
3535	this.domainCrosshairLockedOnData
3536	orient == PlotOrientation.VERTICAL
3537	isDomainCrosshairVisible()
3538	this.rangeCrosshairLockedOnData
3538	anchor != null
3539	orient == PlotOrientation.VERTICAL
3540	isRangeCrosshairVisible()
3541	foundData
3542	this.shadowGenerator != null
3543	xAxis == null
3544	yAxis == null
3545	this.quadrantPaint[0] != null
3546	x > xmin
3546	y < ymax
3547	this.orientation == PlotOrientation.HORIZONTAL
3548	this.quadrantPaint[1] != null
3549	y < ymax
3549	x < xmax
3550	this.orientation == PlotOrientation.HORIZONTAL
3551	this.quadrantPaint[2] != null
3552	y > ymin
3552	x > xmin
3553	this.orientation == PlotOrientation.HORIZONTAL
3554	this.quadrantPaint[3] != null
3555	y > ymin
3555	x < xmax
3556	this.orientation == PlotOrientation.HORIZONTAL
3557	somethingToDraw
3558	r[i] != null
3558	this.quadrantPaint[i] != null
3559	bandPaint != null
3560	fillBand
3561	fillBand
3562	bandPaint != null
3563	fillBand
3564	fillBand
3565	axis != null
3566	yAxis != null
3567	DatasetUtilities.isEmptyOrNull(dataset)
3568	yAxis == null
3568	xAxis == null
3569	renderer == null
3570	renderer == null
3571	seriesOrder == SeriesRenderingOrder.REVERSE
3572	lastItem == -1
3573	state.getProcessVisibleItemsOnly()
3574	selectionState != null
3575	state.getProcessVisibleItemsOnly()
3576	selectionState != null
3577	index >= upper
3577	index < 0
3578	axisIndices != null
3579	index < 0
3579	index >= upper
3580	axisIndices != null
3581	getRenderer() == null
3582	isDomainGridlinesVisible()
3582	isDomainMinorGridlinesVisible()
3583	isDomainMinorGridlinesVisible()
3583	tick.getTickType() == TickType.MINOR
3584	tick.getTickType() == TickType.MAJOR
3584	isDomainGridlinesVisible()
3585	paintLine
3585	r instanceof AbstractXYItemRenderer
3586	getRenderer() == null
3587	isRangeMinorGridlinesVisible()
3587	isRangeGridlinesVisible()
3588	axis != null
3589	isRangeMinorGridlinesVisible()
3589	tick.getTickType() == TickType.MINOR
3590	isRangeGridlinesVisible()
3590	tick.getTickType() == TickType.MAJOR
3591	isRangeZeroBaselineVisible()
3591	tick.getValue() != 0.0
3591	paintLine
3592	isDomainZeroBaselineVisible()
3593	isRangeZeroBaselineVisible()
3594	r == null
3595	index >= getDatasetCount()
3596	axis != null
3596	markers != null
3597	r == null
3598	index >= getDatasetCount()
3599	markers != null
3599	axis != null
3600	layer == Layer.FOREGROUND
3601	layer == Layer.BACKGROUND
3602	result != null
3603	layer == Layer.FOREGROUND
3604	layer == Layer.BACKGROUND
3605	result != null
3606	getOrientation() == PlotOrientation.HORIZONTAL
3607	axis.getRange().contains(value)
3608	axis.getRange().contains(value)
3609	orientation == PlotOrientation.VERTICAL
3610	getOrientation() == PlotOrientation.HORIZONTAL
3611	axis.getRange().contains(value)
3612	axis.getRange().contains(value)
3613	orientation == PlotOrientation.HORIZONTAL
3614	dataArea.contains(x, y)
3615	xaxis != null
3616	yaxis != null
3617	axisIndex == null
3618	mappedAxes == null
3619	axisIndex.equals(ZERO)
3620	mappedAxes.contains(axisIndex)
3621	axisIndex == null
3622	mappedAxes == null
3623	axisIndex.equals(ZERO)
3624	mappedAxes.contains(axisIndex)
3625	result < 0
3626	parent instanceof XYPlot
3627	result < 0
3628	parent instanceof XYPlot
3629	domainIndex >= 0
3630	domainIndex == 0
3631	annotation instanceof XYAnnotationBoundsInfo
3632	rangeIndex >= 0
3633	rangeIndex == 0
3634	annotation instanceof XYAnnotationBoundsInfo
3635	d != null
3636	isDomainAxis
3637	r != null
3638	r != null
3639	r != null
3640	a instanceof XYAnnotationBoundsInfo
3641	xyabi.getIncludeInDataBounds()
3642	isDomainAxis
3643	getParent() != null
3644	getParent() != null
3645	event.getSeriesVisibilityChanged()
3646	this.domainCrosshairVisible != flag
3647	this.domainCrosshairLockedOnData != flag
3648	isDomainCrosshairVisible()
3648	notify
3649	stroke == null
3650	paint == null
3651	this.rangeCrosshairVisible != flag
3652	this.rangeCrosshairLockedOnData != flag
3653	isRangeCrosshairVisible()
3653	notify
3654	stroke == null
3655	paint == null
3656	notify
3657	notify
3658	isDomainPannable()
3659	axis == null
3660	axis.isInverted()
3661	isRangePannable()
3662	axis == null
3663	axis.isInverted()
3664	domainAxis != null
3665	useAnchor
3666	this.orientation == PlotOrientation.HORIZONTAL
3667	domainAxis != null
3668	rangeAxis != null
3669	useAnchor
3670	this.orientation == PlotOrientation.HORIZONTAL
3671	rangeAxis != null
3672	dataset != null
3673	this.fixedLegendItems != null
3674	dataset != null
3675	renderer == null
3676	renderer != null
3677	renderer.isSeriesVisible(i)
3677	renderer.isSeriesVisibleInLegend(i)
3678	item != null
3679	obj == this
3680	obj instanceof XYPlot
3681	this.weight != that.weight
3682	this.orientation != that.orientation
3683	this.domainAxes.equals(that.domainAxes)
3684	this.domainAxisLocations.equals(that.domainAxisLocations)
3685	this.rangeCrosshairLockedOnData != that.rangeCrosshairLockedOnData
3686	this.domainGridlinesVisible != that.domainGridlinesVisible
3687	this.rangeGridlinesVisible != that.rangeGridlinesVisible
3688	this.domainMinorGridlinesVisible != that.domainMinorGridlinesVisible
3689	this.rangeMinorGridlinesVisible != that.rangeMinorGridlinesVisible
3690	this.domainZeroBaselineVisible != that.domainZeroBaselineVisible
3691	this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible
3692	this.domainCrosshairVisible != that.domainCrosshairVisible
3693	this.domainCrosshairValue != that.domainCrosshairValue
3694	this.domainCrosshairLockedOnData != that.domainCrosshairLockedOnData
3695	this.rangeCrosshairVisible != that.rangeCrosshairVisible
3696	this.rangeCrosshairValue != that.rangeCrosshairValue
3697	ObjectUtilities.equal(this.axisOffset, that.axisOffset)
3698	ObjectUtilities.equal(this.renderers, that.renderers)
3699	ObjectUtilities.equal(this.rangeAxes, that.rangeAxes)
3700	this.rangeAxisLocations.equals(that.rangeAxisLocations)
3701	ObjectUtilities.equal(this.datasetToDomainAxesMap, that.datasetToDomainAxesMap)
3702	ObjectUtilities.equal(this.datasetToRangeAxesMap, that.datasetToRangeAxesMap)
3703	ObjectUtilities.equal(this.domainGridlineStroke, that.domainGridlineStroke)
3704	PaintUtilities.equal(this.domainGridlinePaint, that.domainGridlinePaint)
3705	ObjectUtilities.equal(this.rangeGridlineStroke, that.rangeGridlineStroke)
3706	PaintUtilities.equal(this.rangeGridlinePaint, that.rangeGridlinePaint)
3707	ObjectUtilities.equal(this.domainMinorGridlineStroke, that.domainMinorGridlineStroke)
3708	PaintUtilities.equal(this.domainMinorGridlinePaint, that.domainMinorGridlinePaint)
3709	ObjectUtilities.equal(this.rangeMinorGridlineStroke, that.rangeMinorGridlineStroke)
3710	PaintUtilities.equal(this.rangeMinorGridlinePaint, that.rangeMinorGridlinePaint)
3711	PaintUtilities.equal(this.domainZeroBaselinePaint, that.domainZeroBaselinePaint)
3712	ObjectUtilities.equal(this.domainZeroBaselineStroke, that.domainZeroBaselineStroke)
3713	PaintUtilities.equal(this.rangeZeroBaselinePaint, that.rangeZeroBaselinePaint)
3714	ObjectUtilities.equal(this.rangeZeroBaselineStroke, that.rangeZeroBaselineStroke)
3715	ObjectUtilities.equal(this.domainCrosshairStroke, that.domainCrosshairStroke)
3716	PaintUtilities.equal(this.domainCrosshairPaint, that.domainCrosshairPaint)
3717	ObjectUtilities.equal(this.rangeCrosshairStroke, that.rangeCrosshairStroke)
3718	PaintUtilities.equal(this.rangeCrosshairPaint, that.rangeCrosshairPaint)
3719	ObjectUtilities.equal(this.foregroundDomainMarkers, that.foregroundDomainMarkers)
3720	ObjectUtilities.equal(this.backgroundDomainMarkers, that.backgroundDomainMarkers)
3721	ObjectUtilities.equal(this.foregroundRangeMarkers, that.foregroundRangeMarkers)
3722	ObjectUtilities.equal(this.backgroundRangeMarkers, that.backgroundRangeMarkers)
3723	ObjectUtilities.equal(this.foregroundDomainMarkers, that.foregroundDomainMarkers)
3724	ObjectUtilities.equal(this.backgroundDomainMarkers, that.backgroundDomainMarkers)
3725	ObjectUtilities.equal(this.foregroundRangeMarkers, that.foregroundRangeMarkers)
3726	ObjectUtilities.equal(this.backgroundRangeMarkers, that.backgroundRangeMarkers)
3727	ObjectUtilities.equal(this.annotations, that.annotations)
3728	ObjectUtilities.equal(this.fixedLegendItems, that.fixedLegendItems)
3729	PaintUtilities.equal(this.domainTickBandPaint, that.domainTickBandPaint)
3730	PaintUtilities.equal(this.rangeTickBandPaint, that.rangeTickBandPaint)
3731	this.quadrantOrigin.equals(that.quadrantOrigin)
3732	PaintUtilities.equal(this.quadrantPaint[i], that.quadrantPaint[i])
3733	ObjectUtilities.equal(this.shadowGenerator, that.shadowGenerator)
3734	axis != null
3735	axis != null
3736	d != null
3737	renderer2 instanceof PublicCloneable
3738	this.fixedDomainAxisSpace != null
3739	this.fixedRangeAxisSpace != null
3740	this.fixedLegendItems != null
3741	axis != null
3742	axis != null
3743	dataset != null
3744	renderer != null
3745	dataset == null
3746	state == null
3747	renderer.hitTest(xx, yy, g2, dataArea, this, getDomainAxisForDataset(d), getRangeAxisForDataset(d), dataset, s, i, rs, false)
3748	dataset == null
3749	state == null
3750	path.contains(x, y)
3751	dataset instanceof SelectableXYDataset
3752	segType == PathIterator.SEG_MOVETO
3753	segType == PathIterator.SEG_LINETO
3754	segType == PathIterator.SEG_CLOSE
3755	dataset instanceof AbstractXYDataset
3756	axyd.getSelectionState() != null
5841	stroke == null
5842	paint == null
5843	orientation == PlotOrientation.HORIZONTAL
5844	getBackgroundPaint() != null
5845	isOutlineVisible()
5846	toolTip != null
5846	url != null
5847	obj == this
5848	obj instanceof XYPointerAnnotation
5849	this.angle != that.angle
5850	this.tipRadius != that.tipRadius
5851	this.baseRadius != that.baseRadius
5852	this.arrowLength != that.arrowLength
5853	this.arrowWidth != that.arrowWidth
5854	this.arrowPaint.equals(that.arrowPaint)
5855	ObjectUtilities.equal(this.arrowStroke, that.arrowStroke)
5856	this.labelOffset != that.labelOffset
6010	polygon == null
6011	polygon.length % 2 != 0
6012	this.polygon.length < 4
6013	orientation == PlotOrientation.HORIZONTAL
6014	orientation == PlotOrientation.VERTICAL
6015	this.fillPaint != null
6016	this.outlinePaint != null
6016	this.stroke != null
6017	obj == this
6018	super.equals(obj)
6019	obj instanceof XYPolygonAnnotation
6020	Arrays.equals(this.polygon, that.polygon)
6021	ObjectUtilities.equal(this.stroke, that.stroke)
6022	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
6023	PaintUtilities.equal(this.fillPaint, that.fillPaint)
6024	this.stroke != null
255	item.getY() != null
256	Double.isNaN(x)
257	x >= this.maxX
257	x <= this.minX
258	item.getY() != null
259	Double.isNaN(y)
260	y >= this.maxY
260	y <= this.minY
261	itemContributesToYBounds
262	itemContributesToXBounds
263	getAutoSort()
264	remove > 0
265	item == null
266	this.autoSort
267	index < 0
268	this.allowDuplicateXValues
269	index < this.data.size()
270	this.allowDuplicateXValues
271	index >= 0
272	getItemCount() > this.maximumItemCount
273	notify
274	this.data.size() > 0
275	Double.isNaN(oldY)
276	iterate
277	y != null
278	Double.isNaN(a)
279	Double.isNaN(b)
280	Double.isNaN(a)
281	Double.isNaN(b)
282	index < 0
283	item == null
284	this.allowDuplicateXValues
285	index >= 0
286	Double.isNaN(oldY)
287	iterate
288	item.getY() != null
289	this.autoSort
290	getItemCount() > this.maximumItemCount
291	this.autoSort
292	item.getX().equals(x)
293	y != null
294	this.data.size() > 0
295	obj == this
296	obj instanceof XYSeries
297	super.equals(obj)
298	this.maximumItemCount != that.maximumItemCount
299	this.autoSort != that.autoSort
300	this.allowDuplicateXValues != that.allowDuplicateXValues
301	ObjectUtilities.equal(this.data, that.data)
302	count > 0
303	count > 1
304	count > 2
475	series != null
476	s.getAutoSort()
477	series == null
478	series < 0
478	series >= getSeriesCount()
479	series == null
480	this.data.contains(series)
481	series == null
482	series >= getSeriesCount()
482	series < 0
483	key == null
484	key.equals(series.getKey())
485	notify
486	obj == this
487	obj instanceof XYSeriesCollection
488	this.intervalDelegate.equals(that.intervalDelegate)
489	includeInterval
490	Double.isNaN(result)
491	Double.isNaN(lowX)
492	includeInterval
493	Double.isNaN(result)
494	Double.isNaN(hiX)
495	includeInterval
496	Double.isNaN(minX)
497	Double.isNaN(maxX)
498	lower > upper
499	width < 0.0
500	Double.isNaN(minY)
501	Double.isNaN(maxY)
502	lower > upper
503	Double.isNaN(result)
504	Double.isNaN(lowY)
505	Double.isNaN(result)
506	Double.isNaN(hiY)
5906	shape == null
5907	orientation == PlotOrientation.HORIZONTAL
5908	orientation == PlotOrientation.VERTICAL
5909	this.fillPaint != null
5910	this.outlinePaint != null
5910	this.stroke != null
5911	obj == this
5912	super.equals(obj)
5913	obj instanceof XYShapeAnnotation
5914	this.shape.equals(that.shape)
5915	ObjectUtilities.equal(this.stroke, that.stroke)
5916	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
5917	PaintUtilities.equal(this.fillPaint, that.fillPaint)
5918	this.stroke != null
7566	scale == null
7567	paint == null
7568	stroke == null
7569	dataset != null
7570	dataset != null
7571	state.getInfo() != null
7572	Double.isNaN(y)
7572	Double.isNaN(x)
7573	this.guideLinesVisible
7573	pass == 0
7574	orientation == PlotOrientation.HORIZONTAL
7575	pass == 1
7576	orientation == PlotOrientation.HORIZONTAL
7577	orientation == PlotOrientation.VERTICAL
7578	shape.intersects(dataArea)
7579	this.drawOutlines
7580	getUseOutlinePaint()
7581	entities != null
7582	dataset instanceof XYZDataset
7583	this.useFillPaint
7584	obj == this
7585	obj instanceof XYShapeRenderer
7586	this.paintScale.equals(that.paintScale)
7587	this.drawOutlines != that.drawOutlines
7588	this.useOutlinePaint != that.useOutlinePaint
7589	this.useFillPaint != that.useFillPaint
7590	this.guideLinesVisible != that.guideLinesVisible
7591	this.guideLinePaint.equals(that.guideLinePaint)
7592	this.guideLineStroke.equals(that.guideLineStroke)
7593	this.paintScale instanceof PublicCloneable
7635	precision <= 0
7636	p <= 0
7637	Double.isNaN(transY1)
7637	Double.isNaN(transX1)
7638	this.points.contains(p)
7639	item == dataset.getItemCount(series) - 1
7640	this.points.size() > 1
7641	this.points.size() == 2
7642	obj == this
7643	obj instanceof XYSplineRenderer
7644	this.precision != that.precision
7124	type == AREA
7125	type == SHAPES
7126	type == AREA_AND_SHAPES
7127	this.pArea == null
7127	Double.isNaN(y1)
7128	orientation == PlotOrientation.VERTICAL
7129	orientation == PlotOrientation.HORIZONTAL
7130	item > 0
7131	Double.isNaN(y1)
7132	transY0 != transY1
7133	orientation == PlotOrientation.VERTICAL
7134	orientation == PlotOrientation.HORIZONTAL
7135	Double.isNaN(y1)
7136	orientation == PlotOrientation.VERTICAL
7137	orientation == PlotOrientation.HORIZONTAL
7138	getShapesVisible()
7139	orientation == PlotOrientation.VERTICAL
7140	orientation == PlotOrientation.HORIZONTAL
7141	isShapesFilled()
7142	orientation == PlotOrientation.VERTICAL
7143	orientation == PlotOrientation.HORIZONTAL
7144	this.pArea != null
7144	item == (itemCount - 1)
7144	Double.isNaN(y1)
7144	item > 0
7144	getPlotArea()
7145	orientation == PlotOrientation.VERTICAL
7146	orientation == PlotOrientation.HORIZONTAL
7147	isOutline()
7148	Double.isNaN(y1)
7149	entities != null
7150	obj == this
7151	obj instanceof XYStepAreaRenderer
7152	this.showOutline != that.showOutline
7153	this.shapesVisible != that.shapesVisible
7154	this.shapesFilled != that.shapesFilled
7155	this.plotArea != that.plotArea
7156	this.rangeBase != that.rangeBase
7157	plot.getOrientation() == PlotOrientation.VERTICAL
7158	plot.getOrientation() == PlotOrientation.HORIZONTAL
7159	value < min
7160	value > max
8096	stepPoint < 0.0d
8096	stepPoint > 1.0d
8097	getItemVisible(series, item)
8098	item > 0
8098	pass== 0
8099	orientation == PlotOrientation.HORIZONTAL
8100	transY0 == transY1
8101	orientation == PlotOrientation.VERTICAL
8102	transY0 == transY1
8103	entities != null
8104	pass == 1
8105	isItemLabelVisible(series, item, selected)
8106	orientation == PlotOrientation.HORIZONTAL
8107	Double.isNaN(x1)
8107	Double.isNaN(y1)
8107	Double.isNaN(x0)
8107	Double.isNaN(y0)
8108	obj == this
8109	obj instanceof XYLineAndShapeRenderer
8110	this.stepPoint != that.stepPoint
143	tasks == null
144	w <= 0.0
145	this.transposed
146	this.transposed
147	this.transposed
148	this.transposed
149	this.transposed
150	this.transposed
151	obj == this
152	obj instanceof XYTaskDataset
153	this.seriesWidth != that.seriesWidth
154	this.transposed != that.transposed
155	this.underlying.equals(that.underlying)
5958	text == null
5959	text == null
5960	font == null
5961	paint == null
5962	anchor == null
5963	anchor == null
5964	paint == null
5965	stroke == null
5966	orientation == PlotOrientation.HORIZONTAL
5967	this.backgroundPaint != null
5968	this.outlineVisible
5969	toolTip != null
5969	url != null
5970	obj == this
5971	obj instanceof XYTextAnnotation
5972	this.text.equals(that.text)
5973	this.x != that.x
5974	this.y != that.y
5975	this.font.equals(that.font)
5976	PaintUtilities.equal(this.paint, that.paint)
5977	this.rotationAnchor.equals(that.rotationAnchor)
5978	this.rotationAngle != that.rotationAngle
5979	this.textAnchor.equals(that.textAnchor)
5980	this.outlineVisible != that.outlineVisible
5981	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
5982	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
5983	this.outlineStroke.equals(that.outlineStroke)
5883	title == null
5884	anchor == null
5885	this.coordinateType == XYCoordinateType.RELATIVE
5886	orientation == PlotOrientation.HORIZONTAL
5887	orientation == PlotOrientation.VERTICAL
5888	this.coordinateType == XYCoordinateType.RELATIVE
5889	this.maxWidth > 0.0
5890	this.maxHeight > 0.0
5891	this.coordinateType == XYCoordinateType.DATA
5892	info != null
5893	info.getOwner().getEntityCollection() != null
5894	info != null
5895	result instanceof EntityBlockResult
5896	toolTip != null
5896	url != null
5897	obj == this
5898	obj instanceof XYTitleAnnotation
5899	this.coordinateType != that.coordinateType
5900	this.x != that.x
5901	this.y != that.y
5902	this.maxWidth != that.maxWidth
5903	this.maxHeight != that.maxHeight
5904	ObjectUtilities.equal(this.title, that.title)
5905	this.anchor.equals(that.anchor)
546	obj == this
547	obj instanceof YInterval
548	this.y != that.y
549	this.yLow != that.yLow
550	this.yHigh != that.yHigh
322	interval != null
323	interval != null
324	interval != null
7817	state.getInfo() != null
7818	orientation == PlotOrientation.HORIZONTAL
7819	orientation == PlotOrientation.VERTICAL
7820	isItemLabelVisible(series, item, selected)
7821	entities != null
7822	this.additionalItemLabelGenerator == null
7823	obj == this
7824	obj instanceof YIntervalRenderer
7825	ObjectUtilities.equal(this.additionalItemLabelGenerator, that.additionalItemLabelGenerator)
507	series == null
508	series < 0
508	series >= getSeriesCount()
509	series >= getSeriesCount()
509	series < 0
510	series == null
511	this.data.contains(series)
512	obj == this
513	obj instanceof YIntervalSeriesCollection
355	obj == this
356	obj instanceof YWithXInterval
357	this.y != that.y
358	this.xLow != that.xLow
359	this.xHigh != that.xHigh
1247	year > Year.MAXIMUM_YEAR
1247	year < Year.MINIMUM_YEAR
1248	this.year > Year.MINIMUM_YEAR
1249	this.year < Year.MAXIMUM_YEAR
1250	obj == this
1251	obj instanceof Year
1252	o1 instanceof Year
1253	o1 instanceof RegularTimePeriod
5475	screenDataArea != null
5476	this.zoomPoint == null
5477	panel.getUseBuffer()
5478	panel.getOrientation() == PlotOrientation.HORIZONTAL
5479	hZoom
5479	vZoom
5480	hZoom
5481	vZoom
5482	panel.getUseBuffer()
5483	this.zoomRectangle == null
5484	panel.getOrientation() == PlotOrientation.HORIZONTAL
5485	zoomTrigger1
5485	zoomTrigger2
5486	vZoom
5486	hZoom
5486	e.getX() < this.zoomPoint.getX()
5486	e.getY() < this.zoomPoint.getY()
5487	vZoom
5488	hZoom
5489	panel.getUseBuffer()
5490	this.zoomRectangle != null
5491	xor
5492	panel.getFillZoomRectangle()
5493	xor

id	oracle
6825	margin == null
6826	frame == null
6827	padding == null
6828	bounds == null
6829	c == null
6830	c.equals(RectangleConstraint.NONE)
6831	r == null
6832	r.getLowerBound() > 0.0
6833	r.getUpperBound() < Double.POSITIVE_INFINITY
6834	r == null
6835	r.getLowerBound() > 0.0
6836	r.getUpperBound() < Double.POSITIVE_INFINITY
6837	obj == this
6838	obj instanceof AbstractBlock
6839	ObjectUtilities.equal(this.id, that.id)
6840	this.frame.equals(that.frame)
6841	this.bounds.equals(that.bounds)
6842	this.margin.equals(that.margin)
6843	this.padding.equals(that.padding)
6844	this.height != that.height
6845	this.width != that.width
6846	this.frame instanceof PublicCloneable
2238	labelFormat == null
2239	formatter == null
2240	percentFormatter == null
2241	labelFormat == null
2242	formatter == null
2243	dataset == null
2244	value != null
2245	this.numberFormat != null
2246	this.dateFormat != null
2247	value != null
2248	obj == this
2249	obj instanceof AbstractCategoryItemLabelGenerator
2250	this.labelFormat.equals(that.labelFormat)
2251	ObjectUtilities.equal(this.dateFormat, that.dateFormat)
2252	ObjectUtilities.equal(this.numberFormat, that.numberFormat)
2253	this.numberFormat != null
2254	this.dateFormat != null
8725	plot == null
8726	generator == null
8727	notify
8728	notify
8729	result == null
8730	notify
8731	notify
8732	generator == null
8733	notify
8734	notify
8735	annotation == null
8736	layer.equals(Layer.FOREGROUND)
8737	layer.equals(Layer.BACKGROUND)
8738	generator == null
8739	data != null
8740	isSeriesVisible(row)
8741	dataset == null
8742	getDataBoundsIncludesVisibleSeriesOnly()
8743	isSeriesVisible(s)
8744	paint == null
8745	stroke == null
8746	orientation == PlotOrientation.HORIZONTAL
8747	orientation == PlotOrientation.VERTICAL
8748	range.contains(value)
8749	orientation == PlotOrientation.HORIZONTAL
8750	orientation == PlotOrientation.VERTICAL
8751	columnIndex < 0
8752	marker.getDrawAsLine()
8753	orientation == PlotOrientation.HORIZONTAL
8754	orientation == PlotOrientation.VERTICAL
8755	orientation == PlotOrientation.HORIZONTAL
8756	orientation == PlotOrientation.VERTICAL
8757	label != null
8758	marker instanceof ValueMarker
8759	range.contains(value)
8760	orientation == PlotOrientation.HORIZONTAL
8761	orientation == PlotOrientation.VERTICAL
8762	label != null
8763	marker instanceof IntervalMarker
8764	range.intersects(start, end)
8765	orientation == PlotOrientation.HORIZONTAL
8766	orientation == PlotOrientation.VERTICAL
8767	p instanceof GradientPaint
8768	t != null
8769	im.getOutlineStroke() != null
8769	im.getOutlinePaint() != null
8770	orientation == PlotOrientation.VERTICAL
8771	range.contains(start)
8772	range.contains(end)
8773	range.contains(start)
8774	range.contains(end)
8775	label != null
8776	orientation == PlotOrientation.HORIZONTAL
8777	orientation == PlotOrientation.VERTICAL
8778	orientation == PlotOrientation.HORIZONTAL
8779	orientation == PlotOrientation.VERTICAL
8780	p == null
8781	isSeriesVisibleInLegend(series)
8781	isSeriesVisible(series)
8782	this.legendItemToolTipGenerator != null
8783	this.legendItemURLGenerator != null
8784	labelPaint != null
8785	obj == this
8786	obj instanceof AbstractCategoryItemRenderer
8787	ObjectUtilities.equal(this.itemLabelGeneratorList, that.itemLabelGeneratorList)
8788	ObjectUtilities.equal(this.baseItemLabelGenerator, that.baseItemLabelGenerator)
8789	ObjectUtilities.equal(this.toolTipGeneratorList, that.toolTipGeneratorList)
8790	ObjectUtilities.equal(this.baseToolTipGenerator, that.baseToolTipGenerator)
8791	ObjectUtilities.equal(this.urlGeneratorList, that.urlGeneratorList)
8792	ObjectUtilities.equal(this.baseURLGenerator, that.baseURLGenerator)
8793	ObjectUtilities.equal(this.legendItemLabelGenerator, that.legendItemLabelGenerator)
8794	ObjectUtilities.equal(this.legendItemToolTipGenerator, that.legendItemToolTipGenerator)
8795	ObjectUtilities.equal(this.legendItemURLGenerator, that.legendItemURLGenerator)
8796	ObjectUtilities.equal(this.backgroundAnnotations, that.backgroundAnnotations)
8797	ObjectUtilities.equal(this.foregroundAnnotations, that.foregroundAnnotations)
8798	cp != null
8799	orientation == null
8800	crosshairState != null
8801	this.plot.isRangeCrosshairLockedOnData()
8802	generator != null
8803	negative
8804	layer.equals(Layer.FOREGROUND)
8805	layer.equals(Layer.BACKGROUND)
8806	this.itemLabelGeneratorList != null
8807	this.baseItemLabelGenerator != null
8808	this.baseItemLabelGenerator instanceof PublicCloneable
8809	this.toolTipGeneratorList != null
8810	this.baseToolTipGenerator != null
8811	this.baseToolTipGenerator instanceof PublicCloneable
8812	this.urlGeneratorList != null
8813	this.baseURLGenerator != null
8814	this.baseURLGenerator instanceof PublicCloneable
8815	this.legendItemLabelGenerator instanceof PublicCloneable
8816	this.legendItemToolTipGenerator instanceof PublicCloneable
8817	this.legendItemURLGenerator instanceof PublicCloneable
8818	result == null
8819	result == null
8820	this.plot == null
8821	dataset != null
8822	isSeriesVisibleInLegend(i)
8823	item != null
8824	hotspot == null
8825	getItemCreateEntity(row, column, selected)
8826	hotspot == null
8827	getPlot().getOrientation() == PlotOrientation.VERTICAL
8828	generator != null
8829	urlster != null
1520	group == null
1521	listeners[i] == DatasetChangeListener.class
3972	obj == this
3973	obj instanceof AbstractDialLayer
3974	listeners[i] == DialLayerChangeListener.class
440	x != null
441	x != null
442	y != null
443	y != null
2032	index >= 0
2032	index < this.size
2033	index < 0
2034	index >= this.objects.length
2035	this.objects[index] == object
2036	obj == null
2037	obj == this
2038	obj instanceof AbstractObjectList
2039	ObjectUtilities.equal(get(i), other.get(i))
2040	size > 0
2041	size > 1
2042	size > 2
2043	this.objects != null
2044	object != null
2044	object instanceof Serializable
2045	index != -1
5450	listener == null
5451	listener == null
5452	listeners[i] == OverlayChangeListener.class
2339	labelFormat == null
2340	numberFormat == null
2341	percentFormat == null
2342	value != null
2343	value != null
2344	v > 0.0
2345	dataset != null
2346	obj == this
2347	obj instanceof AbstractPieItemLabelGenerator
2348	this.labelFormat.equals(that.labelFormat)
2349	this.numberFormat.equals(that.numberFormat)
2350	this.percentFormat.equals(that.percentFormat)
2351	this.numberFormat != null
2352	this.percentFormat != null
3871	record == null
8934	b != null
8935	notify
8936	notify
8937	b != null
8938	notify
8939	notify
8940	seriesPaint == null
8940	this.autoPopulateSeriesPaint
8941	supplier != null
8942	seriesPaint == null
8943	notify
8944	notify
8945	notify
8946	seriesFillPaint == null
8946	this.autoPopulateSeriesFillPaint
8947	supplier != null
8948	seriesFillPaint == null
8949	notify
8950	paint == null
8951	notify
8952	this.autoPopulateSeriesOutlinePaint
8952	seriesOutlinePaint == null
8953	supplier != null
8954	seriesOutlinePaint == null
8955	notify
8956	paint == null
8957	notify
8958	this.autoPopulateSeriesStroke
8958	result == null
8959	supplier != null
8960	result == null
8961	notify
8962	notify
8963	stroke == null
8964	notify
8965	result == null
8965	this.autoPopulateSeriesOutlineStroke
8966	supplier != null
8967	result == null
8968	notify
8969	stroke == null
8970	notify
8971	this.autoPopulateSeriesShape
8971	result == null
8972	supplier != null
8973	result == null
8974	notify
8975	shape == null
8976	notify
8977	b != null
8978	notify
8979	notify
8980	result == null
8981	notify
8982	font == null
8983	notify
8984	result == null
8985	notify
8986	paint == null
8987	notify
8988	position == null
8989	notify
8990	position == null
8991	notify
8992	position == null
8993	notify
8994	position == null
8995	notify
8996	b != null
8997	notify
8998	notify
8999	result == null
9000	result == null
9001	this.treatLegendShapeAsLine != treatAsLine
9002	result == null
9003	result == null
9004	anchor == ItemLabelAnchor.CENTER
9005	anchor == ItemLabelAnchor.INSIDE1
9006	anchor == ItemLabelAnchor.INSIDE2
9007	anchor == ItemLabelAnchor.INSIDE3
9008	anchor == ItemLabelAnchor.INSIDE4
9009	anchor == ItemLabelAnchor.INSIDE5
9010	anchor == ItemLabelAnchor.INSIDE6
9011	anchor == ItemLabelAnchor.INSIDE7
9012	anchor == ItemLabelAnchor.INSIDE8
9013	anchor == ItemLabelAnchor.INSIDE9
9014	anchor == ItemLabelAnchor.INSIDE10
9015	anchor == ItemLabelAnchor.INSIDE11
9016	anchor == ItemLabelAnchor.INSIDE12
9017	anchor == ItemLabelAnchor.OUTSIDE1
9018	anchor == ItemLabelAnchor.OUTSIDE2
9019	anchor == ItemLabelAnchor.OUTSIDE3
9020	anchor == ItemLabelAnchor.OUTSIDE4
9021	anchor == ItemLabelAnchor.OUTSIDE5
9022	anchor == ItemLabelAnchor.OUTSIDE6
9023	anchor == ItemLabelAnchor.OUTSIDE7
9024	anchor == ItemLabelAnchor.OUTSIDE8
9025	anchor == ItemLabelAnchor.OUTSIDE9
9026	anchor == ItemLabelAnchor.OUTSIDE10
9027	anchor == ItemLabelAnchor.OUTSIDE11
9028	anchor == ItemLabelAnchor.OUTSIDE12
9029	listener == null
9030	listener == null
9031	ls[i] == RendererChangeListener.class
9032	obj == this
9033	obj instanceof AbstractRenderer
9034	this.dataBoundsIncludesVisibleSeriesOnly != that.dataBoundsIncludesVisibleSeriesOnly
9035	this.treatLegendShapeAsLine != that.treatLegendShapeAsLine
9036	this.defaultEntityRadius != that.defaultEntityRadius
9037	this.seriesVisibleList.equals(that.seriesVisibleList)
9038	this.baseSeriesVisible != that.baseSeriesVisible
9039	this.seriesVisibleInLegendList.equals( that.seriesVisibleInLegendList)
9040	this.baseSeriesVisibleInLegend != that.baseSeriesVisibleInLegend
9041	ObjectUtilities.equal(this.paintList, that.paintList)
9042	PaintUtilities.equal(this.basePaint, that.basePaint)
9043	ObjectUtilities.equal(this.fillPaintList, that.fillPaintList)
9044	PaintUtilities.equal(this.baseFillPaint, that.baseFillPaint)
9045	ObjectUtilities.equal(this.outlinePaintList, that.outlinePaintList)
9046	PaintUtilities.equal(this.baseOutlinePaint, that.baseOutlinePaint)
9047	ObjectUtilities.equal(this.strokeList, that.strokeList)
9048	ObjectUtilities.equal(this.baseStroke, that.baseStroke)
9049	ObjectUtilities.equal(this.outlineStrokeList, that.outlineStrokeList)
9050	ObjectUtilities.equal( this.baseOutlineStroke, that.baseOutlineStroke)
9051	ObjectUtilities.equal(this.shapeList, that.shapeList)
9052	ShapeUtilities.equal(this.baseShape, that.baseShape)
9053	ObjectUtilities.equal(this.itemLabelsVisibleList, that.itemLabelsVisibleList)
9054	this.baseItemLabelsVisible != that.baseItemLabelsVisible
9055	ObjectUtilities.equal(this.itemLabelFontList, that.itemLabelFontList)
9056	ObjectUtilities.equal(this.baseItemLabelFont, that.baseItemLabelFont)
9057	ObjectUtilities.equal(this.itemLabelPaintList, that.itemLabelPaintList)
9058	PaintUtilities.equal(this.baseItemLabelPaint, that.baseItemLabelPaint)
9059	ObjectUtilities.equal(this.positiveItemLabelPositionList, that.positiveItemLabelPositionList)
9060	ObjectUtilities.equal(this.basePositiveItemLabelPosition, that.basePositiveItemLabelPosition)
9061	ObjectUtilities.equal(this.negativeItemLabelPositionList, that.negativeItemLabelPositionList)
9062	ObjectUtilities.equal(this.baseNegativeItemLabelPosition, that.baseNegativeItemLabelPosition)
9063	this.itemLabelAnchorOffset != that.itemLabelAnchorOffset
9064	ObjectUtilities.equal(this.createEntitiesList, that.createEntitiesList)
9065	this.baseCreateEntities != that.baseCreateEntities
9066	ObjectUtilities.equal(this.legendShapeList, that.legendShapeList)
9067	ShapeUtilities.equal(this.baseLegendShape, that.baseLegendShape)
9068	ObjectUtilities.equal(this.legendTextFont, that.legendTextFont)
9069	ObjectUtilities.equal(this.baseLegendTextFont, that.baseLegendTextFont)
9070	ObjectUtilities.equal(this.legendTextPaint, that.legendTextPaint)
9071	PaintUtilities.equal(this.baseLegendTextPaint, that.baseLegendTextPaint)
9072	this.seriesVisibleList != null
9073	this.seriesVisibleInLegendList != null
9074	this.paintList != null
9075	this.fillPaintList != null
9076	this.outlinePaintList != null
9077	this.strokeList != null
9078	this.outlineStrokeList != null
9079	this.shapeList != null
9080	this.baseShape != null
9081	this.itemLabelsVisibleList != null
9082	this.itemLabelFontList != null
9083	this.itemLabelPaintList != null
9084	this.positiveItemLabelPositionList != null
9085	this.negativeItemLabelPositionList != null
9086	this.createEntitiesList != null
9087	this.legendShapeList != null
9088	this.legendTextFont != null
9089	this.legendTextPaint != null
1469	getSeriesKey(s).equals(seriesKey)
5757	info == null
5758	entities == null
5759	obj == this
5760	obj instanceof AbstractXYAnnotation
5761	ObjectUtilities.equal(this.toolTipText, that.toolTipText)
5762	ObjectUtilities.equal(this.url, that.url)
5763	this.toolTipText != null
5764	this.url != null
414	x != null
415	y != null
2319	formatString == null
2320	xFormat == null
2321	yFormat == null
2322	this.xDateFormat != null
2323	dataset.getY(series, item) == null
2323	Double.isNaN(y)
2324	this.yDateFormat != null
2325	obj == this
2326	obj instanceof AbstractXYItemLabelGenerator
2327	this.formatString.equals(that.formatString)
2328	ObjectUtilities.equal(this.xFormat, that.xFormat)
2329	ObjectUtilities.equal(this.xDateFormat, that.xDateFormat)
2330	ObjectUtilities.equal(this.yFormat, that.yFormat)
2331	ObjectUtilities.equal(this.yDateFormat, that.yDateFormat)
2332	this.nullYString.equals(that.nullYString)
2333	this.xFormat != null
2334	this.yFormat != null
2335	this.xDateFormat != null
2336	this.yDateFormat != null
7825	generator == null
7826	notify
7827	notify
7828	generator == null
7829	notify
7830	notify
7831	generator == null
7832	notify
7833	notify
7834	annotation == null
7835	layer.equals(Layer.FOREGROUND)
7836	layer.equals(Layer.BACKGROUND)
7837	generator == null
7838	dataset == null
7839	getDataBoundsIncludesVisibleSeriesOnly()
7840	isSeriesVisible(s)
7841	dataset == null
7842	getDataBoundsIncludesVisibleSeriesOnly()
7843	isSeriesVisible(s)
7844	p != null
7845	index >= 0
7846	xAxis != null
7847	xRange == null
7848	this.plot == null
7849	dataset != null
7850	isSeriesVisibleInLegend(i)
7851	item != null
7852	xyplot == null
7853	dataset == null
7854	getLegendItemToolTipGenerator() != null
7855	getLegendItemURLGenerator() != null
7856	labelPaint != null
7857	getTreatLegendShapeAsLine()
7858	plot.getOrientation() == PlotOrientation.VERTICAL
7859	paint != null
7860	plot.getOrientation() == PlotOrientation.VERTICAL
7861	paint != null
7862	range.contains(value)
7863	orientation == PlotOrientation.HORIZONTAL
7864	orientation == PlotOrientation.VERTICAL
7865	range.contains(value)
7866	orientation == PlotOrientation.HORIZONTAL
7867	orientation == PlotOrientation.VERTICAL
7868	range.contains(value)
7869	orientation == PlotOrientation.HORIZONTAL
7870	orientation == PlotOrientation.VERTICAL
7871	marker instanceof ValueMarker
7872	range.contains(value)
7873	orientation == PlotOrientation.HORIZONTAL
7874	orientation == PlotOrientation.VERTICAL
7875	label != null
7876	marker instanceof IntervalMarker
7877	range.intersects(start, end)
7878	orientation == PlotOrientation.HORIZONTAL
7879	orientation == PlotOrientation.VERTICAL
7880	p instanceof GradientPaint
7881	t != null
7882	im.getOutlineStroke() != null
7882	im.getOutlinePaint() != null
7883	orientation == PlotOrientation.VERTICAL
7884	range.contains(start)
7885	range.contains(end)
7886	range.contains(start)
7887	range.contains(end)
7888	label != null
7889	orientation == PlotOrientation.HORIZONTAL
7890	orientation == PlotOrientation.VERTICAL
7891	marker instanceof ValueMarker
7892	range.contains(value)
7893	orientation == PlotOrientation.HORIZONTAL
7894	orientation == PlotOrientation.VERTICAL
7895	label != null
7896	marker instanceof IntervalMarker
7897	range.intersects(start, end)
7898	orientation == PlotOrientation.HORIZONTAL
7899	orientation == PlotOrientation.VERTICAL
7900	p instanceof GradientPaint
7901	t != null
7902	im.getOutlineStroke() != null
7902	im.getOutlinePaint() != null
7903	orientation == PlotOrientation.VERTICAL
7904	range.contains(start)
7905	range.contains(end)
7906	range.contains(start)
7907	range.contains(end)
7908	label != null
7909	orientation == PlotOrientation.HORIZONTAL
7910	orientation == PlotOrientation.VERTICAL
7911	this.baseItemLabelGenerator instanceof PublicCloneable
7911	this.baseItemLabelGenerator != null
7912	this.baseToolTipGenerator instanceof PublicCloneable
7912	this.baseToolTipGenerator != null
7913	clone.legendItemLabelGenerator instanceof PublicCloneable
7914	clone.legendItemToolTipGenerator instanceof PublicCloneable
7915	clone.legendItemURLGenerator instanceof PublicCloneable
7916	clone.legendItemLabelGenerator instanceof PublicCloneable
7917	clone.legendItemToolTipGenerator instanceof PublicCloneable
7918	clone.legendItemURLGenerator instanceof PublicCloneable
7919	obj == this
7920	obj instanceof AbstractXYItemRenderer
7921	this.itemLabelGeneratorList.equals(that.itemLabelGeneratorList)
7922	ObjectUtilities.equal(this.baseItemLabelGenerator, that.baseItemLabelGenerator)
7923	this.toolTipGeneratorList.equals(that.toolTipGeneratorList)
7924	ObjectUtilities.equal(this.baseToolTipGenerator, that.baseToolTipGenerator)
7925	this.urlGeneratorList.equals(that.urlGeneratorList)
7926	ObjectUtilities.equal(this.baseURLGenerator, that.baseURLGenerator)
7927	this.foregroundAnnotations.equals(that.foregroundAnnotations)
7928	this.backgroundAnnotations.equals(that.backgroundAnnotations)
7929	ObjectUtilities.equal(this.legendItemLabelGenerator, that.legendItemLabelGenerator)
7930	ObjectUtilities.equal(this.legendItemToolTipGenerator, that.legendItemToolTipGenerator)
7931	ObjectUtilities.equal(this.legendItemURLGenerator, that.legendItemURLGenerator)
7932	p != null
7933	orientation == null
7934	crosshairState != null
7935	this.plot.isDomainCrosshairLockedOnData()
7936	this.plot.isRangeCrosshairLockedOnData()
7937	this.plot.isRangeCrosshairLockedOnData()
7938	generator != null
7939	negative
7940	layer.equals(Layer.FOREGROUND)
7941	layer.equals(Layer.BACKGROUND)
7942	getItemCreateEntity(series, item, selected)
7943	hotspot == null
7944	getPlot().getOrientation() == PlotOrientation.VERTICAL
7945	generator != null
7946	urlster != null
439	z != null
1814	(align & FIT_VERTICAL) == FIT_VERTICAL
1815	(align & FIT_HORIZONTAL) == FIT_HORIZONTAL
1816	(align & TOP) == TOP
1817	(align & BOTTOM) == BOTTOM
1818	(align & LEFT) == LEFT
1819	(align & RIGHT) == RIGHT
2015	event.getWindow() == this
3958	paint == null
3959	paint == null
3960	stroke == null
3961	radius < 0.0
3962	radius < 0.0
3963	obj == this
3964	obj instanceof ArcDialFrame
3965	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
3966	PaintUtilities.equal(this.foregroundPaint, that.foregroundPaint)
3967	this.startAngle != that.startAngle
3968	this.extent != that.extent
3969	this.innerRadius != that.innerRadius
3970	this.outerRadius != that.outerRadius
3971	this.stroke.equals(that.stroke)
8863	type == null
8864	cp == null
8865	isSeriesVisibleInLegend(series)
8865	isSeriesVisible(series)
8866	getLegendItemToolTipGenerator() != null
8867	getLegendItemURLGenerator() != null
8868	labelPaint != null
8869	getItemVisible(row, column)
8870	value == null
8871	this.endType == AreaRendererEndType.TRUNCATE
8872	column == 0
8873	column == getColumnCount() - 1
8874	this.endType == AreaRendererEndType.LEVEL
8875	column > 0
8876	n0 != null
8877	column < dataset.getColumnCount() - 1
8878	n2 != null
8879	this.endType == AreaRendererEndType.LEVEL
8880	orientation == PlotOrientation.VERTICAL
8881	orientation == PlotOrientation.HORIZONTAL
8882	isItemLabelVisible(row, column, selected)
8883	entities != null
8884	obj == this
8885	obj instanceof AreaRenderer
8886	this.endType.equals(that.endType)
8903	this == obj
8904	obj instanceof AreaRendererEndType
8905	this.name.equals(t.toString())
8906	this.equals(AreaRendererEndType.LEVEL)
8907	this.equals(AreaRendererEndType.TAPER)
8908	this.equals(AreaRendererEndType.TRUNCATE)
2121	array == null
2122	array1 == null
2123	array2 == null
2124	array1.length != array2.length
2125	array1[i] == null
2126	array2[i] != null
2127	array2[i] == null
2128	array1[i] != null
2129	array1[i] != array2[i]
2130	array1 == null
2131	array2 == null
2132	array1.length != array2.length
2133	Arrays.equals(array1[i], array2[i])
2134	o1 != null
2134	o2 != null
2135	o1.equals(o2)
2136	o2 == null
2136	o1 == null
2137	o1 == null
2138	o2 == null
2139	retval != 0
5310	this.isArrowAtTop
5311	angle != 0
5311	rotate != null
5312	rotate != null
5312	angle != 0
5313	obj == this
5314	obj instanceof ArrowNeedle
5315	super.equals(obj)
5316	this.isArrowAtTop != that.isArrowAtTop
1982	s1 == null
1983	s2 == null
1984	limit1 != limit2
1985	m1.equals(m2)
1986	c1 != c2
4988	flag != this.visible
4989	existing != null
4990	existing.equals(label)
4991	label != null
4992	font == null
4993	this.labelFont.equals(font)
4994	paint == null
4995	insets == null
4996	insets.equals(this.labelInsets)
4997	notify
4998	paint == null
4999	stroke == null
5000	flag != this.tickLabelsVisible
5001	flag != this.minorTickMarksVisible
5002	font == null
5003	this.tickLabelFont.equals(font)
5004	paint == null
5005	insets == null
5006	this.tickLabelInsets.equals(insets)
5007	flag != this.tickMarksVisible
5008	stroke == null
5009	this.tickMarkStroke.equals(stroke)
5010	paint == null
5011	plotState.getOwner() == null
5011	plotState == null
5012	edge.equals(RectangleEdge.TOP)
5013	edge.equals(RectangleEdge.BOTTOM)
5014	edge.equals(RectangleEdge.LEFT)
5015	edge.equals(RectangleEdge.RIGHT)
5016	e != null
5017	listeners[i] == AxisChangeListener.class
5018	axisLabel.equals("")
5018	axisLabel != null
5019	edge == RectangleEdge.LEFT
5019	edge == RectangleEdge.RIGHT
5020	state == null
5021	label == null
5021	label.equals("")
5022	edge == RectangleEdge.TOP
5023	edge == RectangleEdge.BOTTOM
5024	edge == RectangleEdge.LEFT
5025	edge == RectangleEdge.RIGHT
5026	hotspot != null
5026	plotState != null
5027	owner != null
5028	entities != null
5029	edge == RectangleEdge.TOP
5030	edge == RectangleEdge.BOTTOM
5031	edge == RectangleEdge.LEFT
5032	edge == RectangleEdge.RIGHT
5033	obj == this
5034	obj instanceof Axis
5035	this.visible != that.visible
5036	ObjectUtilities.equal(this.label, that.label)
5037	ObjectUtilities.equal(this.labelFont, that.labelFont)
5038	PaintUtilities.equal(this.labelPaint, that.labelPaint)
5039	ObjectUtilities.equal(this.labelInsets, that.labelInsets)
5040	this.labelAngle != that.labelAngle
5041	ObjectUtilities.equal(this.labelToolTip, that.labelToolTip)
5042	ObjectUtilities.equal(this.labelURL, that.labelURL)
5043	this.axisLineVisible != that.axisLineVisible
5044	ObjectUtilities.equal(this.axisLineStroke, that.axisLineStroke)
5045	PaintUtilities.equal(this.axisLinePaint, that.axisLinePaint)
5046	this.tickLabelsVisible != that.tickLabelsVisible
5047	ObjectUtilities.equal(this.tickLabelFont, that.tickLabelFont)
5048	PaintUtilities.equal(this.tickLabelPaint, that.tickLabelPaint)
5049	ObjectUtilities.equal( this.tickLabelInsets, that.tickLabelInsets )
5050	this.tickMarksVisible != that.tickMarksVisible
5051	this.tickMarkInsideLength != that.tickMarkInsideLength
5052	this.tickMarkOutsideLength != that.tickMarkOutsideLength
5053	PaintUtilities.equal(this.tickMarkPaint, that.tickMarkPaint)
5054	ObjectUtilities.equal(this.tickMarkStroke, that.tickMarkStroke)
5055	this.minorTickMarksVisible != that.minorTickMarksVisible
5056	this.minorTickMarkInsideLength != that.minorTickMarkInsideLength
5057	this.minorTickMarkOutsideLength != that.minorTickMarkOutsideLength
5058	this.fixedDimension != that.fixedDimension
5226	axis == null
5227	edge == null
5228	edge == RectangleEdge.TOP
5229	edge == RectangleEdge.BOTTOM
5230	edge == RectangleEdge.LEFT
5231	edge == RectangleEdge.RIGHT
5484	axis == null
5485	obj == this
5486	obj instanceof AxisEntity
5487	getArea().equals(that.getArea())
5488	ObjectUtilities.equal(getToolTipText(), that.getToolTipText())
5489	ObjectUtilities.equal(getURLText(), that.getURLText())
5490	this.axis.equals(that.axis)
5519	axis == null
5199	this == obj
5200	obj instanceof AxisLocation
5201	this.name.equals(location.toString())
5202	location == null
5203	location == AxisLocation.TOP_OR_LEFT
5204	location == AxisLocation.TOP_OR_RIGHT
5205	location == AxisLocation.BOTTOM_OR_LEFT
5206	location == AxisLocation.BOTTOM_OR_RIGHT
5207	this.equals(AxisLocation.TOP_OR_RIGHT)
5208	this.equals(AxisLocation.BOTTOM_OR_RIGHT)
5209	this.equals(AxisLocation.TOP_OR_LEFT)
5210	this.equals(AxisLocation.BOTTOM_OR_LEFT)
4716	edge == null
4717	edge == RectangleEdge.TOP
4718	edge == RectangleEdge.BOTTOM
4719	edge == RectangleEdge.LEFT
4720	edge == RectangleEdge.RIGHT
4721	edge == RectangleEdge.TOP
4722	this.top < space
4723	edge == RectangleEdge.BOTTOM
4724	this.bottom < space
4725	edge == RectangleEdge.LEFT
4726	this.left < space
4727	edge == RectangleEdge.RIGHT
4728	this.right < space
4729	result == null
4730	result == null
4731	edge == RectangleEdge.TOP
4732	edge == RectangleEdge.BOTTOM
4733	edge == RectangleEdge.LEFT
4734	edge == RectangleEdge.RIGHT
4735	obj == this
4736	obj instanceof AxisSpace
4737	this.top != that.top
4738	this.bottom != that.bottom
4739	this.left != that.left
4740	this.right != that.right
4320	edge == RectangleEdge.TOP
4321	edge == RectangleEdge.BOTTOM
4322	edge == RectangleEdge.LEFT
4323	edge == RectangleEdge.RIGHT
8576	painter == null
8577	min < 0.0
8578	this.includeBaseInRange != include
8579	painter == null
8580	paint == null
8581	dataset != null
8582	orientation == PlotOrientation.HORIZONTAL
8583	orientation == PlotOrientation.VERTICAL
8584	columns > 1
8585	rows > 1
8586	(rows * columns) > 0
8587	orientation == PlotOrientation.HORIZONTAL
8588	seriesCount > 1
8589	barHigh < lclip
8590	barLow > uclip
8591	dataset == null
8592	result != null
8593	this.includeBaseInRange
8594	cp == null
8595	isSeriesVisible(series)
8595	isSeriesVisibleInLegend(series)
8596	getLegendItemToolTipGenerator() != null
8597	getLegendItemURLGenerator() != null
8598	labelPaint != null
8599	this.gradientPaintTransformer != null
8600	visibleRow < 0
8601	dataValue == null
8602	barL0L1 == null
8603	barLength > 0.0
8603	barLength < getMinimumBarLength()
8604	orientation == PlotOrientation.HORIZONTAL
8605	positive
8605	inverted
8605	inverted
8605	positive
8606	positive
8606	positive
8606	inverted
8606	inverted
8607	orientation == PlotOrientation.HORIZONTAL
8608	getShadowsVisible()
8609	isItemLabelVisible(row, column, selected)
8609	generator != null
8610	entities != null
8611	categories > 1
8612	label == null
8613	negative
8614	isInternalAnchor(position.getItemLabelAnchor())
8615	bounds != null
8616	bar.contains(bounds.getBounds2D())
8617	negative
8618	position != null
8619	position != null
8620	anchor == ItemLabelAnchor.CENTER
8621	anchor == ItemLabelAnchor.INSIDE1
8622	anchor == ItemLabelAnchor.INSIDE2
8623	anchor == ItemLabelAnchor.INSIDE3
8624	anchor == ItemLabelAnchor.INSIDE4
8625	anchor == ItemLabelAnchor.INSIDE5
8626	anchor == ItemLabelAnchor.INSIDE6
8627	anchor == ItemLabelAnchor.INSIDE7
8628	anchor == ItemLabelAnchor.INSIDE8
8629	anchor == ItemLabelAnchor.INSIDE9
8630	anchor == ItemLabelAnchor.INSIDE10
8631	anchor == ItemLabelAnchor.INSIDE11
8632	anchor == ItemLabelAnchor.INSIDE12
8633	anchor == ItemLabelAnchor.OUTSIDE1
8634	anchor == ItemLabelAnchor.OUTSIDE2
8635	anchor == ItemLabelAnchor.OUTSIDE3
8636	anchor == ItemLabelAnchor.OUTSIDE4
8637	anchor == ItemLabelAnchor.OUTSIDE5
8638	anchor == ItemLabelAnchor.OUTSIDE6
8639	anchor == ItemLabelAnchor.OUTSIDE7
8640	anchor == ItemLabelAnchor.OUTSIDE8
8641	anchor == ItemLabelAnchor.OUTSIDE9
8642	anchor == ItemLabelAnchor.OUTSIDE10
8643	anchor == ItemLabelAnchor.OUTSIDE11
8644	anchor == ItemLabelAnchor.OUTSIDE12
8645	obj == this
8646	obj instanceof BarRenderer
8647	this.base != that.base
8648	this.itemMargin != that.itemMargin
8649	this.drawBarOutline != that.drawBarOutline
8650	this.maximumBarWidth != that.maximumBarWidth
8651	this.minimumBarLength != that.minimumBarLength
8652	ObjectUtilities.equal(this.gradientPaintTransformer, that.gradientPaintTransformer)
8653	ObjectUtilities.equal(this.positiveItemLabelPositionFallback, that.positiveItemLabelPositionFallback)
8654	ObjectUtilities.equal(this.negativeItemLabelPositionFallback, that.negativeItemLabelPositionFallback)
8655	this.barPainter.equals(that.barPainter)
8656	this.shadowsVisible != that.shadowsVisible
8657	PaintUtilities.equal(this.shadowPaint, that.shadowPaint)
8658	this.shadowXOffset != that.shadowXOffset
8659	this.shadowYOffset != that.shadowYOffset
8140	paint == null
8141	backgroundPaint != null
8142	backgroundImage != null
8143	outlinePaint != null
8143	outlineStroke != null
8144	orientation == PlotOrientation.HORIZONTAL
8145	orientation == PlotOrientation.VERTICAL
8146	range.contains(value)
8147	orientation == PlotOrientation.HORIZONTAL
8148	orientation == PlotOrientation.VERTICAL
8149	range.contains(value)
8150	orientation == PlotOrientation.HORIZONTAL
8151	orientation == PlotOrientation.VERTICAL
8152	marker instanceof ValueMarker
8153	range.contains(value)
8154	orientation == PlotOrientation.HORIZONTAL
8155	orientation == PlotOrientation.VERTICAL
8156	label != null
8157	dataValue == null
8158	barL0L1 == null
8159	orientation == PlotOrientation.HORIZONTAL
8160	barLength > 0.0
8161	itemPaint instanceof Color
8162	isDrawBarOutline()
8162	state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD
8163	bar3dRight != null
8164	bar3dTop != null
8165	isItemLabelVisible(row, column, selected)
8165	generator != null
8166	entities != null
8167	obj == this
8168	obj instanceof BarRenderer3D
8169	this.xOffset != that.xOffset
8170	this.yOffset != that.yOffset
8171	PaintUtilities.equal(this.wallPaint, that.wallPaint)
6020	library == null
6021	l != null
6022	libraryClass == null
6023	library == null
6922	insets == null
6923	paint == null
6924	t > 0.0
6925	b > 0.0
6926	l > 0.0
6927	r > 0.0
6928	obj == this
6929	obj instanceof BlockBorder
6930	this.insets.equals(that.insets)
6931	PaintUtilities.equal(this.paint, that.paint)
6778	arrangement == null
6779	arrangement == null
6780	params instanceof EntityBlockParams
6781	ebp.getGenerateEntities()
6782	sec != null
6783	r instanceof EntityBlockResult
6784	sec != null
6785	obj == this
6786	obj instanceof BlockContainer
6787	super.equals(obj)
6788	this.arrangement.equals(that.arrangement)
6789	this.blocks.equals(that.blocks)
1813	obj instanceof BooleanList
6847	key == null
6848	edge == RectangleEdge.TOP
6849	edge == RectangleEdge.BOTTOM
6850	edge == RectangleEdge.LEFT
6851	edge == RectangleEdge.RIGHT
6852	w == LengthConstraintType.NONE
6853	h == LengthConstraintType.NONE
6854	h == LengthConstraintType.FIXED
6855	h == LengthConstraintType.RANGE
6856	w == LengthConstraintType.FIXED
6857	h == LengthConstraintType.NONE
6858	h == LengthConstraintType.FIXED
6859	h == LengthConstraintType.RANGE
6860	w == LengthConstraintType.RANGE
6861	h == LengthConstraintType.NONE
6862	h == LengthConstraintType.FIXED
6863	h == LengthConstraintType.RANGE
6864	this.topBlock != null
6865	this.bottomBlock != null
6866	this.leftBlock != null
6867	this.rightBlock != null
6868	this.centerBlock != null
6869	this.topBlock != null
6870	this.bottomBlock != null
6871	this.leftBlock != null
6872	this.rightBlock != null
6873	this.centerBlock != null
6874	constraint.getHeightRange().contains(size1.getHeight())
6875	this.topBlock != null
6876	this.bottomBlock != null
6877	this.leftBlock != null
6878	this.rightBlock != null
6879	this.centerBlock != null
6880	this.topBlock != null
6881	this.bottomBlock != null
6882	this.leftBlock != null
6883	this.rightBlock != null
6884	this.centerBlock != null
6885	this.topBlock != null
6886	this.bottomBlock != null
6887	this.leftBlock != null
6888	this.rightBlock != null
6889	this.centerBlock != null
6890	this.topBlock != null
6891	this.bottomBlock != null
6892	this.leftBlock != null
6893	this.rightBlock != null
6894	this.centerBlock != null
6895	this.topBlock != null
6896	this.bottomBlock != null
6897	this.leftBlock != null
6898	this.rightBlock != null
6899	this.centerBlock != null
6900	obj == this
6901	obj instanceof BorderArrangement
6902	ObjectUtilities.equal(this.topBlock, that.topBlock)
6903	ObjectUtilities.equal(this.bottomBlock, that.bottomBlock)
6904	ObjectUtilities.equal(this.leftBlock, that.leftBlock)
6905	ObjectUtilities.equal(this.rightBlock, that.rightBlock)
6906	ObjectUtilities.equal(this.centerBlock, that.centerBlock)
873	values == null
874	stripNullAndNaNItems
875	obj instanceof Number
876	Double.isNaN(v)
877	value > upperOutlierThreshold
878	value <= upperFaroutThreshold
878	value > maxOutlier
879	value < lowerOutlierThreshold
880	value >= lowerFaroutThreshold
880	value < minOutlier
881	values == null
882	count > 0
883	count % 2 == 1
884	count > 1
885	values == null
886	count > 0
887	count % 2 == 1
888	count > 1
803	this.outliers == null
804	obj == this
805	obj instanceof BoxAndWhiskerItem
806	ObjectUtilities.equal(this.mean, that.mean)
807	ObjectUtilities.equal(this.median, that.median)
808	ObjectUtilities.equal(this.q1, that.q1)
809	ObjectUtilities.equal(this.q3, that.q3)
810	ObjectUtilities.equal(this.minRegularValue, that.minRegularValue)
811	ObjectUtilities.equal(this.maxRegularValue, that.maxRegularValue)
812	ObjectUtilities.equal(this.minOutlier, that.minOutlier)
813	ObjectUtilities.equal(this.maxOutlier, that.maxOutlier)
814	ObjectUtilities.equal(this.outliers, that.outliers)
8398	paint == null
8399	this.meanVisible == visible
8400	cp == null
8401	isSeriesVisibleInLegend(series)
8401	isSeriesVisible(series)
8402	getLegendItemToolTipGenerator() != null
8403	getLegendItemURLGenerator() != null
8404	labelPaint != null
8405	dataset != null
8406	orientation == PlotOrientation.HORIZONTAL
8407	orientation == PlotOrientation.VERTICAL
8408	columns > 1
8409	rows > 1
8410	(rows * columns) > 0
8411	getItemVisible(row, column)
8412	dataset instanceof BoxAndWhiskerCategoryDataset
8413	orientation == PlotOrientation.HORIZONTAL
8414	orientation == PlotOrientation.VERTICAL
8415	seriesCount > 1
8416	xQ1 != null
8416	xQ3 != null
8416	xMin != null
8416	xMax != null
8417	this.fillBox
8418	this.meanVisible
8419	xMean != null
8420	xxMean > (dataArea.getMinX() - aRadius)
8420	xxMean < (dataArea.getMaxX() + aRadius)
8421	this.medianVisible
8422	xMedian != null
8423	box != null
8423	state.getInfo() != null
8424	entities != null
8425	seriesCount > 1
8426	yQ1 != null
8426	yMin != null
8426	yQ3 != null
8426	yMax != null
8427	this.fillBox
8428	this.meanVisible
8429	yMean != null
8430	yyAverage < (dataArea.getMaxY() + aRadius)
8430	yyAverage > (dataArea.getMinY() - aRadius)
8431	this.medianVisible
8432	yMedian != null
8433	yOutliers != null
8434	outlier > maxOutlier.doubleValue()
8435	outlier < minOutlier.doubleValue()
8436	outlier > maxRegular.doubleValue()
8437	outlier < minRegular.doubleValue()
8438	list.isMultiple()
8439	outlierListCollection.isHighFarOut()
8440	outlierListCollection.isLowFarOut()
8441	state.getInfo() != null
8441	box != null
8442	entities != null
8443	obj == this
8444	obj instanceof BoxAndWhiskerRenderer
8445	this.fillBox != that.fillBox
8446	this.itemMargin != that.itemMargin
8447	this.maximumBarWidth != that.maximumBarWidth
8448	this.meanVisible != that.meanVisible
8449	this.medianVisible != that.medianVisible
8450	PaintUtilities.equal(this.artifactPaint, that.artifactPaint)
2373	dataset instanceof BoxAndWhiskerCategoryDataset
2374	obj == this
2375	obj instanceof BoxAndWhiskerToolTipGenerator
2281	getXDateFormat() != null
2282	dataset instanceof BoxAndWhiskerXYDataset
2283	obj == this
2284	obj instanceof BoxAndWhiskerXYToolTipGenerator
2304	zFormat == null
2305	zFormat == null
2306	dataset instanceof XYZDataset
2307	xf != null
2308	yf != null
2309	this.zDateFormat != null
2310	obj == this
2311	obj instanceof BubbleXYItemLabelGenerator
2312	super.equals(obj)
2313	ObjectUtilities.equal(this.zFormat, that.zFormat)
2314	ObjectUtilities.equal(this.zDateFormat, that.zDateFormat)
1706	lineIndex == 0
1707	line.charAt(i) == this.fieldDelimiter
1708	fieldIndex > 0
1709	line.charAt(i) == this.fieldDelimiter
1710	fieldIndex == 0
1711	k.charAt(0) == this.textDelimiter
1712	k.charAt(k.length() - 1) == this.textDelimiter
7272	width != this.candleWidth
7273	this.autoWidthMethod != autoWidthMethod
7274	this.autoWidthFactor != autoWidthFactor
7275	this.autoWidthGap != autoWidthGap
7276	this.drawVolume != flag
7277	paint == null
7278	this.useOutlinePaint != use
7279	this.drawVolume
7280	volume > this.maxVolume
7281	orientation == PlotOrientation.HORIZONTAL
7282	orientation == PlotOrientation.VERTICAL
7283	state.getInfo() != null
7284	this.candleWidth > 0
7285	horiz
7286	lastPos != -1
7287	this.useOutlinePaint
7288	this.drawVolume
7289	horiz
7290	horiz
7291	this.useOutlinePaint
7292	yHigh > maxOpenClose
7293	horiz
7294	yLow < minOpenClose
7295	horiz
7296	horiz
7297	yClose > yOpen
7298	this.upPaint != null
7299	this.downPaint != null
7300	this.useOutlinePaint
7301	entities != null
7302	obj == this
7303	obj instanceof CandlestickRenderer
7304	this.candleWidth != that.candleWidth
7305	PaintUtilities.equal(this.upPaint, that.upPaint)
7306	PaintUtilities.equal(this.downPaint, that.downPaint)
7307	this.drawVolume != that.drawVolume
7308	this.maxCandleWidthInMilliseconds != that.maxCandleWidthInMilliseconds
7309	this.autoWidthMethod != that.autoWidthMethod
7310	this.autoWidthFactor != that.autoWidthFactor
7311	this.autoWidthGap != that.autoWidthGap
7312	this.useOutlinePaint != that.useOutlinePaint
7313	PaintUtilities.equal(this.volumePaint, that.volumePaint)
4860	this == obj
4861	obj instanceof CategoryAnchor
4862	this.name.equals(position.toString())
4863	this.equals(CategoryAnchor.START)
4864	this.equals(CategoryAnchor.MIDDLE)
4865	this.equals(CategoryAnchor.END)
4412	positions == null
4413	category == null
4414	result == null
4415	category == null
4416	font == null
4417	category == null
4418	result == null
4419	category == null
4420	paint == null
4421	category == null
4422	category == null
4423	category == null
4424	anchor == CategoryAnchor.START
4425	anchor == CategoryAnchor.MIDDLE
4426	anchor == CategoryAnchor.END
4427	edge == RectangleEdge.BOTTOM
4427	edge == RectangleEdge.TOP
4428	edge == RectangleEdge.RIGHT
4428	edge == RectangleEdge.LEFT
4429	category < 0
4429	category >= categoryCount
4430	categories == null
4431	seriesCount == 1
4432	seriesCount == 1
4433	edge == RectangleEdge.BOTTOM
4433	edge == RectangleEdge.TOP
4434	edge == RectangleEdge.LEFT
4434	edge == RectangleEdge.RIGHT
4435	categoryCount > 1
4436	edge == RectangleEdge.TOP
4436	edge == RectangleEdge.BOTTOM
4437	edge == RectangleEdge.RIGHT
4437	edge == RectangleEdge.LEFT
4438	categoryCount > 1
4439	space == null
4440	isVisible()
4441	isTickLabelsVisible()
4442	edge == RectangleEdge.TOP
4443	edge == RectangleEdge.BOTTOM
4444	edge == RectangleEdge.LEFT
4445	edge == RectangleEdge.RIGHT
4446	RectangleEdge.isTopOrBottom(edge)
4447	RectangleEdge.isLeftOrRight(edge)
4448	isVisible()
4449	isAxisLineVisible()
4450	isTickMarksVisible()
4451	state == null
4452	isTickLabelsVisible()
4453	edge == RectangleEdge.TOP
4454	edge == RectangleEdge.BOTTOM
4455	edge == RectangleEdge.LEFT
4456	edge == RectangleEdge.RIGHT
4457	plotState.getOwner() != null
4457	plotState != null
4458	entities != null
4459	edge.equals(RectangleEdge.TOP)
4460	edge.equals(RectangleEdge.BOTTOM)
4461	edge == RectangleEdge.LEFT
4462	edge == RectangleEdge.RIGHT
4463	dataArea.getWidth() < 0.0
4463	dataArea.getHeight() <= 0.0
4464	categories != null
4465	r <= 0.0
4466	position.getWidthType() == CategoryLabelWidthType.CATEGORY
4467	RectangleEdge.isLeftOrRight(edge)
4468	edge == RectangleEdge.TOP
4468	edge == RectangleEdge.BOTTOM
4469	edge == RectangleEdge.LEFT
4469	edge == RectangleEdge.RIGHT
4470	p == null
4471	edge.equals(RectangleEdge.TOP)
4472	edge.equals(RectangleEdge.BOTTOM)
4473	edge.equals(RectangleEdge.LEFT)
4474	edge.equals(RectangleEdge.RIGHT)
4475	obj == this
4476	obj instanceof CategoryAxis
4477	super.equals(obj)
4478	that.lowerMargin != this.lowerMargin
4479	that.upperMargin != this.upperMargin
4480	that.categoryMargin != this.categoryMargin
4481	that.maximumCategoryLabelWidthRatio != this.maximumCategoryLabelWidthRatio
4482	that.categoryLabelPositionOffset != this.categoryLabelPositionOffset
4483	ObjectUtilities.equal(that.categoryLabelPositions, this.categoryLabelPositions)
4484	ObjectUtilities.equal(that.categoryLabelToolTips, this.categoryLabelToolTips)
4485	ObjectUtilities.equal(this.tickLabelFontMap, that.tickLabelFontMap)
4486	equalPaintMaps(this.tickLabelPaintMap, that.tickLabelPaintMap)
4487	getLabel() != null
4488	isNull
4489	map == null
4490	map1.size() != map2.size()
4491	PaintUtilities.equal(p1, p2)
5079	isVisible()
5080	plot.getRenderer() instanceof Effect3D
5081	edge == RectangleEdge.BOTTOM
5081	edge == RectangleEdge.LEFT
5082	edge == RectangleEdge.RIGHT
5082	edge == RectangleEdge.TOP
5083	isAxisLineVisible()
5084	isTickMarksVisible()
5085	renderer instanceof Effect3D
5086	edge == RectangleEdge.LEFT
5086	edge == RectangleEdge.BOTTOM
5087	edge == RectangleEdge.TOP
5087	edge == RectangleEdge.RIGHT
5088	anchor == CategoryAnchor.START
5089	anchor == CategoryAnchor.MIDDLE
5090	anchor == CategoryAnchor.END
3151	anchor != null
3152	orientation == PlotOrientation.HORIZONTAL
3153	d < getCrosshairDistance()
3154	anchor != null
3155	orientation == PlotOrientation.HORIZONTAL
3156	d < getCrosshairDistance()
40	current != this
41	qName.equals(CATEGORYDATASET_TAG)
42	qName.equals(SERIES_TAG)
43	current != this
5502	dataset == null
5503	dataset == null
5504	obj == this
5505	obj instanceof CategoryItemEntity
5506	this.rowKey.equals(that.rowKey)
5507	this.columnKey.equals(that.columnKey)
5508	ObjectUtilities.equal(this.dataset, that.dataset)
8491	this.visibleSeries == null
8492	this.visibleSeries[vRow] == rowIndex
8493	this.visibleSeries == null
8494	this.visibleSeries == null
5481	obj == this
5482	obj instanceof CategoryLabelEntity
5483	ObjectUtilities.equal(this.key, that.key)
5271	categoryAnchor == null
5272	labelAnchor == null
5273	rotationAnchor == null
5274	widthType == null
5275	obj == this
5276	obj instanceof CategoryLabelPosition
5277	this.categoryAnchor.equals(that.categoryAnchor)
5278	this.labelAnchor.equals(that.labelAnchor)
5279	this.rotationAnchor.equals(that.rotationAnchor)
5280	this.angle != that.angle
5281	this.widthType != that.widthType
5282	this.widthRatio != that.widthRatio
4966	top == null
4967	bottom == null
4968	left == null
4969	right == null
4970	edge == RectangleEdge.TOP
4971	edge == RectangleEdge.BOTTOM
4972	edge == RectangleEdge.LEFT
4973	edge == RectangleEdge.RIGHT
4974	base == null
4975	top == null
4976	base == null
4977	bottom == null
4978	base == null
4979	left == null
4980	base == null
4981	right == null
4982	this == obj
4983	obj instanceof CategoryLabelPositions
4984	this.positionForAxisAtTop.equals(that.positionForAxisAtTop)
4985	this.positionForAxisAtBottom.equals( that.positionForAxisAtBottom)
4986	this.positionForAxisAtLeft.equals(that.positionForAxisAtLeft)
4987	this.positionForAxisAtRight.equals(that.positionForAxisAtRight)
4960	name == null
4961	this == obj
4962	obj instanceof CategoryLabelWidthType
4963	this.name.equals(t.toString())
4964	this.equals(CategoryLabelWidthType.CATEGORY)
4965	this.equals(CategoryLabelWidthType.RANGE)
5739	category1 == null
5740	category2 == null
5741	paint == null
5742	stroke == null
5743	category == null
5744	category == null
5745	paint == null
5746	stroke == null
5747	orientation == PlotOrientation.HORIZONTAL
5748	orientation == PlotOrientation.VERTICAL
5749	obj == this
5750	obj instanceof CategoryLineAnnotation
5751	this.category1.equals(that.getCategory1())
5752	this.value1 != that.getValue1()
5753	this.category2.equals(that.getCategory2())
5754	this.value2 != that.getValue2()
5755	PaintUtilities.equal(this.paint, that.paint)
5756	ObjectUtilities.equal(this.stroke, that.stroke)
3157	key == null
3158	obj == null
3159	obj instanceof CategoryMarker
3160	super.equals(obj)
3161	this.key.equals(that.key)
3162	this.drawAsLine != that.drawAsLine
2497	dataset != null
2498	renderer != null
2499	domainAxis != null
2500	rangeAxis != null
2501	orientation == null
2502	offset == null
2503	index < this.domainAxes.size()
2504	result == null
2505	parent instanceof CategoryPlot
2506	existing != null
2507	axis != null
2508	axis != null
2509	notify
2510	axis == null
2511	index < this.domainAxisLocations.size()
2512	result == null
2513	location == null
2513	index == 0
2514	notify
2515	location != null
2516	axis != null
2517	axis != null
2518	index < this.rangeAxes.size()
2519	result == null
2520	parent instanceof CategoryPlot
2521	existing != null
2522	axis != null
2523	axis != null
2524	notify
2525	axis == null
2526	result < 0
2527	parent instanceof CategoryPlot
2528	index < this.rangeAxisLocations.size()
2529	result == null
2530	index == 0
2530	location == null
2531	notify
2532	result == null
2533	axis != null
2534	axis != null
2535	this.datasets.size() > index
2536	existing != null
2537	dataset != null
2538	dataset == this.datasets.get(i)
2539	index < 0
2540	indices == null
2541	count == 0
2542	item instanceof Integer
2543	set.contains(item)
2544	index < 0
2545	axisIndices != null
2546	index < 0
2547	index < 0
2548	axisIndices != null
2549	this.renderers.size() > index
2550	existing != null
2551	renderer != null
2552	notify
2553	this.datasets.get(i) == dataset
2554	order == null
2555	order == null
2556	order == null
2557	this.domainGridlinesVisible != visible
2558	position == null
2559	stroke == null
2560	paint == null
2561	stroke == null
2562	paint == null
2563	this.rangeGridlinesVisible != visible
2564	stroke == null
2565	paint == null
2566	this.rangeMinorGridlinesVisible != visible
2567	stroke == null
2568	paint == null
2569	result == null
2570	dataset != null
2571	renderer != null
2572	item != null
2573	dataArea.contains(x, y)
2574	this.orientation == PlotOrientation.HORIZONTAL
2575	this.orientation == PlotOrientation.VERTICAL
2576	percent > 0.0
2577	yAxis != null
2578	getParent() != null
2579	parent != null
2580	parent instanceof RendererChangeListener
2581	marker == null
2582	layer == null
2583	layer == Layer.FOREGROUND
2584	markers == null
2585	layer == Layer.BACKGROUND
2586	markers == null
2587	notify
2588	this.backgroundDomainMarkers != null
2589	this.foregroundDomainMarkers != null
2590	layer == Layer.FOREGROUND
2591	layer == Layer.BACKGROUND
2592	result != null
2593	this.backgroundDomainMarkers != null
2594	markers != null
2595	this.foregroundDomainMarkers != null
2596	markers != null
2597	layer == Layer.FOREGROUND
2598	markers == null
2599	notify
2599	removed
2600	layer == Layer.FOREGROUND
2601	markers == null
2602	layer == Layer.BACKGROUND
2603	markers == null
2604	notify
2605	this.backgroundRangeMarkers != null
2606	this.foregroundRangeMarkers != null
2607	layer == Layer.FOREGROUND
2608	layer == Layer.BACKGROUND
2609	result != null
2610	this.backgroundRangeMarkers != null
2611	markers != null
2612	this.foregroundRangeMarkers != null
2613	markers != null
2614	marker == null
2615	layer == Layer.FOREGROUND
2616	markers == null
2617	removed
2617	notify
2618	this.domainCrosshairVisible != flag
2619	notify
2620	notify
2621	notify
2622	paint == null
2623	stroke == null
2624	this.rangeCrosshairVisible != flag
2625	this.rangeCrosshairLockedOnData != flag
2626	notify
2626	isRangeCrosshairVisible()
2627	stroke == null
2628	paint == null
2629	annotation == null
2630	notify
2631	annotation == null
2632	removed
2632	notify
2633	space == null
2634	this.fixedDomainAxisSpace != null
2635	this.orientation == PlotOrientation.HORIZONTAL
2636	this.orientation == PlotOrientation.VERTICAL
2637	this.drawSharedDomainAxis
2638	xAxis != null
2639	space == null
2640	this.fixedRangeAxisSpace != null
2641	this.orientation == PlotOrientation.HORIZONTAL
2642	this.orientation == PlotOrientation.VERTICAL
2643	yAxis != null
2644	b2
2644	b1
2645	state == null
2646	getRenderer() != null
2647	dataArea.contains(anchor)
2647	anchor != null
2648	anchor != null
2649	rangeAxis != null
2650	getOrientation() == PlotOrientation.VERTICAL
2651	rangeAxisState == null
2652	parentState != null
2653	rangeAxisState != null
2654	order == DatasetRenderingOrder.FORWARD
2655	r != null
2656	r != null
2657	r != null
2658	r != null
2659	foundData
2660	columnKey != null
2660	isDomainCrosshairVisible()
2661	this.rangeCrosshairLockedOnData
2661	anchor != null
2662	getOrientation() == PlotOrientation.VERTICAL
2663	isRangeCrosshairVisible()
2664	isOutlineVisible()
2665	getRenderer() != null
2666	xAxis != null
2667	yAxis != null
2668	axis != null
2669	axis != null
2670	axis != null
2671	axis != null
2672	hasData
2672	renderer != null
2673	this.columnRenderingOrder == SortOrder.ASCENDING
2674	this.rowRenderingOrder == SortOrder.ASCENDING
2675	this.rowRenderingOrder == SortOrder.ASCENDING
2676	isDomainGridlinesVisible()
2677	dataset == null
2678	axis != null
2679	renderer1 != null
2680	isRangeGridlinesVisible()
2680	isRangeMinorGridlinesVisible()
2681	axis == null
2682	r == null
2683	tick.getTickType() == TickType.MINOR
2683	isRangeMinorGridlinesVisible()
2684	isRangeGridlinesVisible()
2684	tick.getTickType() == TickType.MAJOR
2685	tick.getValue() != 0.0
2685	paintLine
2685	isRangeZeroBaselineVisible()
2686	isRangeZeroBaselineVisible()
2687	r == null
2688	axis != null
2688	markers != null
2689	r == null
2690	axis != null
2690	markers != null
2691	this.orientation == PlotOrientation.HORIZONTAL
2692	this.orientation == PlotOrientation.VERTICAL
2693	orientation == PlotOrientation.VERTICAL
2694	axis.getRange().contains(value)
2695	orientation == PlotOrientation.HORIZONTAL
2696	rangeIndex >= 0
2697	axis == getRangeAxis()
2698	r != null
2699	mappedAxes == null
2700	key.equals(ZERO)
2701	dataset != null
2702	mappedAxes.contains(key)
2703	dataset != null
2704	mappedAxes == null
2705	key.equals(ZERO)
2706	mappedAxes.contains(key)
2707	notify
2708	notify
2709	getDataset() != null
2710	result.contains(category)
2711	isRangePannable()
2712	axis == null
2713	axis.isInverted()
2714	rangeAxis != null
2715	useAnchor
2716	this.orientation == PlotOrientation.HORIZONTAL
2717	rangeAxis != null
2718	notify
2719	obj == this
2720	obj instanceof CategoryPlot
2721	this.orientation != that.orientation
2722	ObjectUtilities.equal(this.axisOffset, that.axisOffset)
2723	this.domainAxes.equals(that.domainAxes)
2724	this.domainAxisLocations.equals(that.domainAxisLocations)
2725	this.drawSharedDomainAxis != that.drawSharedDomainAxis
2726	this.rangeAxes.equals(that.rangeAxes)
2727	this.rangeAxisLocations.equals(that.rangeAxisLocations)
2728	ObjectUtilities.equal(this.datasetToDomainAxesMap, that.datasetToDomainAxesMap)
2729	ObjectUtilities.equal(this.datasetToRangeAxesMap, that.datasetToRangeAxesMap)
2730	ObjectUtilities.equal(this.renderers, that.renderers)
2731	this.renderingOrder != that.renderingOrder
2732	this.columnRenderingOrder != that.columnRenderingOrder
2733	this.rowRenderingOrder != that.rowRenderingOrder
2734	this.domainGridlinesVisible != that.domainGridlinesVisible
2735	this.domainGridlinePosition != that.domainGridlinePosition
2736	ObjectUtilities.equal(this.domainGridlineStroke, that.domainGridlineStroke)
2737	PaintUtilities.equal(this.domainGridlinePaint, that.domainGridlinePaint)
2738	this.rangeGridlinesVisible != that.rangeGridlinesVisible
2739	ObjectUtilities.equal(this.rangeGridlineStroke, that.rangeGridlineStroke)
2740	PaintUtilities.equal(this.rangeGridlinePaint, that.rangeGridlinePaint)
2741	this.anchorValue != that.anchorValue
2742	this.rangeCrosshairVisible != that.rangeCrosshairVisible
2743	this.rangeCrosshairValue != that.rangeCrosshairValue
2744	ObjectUtilities.equal(this.rangeCrosshairStroke, that.rangeCrosshairStroke)
2745	PaintUtilities.equal(this.rangeCrosshairPaint, that.rangeCrosshairPaint)
2746	this.rangeCrosshairLockedOnData != that.rangeCrosshairLockedOnData
2747	ObjectUtilities.equal(this.foregroundDomainMarkers, that.foregroundDomainMarkers)
2748	ObjectUtilities.equal(this.backgroundDomainMarkers, that.backgroundDomainMarkers)
2749	ObjectUtilities.equal(this.foregroundRangeMarkers, that.foregroundRangeMarkers)
2750	ObjectUtilities.equal(this.backgroundRangeMarkers, that.backgroundRangeMarkers)
2751	ObjectUtilities.equal(this.annotations, that.annotations)
2752	this.weight != that.weight
2753	ObjectUtilities.equal(this.fixedDomainAxisSpace, that.fixedDomainAxisSpace)
2754	ObjectUtilities.equal(this.fixedRangeAxisSpace, that.fixedRangeAxisSpace)
2755	ObjectUtilities.equal(this.fixedLegendItems, that.fixedLegendItems)
2756	this.domainCrosshairVisible != that.domainCrosshairVisible
2757	this.crosshairDatasetIndex != that.crosshairDatasetIndex
2758	ObjectUtilities.equal(this.domainCrosshairColumnKey, that.domainCrosshairColumnKey)
2759	ObjectUtilities.equal(this.domainCrosshairRowKey, that.domainCrosshairRowKey)
2760	PaintUtilities.equal(this.domainCrosshairPaint, that.domainCrosshairPaint)
2761	ObjectUtilities.equal(this.domainCrosshairStroke, that.domainCrosshairStroke)
2762	this.rangeMinorGridlinesVisible != that.rangeMinorGridlinesVisible
2763	PaintUtilities.equal(this.rangeMinorGridlinePaint, that.rangeMinorGridlinePaint)
2764	ObjectUtilities.equal(this.rangeMinorGridlineStroke, that.rangeMinorGridlineStroke)
2765	this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible
2766	PaintUtilities.equal(this.rangeZeroBaselinePaint, that.rangeZeroBaselinePaint)
2767	ObjectUtilities.equal(this.rangeZeroBaselineStroke, that.rangeZeroBaselineStroke)
2768	xAxis != null
2769	yAxis != null
2770	dataset != null
2771	this.fixedDomainAxisSpace != null
2772	this.fixedRangeAxisSpace != null
2773	this.fixedLegendItems != null
2774	xAxis != null
2775	yAxis != null
2776	dataset != null
2777	renderer != null
5685	stroke == null
5686	paint == null
5687	orientation == PlotOrientation.HORIZONTAL
5688	obj == this
5689	obj instanceof CategoryPointerAnnotation
5690	super.equals(obj)
5691	this.angle != that.angle
5692	this.tipRadius != that.tipRadius
5693	this.baseRadius != that.baseRadius
5694	this.arrowLength != that.arrowLength
5695	this.arrowWidth != that.arrowWidth
5696	this.arrowPaint.equals(that.arrowPaint)
5697	ObjectUtilities.equal(this.arrowStroke, that.arrowStroke)
5698	this.labelOffset != that.labelOffset
25	qName.equals(SERIES_TAG)
26	qName.equals(ITEM_TAG)
27	this.root instanceof CategoryDatasetHandler
8706	p == null
8707	isSeriesVisible(series)
8707	isSeriesVisibleInLegend(series)
8708	getLegendItemToolTipGenerator() != null
8709	getLegendItemURLGenerator() != null
8710	labelPaint != null
8711	orientation == PlotOrientation.VERTICAL
8712	orientation == PlotOrientation.HORIZONTAL
8713	getItemVisible(row, column)
8714	value == null
8715	column != 0
8716	previousValue != null
8717	getStagger()
8718	xStagger > (x1s - x0e)
8719	isItemLabelVisible(row, column, selected)
8720	entities != null
8721	orientation == PlotOrientation.VERTICAL
8722	obj == this
8723	obj instanceof CategoryStepRenderer
8724	this.stagger != that.stagger
546	notify
547	notify
548	includeInterval
549	obj instanceof CategoryTableXYDataset
550	this.intervalDelegate.equals(that.intervalDelegate)
551	this.values.equals(that.values)
5712	category == null
5713	category == null
5714	anchor == null
5715	orientation == PlotOrientation.HORIZONTAL
5716	orientation == PlotOrientation.VERTICAL
5717	obj == this
5718	obj instanceof CategoryTextAnnotation
5719	super.equals(obj)
5720	this.category.equals(that.getCategory())
5721	this.categoryAnchor.equals(that.getCategoryAnchor())
5722	this.value != that.getValue()
5169	this == obj
5170	obj instanceof CategoryTick
5170	super.equals(obj)
5171	ObjectUtilities.equal(this.category, that.category)
5172	ObjectUtilities.equal(this.label, that.label)
5173	ObjectUtilities.equal(this.labelAnchor, that.labelAnchor)
647	extract == null
648	this.source != null
649	this.source != null
650	this.extract == TableOrder.BY_ROW
651	this.extract == TableOrder.BY_COLUMN
652	item < 0
652	item >= getItemCount()
653	this.extract == TableOrder.BY_ROW
654	this.extract == TableOrder.BY_COLUMN
655	index >= getItemCount()
655	index < 0
656	this.extract == TableOrder.BY_ROW
657	this.extract == TableOrder.BY_COLUMN
658	this.source != null
659	this.extract == TableOrder.BY_ROW
660	this.extract == TableOrder.BY_COLUMN
661	this.source != null
662	this.extract == TableOrder.BY_ROW
663	this.extract == TableOrder.BY_COLUMN
664	keyIndex != -1
665	this.extract == TableOrder.BY_ROW
666	this.extract == TableOrder.BY_COLUMN
667	obj == this
668	obj instanceof PieDataset
669	that.getItemCount() != count
670	k1.equals(k2)
671	v1 == null
672	v2 != null
673	v1.equals(v2)
6936	w == LengthConstraintType.NONE
6937	h == LengthConstraintType.NONE
6938	h == LengthConstraintType.FIXED
6939	h == LengthConstraintType.RANGE
6940	w == LengthConstraintType.FIXED
6941	h == LengthConstraintType.NONE
6942	h == LengthConstraintType.FIXED
6943	h == LengthConstraintType.RANGE
6944	w == LengthConstraintType.RANGE
6945	h == LengthConstraintType.NONE
6946	h == LengthConstraintType.FIXED
6947	h == LengthConstraintType.RANGE
6948	constraint.getHeightRange().contains(s.height)
6949	constraint.getWidthRange().contains(s1.width)
6950	constraint.getWidthRange().contains(s.width)
6951	constraint.getWidthRange().contains(s1.width)
6952	obj == this
6953	obj instanceof CenterArrangement
7006	this == obj
7007	obj instanceof ChartChangeEventType
7008	this.name.equals(that.toString())
7009	this.equals(ChartChangeEventType.GENERAL)
7010	this.equals(ChartChangeEventType.NEW_DATASET)
7011	this.equals(ChartChangeEventType.DATASET_UPDATED)
6977	file.exists()
9098	f == null
5538	area == null
5539	area == null
5540	this.area instanceof Rectangle2D
5541	this.area instanceof Rectangle2D
5542	rectangle == null
5543	x2 == x1
5544	y2 == y1
5545	shape == null
5546	first
5547	hasURL
5547	hasToolTip
5548	hasToolTip
5549	hasURL
5550	hasToolTip
5551	obj == this
5552	obj instanceof ChartEntity
5553	this.area.equals(that.area)
5554	ObjectUtilities.equal(this.toolTipText, that.toolTipText)
5555	ObjectUtilities.equal(this.urlText, that.urlText)
6230	theme == null
6231	theme instanceof StandardChartTheme
6232	sct.getName().equals("Legacy")
6233	tooltips
6234	tooltips
6235	urls
6236	tooltips
6237	showDifference
6238	oldValue == null
6239	greenForIncrease
6240	showDifference
6241	greenForIncrease
6241	newValue.doubleValue() < oldValue.doubleValue()
6241	newValue.doubleValue() > oldValue.doubleValue()
6241	greenForIncrease
6242	showDifference
6243	showDifference
6244	subTitle
6245	tooltips
6246	urls
6247	showDifference
6248	oldValue == null
6249	greenForIncrease
6250	showDifference
6251	greenForIncrease
6251	newValue.doubleValue() > oldValue.doubleValue()
6251	greenForIncrease
6251	newValue.doubleValue() < oldValue.doubleValue()
6252	showDifference
6253	showDifference
6254	subTitle
6255	tooltips
6256	tooltips
6257	urls
6258	order == null
6259	tooltips
6260	urls
6261	tooltips
6262	tooltips
6263	urls
6264	order == null
6265	tooltips
6266	urls
6267	orientation == null
6268	orientation == PlotOrientation.HORIZONTAL
6269	orientation == PlotOrientation.VERTICAL
6270	tooltips
6271	urls
6272	orientation == null
6273	tooltips
6274	urls
6275	orientation == null
6276	tooltips
6277	urls
6278	orientation == PlotOrientation.HORIZONTAL
6279	orientation == null
6280	tooltips
6281	urls
6282	orientation == PlotOrientation.HORIZONTAL
6283	orientation == null
6284	tooltips
6285	urls
6286	orientation == null
6287	tooltips
6288	urls
6289	orientation == null
6290	tooltips
6291	urls
6292	orientation == null
6293	tooltips
6294	urls
6295	tooltips
6296	urls
6297	orientation == null
6298	orientation == PlotOrientation.HORIZONTAL
6299	orientation == PlotOrientation.VERTICAL
6300	tooltips
6301	urls
6302	orientation == null
6303	tooltips
6304	urls
6305	orientation == null
6306	dateAxis
6307	tooltips
6308	dateAxis
6309	urls
6310	orientation == null
6311	tooltips
6312	urls
6313	orientation == null
6314	tooltips
6315	urls
6316	orientation == null
6317	tooltips
6318	urls
6319	orientation == null
6320	tooltips
6321	urls
6322	orientation == null
6323	tooltips
6324	urls
6325	tooltips
6326	urls
6327	orientation == null
6328	tooltips
6329	urls
6330	orientation == null
6331	tooltips
6332	urls
6333	tooltips
6334	urls
6335	orientation == null
5684	scrollPane
5556	print
5556	copy
5556	save
5556	zoom
5556	properties
5557	osName.startsWith("mac os x")
5558	this.chart != null
5559	chart != null
5560	plot instanceof Zoomable
5561	this.useBuffer
5562	flag
5563	plot instanceof Zoomable
5564	flag
5565	plot instanceof Zoomable
5566	directory != null
5567	directory.isDirectory()
5568	paint == null
5569	flag
5569	this.mouseWheelHandler == null
5570	this.mouseWheelHandler != null
5571	overlay == null
5572	overlay == null
5573	removed
5574	handler == null
5575	handler == null
5576	flag
5577	this.info != null
5578	entities != null
5579	entity != null
5580	this.info != null
5581	this.chart == null
5582	drawWidth < this.minimumDrawWidth
5583	drawWidth > this.maximumDrawWidth
5584	drawHeight < this.minimumDrawHeight
5585	drawHeight > this.maximumDrawHeight
5586	this.useBuffer
5587	this.chartBufferHeight != available.getHeight()
5587	this.chartBufferWidth != available.getWidth()
5587	this.chartBuffer == null
5588	this.refreshBuffer
5589	scale
5590	scale
5591	plot instanceof Zoomable
5592	this.zoomPoint != null
5593	command.equals(PROPERTIES_COMMAND)
5594	command.equals(COPY_COMMAND)
5595	command.equals(SAVE_COMMAND)
5596	command.equals(PRINT_COMMAND)
5597	command.equals(ZOOM_IN_BOTH_COMMAND)
5598	command.equals(ZOOM_IN_DOMAIN_COMMAND)
5599	command.equals(ZOOM_IN_RANGE_COMMAND)
5600	command.equals(ZOOM_OUT_BOTH_COMMAND)
5601	command.equals(ZOOM_OUT_DOMAIN_COMMAND)
5602	command.equals(ZOOM_OUT_RANGE_COMMAND)
5603	command.equals(ZOOM_RESET_BOTH_COMMAND)
5604	command.equals(ZOOM_RESET_DOMAIN_COMMAND)
5605	command.equals(ZOOM_RESET_RANGE_COMMAND)
5606	this.ownToolTipDelaysActive
5607	this.liveMouseHandler != null
5608	this.ownToolTipDelaysActive
5609	this.liveMouseHandler != null
5610	this.chart == null
5611	e.isPopupTrigger()
5612	this.popup != null
5613	this.liveMouseHandler != null
5614	h.getModifier() == 0
5614	nomod == null
5615	nomod != null
5615	found
5616	found
5617	this.popup.isShowing()
5617	this.popup != null
5618	this.liveMouseHandler != null
5619	e.isPopupTrigger()
5620	this.popup != null
5621	this.liveMouseHandler != null
5622	this.chart == null
5623	listeners.length == 0
5624	this.info != null
5625	entities != null
5626	listeners.length == 0
5627	this.info != null
5628	entities != null
5629	this.chart != null
5630	plot == null
5631	plot instanceof Zoomable
5632	plot instanceof Zoomable
5633	plot == null
5634	plot instanceof Zoomable
5635	plot instanceof Zoomable
5636	selection.getWidth() > 0
5636	selection.getHeight() > 0
5637	p instanceof Zoomable
5638	z.getOrientation() == PlotOrientation.HORIZONTAL
5639	plot == null
5640	plot instanceof Zoomable
5641	plot instanceof Zoomable
5642	plotInfo.getSubplotCount() == 0
5643	subplotIndex == -1
5644	this.zoomRectangle != null
5645	xor
5646	this.fillZoomRectangle
5647	xor
5648	this.selectionShape != null
5649	xor
5650	this.selectionFillPaint != null
5651	xor
5652	result == JOptionPane.OK_OPTION
5653	option == JFileChooser.APPROVE_OPTION
5654	isEnforceFileExtensions()
5655	filename.endsWith(".png")
5656	pf2 != pf
5657	job.printDialog()
5658	pageIndex != 0
5659	listener == null
5660	listenerType == ChartMouseListener.class
5661	properties
5662	copy
5663	separator
5664	save
5665	separator
5666	print
5667	separator
5668	zoom
5669	separator
5670	this.popup != null
5671	plot instanceof Zoomable
5672	this.zoomInDomainMenuItem != null
5673	this.zoomOutDomainMenuItem != null
5674	this.zoomResetDomainMenuItem != null
5675	this.zoomInRangeMenuItem != null
5676	this.zoomOutRangeMenuItem != null
5677	this.zoomResetRangeMenuItem != null
5678	this.zoomInBothMenuItem != null
5679	this.zoomOutBothMenuItem != null
5680	this.zoomResetBothMenuItem != null
5681	this.popup != null
5682	this.chart != null
5683	das.getDataset() == dataset
5288	this.entities != null
5289	obj == this
5290	obj instanceof ChartRenderingInfo
5291	ObjectUtilities.equal(this.chartArea, that.chartArea)
5292	ObjectUtilities.equal(this.plotInfo, that.plotInfo)
5293	ObjectUtilities.equal(this.entities, that.entities)
5294	this.chartArea != null
5295	this.entities instanceof PublicCloneable
1789	this.imageFlavor.equals(flavor)
1790	drawWidth < minDrawW
1791	drawWidth > maxDrawW
1792	drawHeight < minDrawH
1793	drawHeight > maxDrawH
1794	scale
5460	chart == null
5461	out == null
5462	chart == null
5463	out == null
5464	chart == null
5465	heightScaleFactor != 1
5465	widthScaleFactor != 1
5466	scale
5467	file == null
5468	file == null
5469	chart == null
5470	chart == null
5471	chart == null
5472	file == null
5473	chart == null
5474	file == null
5475	chart == null
5476	useOverLibForToolTips
7741	dataset == null
7742	this.centerBarAtStartValue
7743	dataset == null
7744	minimum > maximum
7745	getUseYInterval()
7746	Double.isNaN(y0)
7746	Double.isNaN(y1)
7747	this.centerBarAtStartValue
7748	m > 0.0
7749	orientation == PlotOrientation.HORIZONTAL
7750	orientation == PlotOrientation.VERTICAL
7751	orientation == PlotOrientation.HORIZONTAL
7752	inverted
7752	positive
7752	positive
7752	inverted
7753	positive
7753	inverted
7753	positive
7753	inverted
7754	getShadowsVisible()
7754	pass == 0
7755	pass == 1
7756	isItemLabelVisible(series, item, selected)
7757	state.getInfo() != null
7758	entities != null
7759	obj == this
7760	obj instanceof ClusteredXYBarRenderer
7761	this.centerBarAtStartValue != that.centerBarAtStartValue
6932	paint == null
6933	obj == this
6934	obj instanceof ColorBlock
6935	PaintUtilities.equal(this.paint, that.paint)
6750	w == LengthConstraintType.NONE
6751	h == LengthConstraintType.NONE
6752	h == LengthConstraintType.FIXED
6753	h == LengthConstraintType.RANGE
6754	w == LengthConstraintType.FIXED
6755	h == LengthConstraintType.NONE
6756	h == LengthConstraintType.FIXED
6757	h == LengthConstraintType.RANGE
6758	w == LengthConstraintType.RANGE
6759	h == LengthConstraintType.NONE
6760	h == LengthConstraintType.FIXED
6761	h == LengthConstraintType.RANGE
6762	height <= 0.0
6763	y + size.height <= height
6764	itemsInColumn.isEmpty()
6765	constraint.getHeightRange().contains(s1.height)
6766	constraint.getWidthRange().contains(s.width)
6767	blockCount > 0
6768	blockCount > 1
6769	this.horizontalAlignment != HorizontalAlignment.LEFT
6770	this.horizontalAlignment == HorizontalAlignment.CENTER
6771	this.horizontalAlignment == HorizontalAlignment.RIGHT
6772	obj == this
6773	obj instanceof ColumnArrangement
6774	this.horizontalAlignment != that.horizontalAlignment
6775	this.verticalAlignment != that.verticalAlignment
6776	this.horizontalGap != that.horizontalGap
6777	this.verticalGap != that.verticalGap
2846	subplot == null
2847	weight < 1
2848	axis != null
2849	subplot == null
2850	this.subplots.get(i) == subplot
2851	position != -1
2852	domain != null
2853	this.subplots != null
2854	info == null
2855	source == null
2856	subplotIndex >= 0
2857	subplot != null
2858	subplot != null
2859	fixed != null
2860	orientation == PlotOrientation.HORIZONTAL
2861	orientation == PlotOrientation.VERTICAL
2862	categoryAxis != null
2863	getDrawSharedDomainAxis()
2864	orientation == PlotOrientation.HORIZONTAL
2865	orientation == PlotOrientation.VERTICAL
2866	orientation == PlotOrientation.HORIZONTAL
2867	orientation == PlotOrientation.VERTICAL
2868	info != null
2869	parentState == null
2870	info != null
2871	anchor != null
2871	this.subplotAreas[i].contains(anchor)
2872	info != null
2873	result == null
2874	this.subplots != null
2875	this.subplots != null
2876	result.contains(category)
2877	dataArea.contains(x, y)
2878	obj == this
2879	obj instanceof CombinedDomainCategoryPlot
2880	this.gap != that.gap
2881	ObjectUtilities.equal(this.subplots, that.subplots)
4065	this.subplots != null
4066	subplot == null
4067	weight <= 0
4068	axis != null
4069	subplot == null
4070	this.subplots.get(i) == subplot
4071	position != -1
4072	domain != null
4073	this.subplots != null
4074	fixed != null
4075	orientation == PlotOrientation.HORIZONTAL
4076	orientation == PlotOrientation.VERTICAL
4077	xAxis != null
4078	orientation == PlotOrientation.HORIZONTAL
4079	orientation == PlotOrientation.VERTICAL
4080	orientation == PlotOrientation.HORIZONTAL
4081	orientation == PlotOrientation.VERTICAL
4082	info != null
4083	parentState == null
4084	info != null
4085	info != null
4086	result == null
4087	this.subplots != null
4088	subplot != null
4089	subplot != null
4090	info == null
4091	source == null
4092	subplotIndex >= 0
4093	dataArea.contains(x, y)
4094	obj == this
4095	obj instanceof CombinedDomainXYPlot
4096	this.gap != that.gap
4097	ObjectUtilities.equal(this.subplots, that.subplots)
4098	domainAxis != null
2778	subplot == null
2779	weight <= 0
2780	axis != null
2781	subplot == null
2782	this.subplots.get(i) == subplot
2783	position != -1
2784	range != null
2785	range2 != null
2786	this.subplots != null
2787	fixed != null
2788	orientation == PlotOrientation.VERTICAL
2789	orientation == PlotOrientation.HORIZONTAL
2790	valueAxis != null
2791	orientation == PlotOrientation.VERTICAL
2792	orientation == PlotOrientation.HORIZONTAL
2793	orientation == PlotOrientation.VERTICAL
2794	orientation == PlotOrientation.HORIZONTAL
2795	info != null
2796	parentState == null
2797	info != null
2798	anchor != null
2798	this.subplotArea[i].contains(anchor)
2799	info != null
2800	this.subplots != null
2801	result == null
2802	this.subplots != null
2803	dataArea.contains(x, y)
2804	obj == this
2805	obj instanceof CombinedRangeCategoryPlot
2806	this.gap != that.gap
2807	ObjectUtilities.equal(this.subplots, that.subplots)
2808	rangeAxis != null
2809	rangeAxis != null
2815	weight <= 0
2816	subplot == null
2817	this.subplots.get(i) == subplot
2818	position != -1
2819	this.subplots != null
2820	fixed != null
2821	orientation == PlotOrientation.VERTICAL
2822	orientation == PlotOrientation.HORIZONTAL
2823	valueAxis != null
2824	orientation == PlotOrientation.VERTICAL
2825	orientation == PlotOrientation.HORIZONTAL
2826	orientation == PlotOrientation.VERTICAL
2827	orientation == PlotOrientation.HORIZONTAL
2828	info != null
2829	parentState == null
2830	info != null
2831	info != null
2832	result == null
2833	this.subplots != null
2834	subplot != null
2835	subplot != null
2836	info == null
2837	source == null
2838	subplotIndex >= 0
2839	this.subplots != null
2840	dataArea.contains(x, y)
2841	obj == this
2842	obj instanceof CombinedRangeXYPlot
2843	this.gap != that.gap
2844	ObjectUtilities.equal(this.subplots, that.subplots)
2845	rangeAxis != null
1713	x == null
1714	o1 instanceof ComparableObjectItem
1715	obj == this
1716	obj instanceof ComparableObjectItem
1717	this.x.equals(that.x)
1718	ObjectUtilities.equal(this.obj, that.obj)
54	dataRemoved
55	item == null
56	this.autoSort
57	index < 0
58	this.allowDuplicateXValues
59	index < this.data.size()
60	this.allowDuplicateXValues
61	index >= 0
62	getItemCount() > this.maximumItemCount
63	notify
64	this.autoSort
65	item.getComparable().equals(x)
66	index < 0
67	this.data.size() > 0
68	obj == this
69	obj instanceof ComparableObjectSeries
70	super.equals(obj)
71	this.maximumItemCount != that.maximumItemCount
72	this.autoSort != that.autoSort
73	this.allowDuplicateXValues != that.allowDuplicateXValues
74	ObjectUtilities.equal(this.data, that.data)
75	count > 0
76	count > 1
77	count > 2
4629	direction < 0.0
4238	dataset != null
4239	type != NO_LABELS
4239	type != VALUE_LABELS
4240	this.labelType != type
4241	font == null
4242	paint == null
4243	paint == null
4244	paint == null
4245	series >= 0
4245	series < this.seriesNeedle.length
4246	series < this.seriesNeedle.length
4246	series >= 0
4247	series >= 0
4247	series < this.seriesNeedle.length
4248	needle != null
4248	index < this.seriesNeedle.length
4249	dataset != null
4250	info != null
4251	this.drawBorder
4252	midY < midX
4253	data != null
4253	data.getValue() != null
4254	this.drawBorder
4255	fontSize < 8
4256	obj == this
4257	obj instanceof CompassPlot
4258	super.equals(obj)
4259	this.labelType != that.labelType
4260	ObjectUtilities.equal(this.labelFont, that.labelFont)
4261	this.drawBorder != that.drawBorder
4262	PaintUtilities.equal(this.roseHighlightPaint, that.roseHighlightPaint)
4263	PaintUtilities.equal(this.rosePaint, that.rosePaint)
4264	PaintUtilities.equal(this.roseCenterPaint, that.roseCenterPaint)
4265	ObjectUtilities.equal(this.compassFont, that.compassFont)
4266	Arrays.equals(this.seriesNeedle, that.seriesNeedle)
4267	getRevolutionDistance() != that.getRevolutionDistance()
4268	this.circle1 != null
4269	this.circle2 != null
4270	this.a1 != null
4271	this.a2 != null
4272	this.rect1 != null
4273	clone.datasets[i] != null
4274	size > 0
6654	container == null
6655	container == null
6656	this.backgroundPaint != null
6657	obj == this
6658	obj instanceof CompositeTitle
6659	this.container.equals(that.container)
6660	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
3250	paint == null
3251	stroke == null
3252	generator == null
3253	font == null
3254	paint == null
3255	paint == null
3256	stroke == null
3257	obj == this
3258	obj instanceof Crosshair
3259	this.visible != that.visible
3260	this.value != that.value
3261	PaintUtilities.equal(this.paint, that.paint)
3262	this.stroke.equals(that.stroke)
3263	this.labelVisible != that.labelVisible
3264	this.labelGenerator.equals(that.labelGenerator)
3265	this.labelAnchor.equals(that.labelAnchor)
3266	this.labelXOffset != that.labelXOffset
3267	this.labelYOffset != that.labelYOffset
3268	this.labelFont.equals(that.labelFont)
3269	PaintUtilities.equal(this.labelPaint, that.labelPaint)
3270	PaintUtilities.equal(this.labelBackgroundPaint, that.labelBackgroundPaint)
3271	this.labelOutlineVisible != that.labelOutlineVisible
3272	PaintUtilities.equal(this.labelOutlinePaint, that.labelOutlinePaint)
3273	this.labelOutlineStroke.equals(that.labelOutlineStroke)
5391	crosshair == null
5392	crosshair == null
5393	this.xCrosshairs.remove(crosshair)
5394	this.xCrosshairs.isEmpty()
5395	crosshair == null
5396	crosshair == null
5397	this.yCrosshairs.remove(crosshair)
5398	this.yCrosshairs.isEmpty()
5399	ch.isVisible()
5400	plot.getOrientation() == PlotOrientation.VERTICAL
5401	ch.isVisible()
5402	plot.getOrientation() == PlotOrientation.VERTICAL
5403	y >= dataArea.getMinY()
5403	y <= dataArea.getMaxY()
5404	crosshair.isLabelVisible()
5405	dataArea.contains(hotspot.getBounds2D())
5406	x >= dataArea.getMinX()
5406	x <= dataArea.getMaxX()
5407	crosshair.isLabelVisible()
5408	dataArea.contains(hotspot.getBounds2D())
5409	line.getX1() == line.getX2()
5410	left
5411	right
5412	top
5413	bottom
5414	left
5415	right
5416	top
5417	bottom
5418	anchor.equals(RectangleAnchor.TOP_LEFT)
5419	anchor.equals(RectangleAnchor.TOP)
5420	anchor.equals(RectangleAnchor.TOP_RIGHT)
5421	anchor.equals(RectangleAnchor.LEFT)
5422	anchor.equals(RectangleAnchor.RIGHT)
5423	anchor.equals(RectangleAnchor.BOTTOM_LEFT)
5424	anchor.equals(RectangleAnchor.BOTTOM)
5425	anchor.equals(RectangleAnchor.BOTTOM_RIGHT)
5426	anchor.equals(RectangleAnchor.TOP_LEFT)
5427	anchor.equals(RectangleAnchor.TOP)
5428	anchor.equals(RectangleAnchor.TOP_RIGHT)
5429	anchor.equals(RectangleAnchor.LEFT)
5430	anchor.equals(RectangleAnchor.RIGHT)
5431	anchor.equals(RectangleAnchor.BOTTOM_LEFT)
5432	anchor.equals(RectangleAnchor.BOTTOM)
5433	anchor.equals(RectangleAnchor.BOTTOM_RIGHT)
5434	anchor.equals(RectangleAnchor.TOP_LEFT)
5435	anchor.equals(RectangleAnchor.TOP_RIGHT)
5436	anchor.equals(RectangleAnchor.LEFT)
5437	anchor.equals(RectangleAnchor.RIGHT)
5438	anchor.equals(RectangleAnchor.BOTTOM_LEFT)
5439	anchor.equals(RectangleAnchor.BOTTOM_RIGHT)
5440	anchor.equals(RectangleAnchor.TOP_LEFT)
5441	anchor.equals(RectangleAnchor.TOP_RIGHT)
5442	anchor.equals(RectangleAnchor.TOP)
5443	anchor.equals(RectangleAnchor.BOTTOM)
5444	anchor.equals(RectangleAnchor.BOTTOM_LEFT)
5445	anchor.equals(RectangleAnchor.BOTTOM_RIGHT)
5446	obj == this
5447	obj instanceof CrosshairOverlay
5448	this.xCrosshairs.equals(that.xCrosshairs)
5449	this.yCrosshairs.equals(that.yCrosshairs)
4059	this.anchor != null
4060	this.calculateDistanceInDataSpace
4061	orientation == PlotOrientation.HORIZONTAL
4062	d < this.distance
4063	d < this.distance
4064	d < this.distance
6170	urls != null
6171	series < getListCount()
6172	urls != null
6173	item < urls.size()
6174	urls != null
6175	obj == this
6176	obj instanceof CustomCategoryURLGenerator
6177	listCount != generator.getListCount()
6178	urlCount != generator.getURLCount(series)
6179	u1 != null
6180	u1.equals(u2)
6181	u2 != null
6190	urlMap != null
6191	mapIndex < getListCount()
6192	urlMap != null
6193	o == this
6194	o instanceof CustomPieURLGenerator
6195	getListCount() != generator.getListCount()
6196	getURLCount(pieItem) != generator.getURLCount(pieItem)
6197	getURL(key, pieItem).equals( generator.getURL(key, pieItem))
2215	tooltips != null
2216	series < getListCount()
2217	tooltips != null
2218	item < tooltips.size()
2219	this.toolTipSeries != null
2220	obj == this
2221	obj instanceof CustomXYToolTipGenerator
2222	t1 != null
6198	urls != null
6199	series < getListCount()
6200	urls != null
6201	item < urls.size()
6202	urls != null
6203	obj == this
6204	obj instanceof CustomXYURLGenerator
6205	listCount != that.getListCount()
6206	urlCount != that.getURLCount(series)
6207	u1 != null
6208	u1.equals(u2)
6209	u2 != null
4559	paint == null
4560	stroke == null
4561	tick instanceof CycleBoundTick
4562	isAutoTickUnitSelection()
4563	upperValue == cycleBound
4564	currentTickValue + unit > upperValue
4564	cycled
4565	formatter != null
4566	isVerticalTickLabels()
4567	edge == RectangleEdge.TOP
4568	lastX == x
4568	lastTick != null
4568	currentTickValue != cycleBound
4569	edge == RectangleEdge.TOP
4570	lastX == x
4570	lastTick != null
4570	currentTickValue != cycleBound
4571	lastTick != null
4571	currentTickValue != cycleBound
4571	lastX == x
4572	currentTickValue == cycleBound
4573	cyclenow
4574	isAutoTickUnitSelection()
4575	upperValue == cycleBound
4576	currentTickValue + unit > upperValue
4576	cycled
4577	formatter != null
4578	isVerticalTickLabels()
4579	edge == RectangleEdge.LEFT
4580	currentTickValue != cycleBound
4580	lastY == y
4580	lastTick != null
4581	currentTickValue != cycleBound
4581	lastTick != null
4581	lastY == y
4582	edge == RectangleEdge.LEFT
4583	lastTick != null
4583	lastY == y
4583	currentTickValue != cycleBound
4584	lastTick != null
4584	lastY == y
4584	currentTickValue != cycleBound
4585	currentTickValue == cycleBound
4586	currentTickValue == cycleBound
4587	cyclenow
4588	RectangleEdge.isTopOrBottom(edge)
4589	RectangleEdge.isLeftOrRight(edge)
4590	isInverted()
4591	java2DValue >= jbreak
4592	java2DValue <= jbreak
4593	value > vmax
4593	value < vmin
4594	RectangleEdge.isTopOrBottom(edge)
4595	RectangleEdge.isLeftOrRight(edge)
4596	isInverted()
4597	value == vp
4598	value > vp
4599	value == vp
4600	value >= vp
4601	size > this.period
4602	size > this.period
4603	this.internalMarkerWhenTicksOverlap
4604	isVerticalTickLabels()
4605	isTickMarksVisible()
4606	edge == RectangleEdge.LEFT
4607	edge == RectangleEdge.RIGHT
4608	edge == RectangleEdge.TOP
4609	edge == RectangleEdge.BOTTOM
4610	isAdvanceLineVisible()
4611	edge == RectangleEdge.LEFT
4612	edge == RectangleEdge.RIGHT
4613	edge == RectangleEdge.TOP
4614	edge == RectangleEdge.BOTTOM
4615	this.internalMarkerCycleBoundTick == null
4616	RectangleEdge.isTopOrBottom(edge)
4617	isVerticalTickLabels()
4618	RectangleEdge.isLeftOrRight(edge)
4619	isVerticalTickLabels()
4620	obj == this
4621	obj instanceof CyclicNumberAxis
4622	super.equals(obj)
4623	this.period != that.period
4624	this.offset != that.offset
4625	PaintUtilities.equal(this.advanceLinePaint, that.advanceLinePaint)
4626	ObjectUtilities.equal(this.advanceLineStroke, that.advanceLineStroke)
4627	this.advanceLineVisible != that.advanceLineVisible
4628	this.boundMappedToLastCycle != that.boundMappedToLastCycle
7462	getPlotLines()
7462	domainAxis instanceof CyclicNumberAxis
7462	item <= 0
7462	rangeAxis instanceof CyclicNumberAxis
7463	Double.isNaN(yn)
7464	Double.isNaN(yn)
7465	domainAxis instanceof CyclicNumberAxis
7466	xcycleBound >= x[0]
7466	xcycleBound <= x[1]
7466	xcycleBound <= x[0]
7466	x[0] != x[1]
7466	xcycleBound >= x[1]
7467	rangeAxis instanceof CyclicNumberAxis
7468	ycycleBound >= y[1]
7468	ycycleBound <= y[1]
7468	ycycleBound >= y[0]
7468	y[0] != y[1]
7468	ycycleBound <= y[0]
7469	x.length == 3
7470	ycycleBound >= y[1]
7470	ycycleBound <= y[2]
7470	x.length == 3
7470	y[1] != y[2]
7470	ycycleBound <= y[1]
7470	ycycleBound >= y[2]
7471	x.length == 2
7472	cnax != null
7473	xcycleBound == x[0]
7474	xcycleBound == x[1]
7475	cnay != null
7476	ycycleBound == y[0]
7477	ycycleBound == y[1]
7478	cnax != null
7479	xcycleBound == x[1]
7480	xcycleBound == x[2]
7481	cnay != null
7482	ycycleBound == y[1]
7483	ycycleBound == y[2]
7484	x.length == 4
7485	cnax != null
7486	xcycleBound == x[2]
7487	xcycleBound == x[3]
7488	cnay != null
7489	ycycleBound == y[2]
7490	ycycleBound == y[3]
7491	cnax != null
7492	cnay != null
558	a == null
559	b == null
560	a.length != b.length
561	Arrays.equals(a[i], b[i])
562	source == null
563	source[i] != null
564	data == null
565	n != null
566	data == null
567	row < rowCount
568	n != null
569	data == null
570	n != null
571	data == null
572	col < colCount
573	n != null
574	data == null
575	data == null
576	data == null
577	v != null
578	v != null
1524	id == null
1525	obj == this
1526	obj instanceof DatasetGroup
1527	this.id.equals(that.id)
3290	this == obj
3291	obj instanceof DatasetRenderingOrder
3292	this.name.equals(order.toString())
3293	this.equals(DatasetRenderingOrder.FORWARD)
3294	this.equals(DatasetRenderingOrder.REVERSE)
1528	dataset == null
1529	current != null
1530	value != null
1531	v > 0
1532	dataValue != null
1533	value / total < minimumPercent
1534	dataValue != null
1535	otherKeys.contains(currentKey)
1535	otherKeys.size() >= minItems
1536	otherKeys.size() >= minItems
1537	rowKeys == null
1538	columnKeys == null
1539	ArrayUtilities.hasDuplicateItems(rowKeys)
1540	ArrayUtilities.hasDuplicateItems(columnKeys)
1541	rowKeys.length != data.length
1542	columnKeys.length != columnCount
1543	rowKey == null
1544	rowData == null
1545	f == null
1546	seriesKey == null
1547	start >= end
1548	samples < 2
1549	dataset == null
1550	itemCount == 0
1551	y != null
1552	yy > 0.0
1553	dataset == null
1554	columnCount == 0
1554	rowCount == 0
1555	dataset.getValue(r, c) != null
1556	dataset != null
1557	dataset.getItemCount(s) > 0
1558	dataset == null
1559	dataset instanceof DomainInfo
1560	dataset == null
1561	dataset instanceof XYDomainInfo
1562	dataset == null
1563	includeInterval
1563	dataset instanceof IntervalXYDataset
1564	Double.isNaN(lvalue)
1565	Double.isNaN(uvalue)
1566	Double.isNaN(lvalue)
1567	minimum > maximum
1568	dataset == null
1569	dataset instanceof RangeInfo
1570	dataset == null
1571	dataset instanceof CategoryRangeInfo
1572	dataset == null
1573	dataset instanceof RangeInfo
1574	dataset == null
1575	dataset instanceof XYRangeInfo
1576	dataset instanceof IntervalCategoryDataset
1576	includeInterval
1577	lvalue != null
1577	Double.isNaN(lvalue.doubleValue())
1578	Double.isNaN(uvalue.doubleValue())
1578	uvalue != null
1579	value != null
1580	Double.isNaN(v)
1581	minimum == Double.POSITIVE_INFINITY
1582	dataset == null
1583	visibleSeriesKeys == null
1584	includeInterval
1584	dataset instanceof BoxAndWhiskerCategoryDataset
1585	lvalue == null
1586	uvalue == null
1587	lvalue != null
1588	uvalue != null
1589	dataset instanceof IntervalCategoryDataset
1589	includeInterval
1590	lvalue != null
1590	Double.isNaN(lvalue.doubleValue())
1591	Double.isNaN(uvalue.doubleValue())
1591	uvalue != null
1592	includeInterval
1592	dataset instanceof MultiValueCategoryDataset
1593	o instanceof Number
1594	Double.isNaN(v)
1595	includeInterval
1595	dataset instanceof StatisticalCategoryDataset
1596	meanN != null
1597	stdN != null
1598	Double.isNaN(std)
1599	Double.isNaN(mean)
1600	value != null
1601	Double.isNaN(v)
1602	minimum == Double.POSITIVE_INFINITY
1603	dataset instanceof IntervalXYDataset
1603	includeInterval
1604	Double.isNaN(lvalue)
1605	Double.isNaN(uvalue)
1606	dataset instanceof OHLCDataset
1606	includeInterval
1607	Double.isNaN(lvalue)
1608	Double.isNaN(uvalue)
1609	Double.isNaN(value)
1610	minimum == Double.POSITIVE_INFINITY
1611	dataset == null
1612	visibleSeriesKeys == null
1613	dataset instanceof IntervalXYDataset
1613	includeInterval
1614	Double.isNaN(lvalue)
1615	Double.isNaN(uvalue)
1616	Double.isNaN(x)
1617	minimum == Double.POSITIVE_INFINITY
1618	dataset == null
1619	visibleSeriesKeys == null
1620	xRange == null
1621	includeInterval
1621	dataset instanceof OHLCDataset
1622	xRange.contains(x)
1623	Double.isNaN(lvalue)
1624	Double.isNaN(uvalue)
1625	dataset instanceof BoxAndWhiskerXYDataset
1625	includeInterval
1626	xRange.contains(x)
1627	lvalue != null
1628	uvalue != null
1629	dataset instanceof IntervalXYDataset
1629	includeInterval
1630	xRange.contains(x)
1631	Double.isNaN(lvalue)
1632	Double.isNaN(uvalue)
1633	xRange.contains(x)
1634	Double.isNaN(y)
1635	minimum == Double.POSITIVE_INFINITY
1636	dataset == null
1637	dataset instanceof DomainInfo
1638	dataset instanceof IntervalXYDataset
1639	Double.isNaN(value)
1640	minimum == Double.POSITIVE_INFINITY
1641	dataset == null
1642	dataset instanceof DomainInfo
1643	dataset instanceof IntervalXYDataset
1644	Double.isNaN(value)
1645	maximum == Double.NEGATIVE_INFINITY
1646	dataset == null
1647	dataset instanceof RangeInfo
1648	dataset instanceof IntervalCategoryDataset
1649	value != null
1650	minimum == Double.POSITIVE_INFINITY
1651	dataset == null
1652	dataset instanceof RangeInfo
1653	dataset instanceof IntervalXYDataset
1654	dataset instanceof OHLCDataset
1655	Double.isNaN(value)
1656	minimum == Double.POSITIVE_INFINITY
1657	dataset == null
1658	dataset instanceof RangeInfo
1659	dataset instanceof IntervalCategoryDataset
1660	value != null
1661	maximum == Double.NEGATIVE_INFINITY
1662	dataset == null
1663	dataset instanceof RangeInfo
1664	dataset instanceof IntervalXYDataset
1665	dataset instanceof OHLCDataset
1666	Double.isNaN(value)
1667	maximum == Double.NEGATIVE_INFINITY
1668	dataset == null
1669	number != null
1670	value > 0.0
1671	value < 0.0
1672	minimum <= maximum
1673	dataset == null
1674	number != null
1675	value > 0.0
1676	value < 0.0
1677	hasValidData
1678	dataset == null
1679	number != null
1680	value < 0.0
1681	hasValidData
1682	dataset == null
1683	number != null
1684	value > 0.0
1685	hasValidData
1686	dataset == null
1687	Double.isNaN(y)
1688	y > 0.0
1689	positive > maximum
1690	negative < minimum
1691	minimum <= maximum
1692	Double.isNaN(value)
1693	dataset == null
1694	n != null
1695	Double.isNaN(value)
1696	allItemsNull
4751	zone == null
4752	this.timeZone.equals(zone)
4753	this.timeline != timeline
4754	turnOffAutoSelection
4755	notify
4756	range == null
4757	range instanceof DateRange
4758	lower.getTime() >= upper.getTime()
4759	lower >= upper
4760	range instanceof DateRange
4761	date == null
4762	maxMillis <= newMinMillis
4763	range instanceof DateRange
4764	maximumDate == null
4765	minMillis >= newMaxMillis
4766	position == null
4767	isAutoRange()
4768	RectangleEdge.isTopOrBottom(edge)
4769	isInverted()
4770	RectangleEdge.isLeftOrRight(edge)
4771	isInverted()
4772	RectangleEdge.isTopOrBottom(edge)
4773	RectangleEdge.isLeftOrRight(edge)
4774	isInverted()
4775	t.equals(DateTickUnitType.MILLISECOND)
4776	mm.getTime() >= date.getTime()
4777	t.equals(DateTickUnitType.SECOND)
4778	this.tickMarkPosition == DateTickMarkPosition.START
4779	this.tickMarkPosition == DateTickMarkPosition.MIDDLE
4780	dd.getTime() >= date.getTime()
4781	t.equals(DateTickUnitType.MINUTE)
4782	this.tickMarkPosition == DateTickMarkPosition.START
4783	this.tickMarkPosition == DateTickMarkPosition.MIDDLE
4784	d0.getTime() >= date.getTime()
4785	t.equals(DateTickUnitType.HOUR)
4786	this.tickMarkPosition == DateTickMarkPosition.START
4787	this.tickMarkPosition == DateTickMarkPosition.MIDDLE
4788	d1.getTime() >= date.getTime()
4789	t.equals(DateTickUnitType.DAY)
4790	this.tickMarkPosition == DateTickMarkPosition.START
4791	this.tickMarkPosition == DateTickMarkPosition.MIDDLE
4792	d2.getTime() >= date.getTime()
4793	t.equals(DateTickUnitType.MONTH)
4794	millis >= date.getTime()
4795	t.equals(DateTickUnitType.YEAR)
4796	this.tickMarkPosition == DateTickMarkPosition.START
4797	this.tickMarkPosition == DateTickMarkPosition.MIDDLE
4798	d3.getTime() >= date.getTime()
4799	position == null
4800	position == DateTickMarkPosition.START
4801	position == DateTickMarkPosition.MIDDLE
4802	position == DateTickMarkPosition.END
4803	zone == null
4804	locale == null
4805	plot == null
4806	plot instanceof ValueAxisPlot
4807	r == null
4808	this.timeline instanceof SegmentedTimeline
4809	fixedAutoRange > 0.0
4810	range < minRange
4811	RectangleEdge.isTopOrBottom(edge)
4812	RectangleEdge.isLeftOrRight(edge)
4813	this.timeline instanceof SegmentedTimeline
4814	tickLabelWidth > unit2Width
4815	labelHeight2 < unit2Height
4816	isVerticalTickLabels()
4817	formatter != null
4818	isVerticalTickLabels()
4819	formatter != null
4820	RectangleEdge.isTopOrBottom(edge)
4821	RectangleEdge.isLeftOrRight(edge)
4822	t.equals(DateTickUnitType.MONTH)
4823	t.equals(DateTickUnitType.YEAR)
4824	isAutoTickUnitSelection()
4825	minorTickSpaces <= 0
4826	getRange().contains(minorTickTime)
4826	isHiddenValue(minorTickTime)
4826	minorTickTime > 0
4827	isHiddenValue(tickDate.getTime())
4828	formatter != null
4829	isVerticalTickLabels()
4830	edge == RectangleEdge.TOP
4831	edge == RectangleEdge.TOP
4832	isHiddenValue(minorTickTime)
4832	getRange().contains(minorTickTime)
4833	isAutoTickUnitSelection()
4834	minorTickSpaces <= 0
4835	isHiddenValue(minorTickTime)
4835	minorTickTime > 0
4835	getRange().contains(minorTickTime)
4836	isHiddenValue(tickDate.getTime())
4837	formatter != null
4838	isVerticalTickLabels()
4839	edge == RectangleEdge.LEFT
4840	edge == RectangleEdge.LEFT
4841	getRange().contains(minorTickTime)
4841	isHiddenValue(minorTickTime)
4842	isVisible()
4843	isInverted()
4844	obj == this
4845	obj instanceof DateAxis
4846	ObjectUtilities.equal(this.tickUnit, that.tickUnit)
4847	ObjectUtilities.equal(this.dateFormatOverride, that.dateFormatOverride)
4848	ObjectUtilities.equal(this.tickMarkPosition, that.tickMarkPosition)
4849	ObjectUtilities.equal(this.timeline, that.timeline)
4850	getLabel() != null
4851	this.dateFormatOverride != null
5071	obj == this
5072	obj instanceof DateTick
5073	ObjectUtilities.equal(this.date, that.date)
5065	this == obj
5066	obj instanceof DateTickMarkPosition
5067	this.name.equals(position.toString())
5068	this.equals(DateTickMarkPosition.START)
5069	this.equals(DateTickMarkPosition.MIDDLE)
5070	this.equals(DateTickMarkPosition.END)
5254	formatter == null
5255	multiple <= 0
5256	rollMultiple <= 0
5257	unit.equals(DateTickUnitType.YEAR)
5258	unit.equals(DateTickUnitType.MONTH)
5259	unit.equals(DateTickUnitType.DAY)
5260	unit.equals(DateTickUnitType.HOUR)
5261	unit.equals(DateTickUnitType.MINUTE)
5262	unit.equals(DateTickUnitType.SECOND)
5263	unit.equals(DateTickUnitType.MILLISECOND)
5264	formatter == null
5265	obj == this
5266	obj instanceof DateTickUnit
5267	super.equals(obj)
5268	this.unitType.equals(that.unitType)
5269	this.count != that.count
5270	ObjectUtilities.equal(this.formatter, that.formatter)
5159	this == obj
5160	obj instanceof DateTickUnitType
5161	this.name.equals(t.toString())
5162	this.equals(DateTickUnitType.YEAR)
5163	this.equals(DateTickUnitType.MONTH)
5164	this.equals(DateTickUnitType.DAY)
5165	this.equals(DateTickUnitType.HOUR)
5166	this.equals(DateTickUnitType.MINUTE)
5167	this.equals(DateTickUnitType.SECOND)
5168	this.equals(DateTickUnitType.MILLISECOND)
1256	serialDate == null
1257	time == null
1258	zone == null
1259	serial > SerialDate.SERIAL_LOWER_BOUND
1260	serial < SerialDate.SERIAL_UPPER_BOUND
1261	obj == this
1262	obj instanceof Day
1263	this.serialDate.equals(that.getSerialDate())
1264	o1 instanceof Day
1265	o1 instanceof RegularTimePeriod
9161	axis != null
9162	axis instanceof NumberAxis
9163	command.equals("SelectLabelFont")
9164	command.equals("SelectLabelPaint")
9165	command.equals("SelectTickLabelFont")
9166	result == JOptionPane.OK_OPTION
9167	c != null
9168	result == JOptionPane.OK_OPTION
815	this.maximumRangeValueRow == r
815	this.maximumRangeValueColumn == c
815	this.minimumRangeValueRow == r
815	this.minimumRangeValueColumn == c
816	item.getMinOutlier() != null
817	item.getMaxOutlier() != null
818	Double.isNaN(this.maximumRangeValue)
819	maxval > this.maximumRangeValue
820	Double.isNaN(this.minimumRangeValue)
821	minval < this.minimumRangeValue
822	this.minimumRangeValueRow == r
822	this.minimumRangeValueColumn == c
822	this.maximumRangeValueRow == r
822	this.maximumRangeValueColumn == c
823	item != null
824	item != null
825	item != null
826	item != null
827	item != null
828	item != null
829	item != null
830	item != null
831	item != null
832	item != null
833	item != null
834	item != null
835	item != null
836	item != null
837	item != null
838	item != null
839	item != null
840	item != null
841	item != null
842	min != null
843	Double.isNaN(minv)
844	Double.isNaN( this.minimumRangeValue)
844	minv < this.minimumRangeValue
845	max != null
846	Double.isNaN(maxv)
847	maxv > this.maximumRangeValue
847	Double.isNaN( this.maximumRangeValue)
848	obj == this
849	obj instanceof DefaultBoxAndWhiskerCategoryDataset
749	faroutCoefficient > getOutlierCoefficient()
750	this.minimumRangeValue == null
751	item.getMinRegularValue().doubleValue() < this.minimumRangeValue.doubleValue()
752	this.maximumRangeValue == null
753	item.getMaxRegularValue().doubleValue() > this.maximumRangeValue.doubleValue()
754	stats != null
755	stats != null
756	stats != null
757	stats != null
758	stats != null
759	stats != null
760	stats != null
761	stats != null
762	stats != null
763	this.minimumRangeValue != null
764	this.maximumRangeValue != null
765	obj == this
766	obj instanceof DefaultBoxAndWhiskerXYDataset
767	ObjectUtilities.equal(this.seriesKey, that.seriesKey)
768	this.dates.equals(that.dates)
769	this.items.equals(that.items)
639	n != null
640	obj == this
641	obj instanceof CategoryDataset
642	getRowKeys().equals(that.getRowKeys())
643	getColumnKeys().equals(that.getColumnKeys())
644	v1 == null
645	v2 != null
646	v1.equals(v2)
9099	command.equals("BackgroundPaint")
9100	c != null
3274	obj == this
3275	obj instanceof DefaultDrawingSupplier
3276	Arrays.equals(this.paintSequence, that.paintSequence)
3277	this.paintIndex != that.paintIndex
3278	Arrays.equals(this.outlinePaintSequence, that.outlinePaintSequence)
3279	this.outlinePaintIndex != that.outlinePaintIndex
3280	Arrays.equals(this.strokeSequence, that.strokeSequence)
3281	this.strokeIndex != that.strokeIndex
3282	Arrays.equals(this.outlineStrokeSequence, that.outlineStrokeSequence)
3283	this.outlineStrokeIndex != that.outlineStrokeIndex
3284	equalShapes(this.shapeSequence, that.shapeSequence)
3285	this.shapeIndex != that.shapeIndex
3286	s1 == null
3287	s2 == null
3288	s1.length != s2.length
3289	ShapeUtilities.equal(s1[i], s2[i])
1490	xSamples < 1
1491	ySamples < 1
1492	Double.isInfinite(minX)
1492	Double.isNaN(minX)
1493	Double.isNaN(maxX)
1493	Double.isInfinite(maxX)
1494	Double.isNaN(minY)
1494	Double.isInfinite(minY)
1495	Double.isInfinite(maxY)
1495	Double.isNaN(maxY)
1496	notify
1497	obj == this
1498	obj instanceof DefaultHeatMapDataset
1499	this.xSamples != that.xSamples
1500	this.ySamples != that.ySamples
1501	this.minX != that.minX
1502	this.maxX != that.maxX
1503	this.minY != that.minY
1504	this.maxY != that.maxY
1505	DataUtilities.equal(this.zValues, that.zValues)
234	seriesKey == null
235	date == null
236	high != null
237	low != null
238	open != null
239	close != null
240	volume != null
241	obj == this
242	obj instanceof DefaultHighLowDataset
243	this.seriesKey.equals(that.seriesKey)
244	Arrays.equals(this.date, that.date)
245	Arrays.equals(this.open, that.open)
246	Arrays.equals(this.high, that.high)
247	Arrays.equals(this.low, that.low)
248	Arrays.equals(this.close, that.close)
249	Arrays.equals(this.volume, that.volume)
579	ends != null
579	starts != null
580	seriesCount != ends.length
581	seriesCount > 0
582	seriesKeys != null
583	seriesKeys.length != seriesCount
584	categoryCount != ends[0].length
585	categoryKeys != null
586	categoryKeys.length != categoryCount
587	this.startData != null
588	seriesKey.equals(this.seriesKeys[i])
589	series < 0
589	series >= getSeriesCount()
590	seriesKeys == null
591	seriesKeys.length != getSeriesCount()
592	this.startData != null
593	getSeriesCount() > 0
594	this.categoryKeys == null
595	categoryKeys == null
596	categoryKeys.length != getCategoryCount()
597	categoryKeys[i] == null
598	seriesIndex < 0
599	itemIndex < 0
600	seriesIndex < 0
601	itemIndex < 0
602	series < 0
602	series >= getSeriesCount()
603	category < 0
603	category >= getCategoryCount()
604	seriesIndex < 0
605	itemIndex < 0
606	series >= getSeriesCount()
606	series < 0
607	category < 0
607	category >= getCategoryCount()
608	series < 0
608	series > getSeriesCount() - 1
609	categoryIndex < 0
610	series < 0
610	series > getSeriesCount() - 1
611	categoryIndex < 0
612	category.equals(this.categoryKeys[i])
613	columnKey == null
614	this.seriesKeys == null
615	row >= getRowCount()
615	row < 0
616	obj == this
617	obj instanceof DefaultIntervalCategoryDataset
618	Arrays.equals(this.seriesKeys, that.seriesKeys)
619	Arrays.equals(this.categoryKeys, that.categoryKeys)
620	equal(this.startData, that.startData)
621	equal(this.endData, that.endData)
622	array1 == null
623	array2 == null
624	array1.length != array2.length
625	Arrays.equals(array1[i], array2[i])
626	array == null
416	series >= getSeriesCount()
416	series < 0
417	series < 0
417	series >= getSeriesCount()
418	seriesKey == null
419	data == null
420	data.length != 6
421	length != data[3].length
421	length != data[2].length
421	length != data[4].length
421	length != data[5].length
421	length != data[1].length
422	seriesIndex == -1
423	obj == this
424	obj instanceof DefaultIntervalXYDataset
425	this.seriesKeys.equals(that.seriesKeys)
426	Arrays.equals(d1x, d2x)
427	Arrays.equals(d1xs, d2xs)
428	Arrays.equals(d1xe, d2xe)
429	Arrays.equals(d1y, d2y)
430	Arrays.equals(d1ys, d2ys)
431	Arrays.equals(d1ye, d2ye)
17	key == null
18	obj == this
19	obj instanceof DefaultKeyedValue
20	this.key.equals(that.key)
21	this.value.equals(that.value)
21	this.value != null ? !this.value.equals(that.value) : that.value != null
1697	this.data != null
1698	this.data != null
1699	this.data == null
1700	obj == this
1701	obj instanceof KeyedValueDataset
1702	this.data == null
1703	that.getValue() != null
1703	that.getKey() != null
1704	ObjectUtilities.equal(this.data.getKey(), that.getKey())
1705	ObjectUtilities.equal(this.data.getValue(), that.getValue())
0	key == null
1	i == null
2	index < 0
3	key == null
4	keyIndex >= 0
5	position > getItemCount()
5	position < 0
6	key == null
7	pos == position
8	pos >= 0
9	index < 0
10	obj == this
11	obj instanceof KeyedValues
12	count != that.getItemCount()
13	k1.equals(k2)
14	v1 == null
15	v2 != null
16	v1.equals(v2)
1752	rowData != null
1753	index >= 0
1754	key == null
1755	this.sortRowKeys
1756	key == null
1757	rowKey == null
1758	columnKey == null
1759	this.columnKeys.contains(columnKey)
1760	row >= 0
1761	rowIndex >= 0
1762	this.sortRowKeys
1763	columnIndex < 0
1764	row.getValue(item) != null
1765	allNull
1766	columnIndex >= 0
1766	row.getValue(columnIndex) != null
1767	allNull
1768	columnIndex >= 0
1769	rowKey == null
1770	index >= 0
1771	columnKey == null
1772	this.columnKeys.contains(columnKey)
1773	index >= 0
1774	o == null
1775	o == this
1776	o instanceof KeyedValues2D
1777	getRowKeys().equals(kv2D.getRowKeys())
1778	getColumnKeys().equals(kv2D.getColumnKeys())
1779	rowCount != kv2D.getRowCount()
1780	colCount != kv2D.getColumnCount()
1781	v1 == null
1782	v2 != null
1783	v1.equals(v2)
714	values == null
715	rowKey == null
716	columnKey == null
717	obj instanceof Number
718	Double.isNaN(v)
719	vlist.size() > 0
720	this.maximumRangeValue == null
721	maxval > this.maximumRangeValue.doubleValue()
722	this.minimumRangeValue == null
723	minval < this.minimumRangeValue.doubleValue()
724	values != null
725	l != null
725	l.size() > 0
726	count > 0
727	count == 0
728	l.size() > 0
728	l != null
729	count > 0
730	count == 0
731	this.minimumRangeValue != null
732	this.maximumRangeValue != null
733	obj == this
734	obj instanceof DefaultMultiValueCategoryDataset
9148	command.equals("GridStroke")
9149	command.equals("GridPaint")
9150	command.equals("AutoRangeOnOff")
9151	command.equals("MinimumRange")
9152	command.equals("MaximumRange")
9153	result == JOptionPane.OK_OPTION
9154	c != null
9155	event.getSource() == this.minimumRangeValue
9156	event.getSource() == this.maximumRangeValue
9157	this.autoRange
9158	newMin >= this.maximumValue
9159	newMax <= this.minimumValue
9160	this.autoRange
341	high != null
342	low != null
343	open != null
344	close != null
345	volume != null
346	this == obj
347	obj instanceof DefaultOHLCDataset
348	this.key.equals(that.key)
349	Arrays.equals(this.data, that.data)
1470	data == null
1471	getItemCount() > item
1472	key == null
1473	getItemCount() > 0
1474	obj == this
1475	obj instanceof PieDataset
1476	that.getItemCount() != count
1477	k1.equals(k2)
1478	v1 == null
1479	v2 != null
1480	v1.equals(v2)
9101	plot instanceof CategoryPlot
9102	plot instanceof XYPlot
9103	plot instanceof CategoryPlot
9104	renderer instanceof LineAndShapeRenderer
9105	plot instanceof XYPlot
9106	renderer instanceof StandardXYItemRenderer
9107	this.plotOrientation != null
9108	this.drawLines != null
9109	this.drawShapes != null
9110	plot instanceof CategoryPlot
9111	plot instanceof XYPlot
9112	this.domainAxisPropertyPanel != null
9113	plot instanceof CategoryPlot
9114	plot instanceof XYPlot
9115	this.rangeAxisPropertyPanel != null
9116	this.plotInsets == null
9117	command.equals("BackgroundPaint")
9118	command.equals("OutlineStroke")
9119	command.equals("OutlinePaint")
9120	command.equals("Orientation")
9121	command.equals("DrawLines")
9122	command.equals("DrawShapes")
9123	c != null
9124	result == JOptionPane.OK_OPTION
9125	c != null
9126	index == ORIENTATION_VERTICAL
9127	this.domainAxisPropertyPanel != null
9128	plot instanceof CategoryPlot
9129	plot instanceof XYPlot
9130	domainAxis != null
9131	this.rangeAxisPropertyPanel != null
9132	plot instanceof CategoryPlot
9133	plot instanceof XYPlot
9134	rangeAxis != null
9135	this.plotOrientation != null
9136	plot instanceof CategoryPlot
9137	plot instanceof XYPlot
9138	this.drawLines != null
9139	plot instanceof CategoryPlot
9140	r instanceof LineAndShapeRenderer
9141	plot instanceof XYPlot
9142	r instanceof StandardXYItemRenderer
9143	this.drawShapes != null
9144	plot instanceof CategoryPlot
9145	r instanceof LineAndShapeRenderer
9146	plot instanceof XYPlot
9147	r instanceof StandardXYItemRenderer
7079	p != null
7080	b != null
7081	isSeriesFilled(seriesIndex)
7082	plot.isAngleLabelsVisible()
7083	polarPlot != null
7084	dataset != null
7085	obj == null
7086	obj instanceof DefaultPolarItemRenderer
7087	this.seriesFilled.equals(that.seriesFilled)
896	masd != null
897	masd != null
898	masd != null
899	masd != null
900	mean != null
901	standardDeviation != null
902	c == this.maximumRangeValueIncStdDevColumn
902	c == this.maximumRangeValueColumn
902	r == this.maximumRangeValueRow
902	r == this.minimumRangeValueIncStdDevRow
902	c == this.minimumRangeValueIncStdDevColumn
902	r == this.maximumRangeValueIncStdDevRow
902	r == this.minimumRangeValueRow
902	c == this.minimumRangeValueColumn
903	Double.isNaN(m)
904	m > this.maximumRangeValue
904	Double.isNaN(this.maximumRangeValue)
905	Double.isNaN(m + sd)
906	(m + sd) > this.maximumRangeValueIncStdDev
906	Double.isNaN(this.maximumRangeValueIncStdDev)
907	Double.isNaN(m)
908	Double.isNaN(this.minimumRangeValue)
908	m < this.minimumRangeValue
909	Double.isNaN(m - sd)
910	(m - sd) < this.minimumRangeValueIncStdDev
910	Double.isNaN(this.minimumRangeValueIncStdDev)
911	r == this.minimumRangeValueIncStdDevRow
911	c == this.maximumRangeValueIncStdDevColumn
911	r == this.maximumRangeValueIncStdDevRow
911	c == this.minimumRangeValueIncStdDevColumn
911	r == this.maximumRangeValueRow
911	c == this.maximumRangeValueColumn
911	r == this.minimumRangeValueRow
911	c == this.minimumRangeValueColumn
912	masd == null
913	Double.isNaN(m)
914	Double.isNaN(this.maximumRangeValue)
915	m > this.maximumRangeValue
916	Double.isNaN(this.minimumRangeValue)
917	m < this.minimumRangeValue
918	Double.isNaN(sd)
919	Double.isNaN(this.maximumRangeValueIncStdDev)
920	m + sd > this.maximumRangeValueIncStdDev
921	Double.isNaN(this.minimumRangeValueIncStdDev)
922	m - sd < this.minimumRangeValueIncStdDev
923	includeInterval
924	includeInterval
925	includeInterval
926	Double.isNaN(this.maximumRangeValueIncStdDev)
926	Double.isNaN(this.minimumRangeValueIncStdDev)
927	Double.isNaN(this.maximumRangeValue)
927	Double.isNaN(this.minimumRangeValue)
928	obj == this
929	obj instanceof DefaultStatisticalCategoryDataset
930	this.data.equals(that.data)
362	series == null
363	series.getAllowDuplicateXValues()
364	series == null
365	this.xPoints.contains(xValue)
366	dataSeries.equals(series)
367	seriesXPoints.contains(xPoint)
368	this.autoPrune
369	this.xPoints == null
370	series < 0
370	series >= getSeriesCount()
371	series == null
372	this.data.contains(series)
373	this.data.size() == 0
374	series > getSeriesCount()
374	series < 0
375	this.data.size() == 0
376	this.autoPrune
377	x == null
378	series.getY(series.indexOf(x)) != null
379	canPrune(x)
380	this.propagateEvents
381	obj == this
382	obj instanceof DefaultTableXYDataset
383	this.autoPrune != that.autoPrune
384	this.propagateEvents != that.propagateEvents
385	this.intervalDelegate.equals(that.intervalDelegate)
386	ObjectUtilities.equal(this.data, that.data)
387	includeInterval
9091	command.equals("SelectFont")
9092	command.equals("SelectPaint")
9093	command.equals("ShowTitle")
9094	result == JOptionPane.OK_OPTION
9095	c != null
9096	this.showTitle
9097	title == null
1514	obj == this
1515	obj instanceof ValueDataset
395	seriesKeys == null
396	seriesKeys.size() != data.length
397	xObject != null
398	xObject instanceof Number
399	xObject instanceof Date
400	series < 0
400	series >= getSeriesCount()
401	series < 0
401	series >= getSeriesCount()
402	this == obj
403	obj instanceof DefaultWindDataset
404	this.seriesKeys.equals(that.seriesKeys)
405	this.allSeriesData.equals(that.allSeriesData)
406	object instanceof WindDataItem
407	this.x.doubleValue() > item.x.doubleValue()
408	this.x.equals(item.x)
409	this == obj
410	obj instanceof WindDataItem
411	this.x.equals(that.x)
412	this.windDir.equals(that.windDir)
413	this.windForce.equals(that.windForce)
528	series < 0
528	series >= getSeriesCount()
529	series < 0
529	series >= getSeriesCount()
530	seriesKey == null
531	data == null
532	data.length != 2
533	data[0].length != data[1].length
534	seriesIndex == -1
535	seriesIndex >= 0
536	obj == this
537	obj instanceof DefaultXYDataset
538	this.seriesKeys.equals(that.seriesKeys)
539	Arrays.equals(d1x, d2x)
540	Arrays.equals(d1y, d2y)
509	series >= getSeriesCount()
509	series < 0
510	series < 0
510	series >= getSeriesCount()
511	seriesKey == null
512	data == null
513	data.length != 3
514	data[0].length != data[1].length
514	data[0].length != data[2].length
515	seriesIndex == -1
516	seriesIndex >= 0
517	obj == this
518	obj instanceof DefaultXYZDataset
519	this.seriesKeys.equals(that.seriesKeys)
520	Arrays.equals(d1x, d2x)
521	Arrays.equals(d1y, d2y)
522	Arrays.equals(d1z, d2z)
7384	alpha > 1.0f
7384	alpha < 0.0f
7385	getItemVisible(series, item)
7386	pass == 0
7387	orientation == PlotOrientation.HORIZONTAL
7388	orientation == PlotOrientation.VERTICAL
7389	item == (dataset.getItemCount(series) - 1)
7390	isLinePass(pass)
7391	item == 0
7392	getItemLineVisible(series, item)
7393	isItemPass(pass)
7394	state.getInfo() != null
7395	obj == this
7396	obj instanceof DeviationRenderer
7397	this.alpha != that.alpha
3940	paint == null
3941	paint == null
3942	t == null
3943	p instanceof GradientPaint
3944	obj == this
3945	obj instanceof DialBackground
3946	PaintUtilities.equal(this.paint, that.paint)
3947	this.gradientPaintTransformer.equals( that.gradientPaintTransformer)
4006	radius <= 0.0
4007	paint == null
4008	paint == null
4009	stroke == null
4010	obj == this
4011	obj instanceof DialCap
4012	this.radius != that.radius
4013	PaintUtilities.equal(this.fillPaint, that.fillPaint)
4014	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
4015	this.outlineStroke.equals(that.outlineStroke)
4016	dataset != null
4017	this.background != null
4018	background != null
4019	this.cap != null
4020	cap != null
4021	frame == null
4022	layer == null
4023	layer == null
4024	layer != null
4025	pointer == null
4026	pointer == null
4027	pointer != null
4028	p.getDatasetIndex() == datasetIndex
4029	this.datasets.size() > index
4030	existing != null
4031	dataset != null
4032	this.background != null
4032	this.background.isVisible()
4033	this.background.isClippedToWindow()
4034	current.isVisible()
4035	current.isClippedToWindow()
4036	current.isVisible()
4037	current.isClippedToWindow()
4038	this.cap.isVisible()
4038	this.cap != null
4039	this.cap.isClippedToWindow()
4040	this.dialFrame.isVisible()
4041	dataset != null
4042	n != null
4043	scale == null
4044	existing != null
4045	this.scales.size() > index
4046	scaleIndex != null
4047	rect == null
4048	obj == this
4049	obj instanceof DialPlot
4050	ObjectUtilities.equal(this.background, that.background)
4051	ObjectUtilities.equal(this.cap, that.cap)
4052	this.dialFrame.equals(that.dialFrame)
4053	this.viewX != that.viewX
4054	this.viewY != that.viewY
4055	this.viewW != that.viewW
4056	this.viewH != that.viewH
4057	this.layers.equals(that.layers)
4058	this.pointers.equals(that.pointers)
3936	obj == this
3937	obj instanceof DialPointer
3938	this.datasetIndex != that.datasetIndex
3939	this.radius != that.radius
3678	this == obj
3679	obj instanceof DialShape
3680	this.name.equals(shape.toString())
3681	this.equals(DialShape.CIRCLE)
3682	this.equals(DialShape.CHORD)
3683	this.equals(DialShape.PIE)
3908	label == null
3909	label == null
3910	font == null
3911	paint == null
3912	radius < 0.0
3913	anchor == null
3914	obj == this
3915	obj instanceof DialTextAnnotation
3916	this.label.equals(that.label)
3917	this.font.equals(that.font)
3918	PaintUtilities.equal(this.paint, that.paint)
3919	this.radius != that.radius
3920	this.angle != that.angle
3921	this.anchor.equals(that.anchor)
3975	anchor == null
3976	value == null
3977	formatter == null
3978	font == null
3979	paint == null
3980	paint == null
3981	stroke == null
3982	paint == null
3983	insets == null
3984	anchor == null
3985	anchor == null
3986	this.maxTemplateValue != null
3987	minX > maxX
3988	x < minX
3989	x > maxX
3990	obj == this
3991	obj instanceof DialValueIndicator
3992	this.datasetIndex != that.datasetIndex
3993	this.angle != that.angle
3994	this.radius != that.radius
3995	this.frameAnchor.equals(that.frameAnchor)
3996	this.templateValue.equals(that.templateValue)
3997	ObjectUtilities.equal(this.maxTemplateValue, that.maxTemplateValue)
3998	this.font.equals(that.font)
3999	PaintUtilities.equal(this.paint, that.paint)
4000	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
4001	this.outlineStroke.equals(that.outlineStroke)
4002	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
4003	this.insets.equals(that.insets)
4004	this.valueAnchor.equals(that.valueAnchor)
4005	this.textAnchor.equals(that.textAnchor)
6998	filename == null
6999	file.exists()
7000	chartDeleter != null
7001	filename.length() >= 6
7002	filename.substring(0, 6).equals("public")
7003	filename.startsWith(ServletUtilities.getTempOneTimeFilePrefix())
7004	isChartInUserList
7004	isChartPublic
7004	isOneTimeChart
7005	isOneTimeChart
552	this == obj
553	obj instanceof DomainOrder
554	this.name.equals(that.toString())
555	this.equals(DomainOrder.ASCENDING)
556	this.equals(DomainOrder.DESCENDING)
557	this.equals(DomainOrder.NONE)
1008	this.timePeriodClass == Second.class
1009	this.timePeriodClass == Minute.class
1010	this.timePeriodClass == Hour.class
1011	this.pointsInTime[0] == null
1012	this.domainIsPointsInTime
1013	values == null
1014	seriesNumber >= this.valueHistory.length
1015	this.valueHistory[seriesNumber] == null
1016	srcLength < this.historyCount
1017	fillNeeded
1018	seriesKey != null
1019	seriesNumber >= this.valueHistory.length
1020	this.valueHistory[seriesNumber] == null
1021	this.oldestAt == 0
1022	newIndex >= this.historyCount
1023	tmp >= this.historyCount
1024	tmp < 0
1025	this.maxValue != null
1026	this.valueHistory[s].getData(this.oldestAt) == oldMax
1027	extremaChanged
1028	extremaChanged
1029	this.oldestAt >= this.historyCount
1030	tmp > max
1031	nDataPoints > this.valueHistory.length
1032	this.valueHistory[s] == null
1033	nDataPoints > this.valueHistory.length
1034	this.valueHistory[s] == null
1035	refresh > 0
1036	insertionIndex % refresh == 0
1037	this.domainRange == null
1038	this.minValue != null
1039	this.maxValue != null
1040	this.valueRange == null
4329	font == null
4330	paint == null
4331	s != null
4332	edge == RectangleEdge.TOP
4332	edge == RectangleEdge.BOTTOM
4333	edge == RectangleEdge.LEFT
4333	edge == RectangleEdge.RIGHT
4334	line != null
4335	obj == this
4336	obj instanceof ExtendedCategoryAxis
4337	this.sublabelFont.equals(that.sublabelFont)
4338	PaintUtilities.equal(this.sublabelPaint, that.sublabelPaint)
4339	this.sublabels.equals(that.sublabels)
6002	file.isDirectory()
6003	name.endsWith(this.extension)
3093	domainAxis == null
3094	rangeAxis == null
3095	axis == null
3096	axis == null
3097	paint == null
3098	this.domainGridlinesVisible != visible
3099	stroke == null
3100	paint == null
3101	this.rangeGridlinesVisible != visible
3102	stroke == null
3103	paint == null
3104	info != null
3105	info != null
3106	this.data != null
3107	isDomainGridlinesVisible()
3108	isRangeGridlinesVisible()
3109	axis == this.domainAxis
3110	axis == this.rangeAxis
3111	data != null
3112	v < lowest
3113	v > highest
3114	lowest <= highest
3115	data != null
3116	v < lowest
3117	v > highest
3118	lowest <= highest
3119	useAnchor
3120	useAnchor
3121	this.domainAxis == null
3121	isDomainPannable()
3122	this.domainAxis.isInverted()
3123	isRangePannable()
3123	this.rangeAxis == null
3124	this.rangeAxis.isInverted()
3125	obj == this
3126	super.equals(obj)
3127	obj instanceof FastScatterPlot
3128	this.domainPannable != that.domainPannable
3129	this.rangePannable != that.rangePannable
3130	ArrayUtilities.equal(this.data, that.data)
3131	ObjectUtilities.equal(this.domainAxis, that.domainAxis)
3132	ObjectUtilities.equal(this.rangeAxis, that.rangeAxis)
3133	PaintUtilities.equal(this.paint, that.paint)
3134	this.domainGridlinesVisible != that.domainGridlinesVisible
3135	PaintUtilities.equal(this.domainGridlinePaint, that.domainGridlinePaint)
3136	ObjectUtilities.equal(this.domainGridlineStroke, that.domainGridlineStroke)
3137	this.rangeGridlinesVisible
3137	!this.rangeGridlinesVisible == that.rangeGridlinesVisible
3138	PaintUtilities.equal(this.rangeGridlinePaint, that.rangeGridlinePaint)
3139	ObjectUtilities.equal(this.rangeGridlineStroke, that.rangeGridlineStroke)
3140	this.data != null
3141	this.domainAxis != null
3142	this.rangeAxis != null
3143	this.domainAxis != null
3144	this.rangeAxis != null
1001	t != Long.MIN_VALUE
1002	t != Long.MAX_VALUE
1003	object instanceof FixedMillisecond
1004	o1 instanceof FixedMillisecond
1005	difference > 0
1006	difference < 0
1007	o1 instanceof RegularTimePeriod
6796	w == LengthConstraintType.NONE
6797	h == LengthConstraintType.NONE
6798	h == LengthConstraintType.FIXED
6799	h == LengthConstraintType.RANGE
6800	w == LengthConstraintType.FIXED
6801	h == LengthConstraintType.NONE
6802	h == LengthConstraintType.FIXED
6803	h == LengthConstraintType.RANGE
6804	w == LengthConstraintType.RANGE
6805	h == LengthConstraintType.NONE
6806	h == LengthConstraintType.FIXED
6807	h == LengthConstraintType.RANGE
6808	x + size.width <= width
6809	itemsInRow.isEmpty()
6810	constraint.getHeightRange().contains(s.height)
6811	constraint.getWidthRange().contains(s1.width)
6812	constraint.getWidthRange().contains(s.width)
6813	constraint.getWidthRange().contains(s1.width)
6814	blockCount > 0
6815	blockCount > 1
6816	this.verticalAlignment != VerticalAlignment.TOP
6817	this.verticalAlignment == VerticalAlignment.CENTER
6818	this.verticalAlignment == VerticalAlignment.BOTTOM
6819	obj == this
6820	obj instanceof FlowArrangement
6821	this.horizontalAlignment != that.horizontalAlignment
6822	this.verticalAlignment != that.verticalAlignment
6823	this.horizontalGap != that.horizontalGap
6824	this.verticalGap != that.verticalGap
6011	this.bold.isSelected()
6011	this.italic.isSelected()
6012	this.bold.isSelected()
6013	this.italic.isSelected()
6014	selected != null
6015	font == null
6016	fontName.equals(model.getElementAt(i))
6017	fontSize.equals(model.getElementAt(i))
6010	font != null
8451	paint == null
8452	paint == null
8453	dataset instanceof GanttCategoryDataset
8454	count == 0
8455	value0 == null
8456	value1 == null
8457	translatedValue1 < translatedValue0
8458	plot.getOrientation() == PlotOrientation.HORIZONTAL
8459	plot.getOrientation() == PlotOrientation.VERTICAL
8460	percent != null
8461	orientation == PlotOrientation.HORIZONTAL
8462	orientation == PlotOrientation.VERTICAL
8463	getShadowsVisible()
8464	completeBar != null
8465	incompleteBar != null
8466	state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD
8466	isDrawBarOutline()
8467	subinterval == count - 1
8468	state.getInfo() != null
8469	entities != null
8470	value0 == null
8471	value1 == null
8472	java2dValue1 < java2dValue0
8473	orientation == PlotOrientation.HORIZONTAL
8474	orientation == PlotOrientation.VERTICAL
8475	percent != null
8476	plot.getOrientation() == PlotOrientation.HORIZONTAL
8477	plot.getOrientation() == PlotOrientation.VERTICAL
8478	getShadowsVisible()
8479	completeBar != null
8480	incompleteBar != null
8481	isDrawBarOutline()
8481	state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD
8482	paint != null
8482	stroke != null
8483	generator != null
8483	isItemLabelVisible(row, column, selected)
8484	entities != null
8485	obj == this
8486	obj instanceof GanttRenderer
8487	PaintUtilities.equal(this.completePaint, that.completePaint)
8488	PaintUtilities.equal(this.incompletePaint, that.incompletePaint)
8489	this.startPercent != that.startPercent
8490	this.endPercent != that.endPercent
8660	itemPaint instanceof Color
8661	itemPaint instanceof GradientPaint
8662	c0.getAlpha() == 0
8663	base == RectangleEdge.BOTTOM
8663	base == RectangleEdge.TOP
8664	base == RectangleEdge.LEFT
8664	base == RectangleEdge.RIGHT
8665	renderer.isDrawBarOutline()
8666	stroke != null
8666	paint != null
8667	itemPaint instanceof Color
8668	c.getAlpha() == 0
8669	base == RectangleEdge.TOP
8670	pegShadow
8671	base == RectangleEdge.BOTTOM
8672	pegShadow
8673	base == RectangleEdge.LEFT
8674	pegShadow
8675	base == RectangleEdge.RIGHT
8676	pegShadow
8677	obj == this
8678	obj instanceof GradientBarPainter
8679	this.g1 != that.g1
8680	this.g2 != that.g2
8681	this.g3 != that.g3
2049	this == obj
2050	obj instanceof GradientPaintTransformType
2051	this.name.equals(t.name)
2052	this.equals(GradientPaintTransformType.HORIZONTAL)
2053	this.equals(GradientPaintTransformType.VERTICAL)
2054	this.equals(GradientPaintTransformType.CENTER_HORIZONTAL)
2055	this.equals(GradientPaintTransformType.CENTER_VERTICAL)
7786	itemPaint instanceof Color
7787	itemPaint instanceof GradientPaint
7788	c0.getAlpha() == 0
7789	base == RectangleEdge.BOTTOM
7789	base == RectangleEdge.TOP
7790	base == RectangleEdge.LEFT
7790	base == RectangleEdge.RIGHT
7791	renderer.isDrawBarOutline()
7792	stroke != null
7792	paint != null
7793	itemPaint instanceof Color
7794	c.getAlpha() == 0
7795	base == RectangleEdge.TOP
7796	pegShadow
7797	base == RectangleEdge.BOTTOM
7798	pegShadow
7799	base == RectangleEdge.LEFT
7800	pegShadow
7801	base == RectangleEdge.RIGHT
7802	pegShadow
7803	obj == this
7804	obj instanceof GradientXYBarPainter
7805	this.g1 != that.g1
7806	this.g2 != that.g2
7807	this.g3 != that.g3
8064	lowerBound >= upperBound
8065	alpha > 255
8065	alpha < 0
8066	obj == this
8067	obj instanceof GrayPaintScale
8068	this.lowerBound != that.lowerBound
8069	this.upperBound != that.upperBound
8070	this.alpha != that.alpha
6720	w == LengthConstraintType.NONE
6721	h == LengthConstraintType.NONE
6722	h == LengthConstraintType.FIXED
6723	h == LengthConstraintType.RANGE
6724	w == LengthConstraintType.FIXED
6725	h == LengthConstraintType.NONE
6726	h == LengthConstraintType.FIXED
6727	h == LengthConstraintType.RANGE
6728	w == LengthConstraintType.RANGE
6729	h == LengthConstraintType.NONE
6730	h == LengthConstraintType.FIXED
6731	h == LengthConstraintType.RANGE
6732	b != null
6733	index >= blocks.size()
6734	b != null
6735	constraint.getHeightRange().contains(size1.getHeight())
6736	constraint.getWidthRange().contains(size1.getWidth())
6737	constraint.getWidthRange().contains(size1.getWidth())
6738	constraint.getHeightRange().contains(size1.getHeight())
6739	constraint.getWidthRange().contains(size1.getWidth())
6740	constraint.getHeightRange().contains(size1.getHeight())
6741	constraint.getHeightRange().contains(size1.getHeight())
6742	index >= blocks.size()
6743	b != null
6744	index >= blocks.size()
6745	b != null
6746	obj == this
6747	obj instanceof GridArrangement
6748	this.columns != that.columns
6749	this.rows != that.rows
8682	map == null
8683	dataset == null
8684	data != null
8685	orientation == PlotOrientation.HORIZONTAL
8686	orientation == PlotOrientation.VERTICAL
8687	categories > 1
8688	groups > 1
8689	columns > 0
8690	orientation == PlotOrientation.HORIZONTAL
8691	groupCount > 1
8692	dataValue == null
8693	group.equals(this.seriesToGroupMap.getGroup( dataset.getRowKey(i)))
8694	v != null
8695	d > 0
8696	orientation == PlotOrientation.HORIZONTAL
8697	inverted
8697	positive
8697	inverted
8697	positive
8698	inverted
8698	positive
8698	positive
8698	inverted
8699	value > 0.0
8700	orientation == PlotOrientation.HORIZONTAL
8701	generator != null
8701	isItemLabelVisible(row, column, selected)
8702	entities != null
8703	obj == this
8704	obj instanceof GroupedStackedBarRenderer
8705	this.seriesToGroupMap.equals(that.seriesToGroupMap)
2046	p == null
2047	p instanceof GradientPaint
2048	a == null
1522	dataset == null
1523	paintScale == null
2376	dateFormatter == null
2377	numberFormatter == null
2378	dataset instanceof OHLCDataset
2379	x != null
2380	high != null
2381	low != null
2382	open != null
2383	close != null
2384	this.dateFormatter != null
2385	this.numberFormatter != null
2386	obj == this
2387	obj instanceof HighLowItemLabelGenerator
2388	this.dateFormatter.equals(generator.dateFormatter)
2389	this.numberFormatter.equals(generator.numberFormatter)
7353	dataset != null
7354	domainAxis.getRange().contains(x)
7355	state.getInfo() != null
7356	dataset instanceof OHLCDataset
7357	Double.isNaN(yHigh)
7357	Double.isNaN(yLow)
7358	orientation == PlotOrientation.HORIZONTAL
7359	orientation == PlotOrientation.VERTICAL
7360	domainAxis.isInverted()
7361	getDrawOpenTicks()
7362	Double.isNaN(yOpen)
7363	this.openTickPaint != null
7364	orientation == PlotOrientation.HORIZONTAL
7365	orientation == PlotOrientation.VERTICAL
7366	getDrawCloseTicks()
7367	Double.isNaN(yClose)
7368	this.closeTickPaint != null
7369	orientation == PlotOrientation.HORIZONTAL
7370	orientation == PlotOrientation.VERTICAL
7371	item > 0
7372	Double.isNaN(x0)
7372	Double.isNaN(y0)
7372	Double.isNaN(y)
7373	orientation == PlotOrientation.HORIZONTAL
7374	orientation == PlotOrientation.VERTICAL
7375	entities != null
7376	this == obj
7377	obj instanceof HighLowRenderer
7378	this.drawOpenTicks != that.drawOpenTicks
7379	this.drawCloseTicks != that.drawCloseTicks
7380	PaintUtilities.equal(this.openTickPaint, that.openTickPaint)
7381	PaintUtilities.equal(this.closeTickPaint, that.closeTickPaint)
7382	this.tickLength != that.tickLength
7383	super.equals(obj)
850	startBoundary > endBoundary
851	obj == null
852	obj == this
853	obj instanceof HistogramBin
854	type == null
855	key == null
856	values == null
857	bins < 1
858	i == bins - 1
859	values[i] < maximum
860	fraction < 0.0
861	binIndex >= bins
862	values == null
862	values.length < 1
863	values[i] < min
864	values == null
864	values.length < 1
865	values[i] > max
866	this.type == HistogramType.FREQUENCY
867	this.type == HistogramType.RELATIVE_FREQUENCY
868	this.type == HistogramType.SCALE_AREA_TO_1
869	obj == this
870	obj instanceof HistogramDataset
871	ObjectUtilities.equal(this.type, that.type)
872	ObjectUtilities.equal(this.list, that.list)
889	obj == null
890	obj == this
891	obj instanceof HistogramType
892	this.name.equals(t.name)
893	this.equals(HistogramType.FREQUENCY)
894	this.equals(HistogramType.RELATIVE_FREQUENCY)
895	this.equals(HistogramType.SCALE_AREA_TO_1)
1992	this == obj
1993	obj instanceof HorizontalAlignment
1994	this.name.equals(that.name)
1995	this.equals(HorizontalAlignment.LEFT)
1996	this.equals(HorizontalAlignment.RIGHT)
1997	this.equals(HorizontalAlignment.CENTER)
1402	day == null
1403	time == null
1404	zone == null
1405	this.hour != FIRST_HOUR_IN_DAY
1406	prevDay != null
1407	this.hour != LAST_HOUR_IN_DAY
1408	nextDay != null
1409	obj == this
1410	obj instanceof Hour
1411	this.hour != that.hour
1412	this.day.equals(that.day)
1413	o1 instanceof Hour
1414	result == 0
1415	o1 instanceof RegularTimePeriod
1416	day != null
1417	hour >= FIRST_HOUR_IN_DAY
1417	hour <= LAST_HOUR_IN_DAY
2391	className == null
6336	useOverLibForToolTips
6337	entities != null
6338	entity.getURLText() != null
6338	entity.getToolTipText() != null
6339	area.length() > 0
6340	input == null
6341	c == '&'
6342	c == '\"'
6343	c == '<'
6344	c == '>'
6345	c == '\''
6346	c == '\\'
6347	input == null
6348	c == '\"'
6349	c == '\''
6350	c == '\\'
6511	image == null
6512	image == null
6513	position == RectangleEdge.BOTTOM
6513	position == RectangleEdge.TOP
6514	position == RectangleEdge.RIGHT
6514	position == RectangleEdge.LEFT
6515	getPosition() == RectangleEdge.TOP
6516	horizontalAlignment == HorizontalAlignment.CENTER
6517	horizontalAlignment == HorizontalAlignment.LEFT
6518	horizontalAlignment == HorizontalAlignment.RIGHT
6519	padding != null
6520	getPosition() == RectangleEdge.LEFT
6521	alignment == VerticalAlignment.CENTER
6522	alignment == VerticalAlignment.TOP
6523	alignment == VerticalAlignment.BOTTOM
6524	obj == this
6525	obj instanceof ImageTitle
6526	ObjectUtilities.equal(this.image, that.image)
8830	dataset instanceof IntervalCategoryDataset
8831	visibleRow < 0
8832	value0 == null
8833	value1 == null
8834	java2dValue1 < java2dValue0
8835	orientation == PlotOrientation.HORIZONTAL
8836	seriesCount > 1
8837	orientation == PlotOrientation.VERTICAL
8838	seriesCount > 1
8839	getShadowsVisible()
8840	generator != null
8840	isItemLabelVisible(row, column, selected)
8841	entities != null
8842	obj == this
8843	obj instanceof IntervalBarRenderer
2353	getNumberFormat() != null
2354	getDateFormat() != null
2355	dataset instanceof IntervalCategoryDataset
2356	getNumberFormat() != null
2357	getDateFormat() != null
2287	getNumberFormat() != null
2288	getDateFormat() != null
2289	dataset instanceof IntervalCategoryDataset
2290	getNumberFormat() != null
2291	getDateFormat() != null
2292	obj == this
2293	obj instanceof IntervalCategoryToolTipGenerator
3295	obj == this
3296	obj instanceof IntervalMarker
3297	super.equals(obj)
3298	this.startValue != that.startValue
3299	this.endValue != that.endValue
3300	ObjectUtilities.equal(this.gradientPaintTransformer, that.gradientPaintTransformer)
453	dataset == null
454	b
455	1.0 < d
455	d < 0.0
456	w < 0.0
457	isAutoWidth()
457	Double.isInfinite(this.autoIntervalWidth)
458	x != null
459	x != null
460	r != null
461	r != null
462	includeInterval
462	range != null
463	this.autoWidth
464	itemCount > 1
465	obj == this
466	obj instanceof IntervalXYDelegate
467	this.autoWidth != that.autoWidth
468	this.intervalPositionFactor != that.intervalPositionFactor
469	this.fixedIntervalWidth != that.fixedIntervalWidth
2255	dataset instanceof IntervalXYDataset
2256	intervalDataset != null
2257	xdf != null
2258	dataset.getY(series, item) == null
2258	Double.isNaN(y)
2259	ydf != null
2260	intervalDataset.getStartY(series, item) == null
2260	Double.isNaN(ys)
2261	ydf != null
2262	Double.isNaN(ye)
2262	intervalDataset.getEndY(series, item) == null
2263	ydf != null
2264	obj == this
2265	obj instanceof IntervalXYItemLabelGenerator
32	qName.equals(ITEM_TAG)
33	qName.equals(VALUE_TAG)
34	this.parent instanceof PieDatasetHandler
35	this.parent instanceof CategorySeriesHandler
2187	this == o
2188	o instanceof ItemLabelAnchor
2189	this.name.equals(order.toString())
2190	this.equals(ItemLabelAnchor.CENTER)
2191	this.equals(ItemLabelAnchor.INSIDE1)
2192	this.equals(ItemLabelAnchor.INSIDE2)
2193	this.equals(ItemLabelAnchor.INSIDE3)
2194	this.equals(ItemLabelAnchor.INSIDE4)
2195	this.equals(ItemLabelAnchor.INSIDE5)
2196	this.equals(ItemLabelAnchor.INSIDE6)
2197	this.equals(ItemLabelAnchor.INSIDE7)
2198	this.equals(ItemLabelAnchor.INSIDE8)
2199	this.equals(ItemLabelAnchor.INSIDE9)
2200	this.equals(ItemLabelAnchor.INSIDE10)
2201	this.equals(ItemLabelAnchor.INSIDE11)
2202	this.equals(ItemLabelAnchor.INSIDE12)
2203	this.equals(ItemLabelAnchor.OUTSIDE1)
2204	this.equals(ItemLabelAnchor.OUTSIDE2)
2205	this.equals(ItemLabelAnchor.OUTSIDE3)
2206	this.equals(ItemLabelAnchor.OUTSIDE4)
2207	this.equals(ItemLabelAnchor.OUTSIDE5)
2208	this.equals(ItemLabelAnchor.OUTSIDE6)
2209	this.equals(ItemLabelAnchor.OUTSIDE7)
2210	this.equals(ItemLabelAnchor.OUTSIDE8)
2211	this.equals(ItemLabelAnchor.OUTSIDE9)
2212	this.equals(ItemLabelAnchor.OUTSIDE10)
2213	this.equals(ItemLabelAnchor.OUTSIDE11)
2214	this.equals(ItemLabelAnchor.OUTSIDE12)
2272	itemLabelAnchor == null
2273	textAnchor == null
2274	rotationAnchor == null
2275	obj == this
2276	obj instanceof ItemLabelPosition
2277	this.itemLabelAnchor.equals(that.itemLabelAnchor)
2278	this.textAnchor.equals(that.textAnchor)
2279	this.rotationAnchor.equals(that.rotationAnchor)
2280	this.angle != that.angle
202	connection == null
203	columnCount < 2
204	this.transpose
205	this.transpose
206	this.transpose
207	resultSet != null
208	statement != null
198	con == null
199	columnCount != 2
200	resultSet != null
201	statement != null
185	con == null
186	numberOfValidColumns <= 1
187	columnTypes[column] != Types.NULL
188	this.rows != null
189	this.rows.size() == 0
190	columnTypes[column] != Types.NULL
191	this.rows.size() < 1
192	testValue != null
193	test < this.minValue
194	test > this.maxValue
195	resultSet != null
196	statement != null
197	seriesIndex < this.columnNames.length
197	this.columnNames[seriesIndex] != null
5917	plot == null
5918	createLegend
5919	title != null
5920	titleFont == null
5921	renderingHints == null
5922	padding == null
5923	this.title != null
5924	title != null
5925	text != null
5926	this.title == null
5927	subtitle instanceof LegendTitle
5928	seen == index
5929	subtitles == null
5930	t != null
5931	index >= getSubtitleCount()
5931	index < 0
5932	subtitle == null
5933	index > getSubtitleCount()
5933	index < 0
5934	subtitle == null
5935	val == null
5936	flag
5936	RenderingHints.VALUE_ANTIALIAS_OFF.equals(val)
5936	flag
5936	RenderingHints.VALUE_ANTIALIAS_ON.equals(val)
5937	flag
5938	flag
5939	this.backgroundPaint != null
5940	this.backgroundPaint.equals(paint)
5941	paint != null
5942	this.backgroundImage != null
5943	this.backgroundImage.equals(image)
5944	image != null
5945	this.backgroundImageAlignment != alignment
5946	this.backgroundImageAlpha != alpha
5947	notify
5948	info != null
5949	entities != null
5950	this.backgroundPaint != null
5951	this.backgroundImage != null
5952	isBorderVisible()
5953	stroke != null
5953	paint != null
5954	this.title != null
5954	this.title.isVisible()
5955	e != null
5956	currentTitle.isVisible()
5957	e != null
5958	info != null
5959	hAlign == HorizontalAlignment.LEFT
5960	hAlign == HorizontalAlignment.CENTER
5961	hAlign == HorizontalAlignment.RIGHT
5962	vAlign == VerticalAlignment.TOP
5963	vAlign == VerticalAlignment.CENTER
5964	vAlign == VerticalAlignment.BOTTOM
5965	t == null
5966	area == null
5967	ww <= 0.0
5968	hh <= 0.0
5969	position == RectangleEdge.TOP
5970	position == RectangleEdge.BOTTOM
5971	position == RectangleEdge.RIGHT
5972	position == RectangleEdge.LEFT
5973	retValue instanceof EntityBlockResult
5974	listener == null
5975	listener == null
5976	this.notify
5977	listeners[i] == ChartChangeListener.class
5978	listeners[i] == ChartProgressListener.class
5979	obj == this
5980	obj instanceof JFreeChart
5981	this.renderingHints.equals(that.renderingHints)
5982	this.borderVisible != that.borderVisible
5983	ObjectUtilities.equal(this.borderStroke, that.borderStroke)
5984	PaintUtilities.equal(this.borderPaint, that.borderPaint)
5985	this.padding.equals(that.padding)
5986	ObjectUtilities.equal(this.title, that.title)
5987	ObjectUtilities.equal(this.subtitles, that.subtitles)
5988	ObjectUtilities.equal(this.plot, that.plot)
5989	PaintUtilities.equal( this.backgroundPaint, that.backgroundPaint )
5990	ObjectUtilities.equal(this.backgroundImage, that.backgroundImage)
5991	this.backgroundImageAlignment != that.backgroundImageAlignment
5992	this.backgroundImageAlpha != that.backgroundImageAlpha
5993	this.notify != that.notify
5994	this.title != null
5995	this.title != null
5996	this.plot != null
5997	logo == null
5998	imageURL != null
5495	chart == null
5496	obj == this
5497	obj instanceof JFreeChartEntity
5498	getArea().equals(that.getArea())
5499	ObjectUtilities.equal(getToolTipText(), that.getToolTipText())
5500	ObjectUtilities.equal(getURLText(), that.getURLText())
5501	this.chart.equals(that.chart)
22	qName.equals(KEY_TAG)
23	qName.equals(KEY_TAG)
24	this.currentText != null
78	defaultGroup == null
79	result.contains(group)
80	result < 0
81	this.defaultGroup.equals(group)
82	key == null
83	group != null
84	key == null
85	currentGroup.equals(this.defaultGroup)
86	currentGroup.equals(group)
87	count == 1
88	group == null
89	this.groups.contains(group)
90	this.defaultGroup.equals(group)
91	group == null
92	group.equals(g)
93	obj == this
94	obj instanceof KeyToGroupMap
95	ObjectUtilities.equal(this.defaultGroup, that.defaultGroup)
96	this.keyToGroupMap.equals(that.keyToGroupMap)
97	object == null
98	Modifier.isPublic(m.getModifiers())
99	list != null
1784	this.object instanceof PublicCloneable
1785	obj == this
1786	obj instanceof KeyedObject
1787	ObjectUtilities.equal(this.key, that.key)
1788	ObjectUtilities.equal(this.object, that.object)
1734	kobj != null
1735	item != null
1736	key == null
1737	ko.getKey().equals(key)
1738	index < 0
1739	keyIndex >= 0
1740	position < 0
1740	position > this.data.size()
1741	key == null
1742	pos >= 0
1743	position <= this.data.size()
1744	index < 0
1745	obj == this
1746	obj instanceof KeyedObjects
1747	count != that.getItemCount()
1748	k1.equals(k2)
1749	o1 == null
1750	o2 != null
1751	o1.equals(o2)
955	rowData != null
956	columnKey != null
957	index >= 0
958	key == null
959	key == null
960	rowKey == null
961	columnKey == null
962	row < 0
963	column < 0
964	index >= 0
965	rowKey == null
966	columnKey == null
967	rowIndex >= 0
968	columnIndex < 0
969	rowIndex < 0
970	columnIndex < 0
971	row.getObject(item) != null
972	allNull
973	colIndex >= 0
973	row.getObject(colIndex) != null
974	allNull
975	colIndex >= 0
976	index < 0
977	index < 0
978	i >= 0
979	obj == this
980	obj instanceof KeyedObjects2D
981	getRowKeys().equals(that.getRowKeys())
982	getColumnKeys().equals(that.getColumnKeys())
983	rowCount != that.getRowCount()
984	colCount != that.getColumnCount()
985	v1 == null
986	v2 != null
987	v1.equals(v2)
1719	order == null
1720	o2 == null
1721	o1 == null
1722	this.type == KeyedValueComparatorType.BY_KEY
1723	this.order.equals(SortOrder.ASCENDING)
1724	this.order.equals(SortOrder.DESCENDING)
1725	this.type == KeyedValueComparatorType.BY_VALUE
1726	n2 == null
1727	n1 == null
1728	this.order.equals(SortOrder.ASCENDING)
1729	d1 > d2
1730	d1 < d2
1731	this.order.equals(SortOrder.DESCENDING)
1732	d1 > d2
1733	d1 < d2
952	this == o
953	o instanceof KeyedValueComparatorType
954	this.name.equals(type.name)
6024	this.colWidth[c] < d.width
6025	this.rowHeight[r] < d.height
6026	this.colWidth[c] < d.width
6027	this.rowHeight[r] < d.height
6028	this.colWidth[c] < d.width
6029	this.rowHeight[r] < d.height
6030	i < ncomponents
6031	c == 0
6032	c == 1
6907	font == null
6908	paint == null
6909	anchor == null
6910	params instanceof EntityBlockParams
6911	ebp.getGenerateEntities()
6912	ebp != null
6912	sec != null
6913	this.toolTipText != null
6913	this.urlText != null
6914	obj instanceof LabelBlock
6915	this.text.equals(that.text)
6916	this.font.equals(that.font)
6917	PaintUtilities.equal(this.paint, that.paint)
6918	ObjectUtilities.equal(this.toolTipText, that.toolTipText)
6919	ObjectUtilities.equal(this.urlText, that.urlText)
6920	this.contentAlignmentPoint.equals(that.contentAlignmentPoint)
6921	this.textAnchor.equals(that.textAnchor)
1987	this == obj
1988	obj instanceof Layer
1989	this.name.equals(layer.name)
1990	this.equals(Layer.FOREGROUND)
1991	this.equals(Layer.BACKGROUND)
8536	n != null
8537	dataset != null
8538	orientation == PlotOrientation.HORIZONTAL
8539	orientation == PlotOrientation.VERTICAL
8540	columns > 1
8541	(rows * columns) > 0
8542	orientation == PlotOrientation.HORIZONTAL
8543	orientation == PlotOrientation.VERTICAL
8544	dataValue == null
8545	uclip <= 0.0
8546	value >= uclip
8547	value <= lclip
8548	lclip <= 0.0
8549	value >= uclip
8550	value <= lclip
8551	value <= lclip
8552	value >= uclip
8553	Double.isNaN(seriesBarWidth)
8554	seriesCount > 1
8555	t != null
8555	itemPaint instanceof GradientPaint
8556	isDrawBarOutline()
8556	state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD
8557	paint != null
8557	stroke != null
8558	generator != null
8558	isItemLabelVisible(row, column, selected)
8559	entities != null
8560	dataValue == null
8561	uclip <= 0.0
8562	value >= uclip
8563	value <= lclip
8564	lclip <= 0.0
8565	value >= uclip
8566	value <= lclip
8567	value <= lclip
8568	value >= uclip
8569	Double.isNaN(seriesBarWidth)
8570	seriesCount > 1
8571	itemPaint instanceof GradientPaint
8571	t != null
8572	state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD
8572	isDrawBarOutline()
8573	paint != null
8573	stroke != null
8574	generator != null
8574	isItemLabelVisible(row, column, selected)
8575	entities != null
6593	shape == null
6594	fillPaint == null
6595	transformer == null
6596	anchor == null
6597	location == null
6598	w == LengthConstraintType.NONE
6599	h == LengthConstraintType.NONE
6600	h == LengthConstraintType.RANGE
6601	h == LengthConstraintType.FIXED
6602	w == LengthConstraintType.RANGE
6603	h == LengthConstraintType.NONE
6604	h == LengthConstraintType.RANGE
6605	h == LengthConstraintType.FIXED
6606	w == LengthConstraintType.FIXED
6607	h == LengthConstraintType.NONE
6608	h == LengthConstraintType.RANGE
6609	h == LengthConstraintType.FIXED
6610	this.line != null
6611	this.shape != null
6612	this.lineVisible
6613	this.shapeVisible
6614	this.shapeFilled
6615	p instanceof GradientPaint
6616	this.shapeOutlineVisible
6617	obj instanceof LegendGraphic
6618	this.shapeVisible != that.shapeVisible
6619	ShapeUtilities.equal(this.shape, that.shape)
6620	this.shapeFilled != that.shapeFilled
6621	PaintUtilities.equal(this.fillPaint, that.fillPaint)
6622	ObjectUtilities.equal(this.fillPaintTransformer, that.fillPaintTransformer)
6623	this.shapeOutlineVisible != that.shapeOutlineVisible
6624	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
6625	ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)
6626	this.shapeAnchor != that.shapeAnchor
6627	this.shapeLocation != that.shapeLocation
6628	this.lineVisible != that.lineVisible
6629	ShapeUtilities.equal(this.line, that.line)
6630	PaintUtilities.equal(this.linePaint, that.linePaint)
6631	ObjectUtilities.equal(this.lineStroke, that.lineStroke)
7012	label == null
7013	fillPaint == null
7014	lineStroke == null
7015	outlinePaint == null
7016	outlineStroke == null
7017	label == null
7018	fillPaint == null
7019	lineStroke == null
7020	line == null
7021	linePaint == null
7022	outlinePaint == null
7023	outlineStroke == null
7024	count <= 0
7025	shape == null
7026	paint == null
7027	paint == null
7028	paint == null
7029	line == null
7030	transformer == null
7031	obj == this
7032	obj instanceof LegendItem
7033	this.datasetIndex != that.datasetIndex
7034	this.series != that.series
7035	this.label.equals(that.label)
7036	AttributedStringUtilities.equal(this.attributedLabel, that.attributedLabel)
7037	ObjectUtilities.equal(this.description, that.description)
7038	this.shapeVisible != that.shapeVisible
7039	ShapeUtilities.equal(this.shape, that.shape)
7040	this.shapeFilled != that.shapeFilled
7041	PaintUtilities.equal(this.fillPaint, that.fillPaint)
7042	ObjectUtilities.equal(this.fillPaintTransformer, that.fillPaintTransformer)
7043	this.shapeOutlineVisible != that.shapeOutlineVisible
7044	this.outlineStroke.equals(that.outlineStroke)
7045	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
7046	this.lineVisible
7046	!this.lineVisible == that.lineVisible
7047	ShapeUtilities.equal(this.line, that.line)
7048	this.lineStroke.equals(that.lineStroke)
7049	PaintUtilities.equal(this.linePaint, that.linePaint)
7050	ObjectUtilities.equal(this.labelFont, that.labelFont)
7051	PaintUtilities.equal(this.labelPaint, that.labelPaint)
7052	this.seriesKey instanceof PublicCloneable
7053	this.fillPaintTransformer instanceof PublicCloneable
6632	params instanceof EntityBlockParams
6633	ebp.getGenerateEntities()
5999	obj == this
6000	obj instanceof LegendItemCollection
6001	this.items.equals(that.items)
5477	obj == this
5478	obj instanceof LegendItemEntity
5479	ObjectUtilities.equal(this.seriesKey, that.seriesKey)
5480	ObjectUtilities.equal(this.dataset, that.dataset)
6972	this == obj
6973	obj instanceof LegendRenderingOrder
6974	this.name.equals(order.toString())
6975	this.equals(LegendRenderingOrder.STANDARD)
6976	this.equals(LegendRenderingOrder.REVERSE)
6678	sources == null
6679	edge == null
6680	anchor == null
6681	padding == null
6682	font == null
6683	paint == null
6684	padding == null
6685	RectangleEdge.isTopOrBottom(p)
6686	legendItems != null
6687	textFont == null
6688	textPaint == null
6689	this.items.isEmpty()
6690	container == null
6691	((EntityBlockParams) params).getGenerateEntities()
6691	params instanceof EntityBlockParams
6692	this.backgroundPaint != null
6693	container == null
6694	val instanceof BlockResult
6695	sec != null
6695	ec != null
6696	obj == this
6697	obj instanceof LegendTitle
6698	super.equals(obj)
6699	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
6700	this.legendItemGraphicEdge != that.legendItemGraphicEdge
6701	this.legendItemGraphicAnchor != that.legendItemGraphicAnchor
6702	this.legendItemGraphicLocation != that.legendItemGraphicLocation
6703	this.itemFont.equals(that.itemFont)
6704	this.itemPaint.equals(that.itemPaint)
6705	this.hLayout.equals(that.hLayout)
6706	this.vLayout.equals(that.vLayout)
2110	obj == this
2111	obj instanceof LengthAdjustmentType
2112	this.name.equals(that.name)
2113	this.equals(LengthAdjustmentType.NO_CHANGE)
2114	this.equals(LengthAdjustmentType.EXPAND)
2115	this.equals(LengthAdjustmentType.CONTRACT)
6790	this == obj
6791	obj instanceof LengthConstraintType
6792	this.name.equals(that.toString())
6793	this.equals(LengthConstraintType.NONE)
6794	this.equals(LengthConstraintType.RANGE)
6795	this.equals(LengthConstraintType.FIXED)
8844	dataset != null
8845	orientation == PlotOrientation.HORIZONTAL
8846	orientation == PlotOrientation.VERTICAL
8847	columns > 1
8848	rows > 1
8849	(rows * columns) > 0
8850	orientation == PlotOrientation.HORIZONTAL
8851	seriesCount < 0
8852	seriesCount > 1
8853	visibleRow < 0
8854	dataValue == null
8855	orientation == PlotOrientation.HORIZONTAL
8856	generator != null
8856	isItemLabelVisible(row, column, selected)
8857	entities != null
8858	categories > 1
8859	obj == this
8860	obj instanceof LevelRenderer
8861	this.itemMargin != that.itemMargin
8862	this.maxItemWidth != that.maxItemWidth
6007	this == obj
6008	getClass() != obj.getClass()
6008	obj == null
6009	this.name.equals(library.name)
6009	this.name != null ? !this.name.equals(library.name) : library.name != null
6006	singleton == null
8216	flag != null
8217	flag != null
8218	flag != null
8219	margin >= 1.0
8219	margin < 0.0
8220	cp == null
8221	isSeriesVisibleInLegend(series)
8221	isSeriesVisible(series)
8222	getLegendItemToolTipGenerator() != null
8223	getLegendItemURLGenerator() != null
8224	labelPaint != null
8225	getItemVisible(row, column)
8226	getItemShapeVisible(row, column)
8226	getItemLineVisible(row, column)
8227	v == null
8228	visibleRow < 0
8229	this.useSeriesOffset
8230	getItemLineVisible(row, column)
8230	pass == 0
8231	column != 0
8232	previousValue != null
8233	this.useSeriesOffset
8234	orientation == PlotOrientation.HORIZONTAL
8235	orientation == PlotOrientation.VERTICAL
8236	pass == 1
8237	orientation == PlotOrientation.HORIZONTAL
8238	orientation == PlotOrientation.VERTICAL
8239	getItemShapeVisible(row, column)
8240	getItemShapeFilled(row, column)
8241	this.useFillPaint
8242	this.drawOutlines
8243	this.useOutlinePaint
8244	isItemLabelVisible(row, column, selected)
8245	orientation == PlotOrientation.HORIZONTAL
8246	orientation == PlotOrientation.VERTICAL
8247	entities != null
8248	obj == this
8249	obj instanceof LineAndShapeRenderer
8250	this.baseLinesVisible != that.baseLinesVisible
8251	ObjectUtilities.equal(this.seriesLinesVisible, that.seriesLinesVisible)
8252	this.baseShapesVisible != that.baseShapesVisible
8253	ObjectUtilities.equal(this.seriesShapesVisible, that.seriesShapesVisible)
8254	ObjectUtilities.equal(this.seriesShapesFilled, that.seriesShapesFilled)
8255	this.baseShapesFilled != that.baseShapesFilled
8256	this.useOutlinePaint != that.useOutlinePaint
8257	this.useSeriesOffset != that.useSeriesOffset
8258	this.itemMargin != that.itemMargin
6707	paint == null
6708	stroke == null
6709	insets == null
6710	w <= 0.0
6710	h <= 0.0
6711	t > 0.0
6712	b > 0.0
6713	l > 0.0
6714	r > 0.0
6715	obj == this
6716	obj instanceof LineBorder
6717	PaintUtilities.equal(this.paint, that.paint)
6718	ObjectUtilities.equal(this.stroke, that.stroke)
6719	this.insets.equals(that.insets)
104	obj instanceof LineFunction2D
105	this.a != that.a
106	this.b != that.b
5349	angle != 0
5349	rotate != null
5350	obj == this
5351	obj instanceof LineNeedle
8111	paint == null
8112	backgroundPaint != null
8113	backgroundImage != null
8114	outlinePaint != null
8114	outlineStroke != null
8115	orientation == PlotOrientation.HORIZONTAL
8116	orientation == PlotOrientation.VERTICAL
8117	range.contains(value)
8118	orientation == PlotOrientation.HORIZONTAL
8119	orientation == PlotOrientation.VERTICAL
8120	marker instanceof ValueMarker
8121	range.contains(value)
8122	orientation == PlotOrientation.HORIZONTAL
8123	orientation == PlotOrientation.VERTICAL
8124	getItemVisible(row, column)
8125	v == null
8126	orientation == PlotOrientation.HORIZONTAL
8127	orientation == PlotOrientation.VERTICAL
8128	getItemLineVisible(row, column)
8129	column != 0
8130	previousValue != null
8131	orientation == PlotOrientation.HORIZONTAL
8132	orientation == PlotOrientation.VERTICAL
8133	isItemLabelVisible(row, column, selected)
8134	entities != null
8135	obj == this
8136	obj instanceof LineRenderer3D
8137	this.xOffset != that.xOffset
8138	this.yOffset != that.yOffset
8139	PaintUtilities.equal(this.wallPaint, that.wallPaint)
2016	(f1 & f2) != 0
2017	f1 != 0
2018	(f1 & Rectangle2D.OUT_LEFT) == Rectangle2D.OUT_LEFT
2018	dx != 0.0
2019	(f1 & Rectangle2D.OUT_RIGHT) == Rectangle2D.OUT_RIGHT
2019	dx != 0.0
2020	dy != 0.0
2020	(f1 & Rectangle2D.OUT_BOTTOM) == Rectangle2D.OUT_BOTTOM
2021	dy != 0.0
2021	(f1 & Rectangle2D.OUT_TOP) == Rectangle2D.OUT_TOP
2022	f2 != 0
2023	(f2 & Rectangle2D.OUT_LEFT) == Rectangle2D.OUT_LEFT
2023	dx != 0.0
2024	dx != 0.0
2024	(f2 & Rectangle2D.OUT_RIGHT) == Rectangle2D.OUT_RIGHT
2025	(f2 & Rectangle2D.OUT_BOTTOM) == Rectangle2D.OUT_BOTTOM
2025	dy != 0.0
2026	dy != 0.0
2026	(f2 & Rectangle2D.OUT_TOP) == Rectangle2D.OUT_TOP
4275	base <= 1.0
4276	value <= 0.0
4277	unit == null
4278	turnOffAutoSelect
4279	notify
4280	RectangleEdge.isTopOrBottom(edge)
4281	RectangleEdge.isLeftOrRight(edge)
4282	isInverted()
4283	RectangleEdge.isTopOrBottom(edge)
4284	RectangleEdge.isLeftOrRight(edge)
4285	isInverted()
4286	isAutoRange()
4287	plot == null
4288	plot instanceof ValueAxisPlot
4289	r == null
4290	fixedAutoRange > 0.0
4291	range < minRange
4292	isVisible()
4293	RectangleEdge.isTopOrBottom(edge)
4294	RectangleEdge.isLeftOrRight(edge)
4295	edge == RectangleEdge.TOP
4296	isAutoTickUnitSelection()
4297	range.contains(v)
4298	range.contains(minorV)
4299	edge == RectangleEdge.RIGHT
4300	isAutoTickUnitSelection()
4301	range.contains(v)
4302	range.contains(minorV)
4303	RectangleEdge.isTopOrBottom(edge)
4304	RectangleEdge.isLeftOrRight(edge)
4305	tickLabelWidth > unit2Width
4306	tickLabelHeight > unit2Height
4307	isVerticalTickLabels()
4308	formatter != null
4309	isInverted()
4310	this.numberFormatOverride != null
4311	obj == this
4312	obj instanceof LogAxis
4313	this.base != that.base
4314	this.smallestValue != that.smallestValue
4315	this.numberFormatOverride != null
1801	baseLabel == null
1802	powerLabel == null
1803	format == null
1804	this.showBase
1805	this.showBase
1806	obj == this
1807	obj instanceof LogFormat
1808	this.base != that.base
1809	this.baseLabel.equals(that.baseLabel)
1810	this.baseLog != that.baseLog
1811	this.showBase != that.showBase
1812	this.formatter.equals(that.formatter)
5091	this.numberFormatterObj instanceof DecimalFormat
5092	negFlag
5093	val < 10.0
5094	negFlag
5095	val < 1.0
5096	this.allowNegativesFlag
5097	lower > 10.0
5098	lower < -10.0
5099	lower > 0.0
5100	this.allowNegativesFlag
5101	upper > 10.0
5102	upper < -10.0
5103	upper > 0.0
5104	plot == null
5105	plot instanceof ValueAxisPlot
5106	r == null
5107	this.strictValuesFlag
5107	lower <= 0.0
5107	this.allowNegativesFlag
5108	(lowerMargin = getLowerMargin()) > 0.0
5108	lower > 0.0
5109	(logAbs = Math.abs(logLower)) < 1.0
5110	this.autoRangeNextLogFlag
5111	this.allowNegativesFlag
5111	lower < SMALL_LOG_VALUE
5111	lower >= 0.0
5112	upper > 0.0
5112	(upperMargin = getUpperMargin()) > 0.0
5113	(logAbs = Math.abs(logUpper)) < 1.0
5114	upper > 0.0
5114	upper < 1.0
5114	this.allowNegativesFlag
5114	lower > 0.0
5115	upper - lower < minRange
5116	upper - lower < minRange
5117	RectangleEdge.isTopOrBottom(edge)
5118	RectangleEdge.isLeftOrRight(edge)
5119	isInverted()
5120	RectangleEdge.isTopOrBottom(edge)
5121	RectangleEdge.isLeftOrRight(edge)
5122	isInverted()
5123	isInverted()
5124	this.smallLogFlag
5124	lowerBoundVal < SMALL_LOG_VALUE
5125	iBegCount == iEndCount
5125	iBegCount > 0
5125	Math.pow(10, iBegCount) > lowerBoundVal
5126	this.smallLogFlag
5127	this.expTickLabelsFlag
5127	i < 0
5127	currentTickValue > 0.0
5127	currentTickValue < 1.0
5128	j == 0
5128	j < 2
5128	currentTickValue >= upperBoundVal
5128	i > -4
5129	zeroTickFlag
5130	zeroTickFlag
5131	Math.abs(currentTickValue - 1.0) < 0.0001
5131	upperBoundVal >= 0.0
5131	lowerBoundVal <= 0.0
5132	currentTickValue > upperBoundVal
5133	currentTickValue >= lowerBoundVal - SMALL_LOG_VALUE
5134	isVerticalTickLabels()
5135	edge == RectangleEdge.TOP
5136	edge == RectangleEdge.TOP
5137	lowerBoundVal < SMALL_LOG_VALUE
5137	this.smallLogFlag
5138	iBegCount == iEndCount
5138	iBegCount > 0
5138	Math.pow(10, iBegCount) > lowerBoundVal
5139	i == iEndCount
5140	this.smallLogFlag
5141	j == 0
5142	this.log10TickLabelsFlag
5143	this.expTickLabelsFlag
5144	i >= 0
5145	format != null
5146	zeroTickFlag
5147	j == 0
5148	zeroTickFlag
5149	Math.abs(tickVal - 1.0) < 0.0001
5149	i < iEndCount
5149	i > iBegCount
5150	this.log10TickLabelsFlag
5151	this.expTickLabelsFlag
5152	format != null
5153	tickVal > upperBoundVal
5154	tickVal >= lowerBoundVal - SMALL_LOG_VALUE
5155	isVerticalTickLabels()
5156	edge == RectangleEdge.LEFT
5157	edge == RectangleEdge.LEFT
5158	forceFmtFlag
5158	this.expTickLabelsFlag
5317	y < minY
5318	rotate != null
5318	angle != 0
5319	getHighlightPaint() != null
5320	getFillPaint() != null
5321	getOutlinePaint() != null
5322	obj == this
5323	obj instanceof LongNeedle
8887	lowerBound >= upperBound
8888	defaultPaint == null
8889	index >= 0
8890	value < this.lowerBound
8891	value > this.upperBound
8892	count == 0
8893	value < item.value
8894	value >= item.value
8895	high > low
8896	value < item.value
8897	obj == this
8898	obj instanceof LookupPaintScale
8899	this.lowerBound != that.lowerBound
8900	this.upperBound != that.upperBound
8901	PaintUtilities.equal(this.defaultPaint, that.defaultPaint)
8902	this.lookupTable.equals(that.lookupTable)
3844	paint == null
3845	stroke == null
3846	alpha < 0.0f
3846	alpha > 1.0f
3847	paint == null
3848	stroke == null
3849	alpha > 1.0f
3849	alpha < 0.0f
3850	font == null
3851	paint == null
3852	anchor == null
3853	offset == null
3854	adj == null
3855	anchor == null
3856	listeners[i] == MarkerChangeListener.class
3857	obj == this
3858	obj instanceof Marker
3859	PaintUtilities.equal(this.paint, that.paint)
3860	ObjectUtilities.equal(this.stroke, that.stroke)
3861	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
3862	ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)
3863	this.alpha != that.alpha
3864	ObjectUtilities.equal(this.label, that.label)
3865	ObjectUtilities.equal(this.labelFont, that.labelFont)
3866	PaintUtilities.equal(this.labelPaint, that.labelPaint)
3867	this.labelAnchor != that.labelAnchor
3868	this.labelTextAnchor != that.labelTextAnchor
3869	ObjectUtilities.equal(this.labelOffset, that.labelOffset)
3870	this.labelOffsetType.equals(that.labelOffsetType)
4741	this.markers.size() > 0
4742	r.getWidth() < bounds.getWidth()
4743	obj == this
4744	obj instanceof MarkerAxisBand
4745	this.topOuterGap != that.topOuterGap
4746	this.topInnerGap != that.topInnerGap
4747	this.bottomInnerGap != that.bottomInnerGap
4748	this.bottomOuterGap != that.bottomOuterGap
4749	ObjectUtilities.equal(this.font, that.font)
4750	ObjectUtilities.equal(this.markers, that.markers)
523	obj == this
524	obj instanceof MatrixSeries
525	getRowCount() == that.getRowCount()
526	getColumnsCount() == that.getColumnsCount()
527	get(r, c) != that.get(r, c)
444	series != null
445	seriesIndex < 0
445	seriesIndex > getSeriesCount()
446	series == null
447	obj == null
448	obj == this
449	obj instanceof MatrixSeriesCollection
450	series == null
451	this.seriesList.contains(series)
452	seriesIndex > getSeriesCount()
452	seriesIndex < 0
686	this.mean != null
687	this.standardDeviation != null
688	obj == this
689	obj instanceof MeanAndStandardDeviation
690	ObjectUtilities.equal(this.mean, that.mean)
691	ObjectUtilities.equal( this.standardDeviation, that.standardDeviation)
3047	label == null
3048	range == null
3049	obj == this
3050	obj instanceof MeterInterval
3051	this.label.equals(that.label)
3052	this.range.equals(that.range)
3053	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
3054	ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)
3055	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
5329	p != null
5330	s != null
5331	p != null
5332	p != null
5333	this.fillPaint != null
5334	this.outlinePaint != null
5335	obj == this
5336	obj instanceof MeterNeedle
5337	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
5338	ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)
5339	PaintUtilities.equal(this.fillPaint, that.fillPaint)
5340	PaintUtilities.equal(this.highlightPaint, that.highlightPaint)
5341	this.size != that.size
5342	this.rotateX != that.rotateX
5343	this.rotateY != that.rotateY
2882	shape == null
2883	angle > 360
2883	angle < 1
2884	range == null
2885	range.getLength() > 0.0
2886	size <= 0
2887	paint == null
2888	paint == null
2889	this.tickLabelsVisible != visible
2890	font == null
2891	this.tickLabelFont.equals(font)
2892	paint == null
2893	this.tickLabelPaint.equals(paint)
2894	format == null
2895	font == null
2896	paint == null
2897	existing != null
2898	dataset != null
2899	interval == null
2900	color == null
2901	info != null
2902	this.drawBorder
2903	data != null
2904	this.dialBackgroundPaint != null
2905	n != null
2906	this.range.contains(value)
2907	valueAngle > 135
2907	valueAngle > -45
2907	valueAngle < 45
2907	valueAngle < 225
2908	this.drawBorder
2909	backgroundPaint != null
2910	outlinePaint != null
2911	outlineStroke != null
2912	stroke != null
2912	paint != null
2913	paint == null
2914	this.shape == DialShape.PIE
2915	this.shape == DialShape.CHORD
2916	dial
2916	this.meterAngle > 180
2917	this.shape == DialShape.CIRCLE
2918	dial
2919	label
2919	this.tickLabelsVisible
2920	valueAngle == 270
2920	valueAngle == 90
2921	valueAngle > 270
2921	valueAngle < 90
2922	valueAngle > 135
2922	valueAngle < 225
2922	valueAngle < 45
2922	valueAngle > 315
2923	this.dataset != null
2924	n != null
2925	obj == this
2926	obj instanceof MeterPlot
2927	super.equals(obj)
2928	ObjectUtilities.equal(this.units, that.units)
2929	ObjectUtilities.equal(this.range, that.range)
2930	ObjectUtilities.equal(this.intervals, that.intervals)
2931	PaintUtilities.equal(this.dialOutlinePaint, that.dialOutlinePaint)
2932	this.shape != that.shape
2933	PaintUtilities.equal(this.dialBackgroundPaint, that.dialBackgroundPaint)
2934	PaintUtilities.equal(this.needlePaint, that.needlePaint)
2935	ObjectUtilities.equal(this.valueFont, that.valueFont)
2936	PaintUtilities.equal(this.valuePaint, that.valuePaint)
2937	PaintUtilities.equal(this.tickPaint, that.tickPaint)
2938	this.tickSize != that.tickSize
2939	this.tickLabelsVisible != that.tickLabelsVisible
2940	ObjectUtilities.equal(this.tickLabelFont, that.tickLabelFont)
2941	PaintUtilities.equal(this.tickLabelPaint, that.tickLabelPaint)
2942	ObjectUtilities.equal(this.tickLabelFormat, that.tickLabelFormat)
2943	this.drawBorder != that.drawBorder
2944	this.meterAngle != that.meterAngle
2945	this.dataset != null
2946	clone.dataset != null
5324	lenX < 2
5325	rotate != null
5325	angle != 0
5326	object == null
5327	object == this
5328	object instanceof MiddlePinNeedle
5328	super.equals(object)
1338	this.millisecond != FIRST_MILLISECOND_IN_SECOND
1339	previous != null
1340	this.millisecond != LAST_MILLISECOND_IN_SECOND
1341	next != null
1342	obj == this
1343	obj instanceof Millisecond
1344	this.millisecond != that.millisecond
1345	this.second != that.second
1346	this.minute != that.minute
1347	this.hour != that.hour
1348	this.day.equals(that.day)
1349	obj instanceof Millisecond
1350	difference > 0
1351	difference < 0
1352	obj instanceof RegularTimePeriod
8342	this.plotLines != draw
8343	paint == null
8344	stroke == null
8345	icon == null
8346	icon == null
8347	icon == null
8348	value != null
8349	orient == PlotOrientation.VERTICAL
8350	this.lastCategory == column
8351	this.min > value.doubleValue()
8352	this.max < value.doubleValue()
8353	dataset.getRowCount() - 1 == row
8354	orient == PlotOrientation.VERTICAL
8355	this.plotLines
8356	column != 0
8357	previousValue != null
8358	orient == PlotOrientation.VERTICAL
8359	shape != null
8359	entities != null
8360	obj == this
8361	obj instanceof MinMaxCategoryRenderer
8362	this.plotLines != that.plotLines
8363	PaintUtilities.equal(this.groupPaint, that.groupPaint)
8364	this.groupStroke.equals(that.groupStroke)
1041	hour == null
1042	time == null
1043	zone == null
1044	this.minute != FIRST_MINUTE_IN_HOUR
1045	h != null
1046	this.minute != LAST_MINUTE_IN_HOUR
1047	nextHour != null
1048	obj == this
1049	obj instanceof Minute
1050	this.minute != that.minute
1051	this.hour != that.hour
1052	o1 instanceof Minute
1053	result == 0
1054	o1 instanceof RegularTimePeriod
1055	day != null
1056	hour <= 23
1056	hour >= 0
1057	minute <= 59
1057	minute >= 0
4892	this.displayStart < this.displayEnd
4893	this.displayStart < this.displayEnd
4894	v > cutoff
4895	RectangleEdge.isTopOrBottom(edge)
4896	RectangleEdge.isLeftOrRight(edge)
4897	isInverted()
4898	RectangleEdge.isTopOrBottom(edge)
4899	RectangleEdge.isLeftOrRight(edge)
4900	isInverted()
4901	RectangleEdge.isTopOrBottom(edge)
4902	RectangleEdge.isLeftOrRight(edge)
4903	isInverted()
4904	value < lower
4905	this.displayStart < this.displayEnd
4906	this.displayStart < this.displayEnd
4907	percent > 0.0
4908	this.displayEnd > this.displayStart
4909	RectangleEdge.isLeftOrRight(edge)
4910	obj == this
4911	obj instanceof ModuloAxis
4912	this.displayStart != that.displayStart
4913	this.displayEnd != that.displayEnd
4914	this.fixedRange.equals(that.fixedRange)
1418	month > 12
1418	month < 1
1419	month < 1
1419	month > 12
1420	this.month != MonthConstants.JANUARY
1421	this.year > 1900
1422	this.month != MonthConstants.DECEMBER
1423	this.year < 9999
1424	obj == this
1425	obj instanceof Month
1426	this.month != that.month
1427	this.year != that.year
1428	o1 instanceof Month
1429	result == 0
1430	o1 instanceof RegularTimePeriod
1431	s == null
1432	i == -1
1433	y1 == null
1434	y2 == null
1435	yearIsFirst
1436	month == -1
1437	year == null
1438	result == -1
1439	result == -1
1440	result == -1
5211	locale == null
5212	chars > 0
5213	this.showYear[month]
5214	obj == this
5215	obj instanceof MonthDateFormat
5216	super.equals(obj)
5217	Arrays.equals(this.months, that.months)
5218	Arrays.equals(this.showYear, that.showYear)
5219	this.yearFormatter.equals(that.yearFormatter)
5296	chart == null
5297	plot instanceof Zoomable
5298	pinfo.getDataArea().contains(p)
5299	clicks < 0
5300	clicks > 0
5301	direction > 0
5302	direction < 0
1158	source == null
1159	periodCount < 1
1160	source == null
1161	periodCount < 1
1162	source.getItemCount() > 0
1163	serial >= firstSerial
1164	(i - offset) >= 0
1165	currentIndex > serialLimit
1166	v != null
1167	n > 0
1168	source == null
1169	pointCount < 2
1170	i > pointCount - 1
1171	i == pointCount - 1
1172	source == null
1173	source == null
1174	period < Double.MIN_VALUE
1175	skip < 0.0
1176	source.getItemCount(series) > 0
1177	x >= first
1178	(i - offset) >= 0
1179	xx > limit
1180	yy != null
1181	n > 0
3056	this.dataset != null
3057	dataset != null
3058	pieChart == null
3059	pieChart.getPlot() instanceof PiePlot
3060	order == null
3061	key == null
3062	paint == null
3063	shape == null
3064	DatasetUtilities.isEmptyOrNull(this.dataset)
3065	this.dataExtractOrder == TableOrder.BY_ROW
3066	displayCols > displayRows
3066	area.getWidth() < area.getHeight()
3067	this.dataExtractOrder == TableOrder.BY_ROW
3068	this.limit > 0.0
3069	key.equals(this.aggregatedItemsKey)
3070	info != null
3071	info != null
3072	column == displayCols
3073	row == displayRows - 1
3073	diff != 0
3074	this.dataExtractOrder == TableOrder.BY_ROW
3075	p == null
3076	p == null
3077	p == null
3078	p == null
3079	this.dataset == null
3080	this.dataExtractOrder == TableOrder.BY_ROW
3081	this.dataExtractOrder == TableOrder.BY_COLUMN
3082	keys == null
3083	this.limit > 0.0
3084	obj == this
3085	obj instanceof MultiplePiePlot
3086	this.dataExtractOrder != that.dataExtractOrder
3087	this.limit != that.limit
3088	this.aggregatedItemsKey.equals(that.aggregatedItemsKey)
3089	PaintUtilities.equal(this.aggregatedItemsPaint, that.aggregatedItemsPaint)
3090	ObjectUtilities.equal(this.pieChart, that.pieChart)
3091	ShapeUtilities.equal(this.legendItemShape, that.legendItemShape)
3092	super.equals(obj)
2294	format == null
2295	labelList == null
2296	dataset == null
2297	extraLabels != null
2298	entry instanceof PublicCloneable
2299	obj == this
2300	obj instanceof MultipleXYSeriesLabelGenerator
2301	this.formatPattern.equals(that.formatPattern)
2302	this.additionalFormatPattern.equals( that.additionalFormatPattern)
2303	this.seriesLabelLists.equals(that.seriesLabelLists)
100	std <= 0
101	obj instanceof NormalDistributionFunction2D
102	this.mean != that.mean
103	this.std != that.std
4492	rangeType == null
4493	this.autoRangeIncludesZero != flag
4494	isAutoRange()
4495	this.autoRangeStickyZero != flag
4496	isAutoRange()
4497	unit == null
4498	turnOffAutoSelect
4499	notify
4500	isAutoRange()
4501	plot == null
4502	plot instanceof ValueAxisPlot
4503	r == null
4504	this.rangeType == RangeType.POSITIVE
4505	this.rangeType == RangeType.NEGATIVE
4506	getAutoRangeIncludesZero()
4507	fixedAutoRange > 0.0
4508	range < minRange
4509	lower == upper
4510	this.rangeType == RangeType.POSITIVE
4511	lower < 0.0
4512	this.rangeType == RangeType.NEGATIVE
4513	upper > 0.0
4514	getAutoRangeStickyZero()
4515	upper <= 0.0
4516	lower >= 0.0
4517	RectangleEdge.isTopOrBottom(edge)
4518	RectangleEdge.isLeftOrRight(edge)
4519	isInverted()
4520	RectangleEdge.isTopOrBottom(edge)
4521	RectangleEdge.isLeftOrRight(edge)
4522	isInverted()
4523	isVisible()
4524	isVerticalTickLabels()
4525	formatter != null
4526	RectangleEdge.isTopOrBottom(edge)
4527	RectangleEdge.isLeftOrRight(edge)
4528	tickLabelWidth > unit2Width
4529	tickLabelHeight > unit2Height
4530	RectangleEdge.isTopOrBottom(edge)
4531	RectangleEdge.isLeftOrRight(edge)
4532	isAutoTickUnitSelection()
4533	count <= ValueAxis.MAXIMUM_TICK_COUNT
4534	minorTickSpaces <= 0
4535	getRange().contains(minorTickValue)
4536	formatter != null
4537	isVerticalTickLabels()
4538	edge == RectangleEdge.TOP
4539	edge == RectangleEdge.TOP
4540	getRange().contains(minorTickValue)
4541	isAutoTickUnitSelection()
4542	count <= ValueAxis.MAXIMUM_TICK_COUNT
4543	minorTickSpaces <= 0
4544	getRange().contains(minorTickValue)
4545	formatter != null
4546	isVerticalTickLabels()
4547	edge == RectangleEdge.LEFT
4548	edge == RectangleEdge.LEFT
4549	getRange().contains(minorTickValue)
4550	this.numberFormatOverride != null
4551	obj == this
4552	obj instanceof NumberAxis
4553	this.autoRangeIncludesZero != that.autoRangeIncludesZero
4554	this.autoRangeStickyZero != that.autoRangeStickyZero
4555	ObjectUtilities.equal(this.tickUnit, that.tickUnit)
4556	ObjectUtilities.equal(this.numberFormatOverride, that.numberFormatOverride)
4557	this.rangeType.equals(that.rangeType)
4558	getLabel() != null
5074	isVisible()
5075	plot instanceof CategoryPlot
5076	r instanceof Effect3D
5077	edge == RectangleEdge.BOTTOM
5077	edge == RectangleEdge.LEFT
5078	edge == RectangleEdge.RIGHT
5078	edge == RectangleEdge.TOP
1980	value != null
1981	isSelected
5220	formatter == null
5221	formatter == null
5222	obj == this
5223	obj instanceof NumberTickUnit
5224	super.equals(obj)
5225	this.formatter.equals(that.formatter)
1235	obj == this
1236	obj instanceof OHLC
1237	this.open != that.open
1238	this.close != that.close
1239	this.high != that.high
1240	this.low != that.low
320	date == null
321	obj == this
322	obj instanceof OHLCDataItem
323	this.date.equals(that.date)
324	this.high.equals(that.high)
325	this.low.equals(that.low)
326	this.open.equals(that.open)
327	this.close.equals(that.close)
328	object instanceof OHLCDataItem
1229	ohlc != null
1230	ohlc != null
1231	ohlc != null
1232	ohlc != null
1233	getItemCount() > 0
1234	period.getClass().equals(item0.getPeriod().getClass())
1216	anchor == null
1217	series == null
1218	series >= getSeriesCount()
1218	series < 0
1219	this.xPosition == TimePeriodAnchor.START
1220	this.xPosition == TimePeriodAnchor.MIDDLE
1221	this.xPosition == TimePeriodAnchor.END
1222	series != null
1223	series == null
1224	removed
1225	this.data.size() == 0
1226	obj == this
1227	obj instanceof OHLCSeriesCollection
1228	this.xPosition.equals(that.xPosition)
1867	o1 == o2
1868	o1 != null
1869	object != null
1870	object == null
1871	object instanceof PublicCloneable
1872	Modifier.isPublic(method.getModifiers())
1873	collection == null
1874	item != null
1875	classLoader != null
1876	"ThreadContext".equals(classLoaderSource)
1877	threadLoader != null
1878	applicationCL == null
1879	cl == null
1880	cl == null
1881	name.startsWith("/")
1882	index == -1
1883	url == null
1884	url == null
1885	type.isAssignableFrom(c)
1886	loader != null
1887	version == null
1888	version == null
7073	p1.equals(p2)
7074	p1.getX() < p2.getX()
7074	p1.getY() < p2.getY()
7075	obj == this
7076	obj instanceof Outlier
7077	this.point.equals(that.point)
7078	this.radius != that.radius
9090	other == null
7070	this.outlierLists.isEmpty()
7071	list.isOverlapped(outlier)
7072	updated
1932	obj == null
1933	obj == this
1934	obj instanceof PaintList
1935	PaintUtilities.equal(getPaint(i), that.getPaint(i))
1936	size > 0
1937	size > 1
1938	size > 2
1939	paint != null
1940	index != -1
1926	key == null
1927	key == null
1928	obj == this
1929	obj instanceof PaintMap
1930	this.store.size() != that.store.size()
1931	PaintUtilities.equal(p1, p2)
6468	axis == null
6469	scale == null
6470	axis == null
6471	location == null
6472	paint == null
6473	stroke == null
6474	count <= 0
6475	this.axis == event.getAxis()
6476	w == LengthConstraintType.NONE
6477	h == LengthConstraintType.NONE
6478	h == LengthConstraintType.RANGE
6479	h == LengthConstraintType.FIXED
6480	w == LengthConstraintType.RANGE
6481	h == LengthConstraintType.NONE
6482	h == LengthConstraintType.RANGE
6483	h == LengthConstraintType.FIXED
6484	w == LengthConstraintType.FIXED
6485	h == LengthConstraintType.NONE
6486	h == LengthConstraintType.RANGE
6487	h == LengthConstraintType.FIXED
6488	position == RectangleEdge.TOP
6488	position == RectangleEdge.BOTTOM
6489	position == RectangleEdge.RIGHT
6489	position == RectangleEdge.LEFT
6490	this.backgroundPaint != null
6491	RectangleEdge.isTopOrBottom(getPosition())
6492	axisEdge == RectangleEdge.TOP
6493	isStripOutlineVisible()
6494	axisEdge == RectangleEdge.BOTTOM
6495	isStripOutlineVisible()
6496	axisEdge == RectangleEdge.LEFT
6497	isStripOutlineVisible()
6498	axisEdge == RectangleEdge.RIGHT
6499	isStripOutlineVisible()
6500	obj instanceof PaintScaleLegend
6501	this.scale.equals(that.scale)
6502	this.axis.equals(that.axis)
6503	this.axisLocation.equals(that.axisLocation)
6504	this.axisOffset != that.axisOffset
6505	this.stripWidth != that.stripWidth
6506	this.stripOutlineVisible != that.stripOutlineVisible
6507	PaintUtilities.equal(this.stripOutlinePaint, that.stripOutlinePaint)
6508	this.stripOutlineStroke.equals(that.stripOutlineStroke)
6509	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
6510	this.subdivisions != that.subdivisions
1946	p1 == null
1947	p2 == null
1948	p2 instanceof GradientPaint
1948	p1 instanceof GradientPaint
1949	Modifier.isPublic(f.getModifiers())
1949	Modifier.isFinal(f.getModifiers())
1949	Modifier.isStatic(f.getModifiers())
1950	oColor instanceof Color
1951	c.equals(oColor)
1952	value == null
5453	plot instanceof Pannable
5454	pannable.isRangePannable()
5454	pannable.isDomainPannable()
5455	screenDataArea != null
5455	screenDataArea.contains( e.getPoint())
5456	this.panLast == null
5457	dx == 0.0
5457	dy == 0.0
5458	p.getOrientation() == PlotOrientation.VERTICAL
5459	this.panLast != null
4340	timeZone == null
4341	locale == null
4342	first == null
4343	last == null
4344	zone == null
4345	c == null
4346	c == null
4347	c == null
4348	stroke == null
4349	paint == null
4350	this.isAutoRange()
4351	space == null
4352	isVisible()
4353	dimension > 0.0
4354	RectangleEdge.isTopOrBottom(edge)
4355	RectangleEdge.isLeftOrRight(edge)
4356	isTickMarksVisible()
4357	this.minorTickMarksVisible
4358	isAxisLineVisible()
4359	isTickMarksVisible()
4360	isTickLabelsVisible()
4361	RectangleEdge.isTopOrBottom(edge)
4362	RectangleEdge.isLeftOrRight(edge)
4363	edge == RectangleEdge.TOP
4364	edge == RectangleEdge.BOTTOM
4365	t0 >= firstOnAxis
4366	this.minorTickMarksVisible
4367	edge == RectangleEdge.TOP
4368	edge == RectangleEdge.BOTTOM
4369	tt0 >= firstOnAxis
4370	edge == RectangleEdge.TOP
4371	edge == RectangleEdge.BOTTOM
4372	edge == RectangleEdge.BOTTOM
4373	edge == RectangleEdge.TOP
4374	isInverted()
4375	edge == RectangleEdge.TOP
4376	last > axisMax
4377	(x + bb.getWidth() / 2) > dataArea.getMaxX()
4378	bb.getWidth() < (dataArea.getMaxX() - xstart)
4379	first < axisMin
4380	(x - bb.getWidth() / 2) < dataArea.getX()
4381	bb.getWidth() < (xlast - dataArea.getX())
4382	label != null
4383	lastXX > 0L
4384	this.labelInfo[band].getDrawDividers()
4385	b != null
4386	edge == RectangleEdge.BOTTOM
4387	edge == RectangleEdge.TOP
4388	RectangleEdge.isTopOrBottom(edge)
4389	isInverted()
4390	RectangleEdge.isLeftOrRight(edge)
4391	isInverted()
4392	RectangleEdge.isTopOrBottom(edge)
4393	RectangleEdge.isLeftOrRight(edge)
4394	isInverted()
4395	plot == null
4396	plot instanceof ValueAxisPlot
4397	r == null
4398	obj == this
4399	obj instanceof PeriodAxis
4400	this.first.equals(that.first)
4401	this.last.equals(that.last)
4402	this.timeZone.equals(that.timeZone)
4403	this.locale.equals(that.locale)
4404	this.autoRangeTimePeriodClass.equals( that.autoRangeTimePeriodClass)
4405	isMinorTickMarksVisible() == that.isMinorTickMarksVisible()
4406	this.majorTickTimePeriodClass.equals( that.majorTickTimePeriodClass)
4407	this.minorTickTimePeriodClass.equals( that.minorTickTimePeriodClass)
4408	this.minorTickMarkPaint.equals(that.minorTickMarkPaint)
4409	this.minorTickMarkStroke.equals(that.minorTickMarkStroke)
4410	Arrays.equals(this.labelInfo, that.labelInfo)
4411	getLabel() != null
5182	periodClass == null
5183	dateFormat == null
5184	padding == null
5185	labelFont == null
5186	labelPaint == null
5187	dividerStroke == null
5188	dividerPaint == null
5189	obj == this
5190	obj instanceof PeriodAxisLabelInfo
5191	info.periodClass.equals(this.periodClass)
5192	info.dateFormat.equals(this.dateFormat)
5193	info.padding.equals(this.padding)
5194	info.labelFont.equals(this.labelFont)
5195	info.labelPaint.equals(this.labelPaint)
5196	info.drawDividers != this.drawDividers
5197	info.dividerStroke.equals(this.dividerStroke)
5198	info.dividerPaint.equals(this.dividerPaint)
28	current != this
29	qName.equals(PIEDATASET_TAG)
30	qName.equals(ITEM_TAG)
31	current != this
3163	isOverlap()
3164	isOverlap()
3165	isOverlap()
3166	y > plr.getLowerY()
3167	lower < upper - 1
3168	r1.getLowerY() < r0.getUpperY()
3169	r2.getUpperY() > r3.getLowerY()
3170	record1.getLowerY() < record0.getUpperY()
3171	record1.getUpperY() > record0.getLowerY()
3172	this.labels.size() > 1
3145	this == obj
3146	obj instanceof PieLabelLinkStyle
3147	this.name.equals(style.toString())
3148	this.equals(PieLabelLinkStyle.STANDARD)
3149	this.equals(PieLabelLinkStyle.QUAD_CURVE)
3150	this.equals(PieLabelLinkStyle.CUBIC_CURVE)
4099	obj instanceof PieLabelRecord
4100	this.baseY < plr.baseY
4101	this.baseY > plr.baseY
4102	obj == this
4103	obj instanceof PieLabelRecord
4104	this.key.equals(that.key)
4105	this.angle != that.angle
4106	this.gap != that.gap
4107	this.allocatedY != that.allocatedY
4108	this.baseY != that.baseY
4109	this.labelHeight != that.labelHeight
4110	this.linkPercent != that.linkPercent
4111	this.label.equals(that.label)
3695	dataset != null
3696	existing != null
3697	dataset != null
3698	direction == null
3699	percent > MAX_INTERIOR_GAP
3699	percent < 0.0
3700	this.interiorGap != percent
3701	notify
3702	result != null
3703	autoPopulate
3704	ds != null
3705	this.dataset != null
3706	section >= 0
3706	section < this.dataset.getItemCount()
3707	key == null
3708	notify
3709	paint == null
3710	result != null
3711	autoPopulate
3712	ds != null
3713	notify
3714	paint == null
3715	result != null
3716	autoPopulate
3717	ds != null
3718	notify
3719	stroke == null
3720	this.explodePercentages != null
3721	percent != null
3722	key == null
3723	this.explodePercentages == null
3724	this.dataset == null
3725	explode != null
3726	style == null
3727	paint == null
3728	stroke == null
3729	font == null
3730	paint == null
3731	padding == null
3732	offset == null
3733	distributor == null
3734	shape == null
3735	generator == null
3736	this.dataset != null
3737	info != null
3738	DatasetUtilities.isEmptyOrNull(this.dataset)
3739	this.simpleLabels
3739	this.labelGenerator != null
3740	DEBUG_DRAW_INTERIOR
3741	this.circular
3742	DEBUG_DRAW_LINK_AREA
3743	this.simpleLabels
3744	DEBUG_DRAW_PIE_AREA
3745	this.dataset != null
3745	this.dataset.getKeys().size() > 0
3746	n != null
3747	value > 0.0
3748	this.simpleLabels
3749	n == null
3750	this.direction == Rotation.CLOCKWISE
3751	this.direction == Rotation.ANTICLOCKWISE
3752	Math.abs(angle) > getMinimumArcAngleToDraw()
3753	mep > 0.0
3754	currentPass == 0
3755	this.shadowPaint != null
3756	currentPass == 1
3757	this.sectionOutlinesVisible
3758	state.getInfo() != null
3759	entities != null
3760	this.toolTipGenerator != null
3761	this.urlGenerator != null
3762	n == null
3763	include
3764	labelGenerator == null
3765	label == null
3766	this.labelShadowPaint != null
3767	this.labelBackgroundPaint != null
3768	this.labelOutlineStroke != null
3768	this.labelOutlinePaint != null
3769	n == null
3770	include
3771	Math.cos(Math.toRadians(mid)) < 0.0
3772	this.labelGenerator != null
3773	label != null
3774	label != null
3775	this.dataset == null
3776	n == null
3777	v == 0.0
3778	include
3779	label != null
3780	this.legendLabelToolTipGenerator != null
3781	this.legendLabelURLGenerator != null
3782	explodePercent == 0.0
3783	this.labelLinksVisible
3784	style.equals(PieLabelLinkStyle.STANDARD)
3785	style.equals(PieLabelLinkStyle.QUAD_CURVE)
3786	style.equals(PieLabelLinkStyle.CUBIC_CURVE)
3787	this.labelLinksVisible
3788	style.equals(PieLabelLinkStyle.STANDARD)
3789	style.equals(PieLabelLinkStyle.QUAD_CURVE)
3790	style.equals(PieLabelLinkStyle.CUBIC_CURVE)
3791	obj == this
3792	obj instanceof PiePlot
3793	super.equals(obj)
3794	this.pieIndex != that.pieIndex
3795	this.interiorGap != that.interiorGap
3796	this.circular != that.circular
3797	this.startAngle != that.startAngle
3798	this.direction != that.direction
3799	this.ignoreZeroValues != that.ignoreZeroValues
3800	this.ignoreNullValues != that.ignoreNullValues
3801	ObjectUtilities.equal(this.sectionPaintMap, that.sectionPaintMap)
3802	PaintUtilities.equal(this.baseSectionPaint, that.baseSectionPaint)
3803	this.sectionOutlinesVisible != that.sectionOutlinesVisible
3804	ObjectUtilities.equal(this.sectionOutlinePaintMap, that.sectionOutlinePaintMap)
3805	PaintUtilities.equal( this.baseSectionOutlinePaint, that.baseSectionOutlinePaint )
3806	ObjectUtilities.equal(this.sectionOutlineStrokeMap, that.sectionOutlineStrokeMap)
3807	ObjectUtilities.equal( this.baseSectionOutlineStroke, that.baseSectionOutlineStroke )
3808	PaintUtilities.equal(this.shadowPaint, that.shadowPaint)
3809	this.shadowXOffset == that.shadowXOffset
3810	this.shadowYOffset == that.shadowYOffset
3811	ObjectUtilities.equal(this.explodePercentages, that.explodePercentages)
3812	ObjectUtilities.equal(this.labelGenerator, that.labelGenerator)
3813	ObjectUtilities.equal(this.labelFont, that.labelFont)
3814	PaintUtilities.equal(this.labelPaint, that.labelPaint)
3815	PaintUtilities.equal(this.labelBackgroundPaint, that.labelBackgroundPaint)
3816	PaintUtilities.equal(this.labelOutlinePaint, that.labelOutlinePaint)
3817	ObjectUtilities.equal(this.labelOutlineStroke, that.labelOutlineStroke)
3818	PaintUtilities.equal(this.labelShadowPaint, that.labelShadowPaint)
3819	this.simpleLabels != that.simpleLabels
3820	this.simpleLabelOffset.equals(that.simpleLabelOffset)
3821	this.labelPadding.equals(that.labelPadding)
3822	this.maximumLabelWidth == that.maximumLabelWidth
3823	this.labelGap == that.labelGap
3824	this.labelLinkMargin == that.labelLinkMargin
3825	this.labelLinksVisible != that.labelLinksVisible
3826	this.labelLinkStyle.equals(that.labelLinkStyle)
3827	PaintUtilities.equal(this.labelLinkPaint, that.labelLinkPaint)
3828	ObjectUtilities.equal(this.labelLinkStroke, that.labelLinkStroke)
3829	ObjectUtilities.equal(this.toolTipGenerator, that.toolTipGenerator)
3830	ObjectUtilities.equal(this.urlGenerator, that.urlGenerator)
3831	this.minimumArcAngleToDraw == that.minimumArcAngleToDraw
3832	ShapeUtilities.equal(this.legendItemShape, that.legendItemShape)
3833	ObjectUtilities.equal(this.legendLabelGenerator, that.legendLabelGenerator)
3834	ObjectUtilities.equal(this.legendLabelToolTipGenerator, that.legendLabelToolTipGenerator)
3835	ObjectUtilities.equal(this.legendLabelURLGenerator, that.legendLabelURLGenerator)
3836	this.autoPopulateSectionPaint != that.autoPopulateSectionPaint
3837	this.autoPopulateSectionOutlinePaint != that.autoPopulateSectionOutlinePaint
3838	this.autoPopulateSectionOutlineStroke != that.autoPopulateSectionOutlineStroke
3839	clone.dataset != null
3840	this.urlGenerator instanceof PublicCloneable
3841	this.legendLabelGenerator != null
3842	this.legendLabelToolTipGenerator != null
3843	this.legendLabelURLGenerator instanceof PublicCloneable
4112	info != null
4113	getLabelGenerator() != null
4114	DEBUG_DRAW_INTERIOR
4115	isCircular()
4116	DEBUG_DRAW_LINK_AREA
4117	DatasetUtilities.isEmptyOrNull(getDataset())
4118	dataset.getKeys().size() > plotArea.getWidth()
4119	isCircular()
4120	sectionKeys.size() == 0
4121	depth < 0
4122	dataValue == null
4123	value <= 0
4124	Math.abs(angle2 - angle1) > getMinimumArcAngleToDraw()
4125	arc == null
4126	segment != null
4127	segment != null
4128	arc == null
4129	info != null
4130	entities != null
4131	tipster != null
4132	getURLGenerator() != null
4133	getSimpleLabels()
4134	getDarkerSides()
4135	paint instanceof Color
4136	extent < 0.0
4137	isAngleAtFront(start)
4138	isAngleAtBack(end)
4139	extent > -180.0
4140	drawFront
4141	drawFront
4142	drawBack
4143	drawFront
4144	drawBack
4145	drawBack
4146	drawFront
4147	isAngleAtFront(end)
4148	extent > -180.0
4149	drawBack
4150	drawBack
4151	drawFront
4152	drawBack
4153	drawFront
4154	drawBack
4155	drawFront
4156	extent > 0.0
4157	isAngleAtFront(start)
4158	isAngleAtBack(end)
4159	extent < 180.0
4160	drawFront
4161	drawFront
4162	drawBack
4163	drawFront
4164	drawBack
4165	drawBack
4166	drawFront
4167	isAngleAtFront(end)
4168	extent < 180.0
4169	drawBack
4170	drawBack
4171	drawFront
4172	drawBack
4173	drawFront
4174	drawBack
4175	drawFront
4176	obj == this
4177	obj instanceof PiePlot3D
4178	this.depthFactor != that.depthFactor
4179	this.darkerSides != that.darkerSides
5513	obj == this
5514	obj instanceof PieSectionEntity
5515	ObjectUtilities.equal(this.dataset, that.dataset)
5516	this.pieIndex != that.pieIndex
5517	this.sectionIndex != that.sectionIndex
5518	ObjectUtilities.equal(this.sectionKey, that.sectionKey)
5344	lenX < 2
5345	rotate != null
5345	angle != 0
5346	obj == this
5347	obj instanceof PinNeedle
5348	super.equals(obj)
2947	font == null
2948	paint == null
2949	p == null
2950	insets == null
2951	this.insets.equals(insets)
2952	notify
2953	paint == null
2954	this.backgroundPaint != null
2955	this.backgroundPaint != null
2956	this.backgroundPaint.equals(paint)
2957	this.backgroundAlpha != alpha
2958	p != null
2959	notify
2960	this.backgroundImageAlignment != alignment
2961	alpha > 1.0f
2961	alpha < 0.0f
2962	this.backgroundImageAlpha != alpha
2963	stroke == null
2964	this.outlineStroke != null
2965	this.outlineStroke != null
2966	this.outlineStroke.equals(stroke)
2967	paint == null
2968	this.outlinePaint != null
2969	this.outlinePaint != null
2970	this.outlinePaint.equals(paint)
2971	this.foregroundAlpha != alpha
2972	notify
2973	this.notify
2974	listeners[i] == PlotChangeListener.class
2975	orientation == null
2976	this.backgroundPaint == null
2977	p instanceof GradientPaint
2978	orientation == PlotOrientation.VERTICAL
2979	orientation == PlotOrientation.HORIZONTAL
2980	this.backgroundImage != null
2981	this.outlineVisible
2982	this.outlinePaint != null
2982	this.outlineStroke != null
2983	message != null
2984	plotState.getOwner() != null
2984	plotState != null
2985	e != null
2986	edge == RectangleEdge.LEFT
2987	edge == RectangleEdge.RIGHT
2988	edge == RectangleEdge.TOP
2989	edge == RectangleEdge.BOTTOM
2990	obj == this
2991	obj instanceof Plot
2992	ObjectUtilities.equal(this.noDataMessage, that.noDataMessage)
2993	ObjectUtilities.equal( this.noDataMessageFont, that.noDataMessageFont )
2994	PaintUtilities.equal(this.noDataMessagePaint, that.noDataMessagePaint)
2995	ObjectUtilities.equal(this.insets, that.insets)
2996	this.outlineVisible != that.outlineVisible
2997	ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)
2998	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
2999	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
3000	ObjectUtilities.equal(this.backgroundImage, that.backgroundImage)
3001	this.backgroundImageAlignment != that.backgroundImageAlignment
3002	this.backgroundImageAlpha != that.backgroundImageAlpha
3003	this.foregroundAlpha != that.foregroundAlpha
3004	this.backgroundAlpha != that.backgroundAlpha
3005	this.drawingSupplier.equals(that.drawingSupplier)
3006	this.notify != that.notify
3007	this.datasetGroup != null
3008	location == null
3009	orientation == null
3010	location == AxisLocation.TOP_OR_RIGHT
3011	orientation == PlotOrientation.HORIZONTAL
3012	orientation == PlotOrientation.VERTICAL
3013	location == AxisLocation.TOP_OR_LEFT
3014	orientation == PlotOrientation.HORIZONTAL
3015	orientation == PlotOrientation.VERTICAL
3016	location == AxisLocation.BOTTOM_OR_RIGHT
3017	orientation == PlotOrientation.HORIZONTAL
3018	orientation == PlotOrientation.VERTICAL
3019	location == AxisLocation.BOTTOM_OR_LEFT
3020	orientation == PlotOrientation.HORIZONTAL
3021	orientation == PlotOrientation.VERTICAL
3022	result == null
3023	location == null
3024	orientation == null
3025	location == AxisLocation.TOP_OR_RIGHT
3026	orientation == PlotOrientation.HORIZONTAL
3027	orientation == PlotOrientation.VERTICAL
3028	location == AxisLocation.TOP_OR_LEFT
3029	orientation == PlotOrientation.HORIZONTAL
3030	orientation == PlotOrientation.VERTICAL
3031	location == AxisLocation.BOTTOM_OR_RIGHT
3032	orientation == PlotOrientation.HORIZONTAL
3033	orientation == PlotOrientation.VERTICAL
3034	location == AxisLocation.BOTTOM_OR_LEFT
3035	orientation == PlotOrientation.HORIZONTAL
3036	orientation == PlotOrientation.VERTICAL
3037	result == null
5531	plot == null
5532	obj == this
5533	obj instanceof PlotEntity
5534	getArea().equals(that.getArea())
5535	ObjectUtilities.equal(getToolTipText(), that.getToolTipText())
5536	ObjectUtilities.equal(getURLText(), that.getURLText())
5537	this.plot.equals(that.plot)
2810	this == obj
2811	obj instanceof PlotOrientation
2812	this.name.equals(orientation.toString())
2813	this.equals(PlotOrientation.HORIZONTAL)
2814	this.equals(PlotOrientation.VERTICAL)
3038	source == null
3039	area.contains(source)
3040	this == obj
3041	obj instanceof PlotRenderingInfo
3042	ObjectUtilities.equal(this.dataArea, that.dataArea)
3043	ObjectUtilities.equal(this.plotArea, that.plotArea)
3044	ObjectUtilities.equal(this.subplotInfo, that.subplotInfo)
3045	this.plotArea != null
3046	this.dataArea != null
3689	plot != null
3690	DatasetUtilities.isEmptyOrNull(dataset)
5356	angle != 0
5356	rotate != null
5357	obj == this
5358	obj instanceof PlumNeedle
5359	super.equals(obj)
5303	rotate != null
5303	angle != 0
5304	getFillPaint() != null
5305	getHighlightPaint() != null
5306	getOutlinePaint() != null
5307	obj == this
5308	obj instanceof PointerNeedle
5309	super.equals(obj)
5907	zoom
5908	zoomInIndex != -1
5909	zoomOutIndex != -1
5910	autoIndex != -1
5911	command.equals(POLAR_ZOOM_IN_ACTION_COMMAND)
5912	command.equals(POLAR_ZOOM_OUT_ACTION_COMMAND)
5913	command.equals(POLAR_AUTO_RANGE_ACTION_COMMAND)
5914	plot instanceof PolarPlot
5915	comp instanceof JMenuItem
5916	text.equals(item.getText())
4180	this.dataset != null
4181	this.axis != null
4182	this.renderer != null
4183	text == null
4184	removed
4185	this.cornerTextItems.size() > 0
4186	axis != null
4187	this.axis != null
4188	this.axis != null
4189	existing != null
4190	this.dataset != null
4191	this.renderer != null
4192	this.renderer != null
4193	unit == null
4194	this.angleLabelsVisible != visible
4195	font == null
4196	paint == null
4197	this.angleGridlinesVisible != visible
4198	this.radiusGridlinesVisible != visible
4199	b1
4199	b2
4200	info != null
4201	info != null
4202	this.renderer != null
4203	this.cornerTextItems.isEmpty()
4204	DatasetUtilities.isEmptyOrNull(this.dataset)
4205	this.renderer == null
4206	isAngleGridlinesVisible()
4207	gridStroke != null
4207	gridPaint != null
4208	isRadiusGridlinesVisible()
4209	gridPaint != null
4209	gridStroke != null
4210	percent > 0.0
4211	this.dataset != null
4212	this.axis != null
4213	getParent() != null
4214	this.dataset != null
4215	this.dataset != null
4216	this.renderer != null
4217	obj == this
4218	obj instanceof PolarPlot
4219	ObjectUtilities.equal(this.axis, that.axis)
4220	ObjectUtilities.equal(this.renderer, that.renderer)
4221	this.angleTickUnit.equals(that.angleTickUnit)
4222	this.angleGridlinesVisible != that.angleGridlinesVisible
4223	this.angleLabelsVisible != that.angleLabelsVisible
4224	this.angleLabelFont.equals(that.angleLabelFont)
4225	PaintUtilities.equal(this.angleLabelPaint, that.angleLabelPaint)
4226	ObjectUtilities.equal(this.angleGridlineStroke, that.angleGridlineStroke)
4227	PaintUtilities.equal( this.angleGridlinePaint, that.angleGridlinePaint )
4228	this.radiusGridlinesVisible != that.radiusGridlinesVisible
4229	ObjectUtilities.equal(this.radiusGridlineStroke, that.radiusGridlineStroke)
4230	PaintUtilities.equal(this.radiusGridlinePaint, that.radiusGridlinePaint)
4231	this.cornerTextItems.equals(that.cornerTextItems)
4232	this.axis != null
4233	clone.dataset != null
4234	this.renderer != null
4235	this.axis != null
4236	this.dataset != null
4237	useAnchor
110	coefficients == null
111	obj instanceof PolynomialFunction2D
107	obj instanceof PowerFunction2D
108	this.a != that.a
109	this.b != that.b
6018	this.contributors != null
6019	libraries.length != 0
988	quarter < FIRST_QUARTER
988	quarter > LAST_QUARTER
989	quarter > LAST_QUARTER
989	quarter < FIRST_QUARTER
990	this.quarter > FIRST_QUARTER
991	this.year > 1900
992	this.quarter < LAST_QUARTER
993	this.year < 9999
994	obj != null
995	obj instanceof Quarter
996	o1 instanceof Quarter
997	result == 0
998	o1 instanceof RegularTimePeriod
999	i == -1
1000	i == s.length() - 1
5059	zone == null
5060	this.quarterFirst
5061	obj == this
5062	obj instanceof QuarterDateFormat
5063	Arrays.equals(this.quarters, that.quarters)
5064	this.quarterFirst != that.quarterFirst
931	lower > upper
932	b0 <= this.lower
933	contains(value)
934	value > this.upper
935	value < this.lower
936	range1 == null
937	range2 == null
938	range == null
939	value < range.getLowerBound()
940	value > range.getUpperBound()
941	range == null
942	lower > upper
943	base == null
944	allowZeroCrossing
945	value > 0.0
946	value < 0.0
947	base == null
948	factor < 0
949	obj instanceof Range
950	this.lower == range.lower
951	this.upper == range.upper
48	this == obj
49	obj instanceof RangeType
50	this.name.equals(that.toString())
51	this.equals(RangeType.FULL)
52	this.equals(RangeType.POSITIVE)
53	this.equals(RangeType.NEGATIVE)
1896	this == obj
1897	obj instanceof RectangleAnchor
1898	this.name.equals(order.name)
1899	anchor == RectangleAnchor.CENTER
1900	anchor == RectangleAnchor.TOP
1901	anchor == RectangleAnchor.BOTTOM
1902	anchor == RectangleAnchor.LEFT
1903	anchor == RectangleAnchor.RIGHT
1904	anchor == RectangleAnchor.TOP_LEFT
1905	anchor == RectangleAnchor.TOP_RIGHT
1906	anchor == RectangleAnchor.BOTTOM_LEFT
1907	anchor == RectangleAnchor.BOTTOM_RIGHT
1908	anchor == RectangleAnchor.CENTER
1909	anchor == RectangleAnchor.TOP
1910	anchor == RectangleAnchor.BOTTOM
1911	anchor == RectangleAnchor.LEFT
1912	anchor == RectangleAnchor.RIGHT
1913	anchor == RectangleAnchor.TOP_LEFT
1914	anchor == RectangleAnchor.TOP_RIGHT
1915	anchor == RectangleAnchor.BOTTOM_LEFT
1916	anchor == RectangleAnchor.BOTTOM_RIGHT
1917	this.equals(RectangleAnchor.CENTER)
1918	this.equals(RectangleAnchor.TOP)
1919	this.equals(RectangleAnchor.BOTTOM)
1920	this.equals(RectangleAnchor.LEFT)
1921	this.equals(RectangleAnchor.RIGHT)
1922	this.equals(RectangleAnchor.TOP_LEFT)
1923	this.equals(RectangleAnchor.TOP_RIGHT)
1924	this.equals(RectangleAnchor.BOTTOM_LEFT)
1925	this.equals(RectangleAnchor.BOTTOM_RIGHT)
6954	widthConstraintType == null
6955	heightConstraintType == null
6956	this.widthConstraintType == LengthConstraintType.NONE
6957	this.heightConstraintType == LengthConstraintType.NONE
6958	range == null
6959	range == null
6960	this.widthConstraintType == LengthConstraintType.NONE
6961	this.heightConstraintType == LengthConstraintType.NONE
6962	this.heightConstraintType == LengthConstraintType.RANGE
6963	this.heightConstraintType == LengthConstraintType.FIXED
6964	this.widthConstraintType == LengthConstraintType.RANGE
6965	this.heightConstraintType == LengthConstraintType.NONE
6966	this.heightConstraintType == LengthConstraintType.RANGE
6967	this.heightConstraintType == LengthConstraintType.FIXED
6968	this.widthConstraintType == LengthConstraintType.FIXED
6969	this.heightConstraintType == LengthConstraintType.NONE
6970	this.heightConstraintType == LengthConstraintType.RANGE
6971	this.heightConstraintType == LengthConstraintType.FIXED
2089	this == obj
2090	obj instanceof RectangleEdge
2091	this.name.equals(order.name)
2092	edge == RectangleEdge.TOP
2093	edge == RectangleEdge.BOTTOM
2094	edge == RectangleEdge.LEFT
2095	edge == RectangleEdge.RIGHT
2096	edge == RectangleEdge.TOP
2097	edge == RectangleEdge.BOTTOM
2098	edge == RectangleEdge.LEFT
2099	edge == RectangleEdge.RIGHT
2100	this.equals(RectangleEdge.TOP)
2101	this.equals(RectangleEdge.BOTTOM)
2102	this.equals(RectangleEdge.LEFT)
2103	this.equals(RectangleEdge.RIGHT)
2062	unitType == null
2063	obj == this
2064	obj instanceof RectangleInsets
2065	that.unitType != this.unitType
2066	this.left != that.left
2067	this.right != that.right
2068	this.top != that.top
2069	this.bottom != that.bottom
2070	base == null
2071	horizontal == LengthAdjustmentType.EXPAND
2072	horizontal == LengthAdjustmentType.CONTRACT
2073	vertical == LengthAdjustmentType.EXPAND
2074	vertical == LengthAdjustmentType.CONTRACT
2075	base == null
2076	vertical
2077	horizontal
2078	base == null
2079	vertical
2080	horizontal
2081	this.unitType == UnitType.RELATIVE
2082	this.unitType == UnitType.RELATIVE
2083	this.unitType == UnitType.RELATIVE
2084	this.unitType == UnitType.RELATIVE
2085	this.unitType == UnitType.RELATIVE
2086	this.unitType == UnitType.RELATIVE
2087	this.unitType == UnitType.RELATIVE
2088	this.unitType == UnitType.RELATIVE
2140	c.equals(Number.class)
5383	dataArea.contains(e.getPoint())
5384	chart.getPlot() instanceof Selectable
5385	e.isShiftDown()
5386	this.lastPoint == null
5387	pt2.distance(this.lastPoint) > 5
5388	this.lastPoint == null
5389	plot instanceof Selectable
5390	p.canSelectByRegion()
674	n < 2
675	n < 2
676	n < 2
677	n < 2
678	dataset == null
679	itemCount < order + 1
680	Double.isNaN(x)
680	Double.isNaN(y)
681	validItems < order + 1
682	equations == 1
683	result[0][0] == 0
684	result[i][0] != 0
685	found
1151	c.equals(Year.class)
1152	c.equals(Quarter.class)
1153	c.equals(Month.class)
1154	c.equals(Day.class)
1155	c.equals(Hour.class)
1156	c.equals(Minute.class)
1157	c.equals(Second.class)
1953	prefix == null
1954	formatter == null
1955	suffix == null
1956	formatter == null
1957	suffix == null
1958	formatter == null
1959	suffix == null
1960	suffix == null
1961	formatter == null
1962	elapsed < 0
1963	this.showZeroDays
1963	days != 0
1964	this.showZeroHours
1964	hours != 0
1965	obj == this
1966	obj instanceof RelativeDateFormat
1967	super.equals(obj)
1968	this.baseMillis != that.baseMillis
1969	this.showZeroDays != that.showZeroDays
1970	this.showZeroHours != that.showZeroHours
1971	this.positivePrefix.equals(that.positivePrefix)
1972	this.daySuffix.equals(that.daySuffix)
1973	this.hourSuffix.equals(that.hourSuffix)
1974	this.minuteSuffix.equals(that.minuteSuffix)
1975	this.secondSuffix.equals(that.secondSuffix)
1976	this.dayFormatter.equals(that.dayFormatter)
1977	this.hourFormatter.equals(that.hourFormatter)
1978	this.minuteFormatter.equals(that.minuteFormatter)
1979	this.secondFormatter.equals(that.secondFormatter)
8071	this.info != null
8072	owner != null
8909	dataset == null
8910	xLow >= xHigh
8911	itemCount <= 1
8912	dataset.getDomainOrder() == DomainOrder.ASCENDING
8913	lowValue >= xLow
8914	highValue < xLow
8915	midV >= xLow
8916	dataset.getDomainOrder() == DomainOrder.DESCENDING
8917	lowValue <= xHigh
8918	highValue > xHigh
8919	midV > xHigh
8920	index < itemCount
8921	dataset == null
8922	xLow >= xHigh
8923	itemCount <= 1
8924	dataset.getDomainOrder() == DomainOrder.ASCENDING
8925	lowValue > xHigh
8926	highValue <= xHigh
8927	midV <= xHigh
8928	dataset.getDomainOrder() == DomainOrder.DESCENDING
8929	lowValue < xLow
8930	highValue >= xLow
8931	midV >= xLow
8932	index >= 0
8933	i0 > i1
1820	urls[i].sameFile(codeBase)
1821	noCodeBaseClassLoader != null
1822	noCodeBaseClassLoader != null
2397	stroke == null
2398	paint == null
2399	n == null
2400	direction == Rotation.CLOCKWISE
2401	direction == Rotation.ANTICLOCKWISE
2402	Math.abs(angle) > getMinimumArcAngleToDraw()
2403	mep > 0.0
2404	currentPass == 0
2405	shadowPaint != null
2406	currentPass == 1
2407	outlineStroke != null
2407	outlinePaint != null
2408	state.getInfo() != null
2409	entities != null
2410	toolTipGenerator != null
2411	urlGenerator != null
2412	currentPass == 2
2413	this.separatorsVisible
2414	this == obj
2415	obj instanceof RingPlot
2416	this.separatorsVisible != that.separatorsVisible
2417	ObjectUtilities.equal(this.separatorStroke, that.separatorStroke)
2418	PaintUtilities.equal(this.separatorPaint, that.separatorPaint)
2419	this.innerSeparatorExtension != that.innerSeparatorExtension
2420	this.outerSeparatorExtension != that.outerSeparatorExtension
2421	this.sectionDepth != that.sectionDepth
2422	line == null
36	handler != this
37	this.subHandlers != null
38	this.subHandlers.size() > 0
39	top != null
1889	this == o
1890	o instanceof Rotation
1891	this.factor != rotation.factor
1892	this.equals(Rotation.CLOCKWISE)
1893	this.equals(Rotation.ANTICLOCKWISE)
7587	getItemVisible(series, item)
7588	Double.isNaN(transY1)
7588	Double.isNaN(transX1)
7589	orientation == PlotOrientation.HORIZONTAL
7590	s.lastPointGood
7591	Math.abs(x - s.lastX) > s.dX
7592	s.lowY < s.highY
7593	item == s.getLastItemIndex()
7594	this.legendLine != null
7595	obj == this
7596	obj instanceof SamplingXYLineRenderer
7597	super.equals(obj)
7598	ShapeUtilities.equal(this.legendLine, that.legendLine)
8495	margin < 0.0
8495	margin >= 1.0
8496	flag != null
8497	getItemVisible(row, column)
8498	visibleRow < 0
8499	values == null
8500	this.useSeriesOffset
8501	orientation == PlotOrientation.HORIZONTAL
8502	orientation == PlotOrientation.VERTICAL
8503	getItemShapeFilled(row, column)
8504	this.useFillPaint
8505	this.drawOutlines
8506	this.useOutlinePaint
8507	cp == null
8508	isSeriesVisibleInLegend(series)
8508	isSeriesVisible(series)
8509	getLegendItemToolTipGenerator() != null
8510	getLegendItemURLGenerator() != null
8511	labelPaint != null
8512	obj == this
8513	obj instanceof ScatterRenderer
8514	ObjectUtilities.equal(this.seriesShapesFilled, that.seriesShapesFilled)
8515	this.baseShapesFilled != that.baseShapesFilled
8516	this.useFillPaint != that.useFillPaint
8517	this.drawOutlines != that.drawOutlines
8518	this.useOutlinePaint != that.useOutlinePaint
8519	this.useSeriesOffset != that.useSeriesOffset
8520	this.itemMargin != that.itemMargin
1058	minute == null
1059	this.second != FIRST_SECOND_IN_MINUTE
1060	previous != null
1061	this.second != LAST_SECOND_IN_MINUTE
1062	next != null
1063	obj == this
1064	obj instanceof Second
1065	this.second != that.second
1066	this.minute != that.minute
1067	this.hour != that.hour
1068	this.day.equals(that.day)
1069	o1 instanceof Second
1070	this.firstMillisecond < s.firstMillisecond
1071	this.firstMillisecond > s.firstMillisecond
1072	o1 instanceof RegularTimePeriod
1073	day != null
1074	hour <= 23
1074	hour >= 0
1075	minute <= 59
1075	minute >= 0
1076	second >= 0
1076	second <= 59
5232	baseTimeline != null
5233	baseTimeline.getSegmentSize() < this.segmentSize
5234	baseTimeline.getStartTime() > this.startTime
5235	(baseTimeline.getSegmentSize() % this.segmentSize) != 0
5236	((this.startTime - baseTimeline.getStartTime()) % this.segmentSize) != 0
5237	groupMilliseconds >= this.segmentsIncludedSize
5238	segment.inExceptionSegments()
5239	x < this.segmentsIncludedSize
5240	this.adjustForDaylightSaving
5241	domainValueEnd < domainValueStart
5242	segment.contains(domainValueEnd)
5243	segment.inIncludeSegments()
5244	baseSegment.inIncludeSegments()
5245	segment.inIncludeSegments()
5246	segment.inIncludeSegments()
5247	toMillisecond < fromMillisecond
5248	intersection != null
5249	o instanceof SegmentedTimeline
5250	segment.contains(midSegment)
5250	midSegment.contains(segment)
5251	midSegment.before(segment)
5252	midSegment.after(segment)
5253	this.adjustForDaylightSaving
1318	s.equals(shortWeekdayNames[i])
1319	s.equals(weekDayNames[i])
1320	shortened
1321	isValidMonthCode(month)
1322	shortened
1323	result > 12
1323	result < 1
1324	s.equals(shortMonthNames[i])
1325	s.equals(monthNames[i])
1326	(yyyy % 4) != 0
1327	(yyyy % 400) == 0
1328	(yyyy % 100) == 0
1329	month != FEBRUARY
1330	isLeapYear(yyyy)
1331	SerialDate.isValidWeekdayCode(targetWeekday)
1332	baseDOW > targetWeekday
1333	SerialDate.isValidWeekdayCode(targetWeekday)
1334	baseDOW > targetWeekday
1335	SerialDate.isValidWeekdayCode(targetDOW)
1336	adjust >= 4
1337	adjust <= -4
1823	stream == null
1824	isNull
1825	isSerializable(c)
1826	c.equals(GradientPaint.class)
1827	stream == null
1828	paint != null
1829	paint instanceof Serializable
1830	paint instanceof GradientPaint
1831	stream == null
1832	isNull
1833	c.equals(BasicStroke.class)
1834	stream == null
1835	stroke != null
1836	stroke instanceof BasicStroke
1837	stream == null
1838	isNull
1839	c.equals(Line2D.class)
1840	c.equals(Rectangle2D.class)
1841	c.equals(Ellipse2D.class)
1842	c.equals(Arc2D.class)
1843	c.equals(GeneralPath.class)
1844	stream == null
1845	shape != null
1846	shape instanceof Line2D
1847	shape instanceof Rectangle2D
1848	shape instanceof Ellipse2D
1849	shape instanceof Arc2D
1850	shape instanceof GeneralPath
1851	stream == null
1852	isNull
1853	stream == null
1854	p != null
1855	stream == null
1856	isNull
1857	stream == null
1858	as != null
1859	stream == null
1860	isNull
1861	image instanceof BufferedImage
1481	key == null
1482	key == null
1483	this.notify != notify
1484	obj == this
1485	obj instanceof Series
1486	getKey().equals(that.getKey())
1487	ObjectUtilities.equal(getDescription(), that.getDescription())
1488	this.notify
1489	listenerList[i] == SeriesChangeListener.class
1516	this == obj
1517	obj instanceof SeriesChangeType
1518	this.name.equals(style.toString())
1519	this.equals(SeriesChangeType.ADD)
3684	this == obj
3685	obj instanceof SeriesRenderingOrder
3686	this.name.equals(order.toString())
3687	this.equals(SeriesRenderingOrder.FORWARD)
3688	this.equals(SeriesRenderingOrder.REVERSE)
6978	prefix == null
6979	prefix == null
6980	chart == null
6981	session == null
6982	session != null
6983	chart == null
6984	session == null
6985	session != null
6986	tempDirName == null
6987	tempDir.exists()
6988	session != null
6989	chartDeleter == null
6990	filename.length() > 5
6991	filename.substring(filename.length() - 5, filename.length()).equals(".jpeg")
6992	filename.substring(filename.length() - 4, filename.length()).equals(".png")
6993	file.exists()
6994	mimeType != null
6995	length == -1
6996	i == -1
6997	i + searchString.length() < inputString.length()
2002	obj == this
2003	obj instanceof ShapeList
2004	ShapeUtilities.equal((Shape) get(i), (Shape) that.get(i))
2005	shape != null
2006	index != -1
2141	shape instanceof Cloneable
2142	s2 instanceof Line2D
2142	s1 instanceof Line2D
2143	s1 instanceof Ellipse2D
2143	s2 instanceof Ellipse2D
2144	s1 instanceof Arc2D
2144	s2 instanceof Arc2D
2145	s2 instanceof Polygon
2145	s1 instanceof Polygon
2146	s2 instanceof GeneralPath
2146	s1 instanceof GeneralPath
2147	l1 == null
2148	l2 == null
2149	l1.getP1().equals(l2.getP1())
2150	l1.getP2().equals(l2.getP2())
2151	e1 == null
2152	e2 == null
2153	e1.getFrame().equals(e2.getFrame())
2154	a1 == null
2155	a2 == null
2156	a1.getFrame().equals(a2.getFrame())
2157	a1.getAngleStart() != a2.getAngleStart()
2158	a1.getAngleExtent() != a2.getAngleExtent()
2159	a1.getArcType() != a2.getArcType()
2160	p1 == null
2161	p2 == null
2162	p1.npoints != p2.npoints
2163	Arrays.equals(p1.xpoints, p2.xpoints)
2164	Arrays.equals(p1.ypoints, p2.ypoints)
2165	p1 == null
2166	p2 == null
2167	p1.getWindingRule() != p2.getWindingRule()
2168	iterator1.isDone() != iterator2.isDone()
2169	seg1 != seg2
2170	Arrays.equals(d1, d2)
2171	shape == null
2172	shape == null
2173	anchor == null
2174	base == null
2175	(x2 - x1) != 0.0
2176	(f1 & f2) != 0
2177	f1 != 0
2178	dx != 0.0
2178	(f1 & Rectangle2D.OUT_LEFT) == Rectangle2D.OUT_LEFT
2179	(f1 & Rectangle2D.OUT_RIGHT) == Rectangle2D.OUT_RIGHT
2179	dx != 0.0
2180	(f1 & Rectangle2D.OUT_BOTTOM) == Rectangle2D.OUT_BOTTOM
2180	dy != 0.0
2181	(f1 & Rectangle2D.OUT_TOP) == Rectangle2D.OUT_TOP
2181	dy != 0.0
2182	f2 != 0
2183	dx != 0.0
2183	(f2 & Rectangle2D.OUT_LEFT) == Rectangle2D.OUT_LEFT
2184	(f2 & Rectangle2D.OUT_RIGHT) == Rectangle2D.OUT_RIGHT
2184	dx != 0.0
2185	(f2 & Rectangle2D.OUT_BOTTOM) == Rectangle2D.OUT_BOTTOM
2185	dy != 0.0
2186	dy != 0.0
2186	(f2 & Rectangle2D.OUT_TOP) == Rectangle2D.OUT_TOP
5360	angle != 0
5360	rotate != null
5361	object == null
5362	object == this
5363	super.equals(object)
5363	object instanceof ShipNeedle
6661	w == LengthConstraintType.NONE
6662	h == LengthConstraintType.NONE
6663	h == LengthConstraintType.RANGE
6664	h == LengthConstraintType.FIXED
6665	w == LengthConstraintType.RANGE
6666	h == LengthConstraintType.NONE
6667	h == LengthConstraintType.RANGE
6668	h == LengthConstraintType.FIXED
6669	w == LengthConstraintType.FIXED
6670	h == LengthConstraintType.NONE
6671	h == LengthConstraintType.RANGE
6672	h == LengthConstraintType.FIXED
6673	contentSize.height <= 0.0
6673	contentSize.width <= 0.0
6674	widthRange.contains(s.getWidth())
6675	bounds.getWidth() <= w
6676	bounds.getWidth() <= widthRange.getUpperBound()
6676	bounds.getHeight() <= heightRange.getUpperBound()
6677	area.isEmpty()
692	lowerBound >= upperBound
693	Double.isNaN(value)
694	value < this.lowerBound
695	value > this.upperBound
696	value == this.lowerBound
697	value == this.upperBound
698	this.upperBound < bin.lowerBound
699	this.lowerBound > bin.upperBound
700	this.upperBound == bin.lowerBound
701	this.lowerBound == bin.upperBound
702	obj instanceof SimpleHistogramBin
703	this.lowerBound < bin.lowerBound
704	this.lowerBound > bin.lowerBound
705	this.upperBound < bin.upperBound
706	this.upperBound > bin.upperBound
707	obj instanceof SimpleHistogramBin
708	this.lowerBound != that.lowerBound
709	this.upperBound != that.upperBound
710	this.includeLowerBound != that.includeLowerBound
711	this.includeUpperBound != that.includeUpperBound
712	this.itemCount != that.itemCount
713	this.selected != that.selected
735	key == null
736	bin.overlapsWith(existingBin)
737	bin.accepts(value)
738	placed
739	notify
740	this.adjustForBinSize
741	notify
742	bin.isSelected()
743	changed
744	obj == this
745	obj instanceof SimpleHistogramDataset
746	this.key.equals(that.key)
747	this.adjustForBinSize != that.adjustForBinSize
748	this.bins.equals(that.bins)
1458	start > end
1459	obj == this
1460	obj instanceof TimePeriod
1461	this.getStart().equals(that.getStart())
1462	this.getEnd().equals(that.getEnd())
1463	m0 < m1
1464	m0 > m1
1465	t0 < t2
1466	t0 > t2
1467	t1 < t3
1468	t1 > t3
1998	this == obj
1999	obj instanceof Size2D
2000	this.width != that.width
2001	this.height != that.height
627	first >= this.underlying.getColumnCount()
627	first < 0
628	max < 0
629	this.maximumCategoryCount == 0
630	index >= this.firstCategoryIndex
630	index <= lastCategoryIndex()
631	c != -1
632	last == -1
633	obj == this
634	obj instanceof SlidingCategoryDataset
635	this.firstCategoryIndex != that.firstCategoryIndex
636	this.maximumCategoryCount != that.maximumCategoryCount
637	this.underlying.equals(that.underlying)
638	this.underlying instanceof PublicCloneable
112	first >= this.underlying.getColumnCount()
112	first < 0
113	max < 0
114	this.maximumCategoryCount == 0
115	index >= this.firstCategoryIndex
115	index <= lastCategoryIndex()
116	c != -1
117	last == -1
118	c != -1
119	c != -1
120	c != -1
121	c != -1
122	c != -1
123	c != -1
124	c != -1
125	obj == this
126	obj instanceof SlidingGanttCategoryDataset
127	this.firstCategoryIndex != that.firstCategoryIndex
128	this.maximumCategoryCount != that.maximumCategoryCount
129	this.underlying.equals(that.underlying)
130	this.underlying instanceof PublicCloneable
1862	this == obj
1863	obj instanceof SortOrder
1864	this.name.equals(that.toString())
1865	this.equals(SortOrder.ASCENDING)
1866	this.equals(SortOrder.DESCENDING)
3173	extract == null
3174	dataset != null
3175	this.dataset != null
3176	dataset != null
3177	order == null
3178	direction == null
3179	percent < 0.0
3179	percent > MAX_INTERIOR_GAP
3180	this.interiorGap != percent
3181	paint == null
3182	stroke == null
3183	this.seriesPaint != null
3184	result == null
3185	supplier != null
3186	paint == null
3187	this.seriesOutlinePaint != null
3188	result == null
3189	paint == null
3190	this.seriesOutlineStroke != null
3191	result == null
3192	stroke == null
3193	shape == null
3194	font == null
3195	paint == null
3196	generator == null
3197	getDataset() == null
3198	this.dataExtractOrder == TableOrder.BY_ROW
3199	this.dataExtractOrder == TableOrder.BY_COLUMN
3200	keys == null
3201	info != null
3202	DatasetUtilities.isEmptyOrNull(this.dataset)
3203	this.dataExtractOrder == TableOrder.BY_ROW
3204	this.maxValue == DEFAULT_MAX_VALUE
3205	nV != null
3206	v > this.maxValue
3207	info != null
3208	dataValue != null
3209	value >= 0
3210	entities != null
3211	this.dataExtractOrder == TableOrder.BY_ROW
3212	this.toolTipGenerator != null
3213	this.urlGenerator != null
3214	this.webFilled
3215	this.dataExtractOrder == TableOrder.BY_ROW
3216	this.dataExtractOrder == TableOrder.BY_COLUMN
3217	this.dataExtractOrder == TableOrder.BY_ROW
3218	labelX < plotArea.getCenterX()
3219	labelX == plotArea.getCenterX()
3220	labelY > plotArea.getCenterY()
3221	obj == this
3222	obj instanceof SpiderWebPlot
3223	super.equals(obj)
3224	this.dataExtractOrder.equals(that.dataExtractOrder)
3225	this.headPercent != that.headPercent
3226	this.interiorGap != that.interiorGap
3227	this.startAngle != that.startAngle
3228	this.direction.equals(that.direction)
3229	this.maxValue != that.maxValue
3230	this.webFilled != that.webFilled
3231	this.axisLabelGap != that.axisLabelGap
3232	PaintUtilities.equal(this.axisLinePaint, that.axisLinePaint)
3233	this.axisLineStroke.equals(that.axisLineStroke)
3234	ShapeUtilities.equal(this.legendItemShape, that.legendItemShape)
3235	PaintUtilities.equal(this.seriesPaint, that.seriesPaint)
3236	this.seriesPaintList.equals(that.seriesPaintList)
3237	PaintUtilities.equal(this.baseSeriesPaint, that.baseSeriesPaint)
3238	PaintUtilities.equal(this.seriesOutlinePaint, that.seriesOutlinePaint)
3239	this.seriesOutlinePaintList.equals(that.seriesOutlinePaintList)
3240	PaintUtilities.equal(this.baseSeriesOutlinePaint, that.baseSeriesOutlinePaint)
3241	ObjectUtilities.equal(this.seriesOutlineStroke, that.seriesOutlineStroke)
3242	this.seriesOutlineStrokeList.equals( that.seriesOutlineStrokeList)
3243	this.baseSeriesOutlineStroke.equals( that.baseSeriesOutlineStroke)
3244	this.labelFont.equals(that.labelFont)
3245	PaintUtilities.equal(this.labelPaint, that.labelPaint)
3246	this.labelGenerator.equals(that.labelGenerator)
3247	ObjectUtilities.equal(this.toolTipGenerator, that.toolTipGenerator)
3248	ObjectUtilities.equal(this.urlGenerator, that.urlGenerator)
3249	this.dataset != null
1441	year >= 1900
1441	year <= 9999
1442	month >= MonthConstants.JANUARY
1442	month <= MonthConstants.DECEMBER
1443	day <= SerialDate.lastDayOfMonth(month, year)
1443	day >= 1
1444	serial >= SERIAL_LOWER_BOUND
1444	serial <= SERIAL_UPPER_BOUND
1445	underestimatedYYYY == overestimatedYYYY
1446	isLeapYear(this.year)
1447	object instanceof SerialDate
1448	include == SerialDate.INCLUDE_BOTH
1449	include == SerialDate.INCLUDE_FIRST
1450	include == SerialDate.INCLUDE_SECOND
1451	m > MonthConstants.FEBRUARY
1452	SerialDate.isLeapYear(y)
8319	this.renderAsPercentages
8320	n != null
8321	n != null
8322	n != null
8323	y1 >= 0.0
8324	y0 >= 0.0
8325	y2 >= 0.0
8326	y0 >= 0.0
8327	y2 >= 0.0
8328	pass == 0
8329	entities != null
8330	this.renderAsPercentages
8331	n != null
8332	this.renderAsPercentages
8333	isSeriesVisible(i)
8334	n != null
8335	Double.isNaN(v)
8336	v >= 0.0
8337	stack2[0] == 0.0
8337	stack1[0] == 0.0
8338	stack1[1] == 0.0
8338	stack2[1] == 0.0
8339	obj == this
8340	obj instanceof StackedAreaRenderer
8341	this.renderAsPercentages != that.renderAsPercentages
8259	dataset == null
8260	this.renderAsPercentages
8261	data != null
8262	orientation == PlotOrientation.HORIZONTAL
8263	orientation == PlotOrientation.VERTICAL
8264	columns > 1
8265	columns > 0
8266	isSeriesVisible(row)
8267	dataValue == null
8268	this.renderAsPercentages
8269	isSeriesVisible(i)
8269	v != null
8270	this.renderAsPercentages
8271	d > 0
8272	orientation == PlotOrientation.HORIZONTAL
8273	positive
8273	inverted
8273	inverted
8273	positive
8274	positive
8274	positive
8274	inverted
8274	inverted
8275	positive
8276	orientation == PlotOrientation.HORIZONTAL
8277	pass == 0
8278	getShadowsVisible()
8279	pass == 1
8280	entities != null
8281	pass == 2
8282	generator != null
8282	isItemLabelVisible(row, column, selected)
8283	obj == this
8284	obj instanceof StackedBarRenderer
8285	this.renderAsPercentages != that.renderAsPercentages
8073	dataset == null
8074	this.renderAsPercentages
8075	data != null
8076	orientation == PlotOrientation.HORIZONTAL
8077	orientation == PlotOrientation.VERTICAL
8078	columns > 1
8079	columns > 0
8080	asPercentages
8081	n == null
8082	asPercentages
8083	v >= 0.0
8083	this.ignoreZeroValues
8083	v > 0.0
8084	baseIndex < 0
8085	v < 0.0
8086	baseIndex < 0
8087	row < dataset.getRowCount() - 1
8088	orientation == PlotOrientation.HORIZONTAL
8089	curr[0] == null
8090	series < 0
8091	fillPaintDark instanceof Color
8092	drawOutlines
8093	f == 5
8094	drawOutlines
8095	entities != null
8096	isItemLabelVisible(series, column, false)
8096	generator != null
8097	inverted
8098	curr[0] == null
8099	series < 0
8100	fillPaintDark instanceof Color
8101	drawOutlines
8102	f == 5
8103	drawOutlines
8104	entities != null
8105	isItemLabelVisible(series, column, false)
8105	generator != null
8106	inverted
8107	obj == this
8108	obj instanceof StackedBarRenderer3D
8109	this.renderAsPercentages != that.getRenderAsPercentages()
8110	this.ignoreZeroValues != that.ignoreZeroValues
7153	dataset != null
7154	Double.isNaN(y1)
7155	pass == 0
7156	item == 0
7157	orientation == PlotOrientation.VERTICAL
7158	orientation == PlotOrientation.HORIZONTAL
7159	orientation == PlotOrientation.VERTICAL
7160	orientation == PlotOrientation.HORIZONTAL
7161	getPlotLines()
7162	item > 0
7163	orientation == PlotOrientation.VERTICAL
7164	orientation == PlotOrientation.HORIZONTAL
7165	item == (itemCount - 1)
7165	getPlotArea()
7165	item > 0
7166	orientation == PlotOrientation.VERTICAL
7167	orientation == PlotOrientation.HORIZONTAL
7168	series != 0
7169	isOutline()
7170	pass == 1
7171	getPlotShapes()
7172	plot.getOrientation() == PlotOrientation.VERTICAL
7173	plot.getOrientation() == PlotOrientation.HORIZONTAL
7174	nullPoint
7175	getShapePaint() != null
7176	getShapeStroke() != null
7177	plot.getOrientation() == PlotOrientation.VERTICAL
7178	plot.getOrientation() == PlotOrientation.HORIZONTAL
7179	entities != null
7180	Double.isNaN(value)
7181	obj == this
7182	obj instanceof StackedXYAreaRenderer
7182	super.equals(obj)
7183	PaintUtilities.equal(this.shapePaint, that.shapePaint)
7184	ObjectUtilities.equal(this.shapeStroke, that.shapeStroke)
7558	dataset == null
7559	min == Double.POSITIVE_INFINITY
7560	state.getInfo() != null
7561	Double.isNaN(y1)
7562	Double.isNaN(y0)
7563	Double.isNaN(y2)
7564	this.roundXCoordinates
7565	y1 >= 0.0
7566	y0 >= 0.0
7567	orientation == PlotOrientation.VERTICAL
7568	orientation == PlotOrientation.VERTICAL
7569	y2 >= 0.0
7570	orientation == PlotOrientation.VERTICAL
7571	orientation == PlotOrientation.VERTICAL
7572	y0 >= 0.0
7573	orientation == PlotOrientation.VERTICAL
7574	orientation == PlotOrientation.VERTICAL
7575	y2 >= 0.0
7576	orientation == PlotOrientation.VERTICAL
7577	orientation == PlotOrientation.VERTICAL
7578	pass == 0
7579	entities != null
7580	Double.isNaN(v)
7581	v >= 0.0
7582	stack1[0] == 0.0
7582	stack2[0] == 0.0
7583	stack1[1] == 0.0
7583	stack2[1] == 0.0
7584	obj == this
7585	obj instanceof StackedXYAreaRenderer2
7586	this.roundXCoordinates != that.roundXCoordinates
7500	dataset != null
7501	this.renderAsPercentages
7502	dataset instanceof IntervalXYDataset
7502	dataset instanceof TableXYDataset
7503	IntervalXYDataset.class.isAssignableFrom(dataset.getClass())
7504	TableXYDataset.class.isAssignableFrom(dataset.getClass())
7505	and
7506	Double.isNaN(value)
7507	this.renderAsPercentages
7508	Double.isNaN(v)
7509	this.renderAsPercentages
7510	v > 0
7511	value > 0.0
7512	Double.isNaN(startX)
7513	Double.isNaN(endX)
7514	getMargin() > 0.0
7515	orientation == PlotOrientation.HORIZONTAL
7516	orientation == PlotOrientation.VERTICAL
7517	orientation == PlotOrientation.HORIZONTAL
7518	inverted
7518	inverted
7518	positive
7518	positive
7519	inverted
7519	positive
7519	inverted
7519	positive
7520	pass == 0
7521	getShadowsVisible()
7522	pass == 1
7523	state.getInfo() != null
7524	entities != null
7525	pass == 2
7526	isItemLabelVisible(series, item, selected)
7527	obj == this
7528	obj instanceof StackedXYBarRenderer
7529	this.renderAsPercentages != that.renderAsPercentages
8521	itemPaint instanceof GradientPaint
8521	t != null
8522	renderer.isDrawBarOutline()
8523	stroke != null
8523	paint != null
8524	itemPaint instanceof Color
8525	c.getAlpha() == 0
8526	base == RectangleEdge.TOP
8527	pegShadow
8528	base == RectangleEdge.BOTTOM
8529	pegShadow
8530	base == RectangleEdge.LEFT
8531	pegShadow
8532	base == RectangleEdge.RIGHT
8533	pegShadow
8534	obj == this
8535	obj instanceof StandardBarPainter
2285	obj == this
2286	obj instanceof StandardCategoryItemLabelGenerator
2223	format == null
2224	dataset == null
2225	obj == this
2226	obj instanceof StandardCategorySeriesLabelGenerator
2227	this.formatPattern.equals(that.formatPattern)
2317	obj == this
2318	obj instanceof StandardCategoryToolTipGenerator
6221	prefix == null
6222	prefix == null
6223	seriesParameterName == null
6224	categoryParameterName == null
6225	obj == this
6226	obj instanceof StandardCategoryURLGenerator
6227	ObjectUtilities.equal(this.prefix, that.prefix)
6228	ObjectUtilities.equal(this.seriesParameterName, that.seriesParameterName)
6229	ObjectUtilities.equal(this.categoryParameterName, that.categoryParameterName)
6033	name == null
6034	font == null
6035	font == null
6036	font == null
6037	font == null
6038	paint == null
6039	paint == null
6040	paint == null
6041	paint == null
6042	paint == null
6043	paint == null
6044	paint == null
6045	style == null
6046	paint == null
6047	paint == null
6048	paint == null
6049	paint == null
6050	paint == null
6051	offset == null
6052	paint == null
6053	paint == null
6054	paint == null
6055	paint == null
6056	painter == null
6057	painter == null
6058	paint == null
6059	paint == null
6060	paint == null
6061	paint == null
6062	paint == null
6063	this.drawingSupplier instanceof PublicCloneable
6064	supplier == null
6065	chart == null
6066	title != null
6067	plot != null
6068	title instanceof TextTitle
6069	title instanceof LegendTitle
6070	lt.getBackgroundPaint() != null
6071	lt.getWrapper() != null
6072	title instanceof PaintScaleLegend
6073	axis != null
6074	title instanceof CompositeTitle
6075	b instanceof Title
6076	b instanceof Title
6077	b instanceof LabelBlock
6078	plot == null
6079	plot.getDrawingSupplier() != null
6080	plot.getBackgroundPaint() != null
6081	plot instanceof PiePlot
6082	plot instanceof MultiplePiePlot
6083	plot instanceof CategoryPlot
6084	plot instanceof XYPlot
6085	plot instanceof FastScatterPlot
6086	plot instanceof MeterPlot
6087	plot instanceof ThermometerPlot
6088	plot instanceof SpiderWebPlot
6089	plot instanceof PolarPlot
6090	plot.getAutoPopulateSectionPaint()
6091	plot.getAutoPopulateSectionOutlinePaint()
6092	plot.getAutoPopulateSectionOutlineStroke()
6093	axis != null
6094	axis != null
6095	r != null
6096	plot instanceof CombinedDomainCategoryPlot
6097	subplot != null
6098	plot instanceof CombinedRangeCategoryPlot
6099	subplot != null
6100	axis != null
6101	axis != null
6102	r != null
6103	plot instanceof CombinedDomainXYPlot
6104	subplot != null
6105	plot instanceof CombinedRangeXYPlot
6106	subplot != null
6107	xAxis != null
6108	yAxis != null
6109	axis != null
6110	axis != null
6111	axis instanceof SubCategoryAxis
6112	axis instanceof SymbolAxis
6113	axis instanceof PeriodAxis
6114	renderer.getAutoPopulateSeriesPaint()
6115	renderer.getAutoPopulateSeriesStroke()
6116	renderer == null
6117	renderer instanceof AbstractRenderer
6118	renderer instanceof BarRenderer
6119	renderer instanceof BarRenderer3D
6120	renderer instanceof LineRenderer3D
6121	renderer instanceof StatisticalBarRenderer
6122	renderer instanceof MinMaxCategoryRenderer
6123	renderer == null
6124	renderer instanceof AbstractRenderer
6125	renderer instanceof XYBarRenderer
6126	annotation == null
6127	annotation instanceof XYTextAnnotation
6128	obj == this
6129	obj instanceof StandardChartTheme
6130	this.name.equals(that.name)
6131	this.extraLargeFont.equals(that.extraLargeFont)
6132	this.largeFont.equals(that.largeFont)
6133	this.regularFont.equals(that.regularFont)
6134	this.smallFont.equals(that.smallFont)
6135	PaintUtilities.equal(this.titlePaint, that.titlePaint)
6136	PaintUtilities.equal(this.subtitlePaint, that.subtitlePaint)
6137	PaintUtilities.equal(this.chartBackgroundPaint, that.chartBackgroundPaint)
6138	PaintUtilities.equal(this.legendBackgroundPaint, that.legendBackgroundPaint)
6139	PaintUtilities.equal(this.legendItemPaint, that.legendItemPaint)
6140	this.drawingSupplier.equals(that.drawingSupplier)
6141	PaintUtilities.equal(this.plotBackgroundPaint, that.plotBackgroundPaint)
6142	PaintUtilities.equal(this.plotOutlinePaint, that.plotOutlinePaint)
6143	this.labelLinkStyle.equals(that.labelLinkStyle)
6144	PaintUtilities.equal(this.labelLinkPaint, that.labelLinkPaint)
6145	PaintUtilities.equal(this.domainGridlinePaint, that.domainGridlinePaint)
6146	PaintUtilities.equal(this.rangeGridlinePaint, that.rangeGridlinePaint)
6147	PaintUtilities.equal(this.crosshairPaint, that.crosshairPaint)
6148	this.axisOffset.equals(that.axisOffset)
6149	PaintUtilities.equal(this.axisLabelPaint, that.axisLabelPaint)
6150	PaintUtilities.equal(this.tickLabelPaint, that.tickLabelPaint)
6151	PaintUtilities.equal(this.itemLabelPaint, that.itemLabelPaint)
6152	this.shadowVisible != that.shadowVisible
6153	PaintUtilities.equal(this.shadowPaint, that.shadowPaint)
6154	this.barPainter.equals(that.barPainter)
6155	this.xyBarPainter.equals(that.xyBarPainter)
6156	PaintUtilities.equal(this.thermometerPaint, that.thermometerPaint)
6157	PaintUtilities.equal(this.wallPaint, that.wallPaint)
6158	PaintUtilities.equal(this.errorIndicatorPaint, that.errorIndicatorPaint)
6159	PaintUtilities.equal(this.gridBandPaint, that.gridBandPaint)
6160	PaintUtilities.equal(this.gridBandAlternatePaint, that.gridBandAlternatePaint)
2266	labelTemplate == null
2267	numberFormat == null
2268	obj == this
2269	obj instanceof StandardCrosshairLabelGenerator
2270	this.labelTemplate.equals(that.labelTemplate)
2271	this.numberFormat.equals(that.numberFormat)
3948	radius <= 0
3949	paint == null
3950	paint == null
3951	stroke == null
3952	obj == this
3953	obj instanceof StandardDialFrame
3954	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
3955	PaintUtilities.equal(this.foregroundPaint, that.foregroundPaint)
3956	this.radius != that.radius
3957	this.stroke.equals(that.stroke)
3922	paint == null
3923	bound >= this.upperBound
3924	bound <= this.lowerBound
3925	lower >= upper
3926	paint == null
3927	scale == null
3928	obj == this
3929	obj instanceof StandardDialRange
3930	this.scaleIndex != that.scaleIndex
3931	this.lowerBound != that.lowerBound
3932	this.upperBound != that.upperBound
3933	PaintUtilities.equal(this.paint, that.paint)
3934	this.innerRadius != that.innerRadius
3935	this.outerRadius != that.outerRadius
3872	radius <= 0.0
3873	increment <= 0.0
3874	length < 0.0
3875	paint == null
3876	stroke == null
3877	count < 0
3878	length < 0.0
3879	paint == null
3880	stroke == null
3881	font == null
3882	paint == null
3883	formatter == null
3884	this.minorTickCount > 0
3884	this.minorTickLength > 0.0
3885	this.tickLabelsVisible
3886	firstLabel
3886	this.firstTickLabelVisible
3887	this.minorTickLength > 0.0
3887	this.minorTickCount > 0
3888	vv >= this.upperBound
3889	obj == this
3890	obj instanceof StandardDialScale
3891	this.lowerBound != that.lowerBound
3892	this.upperBound != that.upperBound
3893	this.startAngle != that.startAngle
3894	this.extent != that.extent
3895	this.tickRadius != that.tickRadius
3896	this.majorTickIncrement != that.majorTickIncrement
3897	this.majorTickLength != that.majorTickLength
3898	PaintUtilities.equal(this.majorTickPaint, that.majorTickPaint)
3899	this.majorTickStroke.equals(that.majorTickStroke)
3900	this.minorTickCount != that.minorTickCount
3901	this.minorTickLength != that.minorTickLength
3902	PaintUtilities.equal(this.minorTickPaint, that.minorTickPaint)
3903	this.minorTickStroke.equals(that.minorTickStroke)
3904	this.tickLabelsVisible != that.tickLabelsVisible
3905	this.tickLabelOffset != that.tickLabelOffset
3906	this.tickLabelFont.equals(that.tickLabelFont)
3907	PaintUtilities.equal(this.tickLabelPaint, that.tickLabelPaint)
5491	entity == null
5492	entity.getArea().contains(x, y)
5493	obj == this
5494	obj instanceof StandardEntityCollection
2007	type == null
2008	this.type.equals(GradientPaintTransformType.VERTICAL)
2009	this.type.equals(GradientPaintTransformType.HORIZONTAL)
2010	this.type.equals( GradientPaintTransformType.CENTER_HORIZONTAL)
2011	this.type.equals(GradientPaintTransformType.CENTER_VERTICAL)
2012	obj == this
2013	obj instanceof StandardGradientPaintTransformer
2014	this.type != that.type
2369	obj == this
2370	obj instanceof StandardPieSectionLabelGenerator
2371	this.attributedLabels.equals(that.attributedLabels)
2372	super.equals(obj)
6161	prefix == null
6162	categoryParameterName == null
6163	url.indexOf("?") > -1
6164	this.indexParameterName != null
6165	obj == this
6166	obj instanceof StandardPieURLGenerator
6167	this.prefix.equals(that.prefix)
6168	this.categoryParameterName.equals(that.categoryParameterName)
6169	ObjectUtilities.equal(this.indexParameterName, that.indexParameterName)
4859	obj == this
7762	t != null
7762	itemPaint instanceof GradientPaint
7763	renderer.isDrawBarOutline()
7764	paint != null
7764	stroke != null
7765	itemPaint instanceof Color
7766	c.getAlpha() == 0
7767	base == RectangleEdge.TOP
7768	pegShadow
7769	base == RectangleEdge.BOTTOM
7770	pegShadow
7771	base == RectangleEdge.LEFT
7772	pegShadow
7773	base == RectangleEdge.RIGHT
7774	pegShadow
7775	obj == this
7776	obj instanceof StandardXYBarPainter
2337	obj == this
2338	obj instanceof StandardXYItemLabelGenerator
7682	(type & SHAPES) != 0
7683	(type & LINES) != 0
7684	(type & IMAGES) != 0
7685	(type & DISCONTINUOUS) != 0
7686	this.baseShapesVisible != flag
7687	flag != null
7688	this.plotLines != flag
7689	thresholdType == null
7690	this.plotImages != flag
7691	this.plotDiscontinuous != flag
7692	line == null
7693	plot == null
7694	dataset != null
7695	getItemVisible(series, 0)
7696	getLegendItemToolTipGenerator() != null
7697	getLegendItemURLGenerator() != null
7698	labelPaint != null
7699	state.getInfo() != null
7700	Double.isNaN(y1)
7700	Double.isNaN(x1)
7701	getPlotLines()
7702	this.drawSeriesLineAsPath
7703	s.getSeriesIndex() != series
7704	Double.isNaN(transX1)
7704	Double.isNaN(transY1)
7704	itemVisible
7705	orientation == PlotOrientation.HORIZONTAL
7706	s.isLastPointGood()
7707	item == dataset.getItemCount(series) - 1
7708	s.seriesIndex == series
7709	itemVisible
7709	item != 0
7710	Double.isNaN(y0)
7710	Double.isNaN(x0)
7711	getPlotDiscontinuous()
7712	this.gapThresholdType == UnitType.ABSOLUTE
7713	drawLine
7714	Double.isNaN(transX0)
7714	Double.isNaN(transY0)
7714	Double.isNaN(transX1)
7714	Double.isNaN(transY1)
7715	orientation == PlotOrientation.HORIZONTAL
7716	orientation == PlotOrientation.VERTICAL
7717	state.workingLine.intersects(dataArea)
7718	itemVisible
7719	getBaseShapesVisible()
7720	orientation == PlotOrientation.HORIZONTAL
7721	orientation == PlotOrientation.VERTICAL
7722	shape.intersects(dataArea)
7723	getItemShapeFilled(series, item)
7724	getPlotImages()
7725	image != null
7726	orientation == PlotOrientation.HORIZONTAL
7727	isItemLabelVisible(series, item, selected)
7728	entities != null
7728	ShapeUtilities.isPointInRect(xx, yy, dataArea)
7729	obj == this
7730	obj instanceof StandardXYItemRenderer
7731	this.baseShapesVisible != that.baseShapesVisible
7732	this.plotLines != that.plotLines
7733	this.plotImages != that.plotImages
7734	this.plotDiscontinuous != that.plotDiscontinuous
7735	this.gapThresholdType != that.gapThresholdType
7736	this.gapThreshold != that.gapThreshold
7737	this.seriesShapesFilled.equals(that.seriesShapesFilled)
7738	this.baseShapesFilled != that.baseShapesFilled
7739	this.drawSeriesLineAsPath != that.drawSeriesLineAsPath
7740	ShapeUtilities.equal(this.legendLine, that.legendLine)
2364	format == null
2365	dataset == null
2366	obj == this
2367	obj instanceof StandardXYSeriesLabelGenerator
2368	this.formatPattern.equals(that.formatPattern)
2315	obj == this
2316	obj instanceof StandardXYToolTipGenerator
6182	prefix == null
6183	seriesParameterName == null
6184	itemParameterName == null
6185	obj == this
6186	obj instanceof StandardXYURLGenerator
6187	ObjectUtilities.equal(that.prefix, this.prefix)
6188	ObjectUtilities.equal(that.seriesParameterName, this.seriesParameterName)
6189	ObjectUtilities.equal(that.itemParameterName, this.itemParameterName)
2228	zFormat == null
2229	zFormat == null
2230	xf != null
2231	yf != null
2232	this.zDateFormat != null
2233	obj == this
2234	obj instanceof StandardXYZToolTipGenerator
2235	super.equals(obj)
2236	ObjectUtilities.equal(this.zFormat, that.zFormat)
2237	ObjectUtilities.equal(this.zDateFormat, that.zDateFormat)
8172	visibleRow < 0
8173	dataset instanceof StatisticalCategoryDataset
8174	orientation == PlotOrientation.HORIZONTAL
8175	orientation == PlotOrientation.VERTICAL
8176	seriesCount > 1
8177	meanValue == null
8178	uclip <= 0.0
8179	value >= uclip
8180	value <= lclip
8181	lclip <= 0.0
8182	value >= uclip
8183	value <= lclip
8184	value <= lclip
8185	value >= uclip
8186	t != null
8186	itemPaint instanceof GradientPaint
8187	state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD
8187	isDrawBarOutline()
8188	stroke != null
8188	paint != null
8189	n != null
8190	this.errorIndicatorPaint != null
8191	this.errorIndicatorStroke != null
8192	generator != null
8192	isItemLabelVisible(row, column, selected)
8193	entities != null
8194	seriesCount > 1
8195	meanValue == null
8196	uclip <= 0.0
8197	value >= uclip
8198	value <= lclip
8199	lclip <= 0.0
8200	value >= uclip
8201	value <= lclip
8202	value <= lclip
8203	value >= uclip
8204	t != null
8204	itemPaint instanceof GradientPaint
8205	isDrawBarOutline()
8205	state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD
8206	stroke != null
8206	paint != null
8207	n != null
8208	this.errorIndicatorPaint != null
8209	this.errorIndicatorStroke != null
8210	isItemLabelVisible(row, column, selected)
8210	generator != null
8211	entities != null
8212	obj == this
8213	obj instanceof StatisticalBarRenderer
8214	PaintUtilities.equal(this.errorIndicatorPaint, that.errorIndicatorPaint)
8215	ObjectUtilities.equal(this.errorIndicatorStroke, that.errorIndicatorStroke)
8365	getItemVisible(row, column)
8366	dataset instanceof StatisticalCategoryDataset
8367	visibleRow < 0
8368	meanValue == null
8369	getUseSeriesOffset()
8370	pass == 1
8370	sdv != null
8371	(meanValue.doubleValue() + valueDelta) > rangeAxis.getRange().getUpperBound()
8372	(meanValue.doubleValue() + valueDelta) < rangeAxis.getRange().getLowerBound()
8373	this.errorIndicatorPaint != null
8374	this.errorIndicatorStroke != null
8375	orientation == PlotOrientation.HORIZONTAL
8376	getItemShapeVisible(row, column)
8376	pass == 1
8377	orientation == PlotOrientation.HORIZONTAL
8378	orientation == PlotOrientation.VERTICAL
8379	getItemShapeFilled(row, column)
8380	getUseFillPaint()
8381	getDrawOutlines()
8382	getUseOutlinePaint()
8383	isItemLabelVisible(row, column, selected)
8384	orientation == PlotOrientation.HORIZONTAL
8385	orientation == PlotOrientation.VERTICAL
8386	getItemLineVisible(row, column)
8386	pass == 0
8387	column != 0
8388	previousValue != null
8389	getUseSeriesOffset()
8390	orientation == PlotOrientation.HORIZONTAL
8391	orientation == PlotOrientation.VERTICAL
8392	pass == 1
8393	entities != null
8394	obj == this
8395	obj instanceof StatisticalLineAndShapeRenderer
8396	PaintUtilities.equal(this.errorIndicatorPaint, that.errorIndicatorPaint)
8397	ObjectUtilities.equal(this.errorIndicatorStroke, that.errorIndicatorStroke)
770	values == null
771	values[i] != null
772	includeNullAndNaN
772	Double.isNaN(current)
773	values == null
774	object == null
775	includeNullAndNaN
776	object instanceof Number
777	Double.isNaN(value)
778	includeNullAndNaN
779	values != null
780	copyAndSort
781	count > 0
782	count % 2 == 1
783	count > 1
784	copyAndSort
785	count > 0
786	count % 2 == 1
787	count > 1
788	data == null
789	data.length == 0
790	xData == null
791	yData == null
792	xData.length != yData.length
793	xData == null
794	yData == null
795	xData.length != yData.length
796	data1 == null
797	data2 == null
798	data1.length != data2.length
799	data1[i] != null
800	data2[i] != null
801	xData.length != yData.length
802	period > xData.length
1894	base.length() < start.length()
1895	base.length() < end.length()
2027	obj == null
2028	obj == this
2029	obj instanceof StrokeList
2030	stroke != null
2031	index != -1
2056	key == null
2057	key == null
2058	obj == this
2059	obj instanceof StrokeMap
2060	this.store.size() != that.store.size()
2061	ObjectUtilities.equal(s1, s2)
6004	this.stroke != null
6005	value instanceof StrokeSample
4866	subCategory == null
4867	font == null
4868	paint == null
4869	space == null
4870	isVisible()
4871	RectangleEdge.isTopOrBottom(edge)
4872	RectangleEdge.isLeftOrRight(edge)
4873	RectangleEdge.isLeftOrRight(edge)
4874	isVisible()
4875	isAxisLineVisible()
4876	state == null
4877	dataset != null
4878	edge == RectangleEdge.TOP
4879	edge == RectangleEdge.BOTTOM
4880	edge == RectangleEdge.LEFT
4881	edge == RectangleEdge.RIGHT
4882	RectangleEdge.isTopOrBottom(edge)
4883	edge.equals(RectangleEdge.TOP)
4884	edge.equals(RectangleEdge.BOTTOM)
4885	edge == RectangleEdge.LEFT
4886	edge == RectangleEdge.RIGHT
4887	obj == this
4888	super.equals(obj)
4888	obj instanceof SubCategoryAxis
4889	this.subCategories.equals(axis.subCategories)
4890	this.subLabelFont.equals(axis.subLabelFont)
4891	this.subLabelPaint.equals(axis.subLabelPaint)
2392	quality < 0.0f
2392	quality > 1.0f
2393	bufferedImage == null
2394	outputStream == null
2395	bufferedImage == null
2396	outputStream == null
4915	this.gridBandsVisible != flag
4916	paint == null
4917	paint == null
4918	isVisible()
4919	this.gridBandsVisible
4920	RectangleEdge.isTopOrBottom(edge)
4921	RectangleEdge.isLeftOrRight(edge)
4922	getPlot().getOutlineStroke() != null
4923	currentGridBandIsDark
4924	outlineStroke instanceof BasicStroke
4924	outlineStroke != null
4925	currentGridBandIsDark
4926	plot == null
4927	plot instanceof ValueAxisPlot
4928	range < minRange
4929	getAutoRangeIncludesZero()
4930	getAutoRangeStickyZero()
4931	upper <= 0.0
4932	lower >= 0.0
4933	getAutoRangeStickyZero()
4934	upper <= 0.0
4935	lower >= 0.0
4936	RectangleEdge.isTopOrBottom(edge)
4937	RectangleEdge.isLeftOrRight(edge)
4938	count <= ValueAxis.MAXIMUM_TICK_COUNT
4939	formatter != null
4940	i > 0
4941	Math.abs(xx - previousDrawnTickLabelPos) < avgTickLabelLength
4942	tickLabelsOverlapping
4943	isVerticalTickLabels()
4944	edge == RectangleEdge.TOP
4945	edge == RectangleEdge.TOP
4946	count <= ValueAxis.MAXIMUM_TICK_COUNT
4947	formatter != null
4948	i > 0
4949	Math.abs(yy - previousDrawnTickLabelPos) < avgTickLabelLength
4950	tickLabelsOverlapping
4951	isVerticalTickLabels()
4952	edge == RectangleEdge.LEFT
4953	edge == RectangleEdge.LEFT
4954	obj == this
4955	obj instanceof SymbolAxis
4956	this.symbols.equals(that.symbols)
4957	this.gridBandsVisible != that.gridBandsVisible
4958	PaintUtilities.equal(this.gridBandPaint, that.gridBandPaint)
4959	PaintUtilities.equal(this.gridBandAlternatePaint, that.gridBandAlternatePaint)
2358	data instanceof YisSymbolic
2359	data instanceof XisSymbolic
2360	data instanceof TimeSeriesCollection
2361	nb <= 0
2362	obj == this
2363	obj instanceof SymbolicXYItemLabelGenerator
2116	this == obj
2117	obj instanceof TableOrder
2118	this.name.equals(that.name)
2119	this.equals(TableOrder.BY_ROW)
2120	this.equals(TableOrder.BY_COLUMN)
131	description == null
132	description == null
133	subtask == null
134	object == this
135	object instanceof Task
136	ObjectUtilities.equal(this.description, that.description)
137	ObjectUtilities.equal(this.duration, that.duration)
138	ObjectUtilities.equal(this.percentComplete, that.percentComplete)
139	ObjectUtilities.equal(this.subtasks, that.subtasks)
153	task == null
154	t.getDescription().equals(description)
155	obj == this
156	obj instanceof TaskSeries
157	super.equals(obj)
158	this.tasks.equals(that.tasks)
159	key == null
160	index >= 0
161	series < 0
161	series >= getSeriesCount()
162	columnKey == null
163	s.getKey().equals(rowKey)
164	series == null
165	index < 0
166	series == null
167	this.data.contains(series)
168	series >= getSeriesCount()
168	series < 0
169	task != null
170	duration != null
171	task != null
172	duration != null
173	task != null
174	task != null
175	task != null
176	sub != null
177	task != null
178	sub != null
179	task != null
180	sub != null
181	index < 0
182	obj == this
183	obj instanceof TaskSeriesCollection
184	ObjectUtilities.equal(this.data, that.data)
6405	this == obj
6406	obj instanceof TextAnchor
6407	this.name.equals(order.name)
6408	this.equals(TextAnchor.TOP_LEFT)
6409	this.equals(TextAnchor.TOP_CENTER)
6410	this.equals(TextAnchor.TOP_RIGHT)
6411	this.equals(TextAnchor.BOTTOM_LEFT)
6412	this.equals(TextAnchor.BOTTOM_CENTER)
6413	this.equals(TextAnchor.BOTTOM_RIGHT)
6414	this.equals(TextAnchor.BASELINE_LEFT)
6415	this.equals(TextAnchor.BASELINE_CENTER)
6416	this.equals(TextAnchor.BASELINE_RIGHT)
6417	this.equals(TextAnchor.CENTER_LEFT)
6418	this.equals(TextAnchor.CENTER)
6419	this.equals(TextAnchor.CENTER_RIGHT)
6420	this.equals(TextAnchor.HALF_ASCENT_LEFT)
6421	this.equals(TextAnchor.HALF_ASCENT_CENTER)
6422	this.equals(TextAnchor.HALF_ASCENT_RIGHT)
5699	text == null
5700	text == null
5701	font == null
5702	paint == null
5703	anchor == null
5704	obj == this
5705	obj instanceof TextAnnotation
5706	ObjectUtilities.equal(this.text, that.getText())
5707	ObjectUtilities.equal(this.font, that.getFont())
5708	PaintUtilities.equal(this.paint, that.getPaint())
5709	ObjectUtilities.equal(this.textAnchor, that.getTextAnchor())
5710	ObjectUtilities.equal(this.rotationAnchor, that.getRotationAnchor())
5711	this.rotationAngle != that.getRotationAngle()
6457	alignment == null
6458	index >= 0
6459	this.lineAlignment == HorizontalAlignment.CENTER
6460	this.lineAlignment == HorizontalAlignment.RIGHT
6461	anchor == TextBlockAnchor.BOTTOM_CENTER
6461	anchor == TextBlockAnchor.TOP_CENTER
6461	anchor == TextBlockAnchor.CENTER
6462	anchor == TextBlockAnchor.BOTTOM_RIGHT
6462	anchor == TextBlockAnchor.CENTER_RIGHT
6462	anchor == TextBlockAnchor.TOP_RIGHT
6463	anchor == TextBlockAnchor.TOP_RIGHT
6463	anchor == TextBlockAnchor.TOP_LEFT
6463	anchor == TextBlockAnchor.TOP_CENTER
6464	anchor == TextBlockAnchor.CENTER
6464	anchor == TextBlockAnchor.CENTER_LEFT
6464	anchor == TextBlockAnchor.CENTER_RIGHT
6465	anchor == TextBlockAnchor.BOTTOM_CENTER
6465	anchor == TextBlockAnchor.BOTTOM_LEFT
6465	anchor == TextBlockAnchor.BOTTOM_RIGHT
6466	obj == this
6467	obj instanceof TextBlock
6437	this == obj
6438	obj instanceof TextBlockAnchor
6439	this.name.equals(other.name)
6440	this.equals(TextBlockAnchor.TOP_CENTER)
6441	this.equals(TextBlockAnchor.TOP_LEFT)
6442	this.equals(TextBlockAnchor.TOP_RIGHT)
6443	this.equals(TextBlockAnchor.CENTER)
6444	this.equals(TextBlockAnchor.CENTER_LEFT)
6445	this.equals(TextBlockAnchor.CENTER_RIGHT)
6446	this.equals(TextBlockAnchor.BOTTOM_CENTER)
6447	this.equals(TextBlockAnchor.BOTTOM_LEFT)
6448	this.equals(TextBlockAnchor.BOTTOM_RIGHT)
6423	text != null
6424	this.shadowPaint != null
6425	this.backgroundPaint != null
6426	this.outlineStroke != null
6426	this.outlinePaint != null
6427	obj == this
6428	obj instanceof TextBox
6429	ObjectUtilities.equal(this.outlinePaint, that.outlinePaint)
6430	ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)
6431	ObjectUtilities.equal(this.interiorGap, that.interiorGap)
6432	ObjectUtilities.equal(this.backgroundPaint, that.backgroundPaint)
6433	ObjectUtilities.equal(this.shadowPaint, that.shadowPaint)
6434	this.shadowXOffset != that.shadowXOffset
6435	this.shadowYOffset != that.shadowYOffset
6436	ObjectUtilities.equal(this.textBlock, that.textBlock)
6351	text == null
6352	font == null
6353	paint == null
6354	anchor == TextAnchor.TOP_CENTER
6354	anchor == TextAnchor.TOP_RIGHT
6354	anchor == TextAnchor.TOP_LEFT
6355	anchor == TextAnchor.BOTTOM_LEFT
6355	anchor == TextAnchor.BOTTOM_CENTER
6355	anchor == TextAnchor.BOTTOM_RIGHT
6356	obj == null
6357	obj == this
6358	obj instanceof TextFragment
6359	this.text.equals(tf.text)
6360	this.font.equals(tf.font)
6361	this.paint.equals(tf.paint)
6449	text == null
6450	font == null
6451	paint == null
6452	this.fragments.size() > 0
6453	this.fragments.size() > 0
6454	obj == null
6455	obj == this
6456	obj instanceof TextLine
6527	text == null
6528	font == null
6529	paint == null
6530	text == null
6531	this.text.equals(text)
6532	alignment == null
6533	font == null
6534	this.font.equals(font)
6535	paint == null
6536	this.paint.equals(paint)
6537	w == LengthConstraintType.NONE
6538	h == LengthConstraintType.NONE
6539	h == LengthConstraintType.RANGE
6540	h == LengthConstraintType.FIXED
6541	w == LengthConstraintType.RANGE
6542	h == LengthConstraintType.NONE
6543	h == LengthConstraintType.RANGE
6544	h == LengthConstraintType.FIXED
6545	w == LengthConstraintType.FIXED
6546	h == LengthConstraintType.NONE
6547	h == LengthConstraintType.RANGE
6548	h == LengthConstraintType.FIXED
6549	position == RectangleEdge.BOTTOM
6549	position == RectangleEdge.TOP
6550	this.expandToFitSpace
6551	position == RectangleEdge.LEFT
6551	position == RectangleEdge.RIGHT
6552	this.expandToFitSpace
6553	widthRange.contains(s.getWidth())
6554	position == RectangleEdge.TOP
6554	position == RectangleEdge.BOTTOM
6555	this.expandToFitSpace
6556	position == RectangleEdge.RIGHT
6556	position == RectangleEdge.LEFT
6557	this.expandToFitSpace
6558	this.content == null
6559	this.text.equals("")
6560	params instanceof EntityBlockParams
6561	p.getGenerateEntities()
6562	this.backgroundPaint != null
6563	position == RectangleEdge.BOTTOM
6563	position == RectangleEdge.TOP
6564	position == RectangleEdge.RIGHT
6564	position == RectangleEdge.LEFT
6565	entity != null
6566	horizontalAlignment == HorizontalAlignment.LEFT
6567	horizontalAlignment == HorizontalAlignment.RIGHT
6568	horizontalAlignment == HorizontalAlignment.CENTER
6569	position == RectangleEdge.TOP
6570	position == RectangleEdge.BOTTOM
6571	horizontalAlignment == HorizontalAlignment.LEFT
6572	horizontalAlignment == HorizontalAlignment.CENTER
6573	horizontalAlignment == HorizontalAlignment.RIGHT
6574	verticalAlignment == VerticalAlignment.TOP
6575	verticalAlignment == VerticalAlignment.BOTTOM
6576	verticalAlignment == VerticalAlignment.CENTER
6577	position == RectangleEdge.LEFT
6578	position == RectangleEdge.RIGHT
6579	verticalAlignment == VerticalAlignment.TOP
6580	verticalAlignment == VerticalAlignment.CENTER
6581	verticalAlignment == VerticalAlignment.BOTTOM
6582	obj == this
6583	obj instanceof TextTitle
6584	ObjectUtilities.equal(this.text, that.text)
6585	ObjectUtilities.equal(this.font, that.font)
6586	PaintUtilities.equal(this.paint, that.paint)
6587	this.textAlignment != that.textAlignment
6588	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
6589	this.maximumLinesToDisplay != that.maximumLinesToDisplay
6590	this.expandToFitSpace != that.expandToFitSpace
6591	ObjectUtilities.equal(this.toolTipText, that.toolTipText)
6592	ObjectUtilities.equal(this.urlText, that.urlText)
6362	text == null
6363	index > start
6364	index < input.length() - 1
6365	index == start
6366	index < input.length() - 1
6367	next == BreakIterator.DONE
6368	current < length
6369	oldStr.length() > 3
6370	newline < 0
6371	end > newline
6372	x > width
6373	firstWord
6374	end <= start
6375	TextUtilities.useFontMetricsGetStringBounds
6376	anchor == TextAnchor.CENTER
6376	anchor == TextAnchor.BASELINE_CENTER
6376	anchor == TextAnchor.HALF_ASCENT_CENTER
6376	anchor == TextAnchor.TOP_CENTER
6376	anchor == TextAnchor.BOTTOM_CENTER
6377	anchor == TextAnchor.HALF_ASCENT_RIGHT
6377	anchor == TextAnchor.BOTTOM_RIGHT
6377	anchor == TextAnchor.BASELINE_RIGHT
6377	anchor == TextAnchor.TOP_RIGHT
6377	anchor == TextAnchor.CENTER_RIGHT
6378	anchor == TextAnchor.TOP_CENTER
6378	anchor == TextAnchor.TOP_RIGHT
6378	anchor == TextAnchor.TOP_LEFT
6379	anchor == TextAnchor.HALF_ASCENT_CENTER
6379	anchor == TextAnchor.HALF_ASCENT_LEFT
6379	anchor == TextAnchor.HALF_ASCENT_RIGHT
6380	anchor == TextAnchor.CENTER_LEFT
6380	anchor == TextAnchor.CENTER
6380	anchor == TextAnchor.CENTER_RIGHT
6381	anchor == TextAnchor.BASELINE_RIGHT
6381	anchor == TextAnchor.BASELINE_LEFT
6381	anchor == TextAnchor.BASELINE_CENTER
6382	anchor == TextAnchor.BOTTOM_RIGHT
6382	anchor == TextAnchor.BOTTOM_CENTER
6382	anchor == TextAnchor.BOTTOM_LEFT
6383	textBounds != null
6384	text.equals("")
6384	text == null
6385	useDrawRotatedStringWorkaround
6386	text.equals("")
6386	text == null
6387	text == null
6387	text.equals("")
6388	text == null
6388	text.equals("")
6389	anchor == TextAnchor.BOTTOM_CENTER
6389	anchor == TextAnchor.BASELINE_CENTER
6389	anchor == TextAnchor.CENTER
6389	anchor == TextAnchor.HALF_ASCENT_CENTER
6389	anchor == TextAnchor.TOP_CENTER
6390	anchor == TextAnchor.TOP_RIGHT
6390	anchor == TextAnchor.CENTER_RIGHT
6390	anchor == TextAnchor.BASELINE_RIGHT
6390	anchor == TextAnchor.BOTTOM_RIGHT
6390	anchor == TextAnchor.HALF_ASCENT_RIGHT
6391	anchor == TextAnchor.TOP_LEFT
6391	anchor == TextAnchor.TOP_RIGHT
6391	anchor == TextAnchor.TOP_CENTER
6392	anchor == TextAnchor.HALF_ASCENT_RIGHT
6392	anchor == TextAnchor.HALF_ASCENT_LEFT
6392	anchor == TextAnchor.HALF_ASCENT_CENTER
6393	anchor == TextAnchor.CENTER_RIGHT
6393	anchor == TextAnchor.CENTER_LEFT
6393	anchor == TextAnchor.CENTER
6394	anchor == TextAnchor.BASELINE_LEFT
6394	anchor == TextAnchor.BASELINE_CENTER
6394	anchor == TextAnchor.BASELINE_RIGHT
6395	anchor == TextAnchor.BOTTOM_CENTER
6395	anchor == TextAnchor.BOTTOM_RIGHT
6395	anchor == TextAnchor.BOTTOM_LEFT
6396	anchor == TextAnchor.TOP_LEFT
6396	anchor == TextAnchor.CENTER_LEFT
6396	anchor == TextAnchor.BASELINE_LEFT
6396	anchor == TextAnchor.HALF_ASCENT_LEFT
6396	anchor == TextAnchor.BOTTOM_LEFT
6397	anchor == TextAnchor.BASELINE_CENTER
6397	anchor == TextAnchor.BOTTOM_CENTER
6397	anchor == TextAnchor.TOP_CENTER
6397	anchor == TextAnchor.CENTER
6397	anchor == TextAnchor.HALF_ASCENT_CENTER
6398	anchor == TextAnchor.HALF_ASCENT_RIGHT
6398	anchor == TextAnchor.BOTTOM_RIGHT
6398	anchor == TextAnchor.BASELINE_RIGHT
6398	anchor == TextAnchor.CENTER_RIGHT
6398	anchor == TextAnchor.TOP_RIGHT
6399	anchor == TextAnchor.TOP_LEFT
6399	anchor == TextAnchor.TOP_CENTER
6399	anchor == TextAnchor.TOP_RIGHT
6400	anchor == TextAnchor.CENTER
6400	anchor == TextAnchor.CENTER_LEFT
6400	anchor == TextAnchor.CENTER_RIGHT
6401	anchor == TextAnchor.HALF_ASCENT_RIGHT
6401	anchor == TextAnchor.HALF_ASCENT_CENTER
6401	anchor == TextAnchor.HALF_ASCENT_LEFT
6402	anchor == TextAnchor.BASELINE_CENTER
6402	anchor == TextAnchor.BASELINE_RIGHT
6402	anchor == TextAnchor.BASELINE_LEFT
6403	anchor == TextAnchor.BOTTOM_RIGHT
6403	anchor == TextAnchor.BOTTOM_LEFT
6403	anchor == TextAnchor.BOTTOM_CENTER
6404	text == null
6404	text.equals("")
2423	dataset != null
2424	existing != null
2425	dataset != null
2426	axis == null
2427	padding == null
2428	s != null
2429	paint != null
2430	u < UNITS.length
2430	u >= 0
2431	this.units != u
2432	location >= 0
2432	location < 4
2433	location >= 0
2433	location < 3
2434	f == null
2435	this.valueFont.equals(f)
2436	paint == null
2437	this.valuePaint.equals(paint)
2438	formatter == null
2439	paint == null
2440	range >= 0
2440	range < 3
2441	range < 3
2441	range >= 0
2442	range >= 0
2442	isValidNumber(high)
2442	isValidNumber(low)
2442	range < this.subrangeInfo.length
2443	high > low
2444	range >= 0
2444	range < this.subrangePaint.length
2445	range >= 0
2445	range < this.subrangePaint.length
2445	paint != null
2446	info != null
2447	this.dataset.getValue() != null
2447	this.dataset != null
2448	k < (getGap() + interior.getMinY())
2449	k < (stemBottom + getBulbRadius())
2450	this.subrangeIndicatorsVisible
2451	range.contains(value)
2452	range.contains(value)
2453	range.contains(value)
2454	this.rangeAxis != null
2454	this.axisLocation != NONE
2455	tickX1 > area.getMinX()
2456	this.dataset != null
2457	vn != null
2458	inSubrange(NORMAL, value)
2459	inSubrange(WARNING, value)
2460	inSubrange(CRITICAL, value)
2461	this.followDataInSubranges
2461	this.subrange >= 0
2462	this.useSubrangePaint
2463	inSubrange(NORMAL, value)
2464	inSubrange(WARNING, value)
2465	inSubrange(CRITICAL, value)
2466	obj == this
2467	obj instanceof ThermometerPlot
2468	super.equals(obj)
2469	ObjectUtilities.equal(this.rangeAxis, that.rangeAxis)
2470	this.axisLocation != that.axisLocation
2471	this.lowerBound != that.lowerBound
2472	this.upperBound != that.upperBound
2473	ObjectUtilities.equal(this.padding, that.padding)
2474	ObjectUtilities.equal(this.thermometerStroke, that.thermometerStroke)
2475	PaintUtilities.equal(this.thermometerPaint, that.thermometerPaint)
2476	this.units != that.units
2477	this.valueLocation != that.valueLocation
2478	ObjectUtilities.equal(this.valueFont, that.valueFont)
2479	PaintUtilities.equal(this.valuePaint, that.valuePaint)
2480	ObjectUtilities.equal(this.valueFormat, that.valueFormat)
2481	PaintUtilities.equal(this.mercuryPaint, that.mercuryPaint)
2482	this.subrange != that.subrange
2483	this.followDataInSubranges != that.followDataInSubranges
2484	equal(this.subrangeInfo, that.subrangeInfo)
2485	this.useSubrangePaint != that.useSubrangePaint
2486	this.bulbRadius != that.bulbRadius
2487	this.columnRadius != that.columnRadius
2488	this.gap != that.gap
2489	PaintUtilities.equal(this.subrangePaint[i], that.subrangePaint[i])
2490	array1 == null
2491	array2 == null
2492	array1.length != array2.length
2493	Arrays.equals(array1[i], array2[i])
2494	clone.dataset != null
2495	clone.rangeAxis != null
2496	this.rangeAxis != null
5174	textAnchor == null
5175	rotationAnchor == null
5176	this == obj
5177	obj instanceof Tick
5178	ObjectUtilities.equal(this.text, t.text)
5179	ObjectUtilities.equal(this.textAnchor, t.textAnchor)
5180	ObjectUtilities.equal(this.rotationAnchor, t.rotationAnchor)
5181	this.angle == t.angle
5283	this == obj
5284	obj instanceof TickType
5285	this.name.equals(that.name)
5286	this.equals(TickType.MAJOR)
5287	this.equals(TickType.MINOR)
4852	object instanceof TickUnit
4853	this.size > other.getSize()
4854	this.size < other.getSize()
4855	obj == this
4856	obj instanceof TickUnit
4857	this.size != that.size
4858	this.minorTickCount != that.minorTickCount
4324	unit == null
4325	index >= 0
4326	index >= 0
4327	obj == this
4328	obj instanceof TickUnits
1312	this == obj
1313	obj instanceof TimePeriodAnchor
1314	this.name.equals(position.name)
1315	this.equals(TimePeriodAnchor.START)
1316	this.equals(TimePeriodAnchor.MIDDLE)
1317	this.equals(TimePeriodAnchor.END)
1453	period == null
1454	this == obj
1455	obj instanceof TimePeriodValue
1456	this.period.equals(timePeriodValue.period)
1456	this.period != null ? !this.period.equals(timePeriodValue.period) : timePeriodValue.period != null
1457	this.value.equals(timePeriodValue.value)
1457	this.value != null ? !this.value.equals(timePeriodValue.value) : timePeriodValue.value != null
1291	item == null
1292	this.minStartIndex >= 0
1293	start < minStart
1294	this.maxStartIndex >= 0
1295	start > maxStart
1296	this.minMiddleIndex >= 0
1297	middle < minMiddle
1298	this.maxMiddleIndex >= 0
1299	middle > maxMiddle
1300	this.minEndIndex >= 0
1301	end < minEnd
1302	this.maxEndIndex >= 0
1303	end > maxEnd
1304	obj == this
1305	obj instanceof TimePeriodValues
1306	super.equals(obj)
1307	ObjectUtilities.equal(this.getDomainDescription(), that.getDomainDescription())
1308	ObjectUtilities.equal(this.getRangeDescription(), that.getRangeDescription())
1309	count != that.getItemCount()
1310	getDataItem(i).equals(that.getDataItem(i))
1311	this.data.size() > 0
1353	series != null
1354	position == null
1355	series >= getSeriesCount()
1355	series < 0
1356	series == null
1357	series == null
1358	series != null
1359	this.xPosition == TimePeriodAnchor.START
1360	this.xPosition == TimePeriodAnchor.MIDDLE
1361	this.xPosition == TimePeriodAnchor.END
1362	r != null
1363	r != null
1364	count > 0
1365	includeInterval
1366	this.xPosition == TimePeriodAnchor.START
1367	this.xPosition == TimePeriodAnchor.MIDDLE
1368	this.xPosition == TimePeriodAnchor.END
1369	obj == this
1370	obj instanceof TimePeriodValuesCollection
1371	this.xPosition != that.xPosition
1372	ObjectUtilities.equal(this.data, that.data)
1077	maximum < 0
1078	count > maximum
1079	periods < 0
1080	index >= 0
1081	index >= 0
1082	index < 0
1083	period == null
1084	index >= 0
1085	item == null
1086	this.timePeriodClass == null
1087	this.timePeriodClass.equals(c)
1088	count == 0
1089	item.getPeriod().compareTo(last) > 0
1090	index < 0
1091	added
1092	getItemCount() > this.maximumItemCount
1093	notify
1094	index < 0
1095	oldYN != null
1096	Double.isNaN(oldY)
1097	iterate
1098	value != null
1099	oldItem != null
1100	item == null
1101	this.timePeriodClass == null
1102	this.timePeriodClass.equals(periodClass)
1103	index >= 0
1104	Double.isNaN(oldY)
1105	iterate
1106	item.getValue() != null
1107	getItemCount() > this.maximumItemCount
1108	getItemCount() > 1
1109	removed
1110	notify
1111	this.data.isEmpty()
1112	removed
1113	notify
1114	this.data.size() > 0
1115	index >= 0
1116	this.data.isEmpty()
1117	end < start
1118	this.data.isEmpty()
1119	notify
1120	start < 0
1121	end < start
1122	this.data.size() > 0
1123	start == null
1124	end == null
1125	start.compareTo(end) > 0
1126	startIndex < 0
1127	startIndex == this.data.size()
1128	endIndex < 0
1129	endIndex < 0
1129	endIndex < startIndex
1130	emptyRange
1131	obj == this
1132	obj instanceof TimeSeries
1133	ObjectUtilities.equal(getDomainDescription(), that.getDomainDescription())
1134	ObjectUtilities.equal(getRangeDescription(), that.getRangeDescription())
1135	ObjectUtilities.equal(this.timePeriodClass, that.timePeriodClass)
1136	getMaximumItemAge() != that.getMaximumItemAge()
1137	getMaximumItemCount() != that.getMaximumItemCount()
1138	count != that.getItemCount()
1139	ObjectUtilities.equal(this.data, that.data)
1140	count > 0
1141	count > 1
1142	count > 2
1143	item.getValue() != null
1144	yN != null
1145	Double.isNaN(y)
1146	y <= this.minY
1146	y >= this.maxY
1147	Double.isNaN(a)
1148	Double.isNaN(b)
1149	Double.isNaN(a)
1150	Double.isNaN(b)
2390	r instanceof XYLineAndShapeRenderer
1266	zone == null
1267	series != null
1268	anchor == null
1269	series == null
1270	series >= getSeriesCount()
1270	series < 0
1271	k.equals(key)
1271	k != null
1272	series == null
1273	series == null
1274	series != null
1275	this.xPosition == TimePeriodAnchor.START
1276	this.xPosition == TimePeriodAnchor.MIDDLE
1277	this.xPosition == TimePeriodAnchor.END
1278	notify
1279	m <= milliseconds
1280	m >= milliseconds
1281	r != null
1282	r != null
1283	count > 0
1284	includeInterval
1285	count > 0
1286	includeInterval
1287	obj == this
1288	obj instanceof TimeSeriesCollection
1289	this.xPosition != that.xPosition
1290	ObjectUtilities.equal(this.data, that.data)
1182	period == null
1183	this == obj
1184	obj instanceof TimeSeriesDataItem
1185	this.period.equals(that.period)
1186	ObjectUtilities.equal(this.value, that.value)
1187	this.selected != that.selected
1188	o1 instanceof TimeSeriesDataItem
1241	column == 0
1242	column == 1
1243	column == 0
1244	column == 1
1245	row < this.series.getItemCount()
1246	column == 0
1247	column == 1
1248	column == 0
1249	column == 1
1250	this.editable
1251	column == 1
1251	column == 0
1252	row < this.series.getItemCount()
1253	column == 1
1254	column == 0
1255	column == 1
6210	dateFormat == null
6211	prefix == null
6212	seriesParameterName == null
6213	itemParameterName == null
6214	seriesKey != null
6215	obj == this
6216	obj instanceof TimeSeriesURLGenerator
6217	this.dateFormat.equals(that.dateFormat)
6218	this.itemParameterName.equals(that.itemParameterName)
6219	this.prefix.equals(that.prefix)
6220	this.seriesParameterName.equals(that.seriesParameterName)
1189	zone == null
1190	locale == null
1191	anchor == null
1192	period instanceof RegularTimePeriod
1193	notify
1194	notify
1195	this.values.getRowCount() > 0
1196	this.xPosition == TimePeriodAnchor.START
1197	this.xPosition == TimePeriodAnchor.MIDDLE
1198	this.xPosition == TimePeriodAnchor.END
1199	r != null
1200	r != null
1201	keys.isEmpty()
1202	this.domainIsPointsInTime
1202	includeInterval
1203	obj == this
1204	obj instanceof TimeTableXYDataset
1205	this.domainIsPointsInTime != that.domainIsPointsInTime
1206	this.xPosition != that.xPosition
1207	this.workingCalendar.getTimeZone().equals( that.workingCalendar.getTimeZone())
1208	this.values.equals(that.values)
6634	position == null
6635	horizontalAlignment == null
6636	verticalAlignment == null
6637	padding == null
6638	position == null
6639	this.position != position
6640	alignment == null
6641	this.horizontalAlignment != alignment
6642	alignment == null
6643	this.verticalAlignment != alignment
6644	flag
6645	this.notify
6646	listeners[i] == TitleChangeListener.class
6647	obj == this
6648	obj instanceof Title
6649	this.visible != that.visible
6650	this.position != that.position
6651	this.horizontalAlignment != that.horizontalAlignment
6652	this.verticalAlignment != that.verticalAlignment
6653	this.notify != that.notify
5520	title == null
5521	obj == this
5522	obj instanceof TitleEntity
5523	getArea().equals(that.getArea())
5524	ObjectUtilities.equal(getToolTipText(), that.getToolTipText())
5525	ObjectUtilities.equal(getURLText(), that.getURLText())
5526	this.title.equals(that.title)
1941	obj == this
1942	obj instanceof UnitType
1943	this.name.equals(that.name)
1944	this.equals(UnitType.ABSOLUTE)
1945	this.equals(UnitType.RELATIVE)
4630	this.verticalTickLabels != flag
4631	arrow == null
4632	arrow == null
4633	arrow == null
4634	arrow == null
4635	edge == RectangleEdge.TOP
4636	edge == RectangleEdge.BOTTOM
4637	edge == RectangleEdge.LEFT
4638	edge == RectangleEdge.RIGHT
4639	this.positiveArrowVisible
4640	this.inverted
4641	this.negativeArrowVisible
4642	this.inverted
4643	drawUpOrRight
4644	edge == RectangleEdge.BOTTOM
4644	edge == RectangleEdge.TOP
4645	edge == RectangleEdge.LEFT
4645	edge == RectangleEdge.RIGHT
4646	drawDownOrLeft
4647	edge == RectangleEdge.TOP
4647	edge == RectangleEdge.BOTTOM
4648	edge == RectangleEdge.LEFT
4648	edge == RectangleEdge.RIGHT
4649	edge == RectangleEdge.TOP
4650	edge == RectangleEdge.BOTTOM
4651	edge == RectangleEdge.LEFT
4652	edge == RectangleEdge.RIGHT
4653	isAxisLineVisible()
4654	isTickLabelsVisible()
4655	isTickMarksVisible()
4655	isMinorTickMarksVisible()
4655	tick.getTickType().equals( TickType.MAJOR)
4655	tick.getTickType().equals(TickType.MINOR)
4656	edge == RectangleEdge.LEFT
4657	edge == RectangleEdge.RIGHT
4658	edge == RectangleEdge.TOP
4659	edge == RectangleEdge.BOTTOM
4660	isTickLabelsVisible()
4661	edge == RectangleEdge.LEFT
4662	edge == RectangleEdge.RIGHT
4663	edge == RectangleEdge.TOP
4664	edge == RectangleEdge.BOTTOM
4665	space == null
4666	isVisible()
4667	dimension > 0.0
4668	isTickLabelsVisible()
4669	RectangleEdge.isTopOrBottom(edge)
4670	RectangleEdge.isLeftOrRight(edge)
4671	RectangleEdge.isTopOrBottom(edge)
4672	RectangleEdge.isLeftOrRight(edge)
4673	vertical
4674	labelBounds.getWidth() + insets.getTop() + insets.getBottom() > maxHeight
4675	vertical
4676	labelBounds.getWidth() + insets.getLeft() + insets.getRight() > maxWidth
4677	this.inverted != flag
4678	this.autoRange != auto
4679	this.autoRange
4680	notify
4681	size <= 0.0
4682	this.autoRangeMinimumSize != size
4683	this.autoRange
4684	notify
4685	range == null
4686	isAutoRange()
4687	isAutoRange()
4688	isAutoRange()
4689	this.range.getUpperBound() > min
4690	this.range.getLowerBound() < max
4691	range == null
4692	turnOffAutoRange
4693	notify
4694	range == null
4695	this.autoTickUnitSelection != flag
4696	notify
4697	percent > 0.0
4698	percent > 0.0
4699	isInverted()
4700	obj == this
4701	obj instanceof ValueAxis
4702	this.positiveArrowVisible != that.positiveArrowVisible
4703	this.negativeArrowVisible != that.negativeArrowVisible
4704	this.inverted != that.inverted
4705	this.autoRange
4705	ObjectUtilities.equal(this.range, that.range)
4706	this.autoRange != that.autoRange
4707	this.autoRangeMinimumSize != that.autoRangeMinimumSize
4708	this.defaultAutoRange.equals(that.defaultAutoRange)
4709	this.upperMargin != that.upperMargin
4710	this.lowerMargin != that.lowerMargin
4711	this.fixedAutoRange != that.fixedAutoRange
4712	this.autoTickUnitSelection != that.autoTickUnitSelection
4713	ObjectUtilities.equal(this.standardTickUnits, that.standardTickUnits)
4714	this.verticalTickLabels != that.verticalTickLabels
4715	this.minorTickCount != that.minorTickCount
44	qName.equals(VALUE_TAG)
45	qName.equals(VALUE_TAG)
46	((Double) value).isNaN()
47	this.currentText != null
3691	obj == this
3692	super.equals(obj)
3693	obj instanceof ValueMarker
3694	this.value != that.value
4316	obj == this
4317	obj instanceof ValueTick
4318	this.value != that.value
4319	this.tickType.equals(that.tickType)
358	obj == this
359	obj instanceof Vector
360	this.x != that.x
361	this.y != that.y
218	vi != null
219	vi != null
8031	dataset == null
8032	dataset instanceof VectorXYDataset
8033	delta < 0.0
8034	minimum > maximum
8035	dataset == null
8036	dataset instanceof VectorXYDataset
8037	delta < 0.0
8038	minimum > maximum
8039	dataset instanceof VectorXYDataset
8040	orientation.equals(PlotOrientation.HORIZONTAL)
8041	dxx != 0.0
8042	orientation == PlotOrientation.VERTICAL
8043	state.getInfo() != null
8044	entities != null
8045	obj == this
8046	obj instanceof VectorRenderer
8047	this.baseLength != that.baseLength
8048	this.headLength != that.headLength
300	series == null
301	series == null
302	removed
303	series < 0
303	series >= getSeriesCount()
304	series == null
305	obj == this
306	obj instanceof VectorSeriesCollection
2104	this == obj
2105	obj instanceof VerticalAlignment
2106	this.name.equals(alignment.name)
2107	this.equals(VerticalAlignment.TOP)
2108	this.equals(VerticalAlignment.BOTTOM)
2109	this.equals(VerticalAlignment.CENTER)
1506	chipSpace == null
1507	isMaxValue(value)
1508	isMinValue(value)
1509	value != null
1510	rowIndex < 0
1511	colIndex < 0
1512	check.doubleValue() > this.maxValue.doubleValue()
1513	check.doubleValue() < this.minValue.doubleValue()
3301	dataset != null
3302	renderer != null
3303	this.dataset != null
3304	dataset != null
3305	this.renderer != null
3306	renderer != null
3307	b2
3307	b1
3308	info != null
3309	this.dataset != null
3310	plotArea.getWidth() != plotArea.getHeight()
3311	plotArea.getWidth() > plotArea.getHeight()
3312	plotArea.getWidth() == minor
3313	this.dataset.getChipValue(x - 1, ychips - y - 1) != null
3314	plotArea.getWidth() != plotArea.getHeight()
3315	plotArea.getWidth() > plotArea.getHeight()
3316	plotArea.getWidth() == minor
3317	this.orientation == PlotOrientation.HORIZONTAL
7054	paintLimit == null
7055	paintIndexMethod != null
7056	isMethodValid(paintIndexMethod.intValue())
7057	p != null
7058	this.plot == null
7059	uniqueValues.size() <= this.paintLimit
7060	++count % valuesPerColor == 0
7061	paint > this.paintLimit
7062	paint > this.paintLimit
7063	this.paintIndex.size() > 0
7063	this.paintIndex != null
7064	this.paintIndex.size() <= this.paintLimit
7065	unique.add(entry.getValue())
7066	((Integer) entry.getValue()).equals(index)
7067	((Number) entry.getKey()).doubleValue() < minValue
7068	((Integer) entry.getValue()).equals(index)
7069	((Number) entry.getKey()).doubleValue() > maxValue
8286	firstBarPaint == null
8287	positiveBarPaint == null
8288	negativeBarPaint == null
8289	lastBarPaint == null
8290	paint == null
8291	paint == null
8292	paint == null
8293	paint == null
8294	dataset == null
8295	n != null
8296	column == columnCount - 1
8297	allItemsNull
8298	column == dataset.getColumnCount() - 1
8299	n != null
8300	j2dy1 < j2dy0
8301	orientation == PlotOrientation.HORIZONTAL
8302	orientation == PlotOrientation.VERTICAL
8303	column == 0
8304	column == categoryCount - 1
8305	valDiff < 0.0
8306	valDiff > 0.0
8307	getGradientPaintTransformer() != null
8307	seriesPaint instanceof GradientPaint
8308	state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD
8308	isDrawBarOutline()
8309	paint != null
8309	stroke != null
8310	isItemLabelVisible(row, column, selected)
8310	generator != null
8311	entities != null
8312	obj == this
8313	super.equals(obj)
8314	obj instanceof WaterfallBarRenderer
8315	PaintUtilities.equal(this.firstBarPaint, that.firstBarPaint)
8316	PaintUtilities.equal(this.lastBarPaint, that.lastBarPaint)
8317	PaintUtilities.equal(this.positiveBarPaint, that.positiveBarPaint)
8318	PaintUtilities.equal(this.negativeBarPaint, that.negativeBarPaint)
1373	week > LAST_WEEK_IN_YEAR
1373	week < FIRST_WEEK_IN_YEAR
1374	week < FIRST_WEEK_IN_YEAR
1374	week > LAST_WEEK_IN_YEAR
1375	time == null
1376	zone == null
1377	locale == null
1378	tempWeek == 1
1378	calendar.get(Calendar.MONTH) == Calendar.DECEMBER
1379	calendar.get(Calendar.MONTH) == Calendar.JANUARY
1379	this.week >= 52
1380	this.week != FIRST_WEEK_IN_YEAR
1381	this.year > 1900
1382	this.week < 52
1383	this.week < actualMaxWeek
1384	this.year < 9999
1385	obj == this
1386	obj instanceof Week
1387	this.week != that.week
1388	this.year != that.year
1389	o1 instanceof Week
1390	result == 0
1391	o1 instanceof RegularTimePeriod
1392	s != null
1393	i != -1
1394	y != null
1395	w == -1
1396	y != null
1397	w == -1
1398	result == -1
1399	result == -1
1400	result == -1
1401	result < 1
1401	result > LAST_WEEK_IN_YEAR
5352	rotate != null
5352	plotArea != null
5353	object == null
5354	object == this
5355	super.equals(object)
5355	object instanceof WindNeedle
355	interval != null
356	interval != null
357	interval != null
329	series == null
330	series >= getSeriesCount()
330	series < 0
331	series >= getSeriesCount()
331	series < 0
332	series == null
333	this.data.contains(series)
334	obj == this
335	obj instanceof XIntervalSeriesCollection
5527	obj == this
5528	super.equals(obj)
5529	obj instanceof XYAnnotationEntity
5530	this.rendererIndex != that.rendererIndex
7205	type == SHAPES
7206	type == LINES
7207	type == SHAPES_AND_LINES
7208	type == AREA
7209	type == AREA_AND_SHAPES
7210	area == null
7211	transformer == null
7212	xyplot != null
7213	dataset != null
7214	getLegendItemToolTipGenerator() != null
7215	getLegendItemURLGenerator() != null
7216	labelPaint != null
7217	getItemVisible(series, item)
7218	Double.isNaN(y1)
7219	Double.isNaN(y0)
7220	Double.isNaN(y2)
7221	plot.getOrientation() == PlotOrientation.HORIZONTAL
7222	item == 0
7223	plot.getOrientation() == PlotOrientation.VERTICAL
7224	plot.getOrientation() == PlotOrientation.HORIZONTAL
7225	plot.getOrientation() == PlotOrientation.VERTICAL
7226	plot.getOrientation() == PlotOrientation.HORIZONTAL
7227	getPlotShapes()
7228	orientation == PlotOrientation.VERTICAL
7229	orientation == PlotOrientation.HORIZONTAL
7230	getPlotLines()
7231	item > 0
7232	plot.getOrientation() == PlotOrientation.VERTICAL
7233	plot.getOrientation() == PlotOrientation.HORIZONTAL
7234	getPlotArea()
7234	item > 0
7234	item == (itemCount - 1)
7235	orientation == PlotOrientation.VERTICAL
7236	orientation == PlotOrientation.HORIZONTAL
7237	this.useFillPaint
7238	paint instanceof GradientPaint
7239	isOutline()
7240	outlineStroke instanceof BasicStroke
7241	bs.getDashArray() != null
7242	hotspot != null
7242	entities != null
7243	obj == this
7244	obj instanceof XYAreaRenderer
7245	this.plotArea != that.plotArea
7246	this.plotLines != that.plotLines
7247	this.plotShapes != that.plotShapes
7248	this.showOutline != that.showOutline
7249	this.useFillPaint != that.useFillPaint
7250	this.gradientTransformer.equals(that.gradientTransformer)
7251	ShapeUtilities.equal(this.legendArea, that.legendArea)
7808	area == null
7809	xyplot != null
7810	dataset != null
7811	getLegendItemToolTipGenerator() != null
7812	getLegendItemURLGenerator() != null
7813	labelPaint != null
7814	getItemVisible(series, item)
7815	Double.isNaN(y1)
7816	Double.isNaN(y0)
7817	Double.isNaN(y2)
7818	plot.getOrientation() == PlotOrientation.HORIZONTAL
7819	isOutline()
7820	entities != null
7821	obj == this
7822	obj instanceof XYAreaRenderer2
7823	this.showOutline != that.showOutline
7824	ShapeUtilities.equal(this.legendArea, that.legendArea)
432	xnum != null
433	xnum != null
434	obj == this
435	obj instanceof XYBarDataset
436	this.underlying.equals(that.underlying)
437	this.barWidth != that.barWidth
438	this.underlying instanceof PublicCloneable
7947	painter == null
7948	this.useYInterval != use
7949	bar == null
7950	painter == null
7951	xyplot != null
7952	dataset != null
7953	getLegendItemToolTipGenerator() != null
7954	getLegendItemURLGenerator() != null
7955	this.drawBarOutline
7956	labelPaint != null
7957	getGradientPaintTransformer() != null
7958	getItemVisible(series, item)
7959	this.useYInterval
7960	Double.isNaN(value0)
7960	Double.isNaN(value1)
7961	value0 <= value1
7962	rangeAxis.getRange().intersects(value0, value1)
7963	rangeAxis.getRange().intersects(value1, value0)
7964	Double.isNaN(startX)
7965	Double.isNaN(endX)
7966	startX <= endX
7967	domainAxis.getRange().intersects(startX, endX)
7968	domainAxis.getRange().intersects(endX, startX)
7969	this.barAlignmentFactor <= 1.0
7969	this.barAlignmentFactor >= 0.0
7970	getMargin() > 0.0
7971	orientation == PlotOrientation.HORIZONTAL
7972	orientation == PlotOrientation.VERTICAL
7973	orientation == PlotOrientation.HORIZONTAL
7974	positive
7974	inverted
7974	inverted
7974	positive
7975	inverted
7975	positive
7975	positive
7975	inverted
7976	getShadowsVisible()
7977	isItemLabelVisible(series, item, selected)
7978	entities != null
7979	generator == null
7980	label == null
7981	negative
7982	isInternalAnchor(position.getItemLabelAnchor())
7983	bounds != null
7984	bar.contains(bounds.getBounds2D())
7985	negative
7986	position != null
7987	position != null
7988	anchor == ItemLabelAnchor.CENTER
7989	anchor == ItemLabelAnchor.INSIDE1
7990	anchor == ItemLabelAnchor.INSIDE2
7991	anchor == ItemLabelAnchor.INSIDE3
7992	anchor == ItemLabelAnchor.INSIDE4
7993	anchor == ItemLabelAnchor.INSIDE5
7994	anchor == ItemLabelAnchor.INSIDE6
7995	anchor == ItemLabelAnchor.INSIDE7
7996	anchor == ItemLabelAnchor.INSIDE8
7997	anchor == ItemLabelAnchor.INSIDE9
7998	anchor == ItemLabelAnchor.INSIDE10
7999	anchor == ItemLabelAnchor.INSIDE11
8000	anchor == ItemLabelAnchor.INSIDE12
8001	anchor == ItemLabelAnchor.OUTSIDE1
8002	anchor == ItemLabelAnchor.OUTSIDE2
8003	anchor == ItemLabelAnchor.OUTSIDE3
8004	anchor == ItemLabelAnchor.OUTSIDE4
8005	anchor == ItemLabelAnchor.OUTSIDE5
8006	anchor == ItemLabelAnchor.OUTSIDE6
8007	anchor == ItemLabelAnchor.OUTSIDE7
8008	anchor == ItemLabelAnchor.OUTSIDE8
8009	anchor == ItemLabelAnchor.OUTSIDE9
8010	anchor == ItemLabelAnchor.OUTSIDE10
8011	anchor == ItemLabelAnchor.OUTSIDE11
8012	anchor == ItemLabelAnchor.OUTSIDE12
8013	dataset != null
8014	dataset != null
8015	this.gradientPaintTransformer != null
8016	obj == this
8017	obj instanceof XYBarRenderer
8018	this.base != that.base
8019	this.drawBarOutline != that.drawBarOutline
8020	this.margin != that.margin
8021	this.useYInterval != that.useYInterval
8022	ObjectUtilities.equal(this.gradientPaintTransformer, that.gradientPaintTransformer)
8023	ShapeUtilities.equal(this.legendBar, that.legendBar)
8024	ObjectUtilities.equal(this.positiveItemLabelPositionFallback, that.positiveItemLabelPositionFallback)
8025	ObjectUtilities.equal(this.negativeItemLabelPositionFallback, that.negativeItemLabelPositionFallback)
8026	this.barPainter.equals(that.barPainter)
8027	this.shadowsVisible != that.shadowsVisible
8028	this.shadowXOffset != that.shadowXOffset
8029	this.shadowYOffset != that.shadowYOffset
8030	this.barAlignmentFactor != that.barAlignmentFactor
7125	width <= 0.0
7126	height <= 0.0
7127	anchor == null
7128	this.blockAnchor.equals(anchor)
7129	scale == null
7130	this.blockAnchor.equals(RectangleAnchor.BOTTOM_LEFT)
7131	this.blockAnchor.equals(RectangleAnchor.BOTTOM)
7132	this.blockAnchor.equals(RectangleAnchor.BOTTOM_RIGHT)
7133	this.blockAnchor.equals(RectangleAnchor.LEFT)
7134	this.blockAnchor.equals(RectangleAnchor.CENTER)
7135	this.blockAnchor.equals(RectangleAnchor.RIGHT)
7136	this.blockAnchor.equals(RectangleAnchor.TOP_LEFT)
7137	this.blockAnchor.equals(RectangleAnchor.TOP)
7138	this.blockAnchor.equals(RectangleAnchor.TOP_RIGHT)
7139	dataset != null
7140	r == null
7141	dataset != null
7142	r == null
7143	dataset instanceof XYZDataset
7144	orientation.equals(PlotOrientation.HORIZONTAL)
7145	entities != null
7146	obj == this
7147	obj instanceof XYBlockRenderer
7148	this.blockHeight != that.blockHeight
7149	this.blockWidth != that.blockWidth
7150	this.blockAnchor.equals(that.blockAnchor)
7151	this.paintScale.equals(that.paintScale)
7152	this.paintScale instanceof PublicCloneable
7314	width != this.boxWidth
7315	paint == null
7316	p != null
7317	orientation == PlotOrientation.HORIZONTAL
7318	orientation == PlotOrientation.VERTICAL
7319	state.getInfo() != null
7320	yAverage != null
7321	exactBoxWidth <= 0.0
7322	exactBoxWidth < 3
7323	exactBoxWidth > maxBoxWidth
7324	yyQ1Median < yyQ3Median
7325	this.fillBox
7326	yAverage != null
7327	yyAverage < (dataArea.getMaxX() + aRadius)
7327	yyAverage > (dataArea.getMinX() - aRadius)
7328	entities != null
7328	box.intersects(dataArea)
7329	state.getInfo() != null
7330	yAverage != null
7331	exactBoxWidth <= 0.0
7332	exactBoxWidth < 3
7333	exactBoxWidth > maxBoxWidth
7334	yyQ1Median > yyQ3Median
7335	this.fillBox
7336	yAverage != null
7337	yyAverage < (dataArea.getMaxY() + aRadius)
7337	yyAverage > (dataArea.getMinY() - aRadius)
7338	outlier > boxAndWhiskerData.getMaxOutlier(series, item).doubleValue()
7339	outlier < boxAndWhiskerData.getMinOutlier(series, item).doubleValue()
7340	outlier > boxAndWhiskerData.getMaxRegularValue(series, item).doubleValue()
7341	outlier < boxAndWhiskerData.getMinRegularValue(series, item).doubleValue()
7342	list.isMultiple()
7343	outlierListCollection.isHighFarOut()
7344	outlierListCollection.isLowFarOut()
7345	box.intersects(dataArea)
7345	entities != null
7346	obj == this
7347	obj instanceof XYBoxAndWhiskerRenderer
7348	super.equals(obj)
7349	this.boxWidth != that.getBoxWidth()
7350	PaintUtilities.equal(this.boxPaint, that.boxPaint)
7351	PaintUtilities.equal(this.artifactPaint, that.artifactPaint)
7352	this.fillBox != that.fillBox
5866	orientation == PlotOrientation.HORIZONTAL
5867	orientation == PlotOrientation.VERTICAL
5868	this.fillPaint != null
5869	this.outlinePaint != null
5869	this.stroke != null
5870	obj == this
5871	super.equals(obj)
5872	obj instanceof XYBoxAnnotation
5873	this.x0 == that.x0
5874	this.y0 == that.y0
5875	this.x1 == that.x1
5876	this.y1 == that.y1
5877	ObjectUtilities.equal(this.stroke, that.stroke)
5878	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
5879	PaintUtilities.equal(this.fillPaint, that.fillPaint)
7252	scaleType < 0
7252	scaleType > 2
7253	getItemVisible(series, item)
7254	dataset instanceof XYZDataset
7255	Double.isNaN(z)
7256	orientation == PlotOrientation.VERTICAL
7257	orientation == PlotOrientation.HORIZONTAL
7258	isItemLabelVisible(series, item, selected)
7259	orientation == PlotOrientation.VERTICAL
7260	orientation == PlotOrientation.HORIZONTAL
7261	state.getInfo() != null
7262	entities != null
7262	circle.intersects(dataArea)
7263	plot == null
7264	dataset != null
7265	getItemVisible(series, 0)
7266	getLegendItemToolTipGenerator() != null
7267	getLegendItemURLGenerator() != null
7268	labelPaint != null
7269	obj == this
7270	obj instanceof XYBubbleRenderer
7271	this.scaleType != that.scaleType
209	obj == this
210	obj instanceof XYCoordinate
211	this.x != that.x
212	this.y != that.y
213	obj instanceof XYCoordinate
214	this.x > that.x
215	this.x < that.x
216	this.y > that.y
217	this.y < that.y
1795	this == obj
1796	obj instanceof XYCoordinateType
1797	this.name.equals(order.toString())
1798	this.equals(XYCoordinateType.DATA)
1799	this.equals(XYCoordinateType.RELATIVE)
1800	this.equals(XYCoordinateType.INDEX)
5827	image == null
5828	orientation == PlotOrientation.HORIZONTAL
5829	orientation == PlotOrientation.VERTICAL
5830	toolTip != null
5830	url != null
5831	obj == this
5832	super.equals(obj)
5833	obj instanceof XYDataImageAnnotation
5834	this.x != that.x
5835	this.y != that.y
5836	this.w != that.w
5837	this.h != that.h
5838	this.includeInDataBounds != that.includeInDataBounds
5839	ObjectUtilities.equal(this.image, that.image)
307	x == null
308	this.y != null
309	o1 instanceof XYDataItem
310	compare > 0.0
311	compare < 0.0
312	obj == this
313	obj instanceof XYDataItem
314	this.x.equals(that.x)
315	ObjectUtilities.equal(this.y, that.y)
316	this.selected != that.selected
227	this.model == null
228	this.model == null
229	this.model == null
230	column < 1
231	this.model == null
232	column < 1
233	isCellEditable(row, column)
7398	positivePaint == null
7399	negativePaint == null
7400	paint == null
7401	paint == null
7402	line == null
7403	pass == 0
7404	pass == 1
7405	0 == x_item
7405	0 == x_series
7406	isEitherSeriesDegenerate(x_dataset, b_impliedZeroSubtrahend)
7407	b_impliedZeroSubtrahend
7407	areSeriesDisjoint(x_dataset)
7408	b_impliedZeroSubtrahend
7409	b_impliedZeroSubtrahend
7410	l_x2 <= l_x3
7411	l_x4 <= l_x1
7412	l_x1 < l_x4
7412	l_x3 < l_x1
7413	l_x3 < l_x2
7413	l_x1 < l_x3
7414	b_minuendFastForward
7414	b_minuendAdvanced
7414	b_minuendDone
7415	b_minuendAtIntersect
7416	b_subtrahendFastForward
7416	b_subtrahendDone
7416	b_impliedZeroSubtrahend
7416	b_subtrahendAdvanced
7417	b_subtrahendAtIntersect
7418	l_x2 == l_x4
7418	l_y2 == l_y4
7419	l_x1 == l_x3
7419	l_y1 == l_y3
7420	0 == l_denominator
7420	0 == l_numeratorA
7420	0 == l_numeratorB
7421	b_colinear
7422	l_slopeA <= 1
7422	0 < l_slopeB
7422	l_slopeB <= 1
7422	0 < l_slopeA
7423	b_intersect
7424	l_x2 <= l_x4
7425	l_x4 <= l_x2
7426	l_x3 < l_x2
7426	b_minuendDone
7426	l_x2 < l_x4
7427	l_x1 < l_x4
7427	b_subtrahendDone
7427	l_x4 < l_x2
7428	state.getInfo() != null
7429	getShapesVisible()
7430	l_orientation == PlotOrientation.HORIZONTAL
7431	l_shape.intersects(x_dataArea)
7432	null != l_entities
7433	null == l_entityArea
7434	null != l_tipGenerator
7435	null != l_urlGenerator
7436	isItemLabelVisible(x_series, x_item, selected)
7437	0 == x_item
7438	PlotOrientation.HORIZONTAL == l_orientation
7439	PlotOrientation.VERTICAL == l_orientation
7440	l_line.intersects(x_dataArea)
7440	null != l_line
7441	x_impliedZeroSubtrahend
7442	PlotOrientation.VERTICAL == l_orientation
7443	this.roundXCoordinates
7444	this.roundXCoordinates
7445	this.roundXCoordinates
7446	this.roundXCoordinates
7447	l_path.intersects(x_dataArea)
7448	p != null
7449	dataset != null
7450	getItemVisible(series, 0)
7451	getLegendItemToolTipGenerator() != null
7452	getLegendItemURLGenerator() != null
7453	labelPaint != null
7454	obj == this
7455	obj instanceof XYDifferenceRenderer
7456	super.equals(obj)
7457	PaintUtilities.equal(this.positivePaint, that.positivePaint)
7458	PaintUtilities.equal(this.negativePaint, that.negativePaint)
7459	this.shapesVisible != that.shapesVisible
7460	ShapeUtilities.equal(this.legendLine, that.legendLine)
7461	this.roundXCoordinates != that.roundXCoordinates
7609	w < 1
7610	h < 1
7611	shape == null
7612	getItemVisible(series, item)
7613	Double.isNaN(y)
7614	orientation == PlotOrientation.HORIZONTAL
7615	orientation == PlotOrientation.VERTICAL
7616	plot == null
7617	dataset == null
7618	getItemVisible(series, 0)
7619	getLegendItemToolTipGenerator() != null
7620	getLegendItemURLGenerator() != null
7621	labelPaint != null
7622	obj == this
7623	obj instanceof XYDotRenderer
7624	this.dotWidth != that.dotWidth
7625	this.dotHeight != that.dotHeight
7626	ShapeUtilities.equal(this.legendShape, that.legendShape)
5816	drawable == null
5817	toolTip != null
5817	url != null
5818	obj == this
5819	super.equals(obj)
5820	obj instanceof XYDrawableAnnotation
5821	this.x != that.x
5822	this.y != that.y
5823	this.displayWidth != that.displayWidth
5824	this.displayHeight != that.displayHeight
5825	this.drawScaleFactor != that.drawScaleFactor
5826	ObjectUtilities.equal(this.drawable, that.drawable)
7185	this.drawXError != draw
7186	this.drawYError != draw
7187	dataset != null
7188	dataset != null
7189	dataset instanceof IntervalXYDataset
7189	getItemVisible(series, item)
7189	pass == 0
7190	this.drawXError
7191	orientation == PlotOrientation.VERTICAL
7192	this.errorPaint != null
7193	this.errorStroke != null
7194	this.drawYError
7195	orientation == PlotOrientation.VERTICAL
7196	this.errorPaint != null
7197	this.errorStroke != null
7198	obj == this
7199	obj instanceof XYErrorRenderer
7200	this.drawXError != that.drawXError
7201	this.drawYError != that.drawYError
7202	this.capLength != that.capLength
7203	PaintUtilities.equal(this.errorPaint, that.errorPaint)
7204	ObjectUtilities.equal(this.errorStroke, that.errorStroke)
5880	image == null
5881	anchor == null
5882	orientation == PlotOrientation.HORIZONTAL
5883	orientation == PlotOrientation.VERTICAL
5884	url != null
5884	toolTip != null
5885	obj == this
5886	super.equals(obj)
5887	obj instanceof XYImageAnnotation
5888	this.x != that.x
5889	this.y != that.y
5890	ObjectUtilities.equal(this.image, that.image)
5891	this.anchor.equals(that.anchor)
220	obj == this
221	obj instanceof XYInterval
222	this.xLow != that.xLow
223	this.xHigh != that.xHigh
224	this.y != that.y
225	this.yLow != that.yLow
226	this.yHigh != that.yHigh
336	interval != null
337	interval != null
338	interval != null
339	interval != null
340	interval != null
388	series == null
389	series < 0
389	series >= getSeriesCount()
390	series < 0
390	series >= getSeriesCount()
391	series == null
392	this.data.contains(series)
393	obj == this
394	obj instanceof XYIntervalSeriesCollection
5509	obj == this
5510	obj instanceof XYItemEntity
5510	super.equals(obj)
5511	this.series != ie.series
5512	this.item != ie.item
7493	isShadowPass(pass)
7494	getWallPaint() != null
7495	obj == this
7496	obj instanceof XYLine3DRenderer
7497	this.xOffset != that.xOffset
7498	this.yOffset != that.yOffset
7499	PaintUtilities.equal(this.wallPaint, that.wallPaint)
7627	this.drawSeriesLineAsPath != flag
7628	flag != null
7629	line == null
7630	flag != null
7631	flag != null
7632	getItemVisible(series, item)
7633	isLinePass(pass)
7634	getItemLineVisible(series, item)
7635	this.drawSeriesLineAsPath
7636	isItemPass(pass)
7637	state.getInfo() != null
7638	item == 0
7639	Double.isNaN(y1)
7639	Double.isNaN(x1)
7640	Double.isNaN(x0)
7640	Double.isNaN(y0)
7641	Double.isNaN(transX0)
7641	Double.isNaN(transX1)
7641	Double.isNaN(transY0)
7641	Double.isNaN(transY1)
7642	orientation == PlotOrientation.HORIZONTAL
7643	orientation == PlotOrientation.VERTICAL
7644	visible
7645	Double.isNaN(transY1)
7645	Double.isNaN(transX1)
7646	orientation == PlotOrientation.HORIZONTAL
7647	s.isLastPointGood()
7648	item == s.getLastItemIndex()
7649	Double.isNaN(x1)
7649	Double.isNaN(y1)
7650	getItemShapeVisible(series, item)
7651	orientation == PlotOrientation.HORIZONTAL
7652	orientation == PlotOrientation.VERTICAL
7653	shape.intersects(dataArea)
7654	getItemShapeFilled(series, item)
7655	this.useFillPaint
7656	this.drawOutlines
7657	getUseOutlinePaint()
7658	orientation == PlotOrientation.HORIZONTAL
7659	isItemLabelVisible(series, item, selected)
7660	entities != null
7660	ShapeUtilities.isPointInRect(xx, yy, dataArea)
7661	plot == null
7662	dataset != null
7663	getItemVisible(series, 0)
7664	getLegendItemToolTipGenerator() != null
7665	getLegendItemURLGenerator() != null
7666	labelPaint != null
7667	this.legendLine != null
7668	obj == this
7669	obj instanceof XYLineAndShapeRenderer
7670	super.equals(obj)
7671	ObjectUtilities.equal(this.seriesLinesVisible, that.seriesLinesVisible)
7672	this.baseLinesVisible != that.baseLinesVisible
7673	ShapeUtilities.equal(this.legendLine, that.legendLine)
7674	ObjectUtilities.equal(this.seriesShapesVisible, that.seriesShapesVisible)
7675	this.baseShapesVisible != that.baseShapesVisible
7676	ObjectUtilities.equal(this.seriesShapesFilled, that.seriesShapesFilled)
7677	this.baseShapesFilled != that.baseShapesFilled
7678	this.drawOutlines != that.drawOutlines
7679	this.useOutlinePaint != that.useOutlinePaint
7680	this.useFillPaint != that.useFillPaint
7681	this.drawSeriesLineAsPath != that.drawSeriesLineAsPath
5801	stroke == null
5802	paint == null
5803	orientation == PlotOrientation.VERTICAL
5804	orientation == PlotOrientation.HORIZONTAL
5805	visible
5806	toolTip != null
5806	url != null
5807	obj == this
5808	super.equals(obj)
5809	obj instanceof XYLineAnnotation
5810	this.x1 != that.x1
5811	this.y1 != that.y1
5812	this.x2 != that.x2
5813	this.y2 != that.y2
5814	PaintUtilities.equal(this.paint, that.paint)
5815	ObjectUtilities.equal(this.stroke, that.stroke)
3318	dataset != null
3319	renderer != null
3320	domainAxis != null
3321	rangeAxis != null
3322	orientation == null
3323	orientation != this.orientation
3324	offset == null
3325	index < this.domainAxes.size()
3326	result == null
3327	parent instanceof XYPlot
3328	existing != null
3329	axis != null
3330	axis != null
3331	notify
3332	axis != null
3333	axis != null
3334	index < this.domainAxisLocations.size()
3335	result == null
3336	location == null
3336	index == 0
3337	notify
3338	result == null
3339	axis != null
3340	existing != null
3341	axis != null
3342	index < this.rangeAxes.size()
3343	result == null
3344	parent instanceof XYPlot
3345	existing != null
3346	axis != null
3347	axis != null
3348	notify
3349	axis != null
3350	axis != null
3351	index < this.rangeAxisLocations.size()
3352	result == null
3353	location == null
3353	index == 0
3354	notify
3355	result == null
3356	this.datasets.size() > index
3357	existing != null
3358	dataset != null
3359	dataset == this.datasets.get(i)
3360	index < 0
3361	index < 0
3362	indices == null
3363	count == 0
3364	item instanceof Integer
3365	set.contains(item)
3366	this.renderers.size() > index
3367	existing != null
3368	renderer != null
3369	notify
3370	order == null
3371	order == null
3372	this.datasets.get(i) == dataset
3373	result == null
3374	this.domainGridlinesVisible != visible
3375	this.domainMinorGridlinesVisible != visible
3376	stroke == null
3377	stroke == null
3378	paint == null
3379	paint == null
3380	this.rangeGridlinesVisible != visible
3381	stroke == null
3382	paint == null
3383	this.rangeMinorGridlinesVisible != visible
3384	stroke == null
3385	paint == null
3386	stroke == null
3387	paint == null
3388	stroke == null
3389	paint == null
3390	origin == null
3391	index < 0
3391	index > 3
3392	index > 3
3392	index < 0
3393	this.backgroundDomainMarkers != null
3394	this.foregroundDomainMarkers != null
3395	this.backgroundDomainMarkers != null
3396	markers != null
3397	this.foregroundRangeMarkers != null
3398	markers != null
3399	marker == null
3400	layer == null
3401	layer == Layer.FOREGROUND
3402	markers == null
3403	layer == Layer.BACKGROUND
3404	markers == null
3405	notify
3406	layer == Layer.FOREGROUND
3407	markers == null
3408	notify
3408	removed
3409	this.backgroundRangeMarkers != null
3410	this.foregroundRangeMarkers != null
3411	layer == Layer.FOREGROUND
3412	markers == null
3413	layer == Layer.BACKGROUND
3414	markers == null
3415	notify
3416	this.backgroundRangeMarkers != null
3417	markers != null
3418	this.foregroundRangeMarkers != null
3419	markers != null
3420	marker == null
3421	layer == Layer.FOREGROUND
3422	markers == null
3423	notify
3423	removed
3424	annotation == null
3425	notify
3426	annotation == null
3427	removed
3427	notify
3428	space == null
3429	this.fixedDomainAxisSpace != null
3430	this.orientation == PlotOrientation.HORIZONTAL
3431	this.orientation == PlotOrientation.VERTICAL
3432	axis != null
3433	space == null
3434	this.fixedRangeAxisSpace != null
3435	this.orientation == PlotOrientation.HORIZONTAL
3436	this.orientation == PlotOrientation.VERTICAL
3437	axis != null
3438	b1
3438	b2
3439	info != null
3440	info != null
3441	dataArea.contains(anchor)
3441	anchor != null
3442	anchor != null
3443	domainAxis != null
3444	orient == PlotOrientation.VERTICAL
3445	rangeAxis != null
3446	orient == PlotOrientation.VERTICAL
3447	domainAxisState == null
3448	parentState != null
3449	rangeAxisState == null
3450	parentState != null
3451	domainAxisState != null
3452	rangeAxisState != null
3453	domainAxisState != null
3454	rangeAxisState != null
3455	order == DatasetRenderingOrder.FORWARD
3456	r != null
3457	r != null
3458	order == DatasetRenderingOrder.REVERSE
3459	i >= getDatasetCount()
3460	r != null
3461	i >= getDatasetCount()
3462	r != null
3463	this.domainCrosshairLockedOnData
3463	anchor != null
3464	orient == PlotOrientation.VERTICAL
3465	isDomainCrosshairVisible()
3466	this.rangeCrosshairLockedOnData
3466	anchor != null
3467	orient == PlotOrientation.VERTICAL
3468	isRangeCrosshairVisible()
3469	foundData
3470	xAxis == null
3471	yAxis == null
3472	this.quadrantPaint[0] != null
3473	y < ymax
3473	x > xmin
3474	this.orientation == PlotOrientation.HORIZONTAL
3475	this.quadrantPaint[1] != null
3476	y < ymax
3476	x < xmax
3477	this.orientation == PlotOrientation.HORIZONTAL
3478	this.quadrantPaint[2] != null
3479	y > ymin
3479	x > xmin
3480	this.orientation == PlotOrientation.HORIZONTAL
3481	this.quadrantPaint[3] != null
3482	y > ymin
3482	x < xmax
3483	this.orientation == PlotOrientation.HORIZONTAL
3484	somethingToDraw
3485	r[i] != null
3485	this.quadrantPaint[i] != null
3486	bandPaint != null
3487	fillBand
3488	fillBand
3489	bandPaint != null
3490	fillBand
3491	fillBand
3492	axis != null
3493	yAxis != null
3494	DatasetUtilities.isEmptyOrNull(dataset)
3495	yAxis == null
3495	xAxis == null
3496	renderer == null
3497	renderer == null
3498	seriesOrder == SeriesRenderingOrder.REVERSE
3499	lastItem == -1
3500	state.getProcessVisibleItemsOnly()
3501	selectionState != null
3502	state.getProcessVisibleItemsOnly()
3503	selectionState != null
3504	index < 0
3504	index >= upper
3505	axisIndices != null
3506	index < 0
3506	index >= upper
3507	axisIndices != null
3508	getRenderer() == null
3509	isDomainGridlinesVisible()
3509	isDomainMinorGridlinesVisible()
3510	tick.getTickType() == TickType.MINOR
3510	isDomainMinorGridlinesVisible()
3511	isDomainGridlinesVisible()
3511	tick.getTickType() == TickType.MAJOR
3512	r instanceof AbstractXYItemRenderer
3512	paintLine
3513	getRenderer() == null
3514	isRangeGridlinesVisible()
3514	isRangeMinorGridlinesVisible()
3515	axis != null
3516	isRangeMinorGridlinesVisible()
3516	tick.getTickType() == TickType.MINOR
3517	tick.getTickType() == TickType.MAJOR
3517	isRangeGridlinesVisible()
3518	isRangeZeroBaselineVisible()
3518	paintLine
3518	tick.getValue() != 0.0
3519	isDomainZeroBaselineVisible()
3520	isRangeZeroBaselineVisible()
3521	r == null
3522	index >= getDatasetCount()
3523	markers != null
3523	axis != null
3524	r == null
3525	index >= getDatasetCount()
3526	axis != null
3526	markers != null
3527	layer == Layer.FOREGROUND
3528	layer == Layer.BACKGROUND
3529	result != null
3530	layer == Layer.FOREGROUND
3531	layer == Layer.BACKGROUND
3532	result != null
3533	getOrientation() == PlotOrientation.HORIZONTAL
3534	axis.getRange().contains(value)
3535	axis.getRange().contains(value)
3536	orientation == PlotOrientation.VERTICAL
3537	getOrientation() == PlotOrientation.HORIZONTAL
3538	axis.getRange().contains(value)
3539	axis.getRange().contains(value)
3540	orientation == PlotOrientation.HORIZONTAL
3541	dataArea.contains(x, y)
3542	xaxis != null
3543	yaxis != null
3544	axisIndex == null
3545	mappedAxes == null
3546	axisIndex.equals(ZERO)
3547	mappedAxes.contains(axisIndex)
3548	axisIndex == null
3549	mappedAxes == null
3550	axisIndex.equals(ZERO)
3551	mappedAxes.contains(axisIndex)
3552	result < 0
3553	parent instanceof XYPlot
3554	result < 0
3555	parent instanceof XYPlot
3556	domainIndex >= 0
3557	domainIndex == 0
3558	annotation instanceof XYAnnotationBoundsInfo
3559	rangeIndex >= 0
3560	rangeIndex == 0
3561	annotation instanceof XYAnnotationBoundsInfo
3562	d != null
3563	isDomainAxis
3564	r != null
3565	r != null
3566	a instanceof XYAnnotationBoundsInfo
3567	xyabi.getIncludeInDataBounds()
3568	isDomainAxis
3569	getParent() != null
3570	event.getSeriesVisibilityChanged()
3571	this.domainCrosshairVisible != flag
3572	this.domainCrosshairLockedOnData != flag
3573	notify
3573	isDomainCrosshairVisible()
3574	stroke == null
3575	paint == null
3576	this.rangeCrosshairVisible != flag
3577	this.rangeCrosshairLockedOnData != flag
3578	isRangeCrosshairVisible()
3578	notify
3579	stroke == null
3580	paint == null
3581	notify
3582	notify
3583	isDomainPannable()
3584	axis == null
3585	axis.isInverted()
3586	isRangePannable()
3587	axis == null
3588	axis.isInverted()
3589	domainAxis != null
3590	useAnchor
3591	this.orientation == PlotOrientation.HORIZONTAL
3592	domainAxis != null
3593	rangeAxis != null
3594	useAnchor
3595	this.orientation == PlotOrientation.HORIZONTAL
3596	rangeAxis != null
3597	dataset != null
3598	this.fixedLegendItems != null
3599	dataset != null
3600	renderer == null
3601	renderer != null
3602	renderer.isSeriesVisible(i)
3602	renderer.isSeriesVisibleInLegend(i)
3603	item != null
3604	obj == this
3605	obj instanceof XYPlot
3606	this.weight != that.weight
3607	this.orientation != that.orientation
3608	this.domainAxes.equals(that.domainAxes)
3609	this.domainAxisLocations.equals(that.domainAxisLocations)
3610	this.rangeCrosshairLockedOnData != that.rangeCrosshairLockedOnData
3611	this.domainGridlinesVisible != that.domainGridlinesVisible
3612	this.rangeGridlinesVisible != that.rangeGridlinesVisible
3613	this.domainMinorGridlinesVisible != that.domainMinorGridlinesVisible
3614	this.rangeMinorGridlinesVisible != that.rangeMinorGridlinesVisible
3615	this.domainZeroBaselineVisible != that.domainZeroBaselineVisible
3616	this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible
3617	this.domainCrosshairVisible != that.domainCrosshairVisible
3618	this.domainCrosshairValue != that.domainCrosshairValue
3619	this.domainCrosshairLockedOnData != that.domainCrosshairLockedOnData
3620	this.rangeCrosshairVisible != that.rangeCrosshairVisible
3621	this.rangeCrosshairValue != that.rangeCrosshairValue
3622	ObjectUtilities.equal(this.axisOffset, that.axisOffset)
3623	ObjectUtilities.equal(this.renderers, that.renderers)
3624	ObjectUtilities.equal(this.rangeAxes, that.rangeAxes)
3625	this.rangeAxisLocations.equals(that.rangeAxisLocations)
3626	ObjectUtilities.equal(this.datasetToDomainAxesMap, that.datasetToDomainAxesMap)
3627	ObjectUtilities.equal(this.datasetToRangeAxesMap, that.datasetToRangeAxesMap)
3628	ObjectUtilities.equal(this.domainGridlineStroke, that.domainGridlineStroke)
3629	PaintUtilities.equal(this.domainGridlinePaint, that.domainGridlinePaint)
3630	ObjectUtilities.equal(this.rangeGridlineStroke, that.rangeGridlineStroke)
3631	PaintUtilities.equal(this.rangeGridlinePaint, that.rangeGridlinePaint)
3632	ObjectUtilities.equal(this.domainMinorGridlineStroke, that.domainMinorGridlineStroke)
3633	PaintUtilities.equal(this.domainMinorGridlinePaint, that.domainMinorGridlinePaint)
3634	ObjectUtilities.equal(this.rangeMinorGridlineStroke, that.rangeMinorGridlineStroke)
3635	PaintUtilities.equal(this.rangeMinorGridlinePaint, that.rangeMinorGridlinePaint)
3636	PaintUtilities.equal(this.domainZeroBaselinePaint, that.domainZeroBaselinePaint)
3637	ObjectUtilities.equal(this.domainZeroBaselineStroke, that.domainZeroBaselineStroke)
3638	PaintUtilities.equal(this.rangeZeroBaselinePaint, that.rangeZeroBaselinePaint)
3639	ObjectUtilities.equal(this.rangeZeroBaselineStroke, that.rangeZeroBaselineStroke)
3640	ObjectUtilities.equal(this.domainCrosshairStroke, that.domainCrosshairStroke)
3641	PaintUtilities.equal(this.domainCrosshairPaint, that.domainCrosshairPaint)
3642	ObjectUtilities.equal(this.rangeCrosshairStroke, that.rangeCrosshairStroke)
3643	PaintUtilities.equal(this.rangeCrosshairPaint, that.rangeCrosshairPaint)
3644	ObjectUtilities.equal(this.foregroundDomainMarkers, that.foregroundDomainMarkers)
3645	ObjectUtilities.equal(this.backgroundDomainMarkers, that.backgroundDomainMarkers)
3646	ObjectUtilities.equal(this.foregroundRangeMarkers, that.foregroundRangeMarkers)
3647	ObjectUtilities.equal(this.backgroundRangeMarkers, that.backgroundRangeMarkers)
3648	ObjectUtilities.equal(this.foregroundDomainMarkers, that.foregroundDomainMarkers)
3649	ObjectUtilities.equal(this.backgroundDomainMarkers, that.backgroundDomainMarkers)
3650	ObjectUtilities.equal(this.foregroundRangeMarkers, that.foregroundRangeMarkers)
3651	ObjectUtilities.equal(this.backgroundRangeMarkers, that.backgroundRangeMarkers)
3652	ObjectUtilities.equal(this.annotations, that.annotations)
3653	ObjectUtilities.equal(this.fixedLegendItems, that.fixedLegendItems)
3654	PaintUtilities.equal(this.domainTickBandPaint, that.domainTickBandPaint)
3655	PaintUtilities.equal(this.rangeTickBandPaint, that.rangeTickBandPaint)
3656	this.quadrantOrigin.equals(that.quadrantOrigin)
3657	PaintUtilities.equal(this.quadrantPaint[i], that.quadrantPaint[i])
3658	axis != null
3659	axis != null
3660	d != null
3661	renderer2 instanceof PublicCloneable
3662	this.fixedDomainAxisSpace != null
3663	this.fixedRangeAxisSpace != null
3664	this.fixedLegendItems != null
3665	axis != null
3666	axis != null
3667	dataset != null
3668	renderer != null
3669	dataset == null
3670	state == null
3671	path.contains(x, y)
3672	dataset instanceof SelectableXYDataset
3673	segType == PathIterator.SEG_MOVETO
3674	segType == PathIterator.SEG_LINETO
3675	segType == PathIterator.SEG_CLOSE
3676	dataset instanceof AbstractXYDataset
3677	axyd.getSelectionState() != null
5723	stroke == null
5724	paint == null
5725	orientation == PlotOrientation.HORIZONTAL
5726	getBackgroundPaint() != null
5727	isOutlineVisible()
5728	toolTip != null
5728	url != null
5729	obj == this
5730	obj instanceof XYPointerAnnotation
5731	this.angle != that.angle
5732	this.tipRadius != that.tipRadius
5733	this.baseRadius != that.baseRadius
5734	this.arrowLength != that.arrowLength
5735	this.arrowWidth != that.arrowWidth
5736	this.arrowPaint.equals(that.arrowPaint)
5737	ObjectUtilities.equal(this.arrowStroke, that.arrowStroke)
5738	this.labelOffset != that.labelOffset
5892	polygon == null
5893	polygon.length % 2 != 0
5894	this.polygon.length < 4
5895	orientation == PlotOrientation.HORIZONTAL
5896	orientation == PlotOrientation.VERTICAL
5897	this.fillPaint != null
5898	this.stroke != null
5898	this.outlinePaint != null
5899	obj == this
5900	super.equals(obj)
5901	obj instanceof XYPolygonAnnotation
5902	Arrays.equals(this.polygon, that.polygon)
5903	ObjectUtilities.equal(this.stroke, that.stroke)
5904	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
5905	PaintUtilities.equal(this.fillPaint, that.fillPaint)
5906	this.stroke != null
250	item.getY() != null
251	Double.isNaN(x)
252	x <= this.minX
252	x >= this.maxX
253	item.getY() != null
254	Double.isNaN(y)
255	y >= this.maxY
255	y <= this.minY
256	itemContributesToYBounds
257	itemContributesToXBounds
258	getAutoSort()
259	remove > 0
260	item == null
261	this.autoSort
262	index < 0
263	this.allowDuplicateXValues
264	index < this.data.size()
265	this.allowDuplicateXValues
266	index >= 0
267	getItemCount() > this.maximumItemCount
268	notify
269	this.data.size() > 0
270	Double.isNaN(oldY)
271	iterate
272	y != null
273	Double.isNaN(a)
274	Double.isNaN(b)
275	Double.isNaN(a)
276	Double.isNaN(b)
277	index < 0
278	item == null
279	this.allowDuplicateXValues
280	index >= 0
281	Double.isNaN(oldY)
282	iterate
283	item.getY() != null
284	this.autoSort
285	getItemCount() > this.maximumItemCount
286	this.autoSort
287	item.getX().equals(x)
288	y != null
289	this.data.size() > 0
290	obj == this
291	obj instanceof XYSeries
292	super.equals(obj)
293	this.maximumItemCount != that.maximumItemCount
294	this.autoSort != that.autoSort
295	this.allowDuplicateXValues != that.allowDuplicateXValues
296	ObjectUtilities.equal(this.data, that.data)
297	count > 0
298	count > 1
299	count > 2
470	series != null
471	s.getAutoSort()
472	series == null
473	series < 0
473	series >= getSeriesCount()
474	series == null
475	this.data.contains(series)
476	series == null
477	series >= getSeriesCount()
477	series < 0
478	key == null
479	key.equals(series.getKey())
480	notify
481	obj == this
482	obj instanceof XYSeriesCollection
483	this.intervalDelegate.equals(that.intervalDelegate)
484	includeInterval
485	Double.isNaN(result)
486	Double.isNaN(lowX)
487	includeInterval
488	Double.isNaN(result)
489	Double.isNaN(hiX)
490	includeInterval
491	Double.isNaN(minX)
492	Double.isNaN(maxX)
493	lower > upper
494	width < 0.0
495	Double.isNaN(minY)
496	Double.isNaN(maxY)
497	lower > upper
498	Double.isNaN(result)
499	Double.isNaN(lowY)
500	Double.isNaN(result)
501	Double.isNaN(hiY)
5788	shape == null
5789	orientation == PlotOrientation.HORIZONTAL
5790	orientation == PlotOrientation.VERTICAL
5791	this.fillPaint != null
5792	this.stroke != null
5792	this.outlinePaint != null
5793	obj == this
5794	super.equals(obj)
5795	obj instanceof XYShapeAnnotation
5796	this.shape.equals(that.shape)
5797	ObjectUtilities.equal(this.stroke, that.stroke)
5798	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
5799	PaintUtilities.equal(this.fillPaint, that.fillPaint)
5800	this.stroke != null
7530	scale == null
7531	paint == null
7532	stroke == null
7533	dataset != null
7534	dataset != null
7535	state.getInfo() != null
7536	Double.isNaN(x)
7536	Double.isNaN(y)
7537	this.guideLinesVisible
7537	pass == 0
7538	orientation == PlotOrientation.HORIZONTAL
7539	pass == 1
7540	orientation == PlotOrientation.HORIZONTAL
7541	orientation == PlotOrientation.VERTICAL
7542	shape.intersects(dataArea)
7543	this.drawOutlines
7544	getUseOutlinePaint()
7545	entities != null
7546	dataset instanceof XYZDataset
7547	this.useFillPaint
7548	obj == this
7549	obj instanceof XYShapeRenderer
7550	this.paintScale.equals(that.paintScale)
7551	this.drawOutlines != that.drawOutlines
7552	this.useOutlinePaint != that.useOutlinePaint
7553	this.useFillPaint != that.useFillPaint
7554	this.guideLinesVisible != that.guideLinesVisible
7555	this.guideLinePaint.equals(that.guideLinePaint)
7556	this.guideLineStroke.equals(that.guideLineStroke)
7557	this.paintScale instanceof PublicCloneable
7599	precision <= 0
7600	p <= 0
7601	Double.isNaN(transY1)
7601	Double.isNaN(transX1)
7602	this.points.contains(p)
7603	item == dataset.getItemCount(series) - 1
7604	this.points.size() > 1
7605	this.points.size() == 2
7606	obj == this
7607	obj instanceof XYSplineRenderer
7608	this.precision != that.precision
7088	type == AREA
7089	type == SHAPES
7090	type == AREA_AND_SHAPES
7091	this.pArea == null
7091	Double.isNaN(y1)
7092	orientation == PlotOrientation.VERTICAL
7093	orientation == PlotOrientation.HORIZONTAL
7094	item > 0
7095	Double.isNaN(y1)
7096	transY0 != transY1
7097	orientation == PlotOrientation.VERTICAL
7098	orientation == PlotOrientation.HORIZONTAL
7099	Double.isNaN(y1)
7100	orientation == PlotOrientation.VERTICAL
7101	orientation == PlotOrientation.HORIZONTAL
7102	getShapesVisible()
7103	orientation == PlotOrientation.VERTICAL
7104	orientation == PlotOrientation.HORIZONTAL
7105	isShapesFilled()
7106	orientation == PlotOrientation.VERTICAL
7107	orientation == PlotOrientation.HORIZONTAL
7108	getPlotArea()
7108	item > 0
7108	Double.isNaN(y1)
7108	this.pArea != null
7108	item == (itemCount - 1)
7109	orientation == PlotOrientation.VERTICAL
7110	orientation == PlotOrientation.HORIZONTAL
7111	isOutline()
7112	Double.isNaN(y1)
7113	entities != null
7114	obj == this
7115	obj instanceof XYStepAreaRenderer
7116	this.showOutline != that.showOutline
7117	this.shapesVisible != that.shapesVisible
7118	this.shapesFilled != that.shapesFilled
7119	this.plotArea != that.plotArea
7120	this.rangeBase != that.rangeBase
7121	plot.getOrientation() == PlotOrientation.VERTICAL
7122	plot.getOrientation() == PlotOrientation.HORIZONTAL
7123	value < min
7124	value > max
8049	stepPoint < 0.0d
8049	stepPoint > 1.0d
8050	getItemVisible(series, item)
8051	pass== 0
8051	item > 0
8052	orientation == PlotOrientation.HORIZONTAL
8053	transY0 == transY1
8054	orientation == PlotOrientation.VERTICAL
8055	transY0 == transY1
8056	entities != null
8057	pass == 1
8058	isItemLabelVisible(series, item, selected)
8059	orientation == PlotOrientation.HORIZONTAL
8060	Double.isNaN(x1)
8060	Double.isNaN(y0)
8060	Double.isNaN(x0)
8060	Double.isNaN(y1)
8061	obj == this
8062	obj instanceof XYLineAndShapeRenderer
8063	this.stepPoint != that.stepPoint
140	tasks == null
141	w <= 0.0
142	this.transposed
143	this.transposed
144	this.transposed
145	this.transposed
146	this.transposed
147	this.transposed
148	obj == this
149	obj instanceof XYTaskDataset
150	this.seriesWidth != that.seriesWidth
151	this.transposed != that.transposed
152	this.underlying.equals(that.underlying)
5840	text == null
5841	text == null
5842	font == null
5843	paint == null
5844	anchor == null
5845	anchor == null
5846	paint == null
5847	stroke == null
5848	orientation == PlotOrientation.HORIZONTAL
5849	this.backgroundPaint != null
5850	this.outlineVisible
5851	toolTip != null
5851	url != null
5852	obj == this
5853	obj instanceof XYTextAnnotation
5854	this.text.equals(that.text)
5855	this.x != that.x
5856	this.y != that.y
5857	this.font.equals(that.font)
5858	PaintUtilities.equal(this.paint, that.paint)
5859	this.rotationAnchor.equals(that.rotationAnchor)
5860	this.rotationAngle != that.rotationAngle
5861	this.textAnchor.equals(that.textAnchor)
5862	this.outlineVisible != that.outlineVisible
5863	PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)
5864	PaintUtilities.equal(this.outlinePaint, that.outlinePaint)
5865	this.outlineStroke.equals(that.outlineStroke)
5765	title == null
5766	anchor == null
5767	this.coordinateType == XYCoordinateType.RELATIVE
5768	orientation == PlotOrientation.HORIZONTAL
5769	orientation == PlotOrientation.VERTICAL
5770	this.coordinateType == XYCoordinateType.RELATIVE
5771	this.maxWidth > 0.0
5772	this.maxHeight > 0.0
5773	this.coordinateType == XYCoordinateType.DATA
5774	info != null
5775	info.getOwner().getEntityCollection() != null
5776	info != null
5777	result instanceof EntityBlockResult
5778	toolTip != null
5778	url != null
5779	obj == this
5780	obj instanceof XYTitleAnnotation
5781	this.coordinateType != that.coordinateType
5782	this.x != that.x
5783	this.y != that.y
5784	this.maxWidth != that.maxWidth
5785	this.maxHeight != that.maxHeight
5786	ObjectUtilities.equal(this.title, that.title)
5787	this.anchor.equals(that.anchor)
541	obj == this
542	obj instanceof YInterval
543	this.y != that.y
544	this.yLow != that.yLow
545	this.yHigh != that.yHigh
317	interval != null
318	interval != null
319	interval != null
7777	state.getInfo() != null
7778	orientation == PlotOrientation.HORIZONTAL
7779	orientation == PlotOrientation.VERTICAL
7780	isItemLabelVisible(series, item, selected)
7781	entities != null
7782	this.additionalItemLabelGenerator == null
7783	obj == this
7784	obj instanceof YIntervalRenderer
7785	ObjectUtilities.equal(this.additionalItemLabelGenerator, that.additionalItemLabelGenerator)
502	series == null
503	series < 0
503	series >= getSeriesCount()
504	series >= getSeriesCount()
504	series < 0
505	series == null
506	this.data.contains(series)
507	obj == this
508	obj instanceof YIntervalSeriesCollection
350	obj == this
351	obj instanceof YWithXInterval
352	this.y != that.y
353	this.xLow != that.xLow
354	this.xHigh != that.xHigh
1209	year < Year.MINIMUM_YEAR
1209	year > Year.MAXIMUM_YEAR
1210	this.year > Year.MINIMUM_YEAR
1211	this.year < Year.MAXIMUM_YEAR
1212	obj == this
1213	obj instanceof Year
1214	o1 instanceof Year
1215	o1 instanceof RegularTimePeriod
5364	screenDataArea != null
5365	this.zoomPoint == null
5366	panel.getUseBuffer()
5367	panel.getOrientation() == PlotOrientation.HORIZONTAL
5368	hZoom
5368	vZoom
5369	hZoom
5370	vZoom
5371	panel.getUseBuffer()
5372	this.zoomRectangle == null
5373	panel.getOrientation() == PlotOrientation.HORIZONTAL
5374	zoomTrigger2
5374	zoomTrigger1
5375	e.getX() < this.zoomPoint.getX()
5375	hZoom
5375	e.getY() < this.zoomPoint.getY()
5375	vZoom
5376	vZoom
5377	hZoom
5378	panel.getUseBuffer()
5379	this.zoomRectangle != null
5380	xor
5381	panel.getFillZoomRectangle()
5382	xor

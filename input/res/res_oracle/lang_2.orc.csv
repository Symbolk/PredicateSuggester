id	oracle
1428	consumed != 0
0	a1 == a2
1	a2 == null
1	a1 == null
2	type.equals(type2)
3	m.getParameterTypes().length == 0
3	isValidAnnotationMemberType(m.getReturnType())
4	memberEquals(m.getReturnType(), v1, v2)
5	value == null
6	m.getParameterTypes().length > 0
7	type == null
8	type.isArray()
9	value.getClass().isArray()
10	value instanceof Annotation
11	o1 == o2
12	o1 == null
12	o2 == null
13	type.isArray()
14	type.isAnnotation()
15	componentType.isAnnotation()
16	componentType.equals(Byte.TYPE)
17	componentType.equals(Short.TYPE)
18	componentType.equals(Integer.TYPE)
19	componentType.equals(Character.TYPE)
20	componentType.equals(Long.TYPE)
21	componentType.equals(Float.TYPE)
22	componentType.equals(Double.TYPE)
23	componentType.equals(Boolean.TYPE)
24	a1.length != a2.length
25	equals(a1[i], a2[i])
26	componentType.equals(Byte.TYPE)
27	componentType.equals(Short.TYPE)
28	componentType.equals(Integer.TYPE)
29	componentType.equals(Character.TYPE)
30	componentType.equals(Long.TYPE)
31	componentType.equals(Float.TYPE)
32	componentType.equals(Double.TYPE)
33	componentType.equals(Boolean.TYPE)
1785	array == null
1786	array == null
1787	object instanceof Map.Entry<?, ?>
1788	object instanceof Object[]
1789	entry.length < 2
1790	array == null
1791	array == null
1792	array == null
1793	array == null
1794	array == null
1795	array == null
1796	array == null
1797	array == null
1798	array == null
1799	array.length == 0
1799	array == null
1800	array.length == 0
1800	array == null
1801	array == null
1801	array.length == 0
1802	array.length == 0
1802	array == null
1803	array.length == 0
1803	array == null
1804	array == null
1804	array.length == 0
1805	array.length == 0
1805	array == null
1806	array.length == 0
1806	array == null
1807	array.length == 0
1807	array == null
1808	array.length == 0
1808	array == null
1809	array.length == 0
1809	array == null
1810	array.length == 0
1810	array == null
1811	array.length == 0
1811	array == null
1812	array == null
1812	array.length == 0
1813	array.length == 0
1813	array == null
1814	array == null
1814	array.length == 0
1815	array == null
1815	array.length == 0
1816	array.length == 0
1816	array == null
1817	array == null
1818	startIndexInclusive < 0
1819	endIndexExclusive > array.length
1820	newSize <= 0
1821	array == null
1822	startIndexInclusive < 0
1823	endIndexExclusive > array.length
1824	newSize <= 0
1825	array == null
1826	startIndexInclusive < 0
1827	endIndexExclusive > array.length
1828	newSize <= 0
1829	array == null
1830	startIndexInclusive < 0
1831	endIndexExclusive > array.length
1832	newSize <= 0
1833	array == null
1834	startIndexInclusive < 0
1835	endIndexExclusive > array.length
1836	newSize <= 0
1837	array == null
1838	startIndexInclusive < 0
1839	endIndexExclusive > array.length
1840	newSize <= 0
1841	array == null
1842	startIndexInclusive < 0
1843	endIndexExclusive > array.length
1844	newSize <= 0
1845	array == null
1846	startIndexInclusive < 0
1847	endIndexExclusive > array.length
1848	newSize <= 0
1849	array == null
1850	startIndexInclusive < 0
1851	endIndexExclusive > array.length
1852	newSize <= 0
1853	array1 == null
1853	array2.length > 0
1853	array2 == null
1853	array2 != null
1853	array1.length > 0
1853	array1.length != array2.length
1853	array2 != null
1853	array1 != null
1853	array1 != null
1854	array1.length != array2.length
1854	array2 != null
1854	array2 == null
1854	array1 != null
1854	array2.length > 0
1854	array1 == null
1854	array2 != null
1854	array1 != null
1854	array1.length > 0
1855	array2 != null
1855	array2 == null
1855	array1.length != array2.length
1855	array1.length > 0
1855	array1 != null
1855	array2 != null
1855	array1 == null
1855	array2.length > 0
1855	array1 != null
1856	array2.length > 0
1856	array1.length > 0
1856	array1.length != array2.length
1856	array2 != null
1856	array1 != null
1856	array2 == null
1856	array2 != null
1856	array1 == null
1856	array1 != null
1857	array1.length != array2.length
1857	array1 == null
1857	array2 != null
1857	array2 == null
1857	array1.length > 0
1857	array2 != null
1857	array1 != null
1857	array1 != null
1857	array2.length > 0
1858	array2 != null
1858	array1 != null
1858	array2 != null
1858	array1.length != array2.length
1858	array2.length > 0
1858	array2 == null
1858	array1 != null
1858	array1 == null
1858	array1.length > 0
1859	array2 != null
1859	array1.length > 0
1859	array2 != null
1859	array2 == null
1859	array1 == null
1859	array2.length > 0
1859	array1 != null
1859	array1.length != array2.length
1859	array1 != null
1860	array1 == null
1860	array2.length > 0
1860	array2 != null
1860	array1 != null
1860	array2 != null
1860	array1 != null
1860	array1.length != array2.length
1860	array2 == null
1860	array1.length > 0
1861	array1.length > 0
1861	array2.length > 0
1861	array1.length != array2.length
1861	array2 != null
1861	array2 != null
1861	array1 != null
1861	array2 == null
1861	array1 != null
1861	array1 == null
1862	array == null
1863	array2 == null
1863	array1 == null
1864	array == null
1865	array == null
1866	array == null
1867	array == null
1868	array == null
1869	array == null
1870	array == null
1871	array == null
1872	array == null
1873	array == null
1874	startIndex < 0
1875	objectToFind == null
1876	array[i] == null
1877	array.getClass().getComponentType().isInstance(objectToFind)
1878	objectToFind.equals(array[i])
1879	array == null
1880	startIndex < 0
1881	startIndex >= array.length
1882	objectToFind == null
1883	array[i] == null
1884	array.getClass().getComponentType().isInstance(objectToFind)
1885	objectToFind.equals(array[i])
1886	array == null
1887	startIndex < 0
1888	valueToFind == array[i]
1889	array == null
1890	startIndex < 0
1891	startIndex >= array.length
1892	valueToFind == array[i]
1893	array == null
1894	startIndex < 0
1895	valueToFind == array[i]
1896	array == null
1897	startIndex < 0
1898	startIndex >= array.length
1899	valueToFind == array[i]
1900	array == null
1901	startIndex < 0
1902	valueToFind == array[i]
1903	array == null
1904	startIndex < 0
1905	startIndex >= array.length
1906	valueToFind == array[i]
1907	array == null
1908	startIndex < 0
1909	valueToFind == array[i]
1910	array == null
1911	startIndex < 0
1912	startIndex >= array.length
1913	valueToFind == array[i]
1914	array == null
1915	startIndex < 0
1916	valueToFind == array[i]
1917	array == null
1918	startIndex < 0
1919	startIndex >= array.length
1920	valueToFind == array[i]
1921	ArrayUtils.isEmpty(array)
1922	startIndex < 0
1923	valueToFind == array[i]
1924	ArrayUtils.isEmpty(array)
1925	startIndex < 0
1926	array[i] >= min
1926	array[i] <= max
1927	ArrayUtils.isEmpty(array)
1928	startIndex < 0
1929	startIndex >= array.length
1930	valueToFind == array[i]
1931	ArrayUtils.isEmpty(array)
1932	startIndex < 0
1933	startIndex >= array.length
1934	array[i] >= min
1934	array[i] <= max
1935	ArrayUtils.isEmpty(array)
1936	startIndex < 0
1937	valueToFind == array[i]
1938	ArrayUtils.isEmpty(array)
1939	startIndex < 0
1940	startIndex >= array.length
1941	valueToFind == array[i]
1942	ArrayUtils.isEmpty(array)
1943	startIndex < 0
1944	valueToFind == array[i]
1945	ArrayUtils.isEmpty(array)
1946	startIndex < 0
1947	startIndex >= array.length
1948	valueToFind == array[i]
1949	array == null
1950	array.length == 0
1951	array == null
1952	array.length == 0
1953	array == null
1954	array.length == 0
1955	array == null
1956	array.length == 0
1957	array == null
1958	array.length == 0
1959	array == null
1960	array.length == 0
1961	array == null
1962	array.length == 0
1963	array == null
1964	array.length == 0
1965	array == null
1966	array.length == 0
1967	array == null
1968	array.length == 0
1969	array == null
1970	array.length == 0
1971	array == null
1972	array.length == 0
1973	array == null
1974	array.length == 0
1975	array == null
1976	array.length == 0
1977	array == null
1978	array.length == 0
1979	array == null
1980	array.length == 0
1981	array == null
1982	array.length == 0
1983	array == null
1984	array.length == 0
1985	array == null
1986	array.length == 0
1987	array == null
1988	array.length == 0
1989	array == null
1990	array.length == 0
1991	array == null
1992	array.length == 0
1993	array == null
1994	array.length == 0
1995	array == null
1996	array.length == 0
1997	array1 == null
1998	array2 == null
1999	type1.isAssignableFrom(type2)
2000	array1 == null
2001	array2 == null
2002	array1 == null
2003	array2 == null
2004	array1 == null
2005	array2 == null
2006	array1 == null
2007	array2 == null
2008	array1 == null
2009	array2 == null
2010	array1 == null
2011	array2 == null
2012	array1 == null
2013	array2 == null
2014	array1 == null
2015	array2 == null
2016	array != null
2017	element != null
2018	array != null
2019	array != null
2020	element != null
2021	array == null
2022	index != 0
2023	index > length
2023	index < 0
2024	index < length
2025	index == INDEX_NOT_FOUND
2026	index == INDEX_NOT_FOUND
2027	index == INDEX_NOT_FOUND
2028	index == INDEX_NOT_FOUND
2029	index == INDEX_NOT_FOUND
2030	index == INDEX_NOT_FOUND
2031	index == INDEX_NOT_FOUND
2032	index == INDEX_NOT_FOUND
2033	index == INDEX_NOT_FOUND
2034	index < 0
2034	index >= length
2035	index < length - 1
2036	isEmpty(values)
2036	isEmpty(array)
2037	count == null
2038	found < 0
2039	isEmpty(array)
2039	isEmpty(values)
2040	count == null
2041	found < 0
2042	isEmpty(values)
2042	isEmpty(array)
2043	count == null
2044	found < 0
2045	isEmpty(values)
2045	isEmpty(array)
2046	count == null
2047	found < 0
2048	isEmpty(array)
2048	isEmpty(values)
2049	count == null
2050	found < 0
2051	isEmpty(values)
2051	isEmpty(array)
2052	count == null
2053	found < 0
2054	isEmpty(values)
2054	isEmpty(array)
2055	count == null
2056	found < 0
2057	isEmpty(array)
2057	isEmpty(values)
2058	count == null
2059	found < 0
2060	isEmpty(array)
2060	isEmpty(values)
2061	count == null
2062	found < 0
2063	isNotEmpty(indices)
2064	index >= length
2064	index < 0
2065	index >= prevIndex
2066	diff < length
2067	end - index > 1
2068	end > 0
2069	count > 0
2070	count > 0
1194	result == null
1195	reference.compareAndSet(null, result)
1211	factory.compareAndSet(null, this)
1212	isStarted()
1213	isStarted()
1214	executor == null
1215	future == null
1220	builder.wrappedFactory == null
1221	getNamingPattern() != null
1222	getUncaughtExceptionHandler() != null
1223	getPriority() != null
1224	getDaemonFlag() != null
983	bit_pattern != 0
1715	bool == null
1716	bool == null
1717	value == null
1718	value == trueValue
1719	value == falseValue
1720	value == null
1721	trueValue == null
1722	falseValue == null
1723	value.equals(trueValue)
1724	value.equals(falseValue)
1725	value == trueValue
1726	value == falseValue
1727	value == nullValue
1728	value == null
1729	trueValue == null
1730	falseValue == null
1731	nullValue == null
1732	value.equals(trueValue)
1733	value.equals(falseValue)
1734	value.equals(nullValue)
1735	bool == null
1736	bool == null
1737	bool == null
1738	str == "true"
1739	str == null
1740	ch0 == 'Y'
1740	ch0 == 't'
1740	ch0 == 'y'
1740	ch0 == 'T'
1741	ch0 == 'n'
1741	ch0 == 'F'
1741	ch0 == 'f'
1741	ch0 == 'N'
1742	ch1 == 'N'
1742	ch0 == 'O'
1742	ch1 == 'n'
1742	ch0 == 'o'
1743	ch0 == 'n'
1743	ch1 == 'o'
1743	ch1 == 'O'
1743	ch0 == 'N'
1744	ch1 == 'e'
1744	ch2 == 'S'
1744	ch0 == 'y'
1744	ch0 == 'Y'
1744	ch2 == 's'
1744	ch1 == 'E'
1745	ch1 == 'F'
1745	ch1 == 'f'
1745	ch0 == 'o'
1745	ch2 == 'f'
1745	ch2 == 'F'
1745	ch0 == 'O'
1746	ch3 == 'e'
1746	ch0 == 'T'
1746	ch0 == 't'
1746	ch1 == 'R'
1746	ch2 == 'U'
1746	ch1 == 'r'
1746	ch2 == 'u'
1746	ch3 == 'E'
1747	ch2 == 'L'
1747	ch0 == 'f'
1747	ch1 == 'a'
1747	ch4 == 'E'
1747	ch1 == 'A'
1747	ch3 == 's'
1747	ch0 == 'F'
1747	ch4 == 'e'
1747	ch2 == 'l'
1747	ch3 == 'S'
1748	str == null
1749	trueString == null
1750	falseString == null
1751	nullString == null
1752	str.equals(trueString)
1753	str.equals(falseString)
1754	str.equals(nullString)
1755	str == trueString
1756	str == falseString
1757	str != null
1758	str.equals(trueString)
1759	str.equals(falseString)
1760	bool == null
1761	array == null
1762	array.length == 0
1763	element
1764	array == null
1765	array.length == 0
1766	array == null
1767	array.length == 0
1768	element
1769	array == null
1770	array.length == 0
1771	array == null
1772	array.length == 0
1773	element
1774	trueCount < 1
1775	array == null
1776	array.length == 0
1210	call == null
1185	name == null
984	start > end
985	range == null
986	negated
987	range.negated
988	range.negated
989	obj == this
990	obj instanceof CharRange == false
991	iToString == null
992	isNegated()
993	start != end
1424	input == null
1425	out == null
1426	input == null
1427	consumed == 0
51	cs instanceof String
52	start < 0
53	cs.charAt(i) == searchChar
54	cs instanceof String
55	start < 0
56	start >= sz
57	cs.charAt(i) == searchChar
58	cs instanceof String
59	substring instanceof String
59	cs instanceof String
60	c1 == c2
61	ignoreCase
62	Character.toUpperCase(c1) != Character.toUpperCase(c2)
62	Character.toLowerCase(c1) != Character.toLowerCase(c2)
34	setStrs == null
35	setStrs.length == 1
36	common != null
37	str == null
38	str.charAt(pos + 2) == '-'
38	remainder >= 4
38	str.charAt(pos) == '^'
39	remainder >= 3
39	str.charAt(pos + 1) == '-'
40	str.charAt(pos) == '^'
40	remainder >= 2
41	range.contains(ch)
42	obj == this
43	obj instanceof CharSet == false
2071	StringUtils.isEmpty(str)
2071	deepEmpty(set)
2072	ch == lastChar
2072	chars.contains(ch)
2072	i != 0
2073	StringUtils.isEmpty(str)
2073	deepEmpty(set)
2074	chars.contains(c)
2075	StringUtils.isEmpty(str)
2075	deepEmpty(set)
2076	chars.contains(c)
2077	str == null
2078	deepEmpty(set)
2078	str.length() == 0
2079	deepEmpty(set)
2079	StringUtils.isEmpty(str)
2080	chars.contains(chrs[i]) == expect
2081	strings != null
2082	StringUtils.isNotEmpty(s)
2116	StringUtils.isEmpty(str)
2117	ch == null
2118	ch == null
2119	StringUtils.isEmpty(str)
2120	StringUtils.isEmpty(str)
2121	isAsciiNumeric(ch) == false
2122	isAsciiNumeric(ch) == false
2123	ch == null
2124	ch == null
2125	ch < 128
2126	ch == null
2127	ch < 0x10
2128	ch < 0x100
2129	ch < 0x1000
2130	ch == null
917	object == null
918	cls == null
919	StringUtils.isEmpty(className)
920	className.startsWith("[")
921	className.charAt(0) == 'L'
921	className.charAt(className.length() - 1) == ';'
922	reverseAbbreviationMap.containsKey(className)
923	innerIdx != -1
924	cls == null
925	object == null
926	object == null
927	cls == null
928	StringUtils.isEmpty(className)
929	className.charAt(className.length() - 1) == ';'
929	className.charAt(0) == 'L'
930	i == -1
931	cls == null
932	cls == null
933	interfacesFound.add(i)
934	classNames == null
935	classes == null
936	cls == null
937	ArrayUtils.isSameLength(classArray, toClassArray) == false
938	classArray == null
939	toClassArray == null
940	isAssignable(classArray[i], toClassArray[i], autoboxing) == false
941	type == null
942	toClass == null
943	cls == null
944	autoboxing
945	cls.isPrimitive()
945	toClass.isPrimitive()
946	cls == null
947	cls.isPrimitive()
947	toClass.isPrimitive()
948	cls == null
949	cls.equals(toClass)
950	cls.isPrimitive()
951	toClass.isPrimitive() == false
952	Integer.TYPE.equals(cls)
953	Long.TYPE.equals(cls)
954	Boolean.TYPE.equals(cls)
955	Double.TYPE.equals(cls)
956	Float.TYPE.equals(cls)
957	Character.TYPE.equals(cls)
958	Short.TYPE.equals(cls)
959	Byte.TYPE.equals(cls)
960	cls != null
960	cls.isPrimitive()
961	classes == null
962	classes.length == 0
963	classes == null
964	classes.length == 0
965	abbreviationMap.containsKey(className)
966	lastDotIndex != -1
967	Modifier.isPublic(declaredMethod.getDeclaringClass().getModifiers())
968	Modifier.isPublic(candidateClass.getModifiers())
969	Modifier.isPublic(candidateMethod.getDeclaringClass().getModifiers())
970	className == null
971	className.endsWith("[]")
972	abbreviation != null
973	array == null
974	array.length == 0
975	object == null
976	cls == null
977	object == null
978	cls == null
979	className == null
980	dim < 1
981	className.startsWith("L")
982	className.length() > 0
1429	consumed
322	lhs == rhs
323	lhs == null
323	rhs == null
324	lhsClazz.isInstance(rhs)
325	Modifier.isStatic(f.getModifiers())
325	ArrayUtils.contains(excludeFields, f.getName())
325	f.getName().indexOf('$') == -1
325	Modifier.isTransient(f.getModifiers())
325	useTransients
326	comparison != 0
327	comparison != 0
328	lhs == rhs
329	lhs == null
330	rhs == null
331	lhs.getClass().isArray()
332	lhs instanceof long[]
333	lhs instanceof int[]
334	lhs instanceof short[]
335	lhs instanceof char[]
336	lhs instanceof byte[]
337	lhs instanceof double[]
338	lhs instanceof float[]
339	lhs instanceof boolean[]
340	comparator == null
341	comparison != 0
342	comparison != 0
343	comparison != 0
344	comparison != 0
345	comparison != 0
346	comparison != 0
347	comparison != 0
348	comparison != 0
349	lhs == rhs
350	lhs == false
351	comparison != 0
352	lhs == rhs
353	lhs == null
354	rhs == null
355	lhs.length != rhs.length
356	comparison != 0
357	lhs == rhs
358	lhs == null
359	rhs == null
360	lhs.length != rhs.length
361	comparison != 0
362	lhs == rhs
363	lhs == null
364	rhs == null
365	lhs.length != rhs.length
366	comparison != 0
367	lhs == rhs
368	lhs == null
369	rhs == null
370	lhs.length != rhs.length
371	comparison != 0
372	lhs == rhs
373	lhs == null
374	rhs == null
375	lhs.length != rhs.length
376	comparison != 0
377	lhs == rhs
378	lhs == null
379	rhs == null
380	lhs.length != rhs.length
381	comparison != 0
382	lhs == rhs
383	lhs == null
384	rhs == null
385	lhs.length != rhs.length
386	comparison != 0
387	lhs == rhs
388	lhs == null
389	rhs == null
390	lhs.length != rhs.length
391	comparison != 0
392	lhs == rhs
393	lhs == null
394	rhs == null
395	lhs.length != rhs.length
1196	ex == null
1196	ex.getCause() == null
1197	ex == null
1197	ex.getCause() == null
1198	cex != null
1199	crex != null
1200	ex != null
1200	ex instanceof RuntimeException
1200	ex instanceof Error
1201	ex.getCause() instanceof RuntimeException
1202	ex.getCause() instanceof Error
1203	map == null
1204	map == null
1204	init == null
1205	value == null
1208	this == obj
1209	obj instanceof ConstantInitializer<?>
1022	args == null
1023	parameterTypes == null
1024	args == null
1025	ctor == null
1026	args == null
1027	args == null
1028	parameterTypes == null
1029	ctor == null
1030	ClassUtils.isAssignable(parameterTypes, ctor.getParameterTypes(), true)
1031	ctor != null
1032	MemberUtils.compareParameterTypes(ctor.getParameterTypes(), result .getParameterTypes(), parameterTypes) < 0
1032	result == null
2107	context == null
2115	context == null
396	digit < 0
397	src.length == 0
398	src.length > srcPos + 3
398	src[srcPos + 3]
399	src[srcPos + 2]
399	src.length > srcPos + 2
400	src.length > srcPos + 1
400	src[srcPos + 1]
401	src[srcPos]
402	src[srcPos]
403	src.length > srcPos + 1
403	src[srcPos + 1]
404	src[srcPos]
405	src[srcPos]
406	src.length > srcPos + 2
406	src[srcPos + 2]
407	src.length > srcPos + 1
407	src[srcPos + 1]
408	src[srcPos]
409	src[srcPos]
410	src.length > srcPos + 1
410	src[srcPos + 1]
411	src[srcPos]
412	src[srcPos]
413	src.length > 8
414	src.length - srcPos < 4
415	src[srcPos + 3]
416	src[srcPos + 2]
417	src[srcPos + 1]
418	src[srcPos]
419	src[srcPos]
420	src[srcPos + 1]
421	src[srcPos]
422	src[srcPos]
423	src[srcPos + 2]
424	src[srcPos + 1]
425	src[srcPos]
426	src[srcPos]
427	src[srcPos + 1]
428	src[srcPos]
429	src[srcPos]
430	src.length == 0
431	src[srcPos]
432	src[srcPos + 1]
432	src.length > srcPos + 1
433	src.length > srcPos + 2
433	src[srcPos + 2]
434	src.length > srcPos + 3
434	src[srcPos + 3]
435	src[srcPos + 3]
435	src.length > srcPos + 3
436	src[srcPos + 2]
436	src.length > srcPos + 2
437	src.length > srcPos + 3
437	src[srcPos + 3]
438	src[srcPos + 3]
438	src.length > srcPos + 3
439	src.length > srcPos + 1
439	src[srcPos + 1]
440	src[srcPos + 2]
440	src.length > srcPos + 2
441	src.length > srcPos + 3
441	src[srcPos + 3]
442	src.length > srcPos + 3
442	src[srcPos + 3]
443	src[srcPos + 2]
443	src.length > srcPos + 2
444	src[srcPos + 3]
444	src.length > srcPos + 3
445	src[srcPos + 3]
445	src.length > srcPos + 3
446	c == Character.MIN_VALUE
447	0 == nInts
447	srcPos == 0
447	src.length == 0
448	(nInts - 1) * 32 + dstPos >= 64
449	src.length == 0
449	0 == nShorts
449	srcPos == 0
450	(nShorts - 1) * 16 + dstPos >= 64
451	srcPos == 0
451	0 == nShorts
451	src.length == 0
452	(nShorts - 1) * 16 + dstPos >= 32
453	src.length == 0
453	srcPos == 0
453	0 == nBytes
454	(nBytes - 1) * 8 + dstPos >= 64
455	0 == nBytes
455	src.length == 0
455	srcPos == 0
456	(nBytes - 1) * 8 + dstPos >= 32
457	src.length == 0
457	0 == nBytes
457	srcPos == 0
458	(nBytes - 1) * 8 + dstPos >= 16
459	0 == nHex
460	(nHex - 1) * 4 + dstPos >= 64
461	0 == nHex
462	(nHex - 1) * 4 + dstPos >= 32
463	0 == nHex
464	(nHex - 1) * 4 + dstPos >= 16
465	0 == nHex
466	(nHex - 1) * 4 + dstPos >= 8
467	0 == nBools
467	srcPos == 0
467	src.length == 0
468	nBools - 1 + dstPos >= 64
469	0 == nBools
469	srcPos == 0
469	src.length == 0
470	nBools - 1 + dstPos >= 32
471	srcPos == 0
471	0 == nBools
471	src.length == 0
472	nBools - 1 + dstPos >= 16
473	src.length == 0
473	srcPos == 0
473	0 == nBools
474	nBools - 1 + dstPos >= 8
475	0 == nInts
476	(nInts - 1) * 32 + srcPos >= 64
477	0 == nShorts
478	(nShorts - 1) * 16 + srcPos >= 64
479	0 == nShorts
480	(nShorts - 1) * 16 + srcPos >= 32
481	0 == nBytes
482	(nBytes - 1) * 8 + srcPos >= 64
483	0 == nBytes
484	(nBytes - 1) * 8 + srcPos >= 32
485	0 == nBytes
486	(nBytes - 1) * 8 + srcPos >= 16
487	0 == nHexs
488	(nHexs - 1) * 4 + srcPos >= 64
489	dstPos + i == append
490	0 == nHexs
491	(nHexs - 1) * 4 + srcPos >= 32
492	dstPos + i == append
493	0 == nHexs
494	(nHexs - 1) * 4 + srcPos >= 16
495	dstPos + i == append
496	0 == nHexs
497	(nHexs - 1) * 4 + srcPos >= 8
498	dstPos + i == append
499	0 == nBools
500	nBools - 1 + srcPos >= 64
501	0 == nBools
502	nBools - 1 + srcPos >= 32
503	0 == nBools
504	nBools - 1 + srcPos >= 16
505	0 == nBools
506	nBools - 1 + srcPos >= 8
507	0 == nBytes
508	nBytes > 16
509	nBytes >= 8
510	src.length - srcPos < 16
1262	date1 == null
1262	date2 == null
1263	cal2 == null
1263	cal1 == null
1264	date2 == null
1264	date1 == null
1265	cal1 == null
1265	cal2 == null
1266	cal2 == null
1266	cal1 == null
1267	parsePatterns == null
1267	str == null
1268	locale == null
1269	parsePattern.endsWith("ZZ")
1270	parsePattern.endsWith("ZZ")
1271	date != null
1271	pos.getIndex() == str2.length()
1272	date == null
1273	date == null
1274	date == null
1275	date == null
1276	date == null
1277	date instanceof Date
1278	date instanceof Calendar
1279	date == null
1280	date == null
1281	date == null
1282	date instanceof Date
1283	date instanceof Calendar
1284	date == null
1285	date == null
1286	date == null
1287	date instanceof Date
1288	date instanceof Calendar
1289	val.get(Calendar.YEAR) > 280000000
1290	field == Calendar.MILLISECOND
1291	millisecs < 500
1291	MODIFY_TRUNCATE == modType
1292	field == Calendar.SECOND
1293	seconds < 30
1293	MODIFY_TRUNCATE == modType
1293	done
1294	field == Calendar.MINUTE
1295	MODIFY_TRUNCATE == modType
1295	done
1295	minutes < 30
1296	date.getTime() != time
1297	element == field
1298	modType == MODIFY_ROUND
1298	modType == MODIFY_CEILING
1298	roundUp
1299	field == DateUtils.SEMI_MONTH
1300	val.get(Calendar.DATE) == 1
1301	field == Calendar.AM_PM
1302	val.get(Calendar.HOUR_OF_DAY) == 0
1303	aField[0] == Calendar.DATE
1304	offset >= 15
1305	aField[0] == Calendar.HOUR_OF_DAY
1306	offset >= 12
1307	offsetSet
1308	offset != 0
1309	focus == null
1310	focus == null
1311	rangeStyle == RANGE_MONTH_MONDAY
1312	startCutoff < Calendar.SUNDAY
1313	startCutoff > Calendar.SATURDAY
1314	endCutoff < Calendar.SUNDAY
1315	endCutoff > Calendar.SATURDAY
1316	focus == null
1317	focus instanceof Date
1318	focus instanceof Calendar
1319	date == null
1320	calendar == null
2108	StringUtils.equals(label, p.getKey())
2109	StringUtils.equals(label, pair.getKey())
2110	StringUtils.equals(label, pair.getKey())
2111	baseMessage != null
2112	contextValues.size() > 0
2113	buffer.length() > 0
2114	value == null
1225	Token.containsTokenWithValue(tokens, d)
1226	Token.containsTokenWithValue(tokens, H)
1227	Token.containsTokenWithValue(tokens, m)
1228	Token.containsTokenWithValue(tokens, s)
1229	Token.containsTokenWithValue(tokens, S)
1230	suppressLeadingZeroElements
1231	tmp.length() != duration.length()
1232	tmp.length() != duration.length()
1233	tmp.length() != duration.length()
1234	duration.length() != 0
1235	suppressTrailingZeroElements
1236	tmp.length() != duration.length()
1237	tmp.length() != duration.length()
1238	tmp.length() != duration.length()
1239	Token.containsTokenWithValue(tokens, M)
1240	Token.containsTokenWithValue(tokens, y)
1240	years != 0
1241	Token.containsTokenWithValue(tokens, y)
1242	months < 0
1243	start instanceof GregorianCalendar
1243	start.get(Calendar.DAY_OF_MONTH) == 29
1243	start.get(Calendar.MONTH) == Calendar.FEBRUARY
1244	Token.containsTokenWithValue(tokens, d)
1245	Token.containsTokenWithValue(tokens, H)
1246	Token.containsTokenWithValue(tokens, m)
1247	Token.containsTokenWithValue(tokens, s)
1248	value instanceof StringBuilder
1249	value == y
1250	value == M
1251	value == d
1252	value == H
1253	value == m
1254	value == s
1255	value == S
1256	lastOutputSeconds
1257	inLiteral
1257	ch != '\''
1258	inLiteral
1259	buffer == null
1260	value != null
1261	previous != null
1261	previous.getValue() == value
998	enumName == null
999	enumName == null
1000	(values[block] & 1 << (constant.ordinal() % Long.SIZE)) != 0
1000	block < values.length
118	getRegistry() == null
119	registry != null
120	registry != null
120	registry.isEmpty()
121	lhs == rhs
122	lhs == null
122	rhs == null
123	lhsClass.isInstance(rhs)
124	rhsClass.isInstance(lhs)
125	rhsClass.isInstance(lhs)
126	lhsClass.isInstance(rhs)
127	isRegistered(lhs, rhs)
128	Modifier.isTransient(f.getModifiers())
128	useTransients
128	Modifier.isStatic(f.getModifiers())
128	ArrayUtils.contains(excludeFields, f.getName())
128	f.getName().indexOf('$') == -1
129	isEquals == false
130	isEquals == false
131	lhs == rhs
132	lhs == null
132	rhs == null
133	lhsClass.isArray()
134	lhs.getClass() != rhs.getClass()
135	lhs instanceof long[]
136	lhs instanceof int[]
137	lhs instanceof short[]
138	lhs instanceof char[]
139	lhs instanceof byte[]
140	lhs instanceof double[]
141	lhs instanceof float[]
142	lhs instanceof boolean[]
143	isEquals == false
144	isEquals == false
145	isEquals == false
146	isEquals == false
147	isEquals == false
148	isEquals == false
149	isEquals == false
150	isEquals == false
151	isEquals == false
152	lhs == rhs
153	rhs == null
153	lhs == null
154	lhs.length != rhs.length
155	isEquals == false
156	lhs == rhs
157	lhs == null
157	rhs == null
158	lhs.length != rhs.length
159	isEquals == false
160	lhs == rhs
161	lhs == null
161	rhs == null
162	lhs.length != rhs.length
163	isEquals == false
164	lhs == rhs
165	rhs == null
165	lhs == null
166	lhs.length != rhs.length
167	isEquals == false
168	lhs == rhs
169	rhs == null
169	lhs == null
170	lhs.length != rhs.length
171	isEquals == false
172	lhs == rhs
173	lhs == null
173	rhs == null
174	lhs.length != rhs.length
175	isEquals == false
176	lhs == rhs
177	rhs == null
177	lhs == null
178	lhs.length != rhs.length
179	isEquals == false
180	lhs == rhs
181	lhs == null
181	rhs == null
182	lhs.length != rhs.length
183	isEquals == false
184	lhs == rhs
185	lhs == null
185	rhs == null
186	lhs.length != rhs.length
2083	throwable == null
2084	methodNames == null
2085	methodName != null
2086	cause != null
2087	Throwable.class.isAssignableFrom(method.getReturnType())
2087	method != null
2088	type == null
2088	throwable == null
2089	fromIndex < 0
2090	fromIndex >= throwables.length
2091	subclass
2092	type.isAssignableFrom(throwables[i].getClass())
2093	type.equals(throwables[i].getClass())
2094	throwable == null
2095	stream == null
2096	throwable == null
2097	writer == null
2098	throwable == null
2099	i != 0
2100	i == count - 1
2101	wrapperFrames == null
2101	causeFrames == null
2102	causeFrame.equals(wrapperFrame)
2103	throwable == null
2104	token.substring(0, at).trim().isEmpty()
2104	at != -1
2105	traceStarted
2106	th == null
1683	registry == null
1684	c[pos.getIndex()] == START_FMT
1685	format == null
1686	c[pos.getIndex()] != END_FE
1687	containsElements(foundFormats)
1688	f != null
1689	obj == this
1690	obj == null
1691	super.equals(obj)
1692	ObjectUtils.notEqual(getClass(), obj.getClass())
1693	ObjectUtils.notEqual(toPattern, rhs.toPattern)
1694	ObjectUtils.notEqual(registry, rhs.registry)
1695	registry != null
1696	i > 0
1697	factory != null
1698	Character.isWhitespace(c)
1699	c != END_FE
1699	c != START_FMT
1700	c == START_FMT
1700	result.length() > 0
1700	c == END_FE
1701	error
1702	depth == 0
1703	containsElements(customPatterns)
1704	depth == 1
1705	customPattern != null
1706	c[start] == QUOTE
1706	escapingOn
1707	pattern.substring(i).startsWith(ESCAPED_QUOTE)
1707	escapingOn
1708	coll == null
1708	coll.isEmpty()
1709	name != null
1349	obj instanceof FastDateFormat == false
1331	patternMatcher.lookingAt()
1332	patternMatcher.lookingAt()
1333	currentStrategy.addRegex(this, regex)
1334	patternMatcher.regionStart() != patternMatcher.regionEnd()
1335	currentStrategy.addRegex(this, regex)
1336	obj instanceof FastDateParser
1337	date==null
1338	locale.equals(JAPANESE_IMPERIAL)
1339	matcher.lookingAt()
1340	unquote
1341	++i==value.length()
1342	++i==value.length()
1343	c == 'E'
1344	trial < thisYear+20
1345	formatField.length()>2
1346	caches[field]==null
1347	strategy==null
1348	inCache!=null
1363	tokenLen == 0
1364	tokenLen == 2
1365	tokenLen >= 4
1366	tokenLen == 3
1367	tokenLen == 2
1368	tokenLen >= 4
1369	tokenLen == 1
1370	sub.length() == 1
1371	c <= 'z'
1371	c <= 'Z'
1371	c >= 'A'
1371	c >= 'a'
1372	peek == c
1373	c == '\''
1374	pattern.charAt(i + 1) == '\''
1374	i + 1 < length
1375	c <= 'Z'
1375	inLiteral
1375	c <= 'z'
1375	c >= 'A'
1375	c >= 'a'
1376	obj instanceof Date
1377	obj instanceof Calendar
1378	obj instanceof Long
1379	obj instanceof FastDatePrinter == false
1380	value == null
1381	prior != null
1033	cls == null
1034	fieldName == null
1035	Modifier.isPublic(field.getModifiers())
1036	forceAccess
1037	match != null
1038	cls == null
1039	fieldName == null
1040	MemberUtils.isAccessible(field)
1041	forceAccess
1042	cls == null
1043	field == null
1044	Modifier.isStatic(field.getModifiers())
1045	field == null
1046	field == null
1047	field == null
1048	field.isAccessible()
1048	forceAccess
1049	target == null
1050	field == null
1051	target == null
1052	field == null
1053	field == null
1054	Modifier.isStatic(field.getModifiers())
1055	field == null
1056	field == null
1057	field == null
1058	field.isAccessible()
1058	forceAccess
1059	target == null
1060	field == null
1061	target == null
1062	field == null
1321	pattern == null
1322	timeZone == null
1323	locale == null
1324	format == null
1325	previousValue != null
1326	locale == null
1327	pattern == null
1328	dateStyle == null
1329	timeStyle == null
1330	previous != null
1650	precision >= 0
1650	precision < seq.length()
2244	denominator == 0
2245	denominator < 0
2246	denominator==Integer.MIN_VALUE
2246	numerator==Integer.MIN_VALUE
2247	denominator == 0
2248	denominator < 0
2249	numerator < 0
2250	whole < 0
2251	numeratorValue > Integer.MAX_VALUE
2251	numeratorValue < Integer.MIN_VALUE
2252	denominator == 0
2253	numerator==0
2254	(numerator&1)==0
2254	denominator==Integer.MIN_VALUE
2255	denominator < 0
2256	numerator==Integer.MIN_VALUE
2256	denominator==Integer.MIN_VALUE
2257	Double.isNaN(value)
2257	value > Integer.MAX_VALUE
2258	i == 25
2259	str == null
2260	pos >= 0
2261	pos > 0
2262	pos < 0
2263	pos < 0
2264	numerator == 0
2265	gcd == 1
2266	numerator == 0
2267	numerator==Integer.MIN_VALUE
2268	numerator<0
2269	numerator==Integer.MIN_VALUE
2270	numerator >= 0
2271	power == 1
2272	power == 0
2273	power < 0
2274	power==Integer.MIN_VALUE
2275	power % 2 == 0
2276	u == 0
2276	v == 0
2277	v == Integer.MIN_VALUE
2277	u == Integer.MIN_VALUE
2278	Math.abs(v) == 1
2278	Math.abs(u) == 1
2279	u>0
2280	v>0
2281	k==31
2282	t>0
2283	m > Integer.MAX_VALUE
2283	m < Integer.MIN_VALUE
2284	m > Integer.MAX_VALUE
2285	s < Integer.MIN_VALUE
2285	s > Integer.MAX_VALUE
2286	s < Integer.MIN_VALUE
2286	s > Integer.MAX_VALUE
2287	fraction == null
2288	numerator == 0
2289	fraction.numerator == 0
2290	d1==1
2291	w.bitLength() > 31
2292	fraction == null
2293	fraction.numerator == 0
2293	numerator == 0
2294	fraction == null
2295	fraction.numerator == 0
2296	obj == this
2297	obj instanceof Fraction == false
2298	hashCode == 0
2299	this==other
2300	numerator == other.numerator
2300	denominator == other.denominator
2301	first == second
2302	first < second
2303	toString == null
2304	toProperString == null
2305	numerator == 0
2306	numerator == denominator
2307	numerator == -1 * denominator
2308	(numerator>0?-numerator:numerator) < -denominator
2309	properNumerator == 0
279	isRegistered(object)
280	Modifier.isTransient(field.getModifiers())
280	useTransients
280	ArrayUtils.contains(excludeFields, field.getName())
280	field.getName().indexOf('$') == -1
280	Modifier.isStatic(field.getModifiers())
281	object == null
282	getRegistry() == null
283	registry != null
284	registry.isEmpty()
284	registry != null
285	initialNonZeroOddNumber == 0
286	initialNonZeroOddNumber % 2 == 0
287	multiplierNonZeroOddNumber == 0
288	multiplierNonZeroOddNumber % 2 == 0
289	array == null
290	array == null
291	array == null
292	array == null
293	array == null
294	array == null
295	array == null
296	object == null
297	object.getClass().isArray()
298	object instanceof long[]
299	object instanceof int[]
300	object instanceof short[]
301	object instanceof char[]
302	object instanceof byte[]
303	object instanceof double[]
304	object instanceof float[]
305	object instanceof boolean[]
306	array == null
307	array == null
320	other instanceof IDKey
321	id != idKey.id
2228	array == null
2229	array.length == 0
2230	array == null
2231	array.length == 0
2232	Double.isNaN(a)
2233	Double.isNaN(b)
2234	Float.isNaN(a)
2235	Float.isNaN(b)
2236	array== null
2237	array.length == 0
2238	array == null
2239	array.length == 0
2240	Double.isNaN(a)
2241	Double.isNaN(b)
2242	Float.isNaN(a)
2243	Float.isNaN(b)
1206	result == null
1207	result == null
890	str == null
891	len < 2
892	ch0 == '_'
893	len < 3
894	Character.isUpperCase(ch1)
894	Character.isUpperCase(ch2)
895	len == 3
896	len < 5
897	str.charAt(3) != '_'
898	Character.isLowerCase(ch1)
898	Character.isLowerCase(ch0)
899	len == 2
900	len < 5
901	str.charAt(2) != '_'
902	ch3 == '_'
903	Character.isUpperCase(ch3)
903	Character.isUpperCase(ch4)
904	len == 5
905	len < 7
906	str.charAt(5) != '_'
907	locale != null
908	locale.getVariant().length() > 0
909	locale.getCountry().length() > 0
910	list.contains(defaultLocale) == false
911	countryCode == null
912	langs == null
913	locale.getVariant().isEmpty()
913	countryCode.equals(locale.getCountry())
914	languageCode == null
915	countries == null
916	languageCode.equals(locale.getLanguage())
916	locale.getVariant().isEmpty()
916	locale.getCountry().length() != 0
1401	lookup != null
1402	sz < _shortest
1403	sz > _longest
1404	index + longest > input.length()
1405	result != null
1063	o == null
1063	o.isAccessible()
1064	isPackageAccess(m.getDeclaringClass().getModifiers())
1064	Modifier.isPublic(m.getModifiers())
1065	destClass.isPrimitive()
1066	destClass.isInterface()
1066	ClassUtils.isAssignable(srcClass, destClass)
1067	srcClass == null
1068	cls.isPrimitive()
1069	cls == ORDERED_PRIMITIVE_TYPES[i]
1070	i < ORDERED_PRIMITIVE_TYPES.length - 1
1071	args == null
1072	parameterTypes == null
1073	args == null
1074	method == null
1075	args == null
1076	args == null
1077	parameterTypes == null
1078	method == null
1079	args == null
1080	parameterTypes == null
1081	method == null
1082	args == null
1083	parameterTypes == null
1084	args == null
1085	method == null
1086	args == null
1087	MemberUtils.isAccessible(method)
1088	Modifier.isPublic(cls.getModifiers())
1089	method == null
1090	Modifier.isPublic(parentClass.getModifiers())
1091	Modifier.isPublic(interfaces[i].getModifiers())
1092	method != null
1093	method != null
1094	ClassUtils.isAssignable(parameterTypes, method.getParameterTypes(), true)
1094	method.getName().equals(methodName)
1095	MemberUtils.compareParameterTypes( accessibleMethod.getParameterTypes(), bestMatch.getParameterTypes(), parameterTypes) < 0
1095	accessibleMethod != null
1095	bestMatch == null
1096	bestMatch != null
1216	name == null
1217	init == null
1218	isStarted()
1219	bi.getExternalExecutor() == null
1782	obj instanceof MutableBoolean
1778	obj instanceof MutableByte
1777	obj instanceof MutableInt
1784	obj instanceof MutableLong
1779	obj == null
1780	this == obj
1781	this.getClass() == obj.getClass()
1783	obj instanceof MutableShort
2131	str == null
2132	str == null
2133	str == null
2134	str == null
2135	str == null
2136	str == null
2137	str == null
2138	StringUtils.isBlank(str)
2139	str.startsWith(pfx)
2140	pfxLen > 0
2141	hexDigits > 16
2142	hexDigits > 8
2143	decPos > -1
2144	expPos > -1
2145	expPos < decPos
2145	expPos > str.length()
2146	expPos > -1
2147	expPos > str.length()
2148	Character.isDigit(lastChar)
2148	lastChar != '.'
2149	expPos > -1
2149	expPos < str.length() - 1
2150	exp == null
2150	dec == null
2150	numeric.charAt(0) == '-'
2150	isDigits(numeric.substring(1))
2150	isDigits(numeric)
2151	f.floatValue() == 0.0F
2151	allZeros
2151	f.isInfinite()
2152	d.floatValue() == 0.0D
2152	allZeros
2152	d.isInfinite()
2153	expPos < str.length() - 1
2153	expPos > -1
2154	dec == null
2154	exp == null
2155	numDecimals <= 7
2156	allZeros
2156	f.floatValue() == 0.0F
2156	f.isInfinite()
2157	numDecimals <= 16
2158	d.isInfinite()
2158	d.doubleValue() == 0.0D
2158	allZeros
2159	str == null
2160	str.charAt(i) != '0'
2161	str == null
2162	str == null
2163	str == null
2164	str == null
2165	str == null
2166	str.startsWith("-")
2167	str.startsWith("0x", pos)
2167	str.startsWith("0x", pos)
2168	str.startsWith("#", pos)
2169	str.startsWith("0", pos)
2169	str.length() > pos + 1
2170	str == null
2171	StringUtils.isBlank(str)
2172	str.trim().startsWith("--")
2173	array[i] < min
2174	array[j] < min
2175	array[i] < min
2176	array[i] < min
2177	Double.isNaN(array[i])
2178	array[i] < min
2179	Float.isNaN(array[i])
2180	array[i] < min
2181	array[j] > max
2182	array[j] > max
2183	array[i] > max
2184	array[i] > max
2185	Double.isNaN(array[j])
2186	array[j] > max
2187	Float.isNaN(array[j])
2188	array[j] > max
2189	array == null
2190	Array.getLength(array) == 0
2191	b < a
2192	c < a
2193	b < a
2194	c < a
2195	b < a
2196	c < a
2197	b < a
2198	c < a
2199	b > a
2200	c > a
2201	b > a
2202	c > a
2203	b > a
2204	c > a
2205	b > a
2206	c > a
2207	StringUtils.isEmpty(str)
2208	Character.isDigit(str.charAt(i))
2209	StringUtils.isEmpty(str)
2210	chars[start] == '0'
2210	chars[start + 1] == 'x'
2210	sz > start + 1
2211	i == sz
2212	chars[i] < '0'
2212	chars[i] > '9'
2212	chars[i] > 'f'
2212	chars[i] < 'A'
2212	chars[i] > 'F'
2212	chars[i] < 'a'
2213	chars[i] >= '0'
2213	chars[i] <= '9'
2214	chars[i] == '.'
2215	hasExp
2215	hasDecPoint
2216	chars[i] == 'E'
2216	chars[i] == 'e'
2217	hasExp
2218	foundDigit
2219	chars[i] == '-'
2219	chars[i] == '+'
2220	allowSigns
2221	i < chars.length
2222	chars[i] >= '0'
2222	chars[i] <= '9'
2223	chars[i] == 'e'
2223	chars[i] == 'E'
2224	chars[i] == '.'
2225	hasExp
2225	hasDecPoint
2226	allowSigns
2226	chars[i] == 'f'
2226	chars[i] == 'd'
2226	chars[i] == 'F'
2226	chars[i] == 'D'
2227	chars[i] == 'L'
2227	chars[i] == 'l'
1430	between
1431	codepoint > above
1431	codepoint < below
1432	codepoint >= below
1432	codepoint <= above
1415	options.length > 0
1416	input.charAt(index) == '&'
1416	index < seqEnd - 2
1416	input.charAt(index + 1) == '#'
1417	firstChar == 'x'
1417	firstChar == 'X'
1418	start == seqEnd
1419	semiNext
1420	isSet(OPTION.semiColonRequired)
1421	isSet(OPTION.errorIfNoSemiColon)
1422	isHex
1423	entityValue > 0xFFFF
63	values != null
64	val != null
65	object1 == object2
66	object1 == null
66	object2 == null
67	objects != null
68	object == null
69	object == null
70	values != null
71	compare(value, result, true) < 0
72	values != null
73	compare(value, result, false) > 0
74	c1 == c2
75	c1 == null
76	c2 == null
77	ArrayUtils.isNotEmpty(items)
78	count == null
79	cmp == max
80	cmp > max
81	obj instanceof Cloneable
82	obj.getClass().isArray()
83	componentType.isPrimitive()
84	v > Byte.MAX_VALUE
84	v < Byte.MIN_VALUE
85	v < Short.MIN_VALUE
85	v > Short.MAX_VALUE
1413	index < (input.length() - 1)
1413	input.charAt(index) == '\\'
1413	Character.isDigit(input.charAt(index + 1))
1414	Integer.parseInt(input.subSequence(start, end).toString(), 10) > OCTAL_MAX
994	obj == this
995	obj instanceof Map.Entry<?, ?>
1382	count == 0
1383	count < 0
1384	chars != null
1384	chars.length == 0
1385	end == 0
1385	start == 0
1386	chars != null
1387	letters
1387	numbers
1388	end <= start
1389	chars == null
1390	letters
1390	letters
1390	numbers
1390	Character.isLetter(ch)
1390	numbers
1390	Character.isDigit(ch)
1391	ch <= 57343
1391	ch >= 56320
1392	count == 0
1393	ch >= 55296
1393	ch <= 56191
1394	count == 0
1395	ch <= 56319
1395	ch >= 56192
1396	chars == null
1397	chars == null
1001	element2 == null
1001	element1 == null
1002	comparator == null
1003	comparator.compare(element1, element2) < 1
1004	element == null
1005	element == null
1006	element == null
1007	element == null
1008	element == null
1009	element == null
1010	isAfter(element)
1011	isBefore(element)
1012	otherRange == null
1013	otherRange == null
1014	otherRange == null
1015	otherRange == null
1016	this.isOverlappedBy(other)
1017	this.equals(other)
1018	obj == this
1019	obj == null
1019	obj.getClass() != getClass()
1020	hashCode == 0
1021	result == null
308	collection == null
309	e != null
310	field.getName().indexOf(ClassUtils.INNER_CLASS_SEPARATOR_CHAR) != -1
311	Modifier.isTransient(field.getModifiers())
311	this.isAppendTransients()
312	Modifier.isStatic(field.getModifiers())
312	this.isAppendStatics()
313	Arrays.binarySearch(this.excludeFieldNames, field.getName()) >= 0
313	this.excludeFieldNames != null
314	clazz.isArray()
315	this.accept(field)
316	excludeFieldNamesParam == null
317	clazz != null
318	object != null
318	clazz.isInstance(object) == false
319	this.getObject() == null
44	object == null
45	in != null
46	outputStream == null
47	out != null
48	inputStream == null
49	in != null
50	objectData == null
1350	this.runningState == STATE_STOPPED
1351	this.runningState != STATE_UNSTARTED
1352	this.runningState != STATE_RUNNING
1352	this.runningState != STATE_SUSPENDED
1353	this.runningState == STATE_RUNNING
1354	this.runningState != STATE_RUNNING
1355	this.splitState != STATE_SPLIT
1356	this.runningState != STATE_RUNNING
1357	this.runningState != STATE_SUSPENDED
1358	this.runningState == STATE_SUSPENDED
1358	this.runningState == STATE_STOPPED
1359	this.runningState == STATE_UNSTARTED
1360	this.runningState == STATE_RUNNING
1361	this.splitState != STATE_SPLIT
1362	this.runningState == STATE_UNSTARTED
1495	initialCapacity <= 0
1496	str == null
1497	nullText.length() == 0
1497	nullText != null
1498	length < 0
1499	length < size
1500	length > size
1501	capacity > buffer.length
1502	buffer.length > length()
1503	index < 0
1503	index >= length()
1504	index >= length()
1504	index < 0
1505	index < 0
1505	index >= size
1506	size == 0
1507	len == 0
1508	destination.length < len
1508	destination == null
1509	startIndex < 0
1510	endIndex > length()
1510	endIndex < 0
1511	startIndex > endIndex
1512	newLine == null
1513	nullText == null
1514	obj == null
1515	seq == null
1516	seq == null
1517	str == null
1518	strLen > 0
1519	str == null
1520	startIndex > str.length()
1520	startIndex < 0
1521	(startIndex + length) > str.length()
1521	length < 0
1522	length > 0
1523	str == null
1524	strLen > 0
1525	str == null
1526	startIndex < 0
1526	startIndex > str.length()
1527	(startIndex + length) > str.length()
1527	length < 0
1528	length > 0
1529	str == null
1530	strLen > 0
1531	str == null
1532	startIndex > str.length()
1532	startIndex < 0
1533	(startIndex + length) > str.length()
1533	length < 0
1534	length > 0
1535	str == null
1536	strLen > 0
1537	str == null
1538	startIndex > str.length()
1538	startIndex < 0
1539	length < 0
1539	(startIndex + length) > str.length()
1540	length > 0
1541	chars == null
1542	strLen > 0
1543	chars == null
1544	startIndex < 0
1544	startIndex > chars.length
1545	(startIndex + length) > chars.length
1545	length < 0
1546	length > 0
1547	value
1548	array.length > 0
1548	array != null
1549	iterable != null
1550	it != null
1551	array != null
1551	array.length > 0
1552	iterable != null
1553	it.hasNext()
1554	it != null
1555	it.hasNext()
1556	str != null
1557	size() > 0
1558	size() > 0
1559	loopIndex > 0
1559	separator != null
1560	loopIndex > 0
1561	length >= 0
1562	width > 0
1563	str == null
1564	strLen >= width
1565	width > 0
1566	str == null
1567	strLen >= width
1568	obj == null
1569	str == null
1570	str != null
1571	strLen > 0
1572	chars == null
1573	len > 0
1574	chars == null
1575	offset > chars.length
1575	offset < 0
1576	length < 0
1576	offset + length > chars.length
1577	length > 0
1578	value
1579	len > 0
1580	buffer[i] == ch
1581	buffer[i] != ch
1582	buffer[i] == ch
1583	len > 0
1584	len > 0
1585	index >= 0
1586	insertLen != removeLen
1587	insertLen > 0
1588	search != replace
1589	buffer[i] == search
1590	search != replace
1591	buffer[i] == search
1592	searchLen > 0
1593	searchLen > 0
1594	index >= 0
1595	size == 0
1595	matcher == null
1596	removeLen > 0
1597	replaceCount > 0
1598	size == 0
1599	size == 0
1600	len < size
1601	pos > 0
1602	str == null
1603	len == 0
1604	len > size
1605	buffer[i] != str.charAt(i)
1606	str == null
1607	len == 0
1608	len > size
1609	buffer[pos] != str.charAt(i)
1610	startIndex < 0
1611	endIndex > size
1612	startIndex > endIndex
1613	length <= 0
1614	length >= size
1615	length <= 0
1616	length >= size
1617	index < 0
1618	index >= size
1618	length <= 0
1619	size <= index + length
1620	thisBuf[i] == ch
1621	startIndex >= size
1622	thisBuf[i] == ch
1623	str == null
1623	startIndex >= size
1624	strLen == 1
1625	strLen == 0
1626	strLen > size
1627	str.charAt(j) != thisBuf[i + j]
1628	matcher == null
1628	startIndex >= size
1629	matcher.isMatch(buf, i, startIndex, len) > 0
1630	startIndex < 0
1631	buffer[i] == ch
1632	str == null
1632	startIndex < 0
1633	strLen > 0
1633	strLen <= size
1634	strLen == 1
1635	str.charAt(j) != buffer[i + j]
1636	strLen == 0
1637	startIndex < 0
1637	matcher == null
1638	matcher.isMatch(buf, i, 0, endIndex) > 0
1639	this == other
1640	this.size != other.size
1641	Character.toUpperCase(c1) != Character.toUpperCase(c2)
1641	c1 != c2
1642	this == other
1643	this.size != other.size
1644	thisBuf[i] != otherBuf[i]
1645	obj instanceof StrBuilder
1646	startIndex < 0
1647	endIndex > size
1648	startIndex > endIndex
1649	index > size
1649	index < 0
1710	chars == null
1710	chars.length == 0
1711	chars.length == 1
1712	StringUtils.isEmpty(chars)
1713	chars.length() == 1
1714	StringUtils.isEmpty(str)
1458	valueProperties == null
1459	source == null
1460	substitute(buf, 0, source.length()) == false
1461	source == null
1462	substitute(buf, 0, length) == false
1463	source == null
1464	source == null
1465	source == null
1466	source == null
1467	source == null
1468	source == null
1469	source == null
1470	source == null
1471	source == null
1472	source == null
1473	source == null
1474	substitute(buf, 0, length) == false
1475	source == null
1476	source == null
1477	substitute(buf, 0, length) == false
1478	source == null
1479	source == null
1480	startMatchLen == 0
1481	chars[pos - 1] == escape
1481	pos > offset
1482	isEnableSubstitutionInVariables()
1482	(endMatchLen = prefixMatcher.isMatch(chars, pos, offset, bufEnd)) != 0
1483	endMatchLen == 0
1484	nestedVarCount == 0
1485	isEnableSubstitutionInVariables()
1486	priorVariables == null
1487	varValue != null
1488	top
1489	priorVariables.contains(varName) == false
1490	resolver == null
1491	prefixMatcher == null
1492	prefix == null
1493	suffixMatcher == null
1494	suffix == null
1651	input != null
1652	hasNext()
1653	hasPrevious()
1654	input != null
1655	hasNext()
1656	hasPrevious()
1657	tokens == null
1658	chars == null
1659	chars == null
1659	count == 0
1660	pos >= count
1661	StringUtils.isEmpty(tok)
1662	isIgnoreEmptyTokens()
1663	isEmptyTokenAsNull()
1664	getQuoteMatcher().isMatch(chars, start, start, len) > 0
1664	getDelimiterMatcher().isMatch(chars, start, start, len) > 0
1664	removeLen == 0
1665	start >= len
1666	delimLen > 0
1667	quoteLen > 0
1668	quoting
1669	isQuote(chars, pos, len, quoteStart, quoteLen)
1670	isQuote(chars, pos + quoteLen, len, quoteStart, quoteLen)
1671	delimLen > 0
1672	isQuote(chars, pos, len, quoteStart, quoteLen)
1672	quoteLen > 0
1673	ignoredLen > 0
1674	trimmedLen > 0
1675	pos + i >= len
1675	chars[pos + i] != chars[quoteStart + i]
1676	delim == null
1677	quote != null
1678	ignored != null
1679	trimmer != null
1680	chars == null
1681	cloned.chars != null
1682	tokens == null
511	cs == null
511	(strLen = cs.length()) == 0
512	Character.isWhitespace(cs.charAt(i)) == false
513	str == null
514	isEmpty(str)
515	(strLen = str.length()) == 0
515	str == null
516	stripChars == null
517	stripChars.length() == 0
518	(end = str.length()) == 0
518	str == null
519	stripChars == null
520	stripChars.length() == 0
521	strs == null
521	(strsLen = strs.length) == 0
522	input == null
523	cs1 == cs2
524	cs1 == null
524	cs2 == null
525	cs1 instanceof String
525	cs2 instanceof String
526	str2 == null
526	str1 == null
527	str1 == str2
528	str1.length() != str2.length()
529	isEmpty(seq)
530	isEmpty(seq)
531	seq == null
531	searchSeq == null
532	seq == null
532	searchSeq == null
533	ordinal <= 0
533	str == null
533	searchStr == null
534	searchStr.length() == 0
535	lastIndex
536	index < 0
537	str == null
537	searchStr == null
538	startPos < 0
539	startPos > endLimit
540	searchStr.length() == 0
541	CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())
542	isEmpty(seq)
543	isEmpty(seq)
544	seq == null
544	searchSeq == null
545	seq == null
545	searchSeq == null
546	str == null
546	searchStr == null
547	searchStr == null
547	str == null
548	startPos > str.length() - searchStr.length()
549	startPos < 0
550	searchStr.length() == 0
551	CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length())
552	isEmpty(seq)
553	searchSeq == null
553	seq == null
554	searchStr == null
554	str == null
555	CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, len)
556	isEmpty(seq)
557	Character.isWhitespace(seq.charAt(i))
558	isEmpty(cs)
558	ArrayUtils.isEmpty(searchChars)
559	searchChars[j] == ch
560	j < searchLast
560	Character.isHighSurrogate(ch)
560	i < csLast
561	searchChars[j + 1] == cs.charAt(i + 1)
562	isEmpty(cs)
562	isEmpty(searchChars)
563	ArrayUtils.isEmpty(searchChars)
563	isEmpty(cs)
564	searchChars[j] == ch
565	Character.isHighSurrogate(ch)
566	j == searchLast
567	i < csLast
567	searchChars[j + 1] == cs.charAt(i + 1)
568	searchChars == null
569	ArrayUtils.isEmpty(searchChars)
569	isEmpty(cs)
570	searchChars[j] == ch
571	i < csLast
571	Character.isHighSurrogate(ch)
571	j < searchLast
572	searchChars[j + 1] == cs.charAt(i + 1)
573	isEmpty(seq)
573	isEmpty(searchChars)
574	Character.isHighSurrogate(ch)
574	i + 1 < strLen
575	chFound
575	CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0
576	chFound
577	valid == null
577	cs == null
578	cs.length() == 0
579	valid.length == 0
580	validChars == null
580	cs == null
581	cs == null
581	searchChars == null
582	searchChars[j] == ch
583	Character.isHighSurrogate(ch)
584	j == searchLast
585	searchChars[j + 1] == cs.charAt(i + 1)
585	i < csLast
586	invalidChars == null
586	cs == null
587	str == null
587	searchStrs == null
588	search == null
589	tmp == INDEX_NOT_FOUND
590	tmp < ret
591	searchStrs == null
591	str == null
592	search == null
593	tmp > ret
594	str == null
595	start < 0
596	start < 0
597	start > str.length()
598	str == null
599	end < 0
600	start < 0
601	end > str.length()
602	start > end
603	start < 0
604	end < 0
605	str == null
606	len < 0
607	str.length() <= len
608	str == null
609	len < 0
610	str.length() <= len
611	str == null
612	len < 0
612	pos > str.length()
613	pos < 0
614	str.length() <= pos + len
615	isEmpty(str)
615	separator == null
616	separator.length() == 0
617	pos == INDEX_NOT_FOUND
618	isEmpty(str)
619	separator == null
620	pos == INDEX_NOT_FOUND
621	isEmpty(separator)
621	isEmpty(str)
622	pos == INDEX_NOT_FOUND
623	isEmpty(str)
624	isEmpty(separator)
625	pos == INDEX_NOT_FOUND
625	pos == str.length() - separator.length()
626	str == null
626	open == null
626	close == null
627	start != INDEX_NOT_FOUND
628	end != INDEX_NOT_FOUND
629	isEmpty(open)
629	str == null
629	isEmpty(close)
630	strLen == 0
631	start < 0
632	end < 0
633	list.isEmpty()
634	str == null
635	len == 0
636	EMPTY.equals(separator)
636	separator == null
637	end > -1
638	end > beg
639	numberOfSubstrings == max
640	preserveAllTokens
641	numberOfSubstrings == max
642	str == null
643	len == 0
644	str.charAt(i) == separatorChar
645	preserveAllTokens
645	match
646	lastMatch
646	match
646	preserveAllTokens
647	str == null
648	len == 0
649	separatorChars == null
650	Character.isWhitespace(str.charAt(i))
651	preserveAllTokens
651	match
652	sizePlus1++ == max
653	separatorChars.length() == 1
654	str.charAt(i) == sep
655	match
655	preserveAllTokens
656	sizePlus1++ == max
657	separatorChars.indexOf(str.charAt(i)) >= 0
658	match
658	preserveAllTokens
659	sizePlus1++ == max
660	match
660	preserveAllTokens
660	lastMatch
661	str == null
662	str.length() == 0
663	type == currentType
664	currentType == Character.UPPERCASE_LETTER
664	type == Character.LOWERCASE_LETTER
664	camelCase
665	newTokenStart != tokenStart
666	array == null
667	array == null
668	array == null
669	array == null
670	array == null
671	array == null
672	array == null
673	array == null
674	array == null
675	noOfItems <= 0
676	i > startIndex
677	array[i] != null
678	array == null
679	noOfItems <= 0
680	i > startIndex
681	array == null
682	noOfItems <= 0
683	i > startIndex
684	array == null
685	noOfItems <= 0
686	i > startIndex
687	array == null
688	noOfItems <= 0
689	i > startIndex
690	array == null
691	noOfItems <= 0
692	i > startIndex
693	array == null
694	noOfItems <= 0
695	i > startIndex
696	array == null
697	noOfItems <= 0
698	i > startIndex
699	array == null
700	array == null
701	separator == null
702	noOfItems <= 0
703	i > startIndex
704	array[i] != null
705	iterator == null
706	iterator.hasNext()
707	iterator.hasNext()
708	first != null
709	obj != null
710	iterator == null
711	iterator.hasNext()
712	iterator.hasNext()
713	first != null
714	separator != null
715	obj != null
716	iterable == null
717	iterable == null
718	isEmpty(str)
719	Character.isWhitespace(str.charAt(i))
720	count == sz
721	isEmpty(remove)
721	isEmpty(str)
722	str.startsWith(remove)
723	isEmpty(str)
723	isEmpty(remove)
724	startsWithIgnoreCase(str, remove)
725	isEmpty(remove)
725	isEmpty(str)
726	str.endsWith(remove)
727	isEmpty(str)
727	isEmpty(remove)
728	endsWithIgnoreCase(str, remove)
729	isEmpty(remove)
729	isEmpty(str)
730	isEmpty(str)
730	str.indexOf(remove) == INDEX_NOT_FOUND
731	chars[i] != remove
732	isEmpty(searchString)
732	isEmpty(text)
732	replacement == null
732	max == 0
733	end == INDEX_NOT_FOUND
734	--max == 0
735	searchList == null
735	searchList.length == 0
735	replacementList.length == 0
735	text.length() == 0
735	replacementList == null
735	text == null
736	timeToLive < 0
737	searchLength != replacementLength
738	searchList[i] == null
738	replacementList[i] == null
738	searchList[i].length() == 0
738	noMoreMatchesForReplIndex[i]
739	tempIndex == -1
740	tempIndex < textIndex
740	textIndex == -1
741	textIndex == -1
742	replacementList[i] == null
742	searchList[i] == null
743	greater > 0
744	searchList[i].length() == 0
744	replacementList[i] == null
744	searchList[i] == null
744	noMoreMatchesForReplIndex[i]
745	tempIndex == -1
746	textIndex == -1
746	tempIndex < textIndex
747	repeat
748	str == null
749	isEmpty(searchChars)
749	isEmpty(str)
750	replaceChars == null
751	index >= 0
752	index < replaceCharsLength
753	modified
754	str == null
755	overlay == null
756	start < 0
757	start > len
758	end < 0
759	end > len
760	start > end
761	isEmpty(str)
762	str.length() == 1
763	ch == CharUtils.LF
763	ch == CharUtils.CR
764	last == CharUtils.LF
765	str.charAt(lastIdx - 1) == CharUtils.CR
766	last != CharUtils.CR
767	str == null
768	strLen < 2
769	last == CharUtils.LF
769	ret.charAt(lastIdx - 1) == CharUtils.CR
770	str == null
771	repeat <= 0
772	repeat == 1
772	inputLength == 0
773	inputLength == 1
773	repeat <= PAD_LIMIT
774	separator == null
774	str == null
775	str == null
776	pads <= 0
777	pads > PAD_LIMIT
778	str == null
779	isEmpty(padStr)
780	pads <= 0
781	padLen == 1
781	pads <= PAD_LIMIT
782	pads == padLen
783	pads < padLen
784	str == null
785	pads <= 0
786	pads > PAD_LIMIT
787	str == null
788	isEmpty(padStr)
789	pads <= 0
790	padLen == 1
790	pads <= PAD_LIMIT
791	pads == padLen
792	pads < padLen
793	size <= 0
793	str == null
794	pads <= 0
795	str == null
795	size <= 0
796	isEmpty(padStr)
797	pads <= 0
798	str == null
799	str == null
800	str == null
801	str == null
802	str == null
802	(strLen = str.length()) == 0
803	str == null
803	(strLen = str.length()) == 0
804	StringUtils.isEmpty(str)
805	Character.isUpperCase(ch)
806	Character.isTitleCase(ch)
807	Character.isLowerCase(ch)
808	isEmpty(str)
808	isEmpty(sub)
809	cs == null
809	cs.length() == 0
810	Character.isLetter(cs.charAt(i)) == false
811	cs == null
812	cs.charAt(i) != ' '
812	Character.isLetter(cs.charAt(i)) == false
813	cs == null
813	cs.length() == 0
814	Character.isLetterOrDigit(cs.charAt(i)) == false
815	cs == null
816	cs.charAt(i) != ' '
816	Character.isLetterOrDigit(cs.charAt(i)) == false
817	cs == null
818	CharUtils.isAsciiPrintable(cs.charAt(i)) == false
819	cs == null
819	cs.length() == 0
820	Character.isDigit(cs.charAt(i)) == false
821	cs == null
822	Character.isDigit(cs.charAt(i)) == false
822	cs.charAt(i) != ' '
823	cs == null
824	Character.isWhitespace(cs.charAt(i)) == false
825	isEmpty(cs)
825	cs == null
826	Character.isLowerCase(cs.charAt(i)) == false
827	isEmpty(cs)
827	cs == null
828	Character.isUpperCase(cs.charAt(i)) == false
829	str == null
830	str == null
831	str == null
832	maxWidth < 4
833	str.length() <= maxWidth
834	offset > str.length()
835	str.length() - offset < maxWidth - 3
836	offset <= 4
837	maxWidth < 7
838	offset + maxWidth - 3 < str.length()
839	isEmpty(str)
839	isEmpty(middle)
840	length < middle.length()+2
840	length >= str.length()
841	str1 == null
842	str2 == null
843	at == INDEX_NOT_FOUND
844	cs1 == cs2
845	cs1 == null
845	cs2 == null
846	cs1.charAt(i) != cs2.charAt(i)
847	i < cs2.length()
847	i < cs1.length()
848	css.length <= 1
848	css == null
849	css[i] == null
850	longestStrLen == 0
850	allStringsNull
850	anyStringNull
851	shortestStrLen == 0
852	css[arrayPos].charAt(stringPos) != comparisonChar
853	firstDiff != -1
854	shortestStrLen != longestStrLen
854	firstDiff == -1
855	strs.length == 0
855	strs == null
856	smallestIndexOfDiff == INDEX_NOT_FOUND
857	strs[0] == null
858	smallestIndexOfDiff == 0
859	t == null
859	s == null
860	n == 0
861	m == 0
862	n > m
863	s == null
863	t == null
864	threshold < 0
865	n == 0
866	m == 0
867	n > m
868	min > max
869	min > 1
870	s.charAt(i - 1) == t_j
871	p[n] <= threshold
872	prefix == null
872	str == null
873	prefix.length() > str.length()
874	ArrayUtils.isEmpty(searchStrings)
874	isEmpty(string)
875	StringUtils.startsWith(string, searchString)
876	suffix == null
876	str == null
877	suffix.length() > str.length()
878	str == null
879	isEmpty(string)
879	ArrayUtils.isEmpty(searchStrings)
880	StringUtils.endsWith(string, searchString)
881	endsWith(str, suffix, ignoreCase)
881	str == null
881	isEmpty(suffix)
882	suffixes != null
882	suffixes.length > 0
883	endsWith(str, s, ignoreCase)
884	isEmpty(prefix)
884	str == null
884	startsWith(str, prefix, ignoreCase)
885	prefixes.length > 0
885	prefixes != null
886	startsWith(str, p, ignoreCase)
887	version == null
888	osVersion == null
888	osName == null
889	osName == null
1186	timePeriod <= 0
1187	service != null
1188	shutdown
1189	ownExecutor
1190	task != null
1191	isShutdown()
1192	task == null
1193	canPass
187	style == null
188	style == null
189	buffer == null
190	superToString != null
191	toString != null
192	this.getObject() == null
193	value != null
194	m == null
195	value != null
196	m != null
197	m.isEmpty()
198	toString != null
199	pos1 != pos2
199	pos1 >= 0
199	pos2 >= 0
200	fieldSeparatorAtStart
201	object != null
202	fieldSeparatorAtStart
203	this.fieldSeparatorAtEnd == false
204	sepLen > 0
204	len >= sepLen
204	len > 0
205	buffer.charAt(len - 1 - i) != fieldSeparator.charAt(sepLen - 1 - i)
206	match
207	value == null
208	isRegistered(value)
208	value instanceof Character
208	value instanceof Boolean
208	value instanceof Number
209	value instanceof Collection<?>
210	detail
211	value instanceof Map<?, ?>
212	detail
213	value instanceof long[]
214	detail
215	value instanceof int[]
216	detail
217	value instanceof short[]
218	detail
219	value instanceof byte[]
220	detail
221	value instanceof char[]
222	detail
223	value instanceof double[]
224	detail
225	value instanceof float[]
226	detail
227	value instanceof boolean[]
228	detail
229	value.getClass().isArray()
230	detail
231	detail
232	array == null
233	isFullDetail(fullDetail)
234	i > 0
235	item == null
236	i > 0
237	item == null
238	array == null
239	isFullDetail(fullDetail)
240	i > 0
241	array == null
242	isFullDetail(fullDetail)
243	i > 0
244	array == null
245	isFullDetail(fullDetail)
246	i > 0
247	array == null
248	isFullDetail(fullDetail)
249	i > 0
250	array == null
251	isFullDetail(fullDetail)
252	i > 0
253	array == null
254	isFullDetail(fullDetail)
255	i > 0
256	array == null
257	isFullDetail(fullDetail)
258	i > 0
259	array == null
260	isFullDetail(fullDetail)
261	i > 0
262	useClassName
262	object != null
263	useShortClassName
264	object!=null
264	this.isUseIdentityHashCode()
265	fieldName != null
265	useFieldNames
266	fullDetailRequest == null
267	arrayStart == null
268	arrayEnd == null
269	arraySeparator == null
270	contentStart == null
271	contentEnd == null
272	fieldNameValueSeparator == null
273	fieldSeparator == null
274	nullText == null
275	sizeStartText == null
276	sizeEndText == null
277	summaryObjectStartText == null
278	summaryObjectEndText == null
996	obj == this
997	obj instanceof Triple<?, ?, ?>
1097	toType == null
1097	toType instanceof Class<?>
1098	toType instanceof ParameterizedType
1099	toType instanceof GenericArrayType
1100	toType instanceof WildcardType
1101	toType instanceof TypeVariable<?>
1102	type == null
1103	toClass == null
1104	toClass.equals(type)
1105	type instanceof Class<?>
1106	type instanceof ParameterizedType
1107	type instanceof TypeVariable<?>
1108	isAssignable(bound, toClass)
1109	type instanceof GenericArrayType
1110	type instanceof WildcardType
1111	type == null
1112	toParameterizedType == null
1113	toParameterizedType.equals(type)
1114	fromTypeVarAssigns == null
1115	fromTypeVarAssigns.isEmpty()
1116	toTypeArg instanceof WildcardType
1116	fromTypeArg != null
1116	toTypeArg.equals(fromTypeArg)
1116	isAssignable(fromTypeArg, toTypeArg, typeVarAssigns)
1117	result instanceof TypeVariable<?>
1117	result.equals(var)
1118	type == null
1119	toGenericArrayType == null
1120	toGenericArrayType.equals(type)
1121	type instanceof Class<?>
1122	type instanceof GenericArrayType
1123	type instanceof WildcardType
1124	isAssignable(bound, toGenericArrayType)
1125	type instanceof TypeVariable<?>
1126	isAssignable(bound, toGenericArrayType)
1127	type instanceof ParameterizedType
1128	type == null
1129	toWildcardType == null
1130	toWildcardType.equals(type)
1131	type instanceof WildcardType
1132	isAssignable(bound, toBound, typeVarAssigns)
1133	isAssignable(toBound, bound, typeVarAssigns)
1134	isAssignable(type, substituteTypeVariables(toBound, typeVarAssigns), typeVarAssigns)
1135	isAssignable(substituteTypeVariables(toBound, typeVarAssigns), type, typeVarAssigns)
1136	type == null
1137	toTypeVariable == null
1138	toTypeVariable.equals(type)
1139	type instanceof TypeVariable<?>
1140	isAssignable(bound, toTypeVariable, typeVarAssigns)
1141	type instanceof GenericArrayType
1141	type instanceof ParameterizedType
1141	type instanceof Class<?>
1141	type instanceof WildcardType
1142	type instanceof TypeVariable<?>
1142	typeVarAssigns != null
1143	replacementType == null
1144	type instanceof Class<?>
1145	type instanceof ParameterizedType
1146	type instanceof GenericArrayType
1147	type instanceof WildcardType
1148	isAssignable(bound, toClass)
1149	type instanceof TypeVariable<?>
1150	isAssignable(bound, toClass)
1151	isAssignable(cls, toClass)
1152	ownerType instanceof ParameterizedType
1153	toClass.equals(cls)
1154	isAssignable(cls, toClass)
1155	cls.isPrimitive()
1156	toClass.isPrimitive()
1157	toClass.equals(cls)
1158	isAssignable(cls, superClass)
1159	cls.equals(superClass)
1160	midType instanceof Class<?>
1161	ownerType instanceof ParameterizedType
1162	typeVarAssigns.containsKey(typeVar)
1162	typeVarList.contains(typeArg)
1163	superClass.isInterface()
1164	midType instanceof ParameterizedType
1165	midType instanceof Class<?>
1166	isAssignable(genericInterface, (Type) midClass)
1166	isAssignable(midClass, superClass)
1167	genericInterface != null
1168	type == null
1169	bounds.length < 2
1170	type1 != type2
1170	isAssignable(type2, type1, null)
1171	subtypeFound
1172	isAssignable(type, substituteTypeVariables(bound, typeVarAssigns), typeVarAssigns)
1173	rawType instanceof Class<?>
1174	type instanceof Class<?>
1175	type instanceof ParameterizedType
1176	type instanceof TypeVariable<?>
1177	assigningType == null
1178	genericDeclaration instanceof Class<?>
1179	typeVarAssigns == null
1180	typeArgument == null
1181	type instanceof GenericArrayType
1182	type instanceof WildcardType
1183	type instanceof Class<?>
1184	type instanceof GenericArrayType
1406	between
1407	codepoint < below
1407	codepoint > above
1408	codepoint >= below
1408	codepoint <= above
1409	codepoint > 0xffff
1410	codepoint > 0xfff
1411	codepoint > 0xff
1412	codepoint > 0xf
1398	index + 1 < input.length()
1398	input.charAt(index) == '\\'
1398	input.charAt(index + 1) == 'u'
1399	index + i < input.length()
1399	input.charAt(index + i) == '+'
1400	index + i + 4 <= input.length()
86	expression == false
87	expression == false
88	expression == false
89	expression == false
90	object == null
91	array == null
92	array.length == 0
93	collection == null
94	collection.isEmpty()
95	map == null
96	map.isEmpty()
97	chars == null
98	chars.length() == 0
99	chars == null
100	StringUtils.isBlank(chars)
101	array[i] == null
102	it.next() == null
103	index >= array.length
103	index < 0
104	index >= collection.size()
104	index < 0
105	index < 0
105	index >= chars.length()
106	expression == false
107	expression == false
108	Pattern.matches(pattern, input) == false
109	Pattern.matches(pattern, input) == false
110	value.compareTo(end) > 0
110	value.compareTo(start) < 0
111	value.compareTo(start) < 0
111	value.compareTo(end) > 0
112	value.compareTo(end) >= 0
112	value.compareTo(start) <= 0
113	value.compareTo(end) >= 0
113	value.compareTo(start) <= 0
114	type.isInstance(obj) == false
115	type.isInstance(obj) == false
116	superType.isAssignableFrom(type) == false
117	superType.isAssignableFrom(type) == false
1433	str == null
1434	newLineStr == null
1435	wrapLength < 1
1436	str.charAt(offset) == ' '
1437	spaceToWrapAt >= offset
1438	wrapLongWords
1439	spaceToWrapAt >= 0
1440	delimLen == 0
1440	StringUtils.isEmpty(str)
1441	isDelimiter(ch, delimiters)
1442	capitalizeNext
1443	StringUtils.isEmpty(str)
1443	delimLen == 0
1444	delimLen == 0
1444	StringUtils.isEmpty(str)
1445	isDelimiter(ch, delimiters)
1446	uncapitalizeNext
1447	StringUtils.isEmpty(str)
1448	Character.isUpperCase(ch)
1449	Character.isTitleCase(ch)
1450	Character.isLowerCase(ch)
1451	whitespace
1452	StringUtils.isEmpty(str)
1453	delimiters != null
1453	delimiters.length == 0
1454	isDelimiter(ch, delimiters)
1455	lastWasGap
1456	delimiters == null
1457	ch == delimiter

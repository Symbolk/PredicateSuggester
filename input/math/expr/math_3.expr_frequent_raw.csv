554	AVLTree.java	insert	element	T	0	DEF	$ != null
556	AVLTree.java	delete	element	T	0	RET	$ != null
12420	AVLTree.java	delete	node	Node	0	NIL-FOR	$ != null
12421	AVLTree.java	getNotSmaller	node	Node	0	NIL-FOR	$ != null
12422	AVLTree.java	getNotLarger	node	Node	0	NIL-FOR	$ != null
1527	AbstractFieldMatrix.java	AbstractFieldMatrix	rowDimension	int	0	NotStrictlyPositiveException	$ <= 0
1528	AbstractFieldMatrix.java	AbstractFieldMatrix	columnDimension	int	0	NotStrictlyPositiveException	$ <= 0
1529	AbstractFieldMatrix.java	extractField	d	T[][]	0	NullArgumentException	$ == null
1530	AbstractFieldMatrix.java	extractField	d	T[][]	0	NoDataException	$.length == 0
1532	AbstractFieldMatrix.java	extractField	d	T[]	0	NoDataException	$.length == 0
12920	AbstractFieldMatrix.java	add	rowCount	int	0	NIL-FOR	row < $
12921	AbstractFieldMatrix.java	add	columnCount	int	0	NIL-FOR	col < $
12922	AbstractFieldMatrix.java	subtract	rowCount	int	0	NIL-FOR	row < $
12923	AbstractFieldMatrix.java	subtract	columnCount	int	0	NIL-FOR	col < $
12924	AbstractFieldMatrix.java	scalarAdd	rowCount	int	0	NIL-FOR	row < $
12925	AbstractFieldMatrix.java	scalarAdd	columnCount	int	0	NIL-FOR	col < $
12926	AbstractFieldMatrix.java	scalarMultiply	rowCount	int	0	NIL-FOR	row < $
12927	AbstractFieldMatrix.java	scalarMultiply	columnCount	int	0	NIL-FOR	col < $
12928	AbstractFieldMatrix.java	multiply	row	int	0	NIL-FOR	$ < nRows
12928	AbstractFieldMatrix.java	multiply	nRows	int	0	NIL-FOR	row < $
12929	AbstractFieldMatrix.java	multiply	col	int	0	NIL-FOR	$ < nCols
12929	AbstractFieldMatrix.java	multiply	nCols	int	0	NIL-FOR	col < $
12930	AbstractFieldMatrix.java	multiply	nSum	int	0	NIL-FOR	i < $
1533	AbstractFieldMatrix.java	power	p	int	0	NotPositiveException	$ < 0
1535	AbstractFieldMatrix.java	power	p	int	0	RET	$ == 0
1536	AbstractFieldMatrix.java	power	p	int	0	RET	$ == 1
12931	AbstractFieldMatrix.java	power	binaryRepresentation	char[]	0	NIL-FOR	i < $.length
12932	AbstractFieldMatrix.java	power	binaryRepresentation	char[]	0	NIL-FOR	i < $.length
12933	AbstractFieldMatrix.java	getData	i	int	0	NIL-FOR	$ < data.length
12933	AbstractFieldMatrix.java	getData	data	T[][]	0	NIL-FOR	i < $.length
12934	AbstractFieldMatrix.java	getData	dataI	T[]	0	NIL-FOR	j < $.length
12935	AbstractFieldMatrix.java	getSubMatrix	endRow	int	0	NIL-FOR	i <= $
12936	AbstractFieldMatrix.java	getSubMatrix	endColumn	int	0	NIL-FOR	j <= $
12937	AbstractFieldMatrix.java	copySubMatrix	selectedRows	int[]	0	NIL-FOR	i < $.length
12938	AbstractFieldMatrix.java	copySubMatrix	selectedColumns	int[]	0	NIL-FOR	j < $.length
1540	AbstractFieldMatrix.java	setSubMatrix	subMatrix	T[][]	0	NullArgumentException	$ == null
1541	AbstractFieldMatrix.java	setSubMatrix	nRows	int	0	NoDataException	$ == 0
1542	AbstractFieldMatrix.java	setSubMatrix	nCols	int	0	NoDataException	$ == 0
12939	AbstractFieldMatrix.java	setSubMatrix	r	int	0	NIL-FOR	$ < nRows
12940	AbstractFieldMatrix.java	setSubMatrix	i	int	0	NIL-FOR	$ < nRows
12940	AbstractFieldMatrix.java	setSubMatrix	nRows	int	0	NIL-FOR	i < $
12941	AbstractFieldMatrix.java	setSubMatrix	j	int	0	NIL-FOR	$ < nCols
12941	AbstractFieldMatrix.java	setSubMatrix	nCols	int	0	NIL-FOR	j < $
12942	AbstractFieldMatrix.java	getRowMatrix	i	int	0	NIL-FOR	$ < nCols
12942	AbstractFieldMatrix.java	getRowMatrix	nCols	int	0	NIL-FOR	i < $
12943	AbstractFieldMatrix.java	setRowMatrix	i	int	0	NIL-FOR	$ < nCols
12943	AbstractFieldMatrix.java	setRowMatrix	nCols	int	0	NIL-FOR	i < $
12944	AbstractFieldMatrix.java	getColumnMatrix	i	int	0	NIL-FOR	$ < nRows
12944	AbstractFieldMatrix.java	getColumnMatrix	nRows	int	0	NIL-FOR	i < $
12945	AbstractFieldMatrix.java	setColumnMatrix	i	int	0	NIL-FOR	$ < nRows
12945	AbstractFieldMatrix.java	setColumnMatrix	nRows	int	0	NIL-FOR	i < $
12946	AbstractFieldMatrix.java	setRowVector	i	int	0	NIL-FOR	$ < nCols
12946	AbstractFieldMatrix.java	setRowVector	nCols	int	0	NIL-FOR	i < $
12947	AbstractFieldMatrix.java	setColumnVector	i	int	0	NIL-FOR	$ < nRows
12947	AbstractFieldMatrix.java	setColumnVector	nRows	int	0	NIL-FOR	i < $
12948	AbstractFieldMatrix.java	getRow	i	int	0	NIL-FOR	$ < nCols
12948	AbstractFieldMatrix.java	getRow	nCols	int	0	NIL-FOR	i < $
12949	AbstractFieldMatrix.java	setRow	i	int	0	NIL-FOR	$ < nCols
12949	AbstractFieldMatrix.java	setRow	nCols	int	0	NIL-FOR	i < $
12950	AbstractFieldMatrix.java	getColumn	i	int	0	NIL-FOR	$ < nRows
12950	AbstractFieldMatrix.java	getColumn	nRows	int	0	NIL-FOR	i < $
12951	AbstractFieldMatrix.java	setColumn	i	int	0	NIL-FOR	$ < nRows
12951	AbstractFieldMatrix.java	setColumn	nRows	int	0	NIL-FOR	i < $
12952	AbstractFieldMatrix.java	getTrace	i	int	0	NIL-FOR	$ < nRows
12952	AbstractFieldMatrix.java	getTrace	nRows	int	0	NIL-FOR	i < $
12953	AbstractFieldMatrix.java	operate	row	int	0	NIL-FOR	$ < nRows
12953	AbstractFieldMatrix.java	operate	nRows	int	0	NIL-FOR	row < $
12954	AbstractFieldMatrix.java	operate	i	int	0	NIL-FOR	$ < nCols
12954	AbstractFieldMatrix.java	operate	nCols	int	0	NIL-FOR	i < $
12955	AbstractFieldMatrix.java	operate	row	int	0	NIL-FOR	$ < nRows
12955	AbstractFieldMatrix.java	operate	nRows	int	0	NIL-FOR	row < $
12956	AbstractFieldMatrix.java	operate	i	int	0	NIL-FOR	$ < nCols
12956	AbstractFieldMatrix.java	operate	nCols	int	0	NIL-FOR	i < $
12957	AbstractFieldMatrix.java	preMultiply	col	int	0	NIL-FOR	$ < nCols
12957	AbstractFieldMatrix.java	preMultiply	nCols	int	0	NIL-FOR	col < $
12958	AbstractFieldMatrix.java	preMultiply	i	int	0	NIL-FOR	$ < nRows
12958	AbstractFieldMatrix.java	preMultiply	nRows	int	0	NIL-FOR	i < $
12959	AbstractFieldMatrix.java	preMultiply	col	int	0	NIL-FOR	$ < nCols
12959	AbstractFieldMatrix.java	preMultiply	nCols	int	0	NIL-FOR	col < $
12960	AbstractFieldMatrix.java	preMultiply	i	int	0	NIL-FOR	$ < nRows
12960	AbstractFieldMatrix.java	preMultiply	nRows	int	0	NIL-FOR	i < $
12961	AbstractFieldMatrix.java	walkInRowOrder	row	int	0	NIL-FOR	$ < rows
12961	AbstractFieldMatrix.java	walkInRowOrder	rows	int	0	NIL-FOR	row < $
12963	AbstractFieldMatrix.java	walkInRowOrder	row	int	0	NIL-FOR	$ < rows
12963	AbstractFieldMatrix.java	walkInRowOrder	rows	int	0	NIL-FOR	row < $
12970	AbstractFieldMatrix.java	walkInColumnOrder	row	int	0	NIL-FOR	$ < rows
12970	AbstractFieldMatrix.java	walkInColumnOrder	rows	int	0	NIL-FOR	row < $
12972	AbstractFieldMatrix.java	walkInColumnOrder	row	int	0	NIL-FOR	$ < rows
12972	AbstractFieldMatrix.java	walkInColumnOrder	rows	int	0	NIL-FOR	row < $
12977	AbstractFieldMatrix.java	toString	i	int	0	NIL-FOR	$ < nRows
12977	AbstractFieldMatrix.java	toString	nRows	int	0	NIL-FOR	i < $
1555	AbstractFieldMatrix.java	toString	i	int	0	DEF	$ > 0
12978	AbstractFieldMatrix.java	toString	j	int	0	NIL-FOR	$ < nCols
12978	AbstractFieldMatrix.java	toString	nCols	int	0	NIL-FOR	j < $
1556	AbstractFieldMatrix.java	toString	j	int	0	DEF	$ > 0
12979	AbstractFieldMatrix.java	equals	row	int	0	NIL-FOR	$ < nRows
12979	AbstractFieldMatrix.java	equals	nRows	int	0	NIL-FOR	row < $
12980	AbstractFieldMatrix.java	equals	col	int	0	NIL-FOR	$ < nCols
12980	AbstractFieldMatrix.java	equals	nCols	int	0	NIL-FOR	col < $
12981	AbstractFieldMatrix.java	hashCode	row	int	0	NIL-FOR	$ < nRows
12981	AbstractFieldMatrix.java	hashCode	nRows	int	0	NIL-FOR	row < $
12982	AbstractFieldMatrix.java	hashCode	col	int	0	NIL-FOR	$ < nCols
12982	AbstractFieldMatrix.java	hashCode	nCols	int	0	NIL-FOR	col < $
1561	AbstractFieldMatrix.java	checkRowIndex	row	int	0	OutOfRangeException	$ < 0
1562	AbstractFieldMatrix.java	checkColumnIndex	column	int	0	OutOfRangeException	$ < 0
1565	AbstractFieldMatrix.java	checkSubMatrixIndex	selectedRows	int[]	0	NullArgumentException	$ == null
1565	AbstractFieldMatrix.java	checkSubMatrixIndex	selectedColumns	int[]	0	NullArgumentException	$ == null
1566	AbstractFieldMatrix.java	checkSubMatrixIndex	selectedRows	int[]	0	NoDataException	$.length == 0
1566	AbstractFieldMatrix.java	checkSubMatrixIndex	selectedColumns	int[]	0	NoDataException	$.length == 0
1007	AbstractFormat.java	setDenominatorFormat	format	NumberFormat	0	NullArgumentException	$ == null
1008	AbstractFormat.java	setNumeratorFormat	format	NumberFormat	0	NullArgumentException	$ == null
1009	AbstractFormat.java	parseNextCharacter	index	int	0	DEF	$ < n
12457	AbstractFormat.java	parseNextCharacter	index	int	0	NIL-DOWHILE	$ < n
1010	AbstractFormat.java	parseNextCharacter	index	int	0	DEF	$ < n
1087	AbstractIntegerDistribution.java	inverseCumulativeProbability	p	double	0	OutOfRangeException	$ < 0.0
1088	AbstractIntegerDistribution.java	inverseCumulativeProbability	p	double	0	RET	$ == 0.0
1092	AbstractIntegerDistribution.java	inverseCumulativeProbability	chebyshevApplies	boolean	0	DEF	$
1097	AbstractIntegerDistribution.java	sample	sampleSize	int	0	NotStrictlyPositiveException	$ <= 0
12468	AbstractIntegerDistribution.java	sample	sampleSize	int	0	NIL-FOR	i < $
1098	AbstractIntegerDistribution.java	checkedCumulativeProbability	result	double	0	MathInternalError	Double.isNaN($)
3531	AbstractIntegrator.java	acceptStep	needReset	boolean	0	RET	$
14143	AbstractLeastSquaresOptimizer.java	computeSigma	i	int	0	NIL-FOR	$ < nC
14143	AbstractLeastSquaresOptimizer.java	computeSigma	nC	int	0	NIL-FOR	i < $
14144	AbstractLeastSquaresOptimizer.java	computeResiduals	target	double[]	0	NIL-FOR	i < $.length
14145	AbstractLeastSquaresOptimizer.java	squareRoot	i	int	0	NIL-FOR	$ < dim
14145	AbstractLeastSquaresOptimizer.java	squareRoot	dim	int	0	NIL-FOR	i < $
13425	AbstractLeastSquaresOptimizer.java	computeWeightedJacobian	i	int	0	NIL-FOR	$ < nC
13425	AbstractLeastSquaresOptimizer.java	computeWeightedJacobian	nC	int	0	NIL-FOR	i < $
13426	AbstractLeastSquaresOptimizer.java	computeWeightedJacobian	nR	int	0	NIL-FOR	i < $
13427	AbstractLeastSquaresOptimizer.java	computeWeightedJacobian	j	int	0	NIL-FOR	$ < nC
13427	AbstractLeastSquaresOptimizer.java	computeWeightedJacobian	nC	int	0	NIL-FOR	j < $
13428	AbstractLeastSquaresOptimizer.java	guessParametersErrors	errors	double[]	0	NIL-FOR	i < $.length
13429	AbstractLeastSquaresOptimizer.java	computeSigma	i	int	0	NIL-FOR	$ < nC
13429	AbstractLeastSquaresOptimizer.java	computeSigma	nC	int	0	NIL-FOR	i < $
13430	AbstractLeastSquaresOptimizer.java	computeResiduals	target	double[]	0	NIL-FOR	i < $.length
13431	AbstractLeastSquaresOptimizer.java	squareRoot	i	int	0	NIL-FOR	$ < dim
13431	AbstractLeastSquaresOptimizer.java	squareRoot	dim	int	0	NIL-FOR	i < $
2600	AbstractMultipleLinearRegression.java	newSampleData	data	double[]	0	NullArgumentException	$ == null
13833	AbstractMultipleLinearRegression.java	newSampleData	nobs	int	0	NIL-FOR	i < $
13834	AbstractMultipleLinearRegression.java	newSampleData	cols	int	0	NIL-FOR	j < $
2604	AbstractMultipleLinearRegression.java	newYSampleData	y	double[]	0	NullArgumentException	$ == null
2605	AbstractMultipleLinearRegression.java	newYSampleData	y	double[]	0	NoDataException	$.length == 0
2606	AbstractMultipleLinearRegression.java	newXSampleData	x	double[][]	0	NullArgumentException	$ == null
2607	AbstractMultipleLinearRegression.java	newXSampleData	x	double[][]	0	NoDataException	$.length == 0
13835	AbstractMultipleLinearRegression.java	newXSampleData	x	double[][]	0	NIL-FOR	i < $.length
2610	AbstractMultipleLinearRegression.java	validateSampleData	x	double[][]	0	NullArgumentException	$ == null
2610	AbstractMultipleLinearRegression.java	validateSampleData	y	double[]	0	NullArgumentException	$ == null
2612	AbstractMultipleLinearRegression.java	validateSampleData	x	double[][]	0	NoDataException	$.length == 0
13836	AbstractMultipleLinearRegression.java	estimateRegressionParametersStandardErrors	length	int	0	NIL-FOR	i < $
1249	AbstractMultivariateRealDistribution.java	sample	sampleSize	int	0	NotStrictlyPositiveException	$ <= 0
12514	AbstractMultivariateRealDistribution.java	sample	sampleSize	int	0	NIL-FOR	i < $
3130	AbstractRandomGenerator.java	nextBytes	i	int	0	DEF	$ > 0
3132	AbstractRandomGenerator.java	nextInt	n	int	0	NotStrictlyPositiveException	$ <= 0
3134	AbstractRandomGenerator.java	nextGaussian	s	double	0	DEF	$ != 0
1279	AbstractRealDistribution.java	inverseCumulativeProbability	p	double	0	OutOfRangeException	$ < 0.0
1280	AbstractRealDistribution.java	inverseCumulativeProbability	p	double	0	RET	$ == 0.0
1283	AbstractRealDistribution.java	inverseCumulativeProbability	chebyshevApplies	boolean	1	DEF	$
1285	AbstractRealDistribution.java	inverseCumulativeProbability	chebyshevApplies	boolean	1	DEF	$
1290	AbstractRealDistribution.java	sample	sampleSize	int	0	NotStrictlyPositiveException	$ <= 0
12531	AbstractRealDistribution.java	sample	sampleSize	int	0	NIL-FOR	i < $
12744	AbstractRealMatrix.java	add	rowCount	int	0	NIL-FOR	row < $
12745	AbstractRealMatrix.java	add	columnCount	int	0	NIL-FOR	col < $
12746	AbstractRealMatrix.java	subtract	rowCount	int	0	NIL-FOR	row < $
12747	AbstractRealMatrix.java	subtract	columnCount	int	0	NIL-FOR	col < $
12748	AbstractRealMatrix.java	scalarAdd	rowCount	int	0	NIL-FOR	row < $
12749	AbstractRealMatrix.java	scalarAdd	columnCount	int	0	NIL-FOR	col < $
12750	AbstractRealMatrix.java	scalarMultiply	rowCount	int	0	NIL-FOR	row < $
12751	AbstractRealMatrix.java	scalarMultiply	columnCount	int	0	NIL-FOR	col < $
12752	AbstractRealMatrix.java	multiply	row	int	0	NIL-FOR	$ < nRows
12752	AbstractRealMatrix.java	multiply	nRows	int	0	NIL-FOR	row < $
12753	AbstractRealMatrix.java	multiply	col	int	0	NIL-FOR	$ < nCols
12753	AbstractRealMatrix.java	multiply	nCols	int	0	NIL-FOR	col < $
12754	AbstractRealMatrix.java	multiply	nSum	int	0	NIL-FOR	i < $
1411	AbstractRealMatrix.java	power	p	int	0	NotPositiveException	$ < 0
1413	AbstractRealMatrix.java	power	p	int	0	RET	$ == 0
1414	AbstractRealMatrix.java	power	p	int	0	RET	$ == 1
12755	AbstractRealMatrix.java	power	binaryRepresentation	char[]	0	NIL-FOR	i < $.length
1416	AbstractRealMatrix.java	power	maxI	int	0	DEF	$ == -1
12756	AbstractRealMatrix.java	power	maxI	int	0	NIL-FOR	i <= $
12757	AbstractRealMatrix.java	getData	i	int	0	NIL-FOR	$ < data.length
12757	AbstractRealMatrix.java	getData	data	double[][]	0	NIL-FOR	i < $.length
12758	AbstractRealMatrix.java	getData	dataI	double[]	0	NIL-FOR	j < $.length
12759	AbstractRealMatrix.java	getSubMatrix	endRow	int	0	NIL-FOR	i <= $
12760	AbstractRealMatrix.java	getSubMatrix	endColumn	int	0	NIL-FOR	j <= $
12761	AbstractRealMatrix.java	copySubMatrix	rowsCount	int	0	NIL-FOR	i < $
12762	AbstractRealMatrix.java	copySubMatrix	selectedRows	int[]	0	NIL-FOR	i < $.length
12763	AbstractRealMatrix.java	copySubMatrix	selectedColumns	int[]	0	NIL-FOR	j < $.length
1421	AbstractRealMatrix.java	setSubMatrix	nRows	int	0	NoDataException	$ == 0
1422	AbstractRealMatrix.java	setSubMatrix	nCols	int	0	NoDataException	$ == 0
12764	AbstractRealMatrix.java	setSubMatrix	r	int	0	NIL-FOR	$ < nRows
12765	AbstractRealMatrix.java	setSubMatrix	i	int	0	NIL-FOR	$ < nRows
12765	AbstractRealMatrix.java	setSubMatrix	nRows	int	0	NIL-FOR	i < $
12766	AbstractRealMatrix.java	setSubMatrix	j	int	0	NIL-FOR	$ < nCols
12766	AbstractRealMatrix.java	setSubMatrix	nCols	int	0	NIL-FOR	j < $
12767	AbstractRealMatrix.java	getRowMatrix	i	int	0	NIL-FOR	$ < nCols
12767	AbstractRealMatrix.java	getRowMatrix	nCols	int	0	NIL-FOR	i < $
12768	AbstractRealMatrix.java	setRowMatrix	i	int	0	NIL-FOR	$ < nCols
12768	AbstractRealMatrix.java	setRowMatrix	nCols	int	0	NIL-FOR	i < $
12769	AbstractRealMatrix.java	getColumnMatrix	i	int	0	NIL-FOR	$ < nRows
12769	AbstractRealMatrix.java	getColumnMatrix	nRows	int	0	NIL-FOR	i < $
12770	AbstractRealMatrix.java	setColumnMatrix	i	int	0	NIL-FOR	$ < nRows
12770	AbstractRealMatrix.java	setColumnMatrix	nRows	int	0	NIL-FOR	i < $
12771	AbstractRealMatrix.java	setRowVector	i	int	0	NIL-FOR	$ < nCols
12771	AbstractRealMatrix.java	setRowVector	nCols	int	0	NIL-FOR	i < $
12772	AbstractRealMatrix.java	setColumnVector	i	int	0	NIL-FOR	$ < nRows
12772	AbstractRealMatrix.java	setColumnVector	nRows	int	0	NIL-FOR	i < $
12773	AbstractRealMatrix.java	getRow	i	int	0	NIL-FOR	$ < nCols
12773	AbstractRealMatrix.java	getRow	nCols	int	0	NIL-FOR	i < $
12774	AbstractRealMatrix.java	setRow	i	int	0	NIL-FOR	$ < nCols
12774	AbstractRealMatrix.java	setRow	nCols	int	0	NIL-FOR	i < $
12775	AbstractRealMatrix.java	getColumn	i	int	0	NIL-FOR	$ < nRows
12775	AbstractRealMatrix.java	getColumn	nRows	int	0	NIL-FOR	i < $
12776	AbstractRealMatrix.java	setColumn	i	int	0	NIL-FOR	$ < nRows
12776	AbstractRealMatrix.java	setColumn	nRows	int	0	NIL-FOR	i < $
12777	AbstractRealMatrix.java	getTrace	i	int	0	NIL-FOR	$ < nRows
12777	AbstractRealMatrix.java	getTrace	nRows	int	0	NIL-FOR	i < $
12778	AbstractRealMatrix.java	operate	row	int	0	NIL-FOR	$ < nRows
12778	AbstractRealMatrix.java	operate	nRows	int	0	NIL-FOR	row < $
12779	AbstractRealMatrix.java	operate	i	int	0	NIL-FOR	$ < nCols
12779	AbstractRealMatrix.java	operate	nCols	int	0	NIL-FOR	i < $
12780	AbstractRealMatrix.java	operate	row	int	0	NIL-FOR	$ < nRows
12780	AbstractRealMatrix.java	operate	nRows	int	0	NIL-FOR	row < $
12781	AbstractRealMatrix.java	operate	i	int	0	NIL-FOR	$ < nCols
12781	AbstractRealMatrix.java	operate	nCols	int	0	NIL-FOR	i < $
12782	AbstractRealMatrix.java	preMultiply	col	int	0	NIL-FOR	$ < nCols
12782	AbstractRealMatrix.java	preMultiply	nCols	int	0	NIL-FOR	col < $
12783	AbstractRealMatrix.java	preMultiply	i	int	0	NIL-FOR	$ < nRows
12783	AbstractRealMatrix.java	preMultiply	nRows	int	0	NIL-FOR	i < $
12784	AbstractRealMatrix.java	preMultiply	col	int	0	NIL-FOR	$ < nCols
12784	AbstractRealMatrix.java	preMultiply	nCols	int	0	NIL-FOR	col < $
12785	AbstractRealMatrix.java	preMultiply	i	int	0	NIL-FOR	$ < nRows
12785	AbstractRealMatrix.java	preMultiply	nRows	int	0	NIL-FOR	i < $
12786	AbstractRealMatrix.java	walkInRowOrder	row	int	0	NIL-FOR	$ < rows
12786	AbstractRealMatrix.java	walkInRowOrder	rows	int	0	NIL-FOR	row < $
12788	AbstractRealMatrix.java	walkInRowOrder	row	int	0	NIL-FOR	$ < rows
12788	AbstractRealMatrix.java	walkInRowOrder	rows	int	0	NIL-FOR	row < $
12795	AbstractRealMatrix.java	walkInColumnOrder	row	int	0	NIL-FOR	$ < rows
12795	AbstractRealMatrix.java	walkInColumnOrder	rows	int	0	NIL-FOR	row < $
12797	AbstractRealMatrix.java	walkInColumnOrder	row	int	0	NIL-FOR	$ < rows
12797	AbstractRealMatrix.java	walkInColumnOrder	rows	int	0	NIL-FOR	row < $
12802	AbstractRealMatrix.java	equals	row	int	0	NIL-FOR	$ < nRows
12802	AbstractRealMatrix.java	equals	nRows	int	0	NIL-FOR	row < $
12803	AbstractRealMatrix.java	equals	col	int	0	NIL-FOR	$ < nCols
12803	AbstractRealMatrix.java	equals	nCols	int	0	NIL-FOR	col < $
12804	AbstractRealMatrix.java	hashCode	row	int	0	NIL-FOR	$ < nRows
12804	AbstractRealMatrix.java	hashCode	nRows	int	0	NIL-FOR	row < $
12805	AbstractRealMatrix.java	hashCode	col	int	0	NIL-FOR	$ < nCols
12805	AbstractRealMatrix.java	hashCode	nCols	int	0	NIL-FOR	col < $
593	AbstractRegion.java	AbstractRegion	hyperplanes	Hyperplane<S>[]	1	DEF	$.length == 0
593	AbstractRegion.java	AbstractRegion	hyperplanes	Hyperplane<S>[]	1	DEF	$ == null
12429	AbstractRegion.java	insertCuts	iterator	Iterator<SubHyperplane<S>>	0	NIL-WHILE	$.hasNext()
12429	AbstractRegion.java	insertCuts	inserted	Hyperplane<S>	0	NIL-WHILE	$ == null
596	AbstractRegion.java	insertCuts	iterator	Iterator<SubHyperplane<S>>	0	RET	$.hasNext()
12430	AbstractRegion.java	insertCuts	iterator	Iterator<SubHyperplane<S>>	0	NIL-WHILE	$.hasNext()
599	AbstractRegion.java	getTree	includeBoundaryAttributes	boolean	0	DEF	$
619	AbstractRegion.java	recurseIntersection	plus	SubHyperplane<S>	1	RET	$ == null
620	AbstractRegion.java	recurseIntersection	minus	SubHyperplane<S>	1	RET	$ == null
622	AbstractRegion.java	recurseTransform	attribute	BoundaryAttribute<S>	0	DEF	$ != null
2804	AbstractSimplex.java	AbstractSimplex	steps	double[]	0	NullArgumentException	$ == null
2805	AbstractSimplex.java	AbstractSimplex	steps	double[]	0	ZeroException	$.length == 0
13878	AbstractSimplex.java	AbstractSimplex	THIS	AbstractSimplex	0	NIL-FOR	i < $.dimension
13878	AbstractSimplex.java	AbstractSimplex	i	int	0	NIL-FOR	$ < dimension
13880	AbstractSimplex.java	AbstractSimplex	referenceSimplex	double[][]	0	NIL-FOR	i < $.length
13881	AbstractSimplex.java	AbstractSimplex	i	int	0	NIL-FOR	j < $
13882	AbstractSimplex.java	AbstractSimplex	k	int	0	NIL-FOR	$ < dimension
2810	AbstractSimplex.java	AbstractSimplex	allEquals	boolean	0	MathIllegalArgumentException	$
2811	AbstractSimplex.java	AbstractSimplex	i	int	0	DEF	$ > 0
13883	AbstractSimplex.java	AbstractSimplex	k	int	0	NIL-FOR	$ < dimension
13884	AbstractSimplex.java	build	THIS	AbstractSimplex	0	NIL-FOR	i < $.dimension
13884	AbstractSimplex.java	build	i	int	0	NIL-FOR	$ < dimension
13885	AbstractSimplex.java	build	k	int	0	NIL-FOR	$ < dimension
13887	AbstractSimplex.java	replaceWorstPoint	THIS	AbstractSimplex	0	NIL-FOR	i < $.dimension
13887	AbstractSimplex.java	replaceWorstPoint	i	int	0	NIL-FOR	$ < dimension
2815	AbstractSimplex.java	getPoint	index	int	0	OutOfRangeException	$ < 0
2816	AbstractSimplex.java	setPoint	index	int	0	OutOfRangeException	$ < 0
13888	AbstractSimplex.java	createHypercubeSteps	i	int	0	NIL-FOR	$ < n
13888	AbstractSimplex.java	createHypercubeSteps	n	int	0	NIL-FOR	i < $
1966	AbstractSimplex.java	AbstractSimplex	steps	double[]	0	NullArgumentException	$ == null
1967	AbstractSimplex.java	AbstractSimplex	steps	double[]	0	ZeroException	$.length == 0
13447	AbstractSimplex.java	AbstractSimplex	THIS	AbstractSimplex	0	NIL-FOR	i < $.dimension
13447	AbstractSimplex.java	AbstractSimplex	i	int	0	NIL-FOR	$ < dimension
13449	AbstractSimplex.java	AbstractSimplex	referenceSimplex	double[][]	0	NIL-FOR	i < $.length
13450	AbstractSimplex.java	AbstractSimplex	i	int	0	NIL-FOR	j < $
13451	AbstractSimplex.java	AbstractSimplex	k	int	0	NIL-FOR	$ < dimension
1972	AbstractSimplex.java	AbstractSimplex	allEquals	boolean	0	MathIllegalArgumentException	$
1973	AbstractSimplex.java	AbstractSimplex	i	int	0	DEF	$ > 0
13452	AbstractSimplex.java	AbstractSimplex	k	int	0	NIL-FOR	$ < dimension
13453	AbstractSimplex.java	build	THIS	AbstractSimplex	0	NIL-FOR	i < $.dimension
13453	AbstractSimplex.java	build	i	int	0	NIL-FOR	$ < dimension
13454	AbstractSimplex.java	build	k	int	0	NIL-FOR	$ < dimension
13456	AbstractSimplex.java	replaceWorstPoint	THIS	AbstractSimplex	0	NIL-FOR	i < $.dimension
13456	AbstractSimplex.java	replaceWorstPoint	i	int	0	NIL-FOR	$ < dimension
1977	AbstractSimplex.java	getPoint	index	int	0	OutOfRangeException	$ < 0
1978	AbstractSimplex.java	setPoint	index	int	0	OutOfRangeException	$ < 0
13457	AbstractSimplex.java	createHypercubeSteps	i	int	0	NIL-FOR	$ < n
13457	AbstractSimplex.java	createHypercubeSteps	n	int	0	NIL-FOR	i < $
3391	AbstractStepInterpolator.java	allocateInterpolatedArrays	dimension	int	1	DEF	$ < 0
3397	AbstractStepInterpolator.java	readBaseExternal	dimension	int	1	DEF	$ < 0
2241	AbstractStorelessUnivariateStatistic.java	evaluate	values	double[]	0	NullArgumentException	$ == null
2243	AbstractStorelessUnivariateStatistic.java	incrementAll	values	double[]	0	NullArgumentException	$ == null
13664	AbstractStorelessUnivariateStatistic.java	incrementAll	i	int	0	NIL-FOR	$ < k
13664	AbstractStorelessUnivariateStatistic.java	incrementAll	k	int	0	NIL-FOR	i < $
649	AbstractSubHyperplane.java	recurseTransform	attribute	BoundaryAttribute<T>	0	DEF	$ != null
2364	AbstractUnivariateStatistic.java	setData	values	double[]	0	NullArgumentException	$ == null
2365	AbstractUnivariateStatistic.java	setData	begin	int	0	NotPositiveException	$ < 0
2366	AbstractUnivariateStatistic.java	setData	length	int	0	NotPositiveException	$ < 0
2368	AbstractUnivariateStatistic.java	test	values	double[]	0	NullArgumentException	$ == null
2369	AbstractUnivariateStatistic.java	test	begin	int	0	NotPositiveException	$ < 0
2370	AbstractUnivariateStatistic.java	test	length	int	0	NotPositiveException	$ < 0
2372	AbstractUnivariateStatistic.java	test	length	int	0	RET	$ == 0
2372	AbstractUnivariateStatistic.java	test	allowEmpty	boolean	0	RET	$
2373	AbstractUnivariateStatistic.java	test	values	double[]	0	NullArgumentException	$ == null
2373	AbstractUnivariateStatistic.java	test	weights	double[]	0	NullArgumentException	$ == null
2378	AbstractUnivariateStatistic.java	test	containsPositiveWeight	boolean	0	DEF	$
2379	AbstractUnivariateStatistic.java	test	containsPositiveWeight	boolean	0	MathIllegalArgumentException	$
14164	AbstractWell.java	AbstractWell	r	int	0	NIL-FOR	j < $
3113	AbstractWell.java	setSeed	seed	int[]	0	RET	$ == null
14366	AdamsBashforthIntegrator.java	integrate	y0	double[]	0	NIL-FOR	j < $.length
3477	AdamsBashforthIntegrator.java	integrate	filteredNextIsLast	boolean	0	DEF	$
14361	AdamsMoultonIntegrator.java	integrate	y0	double[]	0	NIL-FOR	j < $.length
14362	AdamsMoultonIntegrator.java	integrate	y0	double[]	0	NIL-FOR	j < $.length
3473	AdamsMoultonIntegrator.java	integrate	filteredNextIsLast	boolean	0	DEF	$
14424	AdamsNordsieckTransformer.java	AdamsNordsieckTransformer	i	int	0	NIL-FOR	$ > 0
14425	AdamsNordsieckTransformer.java	AdamsNordsieckTransformer	nSteps	int	0	NIL-FOR	i < $
3524	AdamsNordsieckTransformer.java	getInstance	t	AdamsNordsieckTransformer	0	DEF	$ == null
14426	AdamsNordsieckTransformer.java	buildP	pData	BigFraction[][]	0	NIL-FOR	i < $.length
14427	AdamsNordsieckTransformer.java	buildP	pI	BigFraction[]	0	NIL-FOR	j < $.length
14428	AdamsNordsieckTransformer.java	initializeHighOrderDerivatives	y	double[][]	0	NIL-FOR	i < $.length
14429	AdamsNordsieckTransformer.java	initializeHighOrderDerivatives	aI	double[]	0	NIL-FOR	j < $.length
14430	AdamsNordsieckTransformer.java	initializeHighOrderDerivatives	yI	double[]	0	NIL-FOR	j < $.length
14431	AdamsNordsieckTransformer.java	updateHighOrderDerivativesPhase2	i	int	0	NIL-FOR	$ < data.length
14431	AdamsNordsieckTransformer.java	updateHighOrderDerivativesPhase2	data	double[][]	0	NIL-FOR	i < $.length
14432	AdamsNordsieckTransformer.java	updateHighOrderDerivativesPhase2	dataI	double[]	0	NIL-FOR	j < $.length
14412	AdaptiveStepsizeIntegrator.java	initializeStep	scale	double[]	0	NIL-FOR	j < $.length
3513	AdaptiveStepsizeIntegrator.java	initializeStep	forward	boolean	0	DEF	$
14413	AdaptiveStepsizeIntegrator.java	initializeStep	y0	double[]	0	NIL-FOR	j < $.length
14414	AdaptiveStepsizeIntegrator.java	initializeStep	scale	double[]	0	NIL-FOR	j < $.length
3516	AdaptiveStepsizeIntegrator.java	initializeStep	forward	boolean	0	DEF	$
3518	AdaptiveStepsizeIntegrator.java	filterStep	acceptSmall	boolean	1	DEF	$
2382	AggregateSummaryStatistics.java	aggregate	statistics	Collection<SummaryStatistics>	0	RET	$ == null
2383	AggregateSummaryStatistics.java	aggregate	iterator	Iterator<SummaryStatistics>	0	RET	$.hasNext()
13696	AggregateSummaryStatistics.java	aggregate	iterator	Iterator<SummaryStatistics>	0	NIL-WHILE	$.hasNext()
2384	AggregateSummaryStatistics.java	aggregate	min	double	0	DEF	Double.isNaN($)
2385	AggregateSummaryStatistics.java	aggregate	max	double	0	DEF	Double.isNaN($)
2386	AggregateSummaryStatistics.java	aggregate	n	long	1	DEF	$ == 0
2387	AggregateSummaryStatistics.java	aggregate	n	long	1	DEF	$ == 1
3356	ArgUtils.java	flatten	array	Object[]	0	DEF	$ != null
12	ArithmeticUtils.java	binomialCoefficient	k	int	0	RET	$ == 0
13	ArithmeticUtils.java	binomialCoefficient	k	int	0	RET	$ == 1
12327	ArithmeticUtils.java	binomialCoefficient	k	int	0	NIL-FOR	j <= $
12328	ArithmeticUtils.java	binomialCoefficient	k	int	0	NIL-FOR	j <= $
12329	ArithmeticUtils.java	binomialCoefficient	k	int	0	NIL-FOR	j <= $
17	ArithmeticUtils.java	binomialCoefficientDouble	k	int	0	RET	$ == 0
18	ArithmeticUtils.java	binomialCoefficientDouble	k	int	0	RET	$ == 1
12330	ArithmeticUtils.java	binomialCoefficientDouble	k	int	0	NIL-FOR	i <= $
21	ArithmeticUtils.java	binomialCoefficientLog	k	int	0	RET	$ == 0
22	ArithmeticUtils.java	binomialCoefficientLog	k	int	0	RET	$ == 1
12331	ArithmeticUtils.java	binomialCoefficientLog	n	int	0	NIL-FOR	i <= $
12332	ArithmeticUtils.java	binomialCoefficientLog	k	int	0	NIL-FOR	i <= $
26	ArithmeticUtils.java	factorial	n	int	0	NotPositiveException	$ < 0
28	ArithmeticUtils.java	factorialDouble	n	int	0	NotPositiveException	$ < 0
30	ArithmeticUtils.java	factorialLog	n	int	0	NotPositiveException	$ < 0
12333	ArithmeticUtils.java	factorialLog	n	int	0	NIL-FOR	i <= $
32	ArithmeticUtils.java	gcd	a	int	0	MathArithmeticException:RET	$ == 0
32	ArithmeticUtils.java	gcd	b	int	0	MathArithmeticException:RET	$ == 0
34	ArithmeticUtils.java	gcd	a	int	0	DEF	$ < 0
36	ArithmeticUtils.java	gcd	b	int	0	DEF	$ < 0
38	ArithmeticUtils.java	gcd	useLong	boolean	0	MathArithmeticException:RET	$
40	ArithmeticUtils.java	gcd	al	long	0	MathArithmeticException:RET	$ == 0
42	ArithmeticUtils.java	gcdPositive	a	int	1	RET	$ == 0
43	ArithmeticUtils.java	gcdPositive	b	int	0	RET	$ == 0
44	ArithmeticUtils.java	gcd	u	long	0	MathArithmeticException:RET	$ == 0
44	ArithmeticUtils.java	gcd	v	long	0	MathArithmeticException:RET	$ == 0
46	ArithmeticUtils.java	gcd	u	long	0	DEF	$ > 0
47	ArithmeticUtils.java	gcd	v	long	0	DEF	$ > 0
12336	ArithmeticUtils.java	gcd	t	long	0	NIL-DOWHILE	$ != 0
49	ArithmeticUtils.java	gcd	t	long	1	DEF	$ > 0
50	ArithmeticUtils.java	lcm	a	int	0	RET	$ == 0
50	ArithmeticUtils.java	lcm	b	int	0	RET	$ == 0
52	ArithmeticUtils.java	lcm	a	long	0	RET	$ == 0
52	ArithmeticUtils.java	lcm	b	long	0	RET	$ == 0
56	ArithmeticUtils.java	mulAndCheck	a	long	1	MathArithmeticException	$ < 0
57	ArithmeticUtils.java	mulAndCheck	b	long	1	MathArithmeticException	$ < 0
59	ArithmeticUtils.java	mulAndCheck	b	long	1	MathArithmeticException	$ > 0
61	ArithmeticUtils.java	mulAndCheck	a	long	1	MathArithmeticException	$ > 0
65	ArithmeticUtils.java	subAndCheck	a	long	1	DEF	$ < 0
66	ArithmeticUtils.java	pow	e	int	0	NotPositiveException	$ < 0
12338	ArithmeticUtils.java	pow	e	int	0	NIL-WHILE	$ != 0
68	ArithmeticUtils.java	pow	e	long	0	NotPositiveException	$ < 0
12339	ArithmeticUtils.java	pow	e	long	0	NIL-WHILE	$ != 0
70	ArithmeticUtils.java	pow	e	int	0	NotPositiveException	$ < 0
12340	ArithmeticUtils.java	pow	e	int	0	NIL-WHILE	$ != 0
72	ArithmeticUtils.java	pow	e	long	0	NotPositiveException	$ < 0
12341	ArithmeticUtils.java	pow	e	long	0	NIL-WHILE	$ != 0
74	ArithmeticUtils.java	pow	e	int	0	NotPositiveException	$ < 0
75	ArithmeticUtils.java	pow	e	long	0	NotPositiveException	$ < 0
12342	ArithmeticUtils.java	pow	e	long	0	NIL-WHILE	$ != 0
79	ArithmeticUtils.java	stirlingS2	k	int	0	NotPositiveException	$ < 0
81	ArithmeticUtils.java	stirlingS2	stirlingS2	long[][]	0	DEF	$ == null
12344	ArithmeticUtils.java	stirlingS2	stirlingS2	long[][]	0	NIL-FOR	i < $.length
12345	ArithmeticUtils.java	stirlingS2	i	int	0	NIL-FOR	j < $
83	ArithmeticUtils.java	stirlingS2	k	int	1	RET	$ == 0
84	ArithmeticUtils.java	stirlingS2	k	int	1	RET	$ == 1
12346	ArithmeticUtils.java	stirlingS2	k	int	0	NIL-FOR	j <= $
87	ArithmeticUtils.java	stirlingS2	sum	long	0	MathArithmeticException	$ < 0
89	ArithmeticUtils.java	addAndCheck	a	long	1	MathArithmeticException	$ < 0
90	ArithmeticUtils.java	addAndCheck	b	long	1	MathArithmeticException	$ < 0
93	ArithmeticUtils.java	checkBinomial	n	int	0	NumberIsTooLargeException	$ < k
94	ArithmeticUtils.java	checkBinomial	n	int	0	NotPositiveException	$ < 0
1510	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	copyArray	boolean	1	DEF	$
1511	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	nRows	int	0	NoDataException	$ == 0
1512	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	nCols	int	0	NoDataException	$ == 0
12883	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	r	int	0	NIL-FOR	$ < nRows
12884	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	row	int	0	NIL-FOR	$ < nRows
12884	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	nRows	int	0	NIL-FOR	row < $
12885	Array2DRowFieldMatrix.java	add	rowCount	int	0	NIL-FOR	row < $
12886	Array2DRowFieldMatrix.java	add	columnCount	int	0	NIL-FOR	col < $
12887	Array2DRowFieldMatrix.java	subtract	rowCount	int	0	NIL-FOR	row < $
12888	Array2DRowFieldMatrix.java	subtract	columnCount	int	0	NIL-FOR	col < $
12889	Array2DRowFieldMatrix.java	multiply	row	int	0	NIL-FOR	$ < nRows
12889	Array2DRowFieldMatrix.java	multiply	nRows	int	0	NIL-FOR	row < $
12890	Array2DRowFieldMatrix.java	multiply	col	int	0	NIL-FOR	$ < nCols
12890	Array2DRowFieldMatrix.java	multiply	nCols	int	0	NIL-FOR	col < $
12891	Array2DRowFieldMatrix.java	multiply	nSum	int	0	NIL-FOR	i < $
1515	Array2DRowFieldMatrix.java	setSubMatrix	row	int	0	MathIllegalStateException	$ > 0
1516	Array2DRowFieldMatrix.java	setSubMatrix	column	int	0	MathIllegalStateException	$ > 0
1517	Array2DRowFieldMatrix.java	setSubMatrix	nRows	int	0	NoDataException	$ == 0
1518	Array2DRowFieldMatrix.java	setSubMatrix	nCols	int	0	NoDataException	$ == 0
12892	Array2DRowFieldMatrix.java	setSubMatrix	THIS	Array2DRowFieldMatrix	0	NIL-FOR	i < $.data.$.length
12892	Array2DRowFieldMatrix.java	setSubMatrix	i	int	0	NIL-FOR	$ < data.length
12893	Array2DRowFieldMatrix.java	operate	row	int	0	NIL-FOR	$ < nRows
12893	Array2DRowFieldMatrix.java	operate	nRows	int	0	NIL-FOR	row < $
12894	Array2DRowFieldMatrix.java	operate	i	int	0	NIL-FOR	$ < nCols
12894	Array2DRowFieldMatrix.java	operate	nCols	int	0	NIL-FOR	i < $
12895	Array2DRowFieldMatrix.java	preMultiply	col	int	0	NIL-FOR	$ < nCols
12895	Array2DRowFieldMatrix.java	preMultiply	nCols	int	0	NIL-FOR	col < $
12896	Array2DRowFieldMatrix.java	preMultiply	i	int	0	NIL-FOR	$ < nRows
12896	Array2DRowFieldMatrix.java	preMultiply	nRows	int	0	NIL-FOR	i < $
12897	Array2DRowFieldMatrix.java	walkInRowOrder	i	int	0	NIL-FOR	$ < rows
12897	Array2DRowFieldMatrix.java	walkInRowOrder	rows	int	0	NIL-FOR	i < $
12898	Array2DRowFieldMatrix.java	walkInRowOrder	columns	int	0	NIL-FOR	j < $
12899	Array2DRowFieldMatrix.java	walkInRowOrder	i	int	0	NIL-FOR	$ < rows
12899	Array2DRowFieldMatrix.java	walkInRowOrder	rows	int	0	NIL-FOR	i < $
12900	Array2DRowFieldMatrix.java	walkInRowOrder	columns	int	0	NIL-FOR	j < $
12901	Array2DRowFieldMatrix.java	walkInRowOrder	endRow	int	0	NIL-FOR	i <= $
12902	Array2DRowFieldMatrix.java	walkInRowOrder	endColumn	int	0	NIL-FOR	j <= $
12903	Array2DRowFieldMatrix.java	walkInRowOrder	endRow	int	0	NIL-FOR	i <= $
12904	Array2DRowFieldMatrix.java	walkInRowOrder	endColumn	int	0	NIL-FOR	j <= $
12905	Array2DRowFieldMatrix.java	walkInColumnOrder	columns	int	0	NIL-FOR	j < $
12906	Array2DRowFieldMatrix.java	walkInColumnOrder	i	int	0	NIL-FOR	$ < rows
12906	Array2DRowFieldMatrix.java	walkInColumnOrder	rows	int	0	NIL-FOR	i < $
12907	Array2DRowFieldMatrix.java	walkInColumnOrder	columns	int	0	NIL-FOR	j < $
12908	Array2DRowFieldMatrix.java	walkInColumnOrder	i	int	0	NIL-FOR	$ < rows
12908	Array2DRowFieldMatrix.java	walkInColumnOrder	rows	int	0	NIL-FOR	i < $
12909	Array2DRowFieldMatrix.java	walkInColumnOrder	endColumn	int	0	NIL-FOR	j <= $
12910	Array2DRowFieldMatrix.java	walkInColumnOrder	endRow	int	0	NIL-FOR	i <= $
12911	Array2DRowFieldMatrix.java	walkInColumnOrder	endColumn	int	0	NIL-FOR	j <= $
12912	Array2DRowFieldMatrix.java	walkInColumnOrder	endRow	int	0	NIL-FOR	i <= $
12913	Array2DRowFieldMatrix.java	copyOut	i	int	0	NIL-FOR	$ < nRows
12913	Array2DRowFieldMatrix.java	copyOut	nRows	int	0	NIL-FOR	i < $
1693	Array2DRowRealMatrix.java	Array2DRowRealMatrix	copyArray	boolean	1	DEF	$
1694	Array2DRowRealMatrix.java	Array2DRowRealMatrix	d	double[][]	0	NullArgumentException	$ == null
1695	Array2DRowRealMatrix.java	Array2DRowRealMatrix	nRows	int	0	NoDataException	$ == 0
1696	Array2DRowRealMatrix.java	Array2DRowRealMatrix	nCols	int	0	NoDataException	$ == 0
13186	Array2DRowRealMatrix.java	Array2DRowRealMatrix	r	int	0	NIL-FOR	$ < nRows
13187	Array2DRowRealMatrix.java	Array2DRowRealMatrix	row	int	0	NIL-FOR	$ < nRows
13187	Array2DRowRealMatrix.java	Array2DRowRealMatrix	nRows	int	0	NIL-FOR	row < $
13188	Array2DRowRealMatrix.java	add	rowCount	int	0	NIL-FOR	row < $
13189	Array2DRowRealMatrix.java	add	columnCount	int	0	NIL-FOR	col < $
13190	Array2DRowRealMatrix.java	subtract	rowCount	int	0	NIL-FOR	row < $
13191	Array2DRowRealMatrix.java	subtract	columnCount	int	0	NIL-FOR	col < $
13192	Array2DRowRealMatrix.java	multiply	col	int	0	NIL-FOR	$ < nCols
13192	Array2DRowRealMatrix.java	multiply	nCols	int	0	NIL-FOR	col < $
13194	Array2DRowRealMatrix.java	multiply	row	int	0	NIL-FOR	$ < nRows
13194	Array2DRowRealMatrix.java	multiply	nRows	int	0	NIL-FOR	row < $
13195	Array2DRowRealMatrix.java	multiply	nSum	int	0	NIL-FOR	i < $
1699	Array2DRowRealMatrix.java	setSubMatrix	row	int	0	MathIllegalStateException	$ > 0
1700	Array2DRowRealMatrix.java	setSubMatrix	column	int	0	MathIllegalStateException	$ > 0
1701	Array2DRowRealMatrix.java	setSubMatrix	nRows	int	0	NoDataException	$ == 0
1702	Array2DRowRealMatrix.java	setSubMatrix	nCols	int	0	NoDataException	$ == 0
13196	Array2DRowRealMatrix.java	setSubMatrix	THIS	Array2DRowRealMatrix	0	NIL-FOR	i < $.data.$.length
13196	Array2DRowRealMatrix.java	setSubMatrix	i	int	0	NIL-FOR	$ < data.length
13197	Array2DRowRealMatrix.java	operate	row	int	0	NIL-FOR	$ < nRows
13197	Array2DRowRealMatrix.java	operate	nRows	int	0	NIL-FOR	row < $
13198	Array2DRowRealMatrix.java	operate	i	int	0	NIL-FOR	$ < nCols
13198	Array2DRowRealMatrix.java	operate	nCols	int	0	NIL-FOR	i < $
13199	Array2DRowRealMatrix.java	preMultiply	col	int	0	NIL-FOR	$ < nCols
13199	Array2DRowRealMatrix.java	preMultiply	nCols	int	0	NIL-FOR	col < $
13200	Array2DRowRealMatrix.java	preMultiply	i	int	0	NIL-FOR	$ < nRows
13200	Array2DRowRealMatrix.java	preMultiply	nRows	int	0	NIL-FOR	i < $
13201	Array2DRowRealMatrix.java	walkInRowOrder	i	int	0	NIL-FOR	$ < rows
13201	Array2DRowRealMatrix.java	walkInRowOrder	rows	int	0	NIL-FOR	i < $
13202	Array2DRowRealMatrix.java	walkInRowOrder	columns	int	0	NIL-FOR	j < $
13203	Array2DRowRealMatrix.java	walkInRowOrder	i	int	0	NIL-FOR	$ < rows
13203	Array2DRowRealMatrix.java	walkInRowOrder	rows	int	0	NIL-FOR	i < $
13204	Array2DRowRealMatrix.java	walkInRowOrder	columns	int	0	NIL-FOR	j < $
13205	Array2DRowRealMatrix.java	walkInRowOrder	endRow	int	0	NIL-FOR	i <= $
13206	Array2DRowRealMatrix.java	walkInRowOrder	endColumn	int	0	NIL-FOR	j <= $
13207	Array2DRowRealMatrix.java	walkInRowOrder	endRow	int	0	NIL-FOR	i <= $
13208	Array2DRowRealMatrix.java	walkInRowOrder	endColumn	int	0	NIL-FOR	j <= $
13209	Array2DRowRealMatrix.java	walkInColumnOrder	columns	int	0	NIL-FOR	j < $
13210	Array2DRowRealMatrix.java	walkInColumnOrder	i	int	0	NIL-FOR	$ < rows
13210	Array2DRowRealMatrix.java	walkInColumnOrder	rows	int	0	NIL-FOR	i < $
13211	Array2DRowRealMatrix.java	walkInColumnOrder	columns	int	0	NIL-FOR	j < $
13212	Array2DRowRealMatrix.java	walkInColumnOrder	i	int	0	NIL-FOR	$ < rows
13212	Array2DRowRealMatrix.java	walkInColumnOrder	rows	int	0	NIL-FOR	i < $
13213	Array2DRowRealMatrix.java	walkInColumnOrder	endColumn	int	0	NIL-FOR	j <= $
13214	Array2DRowRealMatrix.java	walkInColumnOrder	endRow	int	0	NIL-FOR	i <= $
13215	Array2DRowRealMatrix.java	walkInColumnOrder	endColumn	int	0	NIL-FOR	j <= $
13216	Array2DRowRealMatrix.java	walkInColumnOrder	endRow	int	0	NIL-FOR	i <= $
13217	Array2DRowRealMatrix.java	copyOut	i	int	0	NIL-FOR	$ < nRows
13217	Array2DRowRealMatrix.java	copyOut	nRows	int	0	NIL-FOR	i < $
1795	ArrayFieldVector.java	ArrayFieldVector	d	T[]	0	ZeroException	$.length == 0
13311	ArrayFieldVector.java	ArrayFieldVector	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13311	ArrayFieldVector.java	ArrayFieldVector	i	int	0	NIL-FOR	$ < data.length
13312	ArrayFieldVector.java	add	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13312	ArrayFieldVector.java	add	i	int	0	NIL-FOR	$ < data.length
13313	ArrayFieldVector.java	add	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13313	ArrayFieldVector.java	add	i	int	0	NIL-FOR	$ < data.length
13314	ArrayFieldVector.java	subtract	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13314	ArrayFieldVector.java	subtract	i	int	0	NIL-FOR	$ < data.length
13315	ArrayFieldVector.java	subtract	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13315	ArrayFieldVector.java	subtract	i	int	0	NIL-FOR	$ < data.length
13316	ArrayFieldVector.java	mapAdd	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13316	ArrayFieldVector.java	mapAdd	i	int	0	NIL-FOR	$ < data.length
13317	ArrayFieldVector.java	mapAddToSelf	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13317	ArrayFieldVector.java	mapAddToSelf	i	int	0	NIL-FOR	$ < data.length
13318	ArrayFieldVector.java	mapSubtract	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13318	ArrayFieldVector.java	mapSubtract	i	int	0	NIL-FOR	$ < data.length
13319	ArrayFieldVector.java	mapSubtractToSelf	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13319	ArrayFieldVector.java	mapSubtractToSelf	i	int	0	NIL-FOR	$ < data.length
13320	ArrayFieldVector.java	mapMultiply	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13320	ArrayFieldVector.java	mapMultiply	i	int	0	NIL-FOR	$ < data.length
13321	ArrayFieldVector.java	mapMultiplyToSelf	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13321	ArrayFieldVector.java	mapMultiplyToSelf	i	int	0	NIL-FOR	$ < data.length
13322	ArrayFieldVector.java	mapDivide	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13322	ArrayFieldVector.java	mapDivide	i	int	0	NIL-FOR	$ < data.length
13323	ArrayFieldVector.java	mapDivideToSelf	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13323	ArrayFieldVector.java	mapDivideToSelf	i	int	0	NIL-FOR	$ < data.length
13324	ArrayFieldVector.java	mapInv	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13324	ArrayFieldVector.java	mapInv	i	int	0	NIL-FOR	$ < data.length
13325	ArrayFieldVector.java	mapInvToSelf	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13325	ArrayFieldVector.java	mapInvToSelf	i	int	0	NIL-FOR	$ < data.length
13326	ArrayFieldVector.java	ebeMultiply	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13326	ArrayFieldVector.java	ebeMultiply	i	int	0	NIL-FOR	$ < data.length
13327	ArrayFieldVector.java	ebeMultiply	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13327	ArrayFieldVector.java	ebeMultiply	i	int	0	NIL-FOR	$ < data.length
13328	ArrayFieldVector.java	ebeDivide	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13328	ArrayFieldVector.java	ebeDivide	i	int	0	NIL-FOR	$ < data.length
13329	ArrayFieldVector.java	ebeDivide	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13329	ArrayFieldVector.java	ebeDivide	i	int	0	NIL-FOR	$ < data.length
13330	ArrayFieldVector.java	dotProduct	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13330	ArrayFieldVector.java	dotProduct	i	int	0	NIL-FOR	$ < data.length
13331	ArrayFieldVector.java	dotProduct	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13331	ArrayFieldVector.java	dotProduct	i	int	0	NIL-FOR	$ < data.length
13332	ArrayFieldVector.java	outerProduct	i	int	0	NIL-FOR	$ < m
13332	ArrayFieldVector.java	outerProduct	m	int	0	NIL-FOR	i < $
13333	ArrayFieldVector.java	outerProduct	j	int	0	NIL-FOR	$ < n
13333	ArrayFieldVector.java	outerProduct	n	int	0	NIL-FOR	j < $
13334	ArrayFieldVector.java	outerProduct	i	int	0	NIL-FOR	$ < m
13334	ArrayFieldVector.java	outerProduct	m	int	0	NIL-FOR	i < $
13335	ArrayFieldVector.java	outerProduct	j	int	0	NIL-FOR	$ < n
13335	ArrayFieldVector.java	outerProduct	n	int	0	NIL-FOR	j < $
1800	ArrayFieldVector.java	getSubVector	n	int	0	NotPositiveException	$ < 0
1802	ArrayFieldVector.java	equals	THIS	ArrayFieldVector	0	RET	$ == other
1802	ArrayFieldVector.java	equals	other	Object	0	RET	this == $
1803	ArrayFieldVector.java	equals	other	Object	0	RET	$ == null
13337	ArrayFieldVector.java	equals	THIS	ArrayFieldVector	0	NIL-FOR	i < $.data.$.length
13337	ArrayFieldVector.java	equals	i	int	0	NIL-FOR	$ < data.length
1806	ArrayFieldVector.java	checkIndex	index	int	0	OutOfRangeException	$ < 0
1365	ArrayRealVector.java	ArrayRealVector	d	double[]	0	NullArgumentException	$ == null
1366	ArrayRealVector.java	ArrayRealVector	d	double[]	0	NullArgumentException	$ == null
12681	ArrayRealVector.java	ArrayRealVector	d	Double[]	0	NIL-FOR	i < $.length
1368	ArrayRealVector.java	ArrayRealVector	d	Double[]	0	NullArgumentException	$ == null
1370	ArrayRealVector.java	ArrayRealVector	v	RealVector	0	NullArgumentException	$ == null
12683	ArrayRealVector.java	ArrayRealVector	THIS	ArrayRealVector	0	NIL-FOR	i < $.data.$.length
12683	ArrayRealVector.java	ArrayRealVector	i	int	0	NIL-FOR	$ < data.length
12684	ArrayRealVector.java	ArrayRealVector	l2	int	0	NIL-FOR	i < $
12685	ArrayRealVector.java	ArrayRealVector	l1	int	0	NIL-FOR	i < $
12686	ArrayRealVector.java	add	i	int	0	NIL-FOR	$ < dim
12686	ArrayRealVector.java	add	dim	int	0	NIL-FOR	i < $
12687	ArrayRealVector.java	add	it	Iterator<Entry>	0	NIL-WHILE	$.hasNext()
12688	ArrayRealVector.java	subtract	i	int	0	NIL-FOR	$ < dim
12688	ArrayRealVector.java	subtract	dim	int	0	NIL-FOR	i < $
12689	ArrayRealVector.java	subtract	it	Iterator<Entry>	0	NIL-WHILE	$.hasNext()
12690	ArrayRealVector.java	mapToSelf	THIS	ArrayRealVector	0	NIL-FOR	i < $.data.$.length
12690	ArrayRealVector.java	mapToSelf	i	int	0	NIL-FOR	$ < data.length
12691	ArrayRealVector.java	mapAddToSelf	THIS	ArrayRealVector	0	NIL-FOR	i < $.data.$.length
12691	ArrayRealVector.java	mapAddToSelf	i	int	0	NIL-FOR	$ < data.length
12692	ArrayRealVector.java	mapSubtractToSelf	THIS	ArrayRealVector	0	NIL-FOR	i < $.data.$.length
12692	ArrayRealVector.java	mapSubtractToSelf	i	int	0	NIL-FOR	$ < data.length
12693	ArrayRealVector.java	mapMultiplyToSelf	THIS	ArrayRealVector	0	NIL-FOR	i < $.data.$.length
12693	ArrayRealVector.java	mapMultiplyToSelf	i	int	0	NIL-FOR	$ < data.length
12694	ArrayRealVector.java	mapDivideToSelf	THIS	ArrayRealVector	0	NIL-FOR	i < $.data.$.length
12694	ArrayRealVector.java	mapDivideToSelf	i	int	0	NIL-FOR	$ < data.length
12695	ArrayRealVector.java	ebeMultiply	i	int	0	NIL-FOR	$ < dim
12695	ArrayRealVector.java	ebeMultiply	dim	int	0	NIL-FOR	i < $
12696	ArrayRealVector.java	ebeMultiply	THIS	ArrayRealVector	0	NIL-FOR	i < $.data.$.length
12696	ArrayRealVector.java	ebeMultiply	i	int	0	NIL-FOR	$ < data.length
12697	ArrayRealVector.java	ebeDivide	i	int	0	NIL-FOR	$ < dim
12697	ArrayRealVector.java	ebeDivide	dim	int	0	NIL-FOR	i < $
12698	ArrayRealVector.java	ebeDivide	THIS	ArrayRealVector	0	NIL-FOR	i < $.data.$.length
12698	ArrayRealVector.java	ebeDivide	i	int	0	NIL-FOR	$ < data.length
12699	ArrayRealVector.java	dotProduct	THIS	ArrayRealVector	0	NIL-FOR	i < $.data.$.length
12699	ArrayRealVector.java	dotProduct	i	int	0	NIL-FOR	$ < data.length
12700	ArrayRealVector.java	getDistance	THIS	ArrayRealVector	0	NIL-FOR	i < $.data.$.length
12700	ArrayRealVector.java	getDistance	i	int	0	NIL-FOR	$ < data.length
12701	ArrayRealVector.java	getDistance	THIS	ArrayRealVector	0	NIL-FOR	i < $.data.$.length
12701	ArrayRealVector.java	getDistance	i	int	0	NIL-FOR	$ < data.length
12702	ArrayRealVector.java	getL1Distance	THIS	ArrayRealVector	0	NIL-FOR	i < $.data.$.length
12702	ArrayRealVector.java	getL1Distance	i	int	0	NIL-FOR	$ < data.length
12703	ArrayRealVector.java	getL1Distance	THIS	ArrayRealVector	0	NIL-FOR	i < $.data.$.length
12703	ArrayRealVector.java	getL1Distance	i	int	0	NIL-FOR	$ < data.length
12704	ArrayRealVector.java	getLInfDistance	THIS	ArrayRealVector	0	NIL-FOR	i < $.data.$.length
12704	ArrayRealVector.java	getLInfDistance	i	int	0	NIL-FOR	$ < data.length
12705	ArrayRealVector.java	getLInfDistance	THIS	ArrayRealVector	0	NIL-FOR	i < $.data.$.length
12705	ArrayRealVector.java	getLInfDistance	i	int	0	NIL-FOR	$ < data.length
12706	ArrayRealVector.java	outerProduct	i	int	0	NIL-FOR	$ < m
12706	ArrayRealVector.java	outerProduct	m	int	0	NIL-FOR	i < $
12707	ArrayRealVector.java	outerProduct	j	int	0	NIL-FOR	$ < n
12707	ArrayRealVector.java	outerProduct	n	int	0	NIL-FOR	j < $
12708	ArrayRealVector.java	outerProduct	i	int	0	NIL-FOR	$ < m
12708	ArrayRealVector.java	outerProduct	m	int	0	NIL-FOR	i < $
12709	ArrayRealVector.java	outerProduct	j	int	0	NIL-FOR	$ < n
12709	ArrayRealVector.java	outerProduct	n	int	0	NIL-FOR	j < $
1380	ArrayRealVector.java	getSubVector	n	int	0	NotPositiveException	$ < 0
1384	ArrayRealVector.java	isInfinite	THIS	ArrayRealVector	0	RET	$.isNaN()
1386	ArrayRealVector.java	equals	THIS	ArrayRealVector	0	RET	$ == other
1386	ArrayRealVector.java	equals	other	Object	0	RET	this == $
1389	ArrayRealVector.java	equals	rhs	RealVector	0	RET	$.isNaN()
12711	ArrayRealVector.java	equals	THIS	ArrayRealVector	0	NIL-FOR	i < $.data.$.length
12711	ArrayRealVector.java	equals	i	int	0	NIL-FOR	$ < data.length
1391	ArrayRealVector.java	hashCode	THIS	ArrayRealVector	0	RET	$.isNaN()
12714	ArrayRealVector.java	walkInDefaultOrder	THIS	ArrayRealVector	0	NIL-FOR	i < $.data.$.length
12714	ArrayRealVector.java	walkInDefaultOrder	i	int	0	NIL-FOR	$ < data.length
12715	ArrayRealVector.java	walkInDefaultOrder	end	int	0	NIL-FOR	i <= $
12716	ArrayRealVector.java	walkInDefaultOrder	THIS	ArrayRealVector	0	NIL-FOR	i < $.data.$.length
12716	ArrayRealVector.java	walkInDefaultOrder	i	int	0	NIL-FOR	$ < data.length
12717	ArrayRealVector.java	walkInDefaultOrder	end	int	0	NIL-FOR	i <= $
13939	BOBYQAOptimizer.java	bobyqa	j	int	0	NIL-FOR	$ < n
13939	BOBYQAOptimizer.java	bobyqa	n	int	0	NIL-FOR	j < $
13940	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13940	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13941	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13941	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13942	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	i <= $
2863	BOBYQAOptimizer.java	bobyqb	j	int	0	DEF	i < $
13943	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13943	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13944	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13944	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13945	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13945	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
2867	BOBYQAOptimizer.java	bobyqb	crvmin	double	0	DEF	$ > ZERO
13946	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13946	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13947	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13947	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13948	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13948	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13949	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13949	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13950	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13950	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13951	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	j <= $
13953	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13953	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13954	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13954	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13955	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13955	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13956	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13956	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13957	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13957	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13958	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	j <= $
13959	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13959	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13960	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13960	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13961	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	i <= $
13962	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13962	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
2873	BOBYQAOptimizer.java	bobyqb	ntrits	int	0	DEF	$ == 0
13963	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13963	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13964	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13964	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13965	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13965	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13967	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13967	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13968	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13968	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13969	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13969	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13970	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13970	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13971	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13971	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
2874	BOBYQAOptimizer.java	bobyqb	ntrits	int	1	DEF	$ == 0
2875	BOBYQAOptimizer.java	bobyqb	cauchy	double	0	DEF	$ > ZERO
13972	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13972	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13973	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13973	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13975	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13975	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13976	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13976	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
2881	BOBYQAOptimizer.java	bobyqb	ntrits	int	0	DEF	$ == -1
13977	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13977	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13978	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	i <= $
13979	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13979	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
2884	BOBYQAOptimizer.java	bobyqb	ntrits	int	0	MathIllegalStateException	$ > 0
13980	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13980	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13982	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13982	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13983	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13983	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13984	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	j <= $
13986	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13986	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13987	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13987	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13988	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13988	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13990	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13990	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13991	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13991	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13992	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13992	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13993	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13993	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13994	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	i <= $
2893	BOBYQAOptimizer.java	bobyqb	j	int	0	DEF	i < $
13995	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13995	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13996	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13996	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13997	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13997	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
2894	BOBYQAOptimizer.java	bobyqb	ntrits	int	0	DEF	$ > 0
13998	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13998	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13999	BOBYQAOptimizer.java	bobyqb	nptm	int	0	NIL-FOR	j < $
14000	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
14000	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
14001	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
14001	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
14002	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
14002	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
14003	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
14003	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
14004	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
14004	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
14005	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
14005	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
14006	BOBYQAOptimizer.java	bobyqb	max	int	0	NIL-FOR	i < $
2899	BOBYQAOptimizer.java	bobyqb	i	int	0	DEF	$ < n
2899	BOBYQAOptimizer.java	bobyqb	n	int	0	DEF	i < $
2900	BOBYQAOptimizer.java	bobyqb	i	int	0	DEF	$ < npt
2900	BOBYQAOptimizer.java	bobyqb	npt	int	0	DEF	i < $
2901	BOBYQAOptimizer.java	bobyqb	nh	int	0	DEF	i < $
2902	BOBYQAOptimizer.java	bobyqb	ntrits	int	0	DEF	$ == 0
14007	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
14007	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
14008	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
14008	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
2905	BOBYQAOptimizer.java	bobyqb	knew	int	0	DEF	$ >= 0
2906	BOBYQAOptimizer.java	bobyqb	ntrits	int	0	DEF	$ == -1
2908	BOBYQAOptimizer.java	bobyqb	ntrits	int	0	DEF	$ == -1
2909	BOBYQAOptimizer.java	bobyqb	ratio	double	0	DEF	$ > ZERO
2914	BOBYQAOptimizer.java	bobyqb	ntrits	int	0	DEF	$ == -1
14009	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
14009	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
14010	BOBYQAOptimizer.java	altmov	k	int	0	NIL-FOR	$ < npt
14010	BOBYQAOptimizer.java	altmov	npt	int	0	NIL-FOR	k < $
14011	BOBYQAOptimizer.java	altmov	max	int	0	NIL-FOR	j < $
14012	BOBYQAOptimizer.java	altmov	k	int	0	NIL-FOR	$ < npt
14012	BOBYQAOptimizer.java	altmov	npt	int	0	NIL-FOR	k < $
14013	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
14013	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
14014	BOBYQAOptimizer.java	altmov	k	int	0	NIL-FOR	$ < npt
14014	BOBYQAOptimizer.java	altmov	npt	int	0	NIL-FOR	k < $
14015	BOBYQAOptimizer.java	altmov	j	int	0	NIL-FOR	$ < n
14015	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	j < $
14016	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
14016	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
14017	BOBYQAOptimizer.java	altmov	k	int	0	NIL-FOR	$ < npt
14017	BOBYQAOptimizer.java	altmov	npt	int	0	NIL-FOR	k < $
14018	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
14018	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
14019	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
14019	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
2919	BOBYQAOptimizer.java	altmov	tmp	double	1	DEF	$ > ZERO
14020	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
14020	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
2932	BOBYQAOptimizer.java	altmov	ibdsav	int	0	DEF	$ < 0
2933	BOBYQAOptimizer.java	altmov	ibdsav	int	0	DEF	$ > 0
14021	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
14021	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
2936	BOBYQAOptimizer.java	altmov	tmp1	double	0	DEF	$ > ZERO
14022	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
14022	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
14023	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
14023	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
2942	BOBYQAOptimizer.java	altmov	glagValue	double	1	DEF	$ > ZERO
14024	BOBYQAOptimizer.java	altmov	k	int	0	NIL-FOR	$ < npt
14024	BOBYQAOptimizer.java	altmov	npt	int	0	NIL-FOR	k < $
14025	BOBYQAOptimizer.java	altmov	j	int	0	NIL-FOR	$ < n
14025	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	j < $
2943	BOBYQAOptimizer.java	altmov	iflag	int	0	DEF	$ == 1
14026	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
14026	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
2945	BOBYQAOptimizer.java	altmov	iflag	int	1	DEF	$ == 0
14027	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
14027	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
14028	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
14028	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
14029	BOBYQAOptimizer.java	prelim	j	int	0	NIL-FOR	$ < n
14029	BOBYQAOptimizer.java	prelim	n	int	0	NIL-FOR	j < $
14030	BOBYQAOptimizer.java	prelim	k	int	0	NIL-FOR	$ < npt
14030	BOBYQAOptimizer.java	prelim	npt	int	0	NIL-FOR	k < $
14031	BOBYQAOptimizer.java	prelim	ndim	int	0	NIL-FOR	i < $
14032	BOBYQAOptimizer.java	prelim	max	int	0	NIL-FOR	i < $
14033	BOBYQAOptimizer.java	prelim	k	int	0	NIL-FOR	$ < npt
14033	BOBYQAOptimizer.java	prelim	npt	int	0	NIL-FOR	k < $
14034	BOBYQAOptimizer.java	prelim	max	int	0	NIL-FOR	j < $
14036	BOBYQAOptimizer.java	prelim	j	int	0	NIL-FOR	$ < n
14036	BOBYQAOptimizer.java	prelim	n	int	0	NIL-FOR	j < $
2956	BOBYQAOptimizer.java	prelim	numEval	int	1	DEF	$ == 1
14037	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
14037	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
14038	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
14038	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
14039	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
14039	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
2976	BOBYQAOptimizer.java	trsbox	shs	double	0	DEF	$ > ZERO
14040	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
14040	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
2980	BOBYQAOptimizer.java	trsbox	stplen	double	0	DEF	$ > ZERO
2981	BOBYQAOptimizer.java	trsbox	iact	int	0	DEF	$ == -1
2981	BOBYQAOptimizer.java	trsbox	temp	double	0	DEF	$ > ZERO
14041	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
14041	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
2984	BOBYQAOptimizer.java	trsbox	iact	int	0	DEF	$ >= 0
14042	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
14042	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
14043	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
14043	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
14044	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
14044	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
2997	BOBYQAOptimizer.java	trsbox	temp	double	0	DEF	$ > ZERO
2999	BOBYQAOptimizer.java	trsbox	temp	double	0	DEF	$ > ZERO
14045	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
14045	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
14046	BOBYQAOptimizer.java	trsbox	iu	int	0	NIL-FOR	i < $
3004	BOBYQAOptimizer.java	trsbox	isav	int	0	DEF	$ < 0
14047	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
14047	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
3008	BOBYQAOptimizer.java	trsbox	iact	int	0	DEF	$ >= 0
14048	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
14048	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
14049	BOBYQAOptimizer.java	trsbox	j	int	0	NIL-FOR	$ < n
14049	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	j < $
14050	BOBYQAOptimizer.java	trsbox	j	int	0	NIL-FOR	i <= $
3012	BOBYQAOptimizer.java	trsbox	j	int	0	DEF	i < $
14051	BOBYQAOptimizer.java	trsbox	k	int	0	NIL-FOR	$ < npt
14051	BOBYQAOptimizer.java	trsbox	npt	int	0	NIL-FOR	k < $
14052	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
14052	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
14053	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
14053	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
14054	BOBYQAOptimizer.java	update	k	int	0	NIL-FOR	$ < npt
14054	BOBYQAOptimizer.java	update	npt	int	0	NIL-FOR	k < $
14055	BOBYQAOptimizer.java	update	nptm	int	0	NIL-FOR	j < $
14056	BOBYQAOptimizer.java	update	nptm	int	0	NIL-FOR	j < $
14057	BOBYQAOptimizer.java	update	i	int	0	NIL-FOR	$ < npt
14057	BOBYQAOptimizer.java	update	npt	int	0	NIL-FOR	i < $
14058	BOBYQAOptimizer.java	update	i	int	0	NIL-FOR	$ < npt
14058	BOBYQAOptimizer.java	update	npt	int	0	NIL-FOR	i < $
14059	BOBYQAOptimizer.java	update	i	int	0	NIL-FOR	$ < npt
14059	BOBYQAOptimizer.java	update	npt	int	0	NIL-FOR	i < $
14060	BOBYQAOptimizer.java	update	j	int	0	NIL-FOR	$ < n
14060	BOBYQAOptimizer.java	update	n	int	0	NIL-FOR	j < $
14061	BOBYQAOptimizer.java	update	jp	int	0	NIL-FOR	i <= $
14062	BOBYQAOptimizer.java	setup	i	int	0	NIL-FOR	$ < dimension
14062	BOBYQAOptimizer.java	setup	dimension	int	0	NIL-FOR	i < $
13509	BOBYQAOptimizer.java	bobyqa	j	int	0	NIL-FOR	$ < n
13509	BOBYQAOptimizer.java	bobyqa	n	int	0	NIL-FOR	j < $
13510	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13510	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13511	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13511	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13512	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	i <= $
2035	BOBYQAOptimizer.java	bobyqb	j	int	0	DEF	i < $
13513	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13513	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13514	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13514	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13515	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13515	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
2039	BOBYQAOptimizer.java	bobyqb	crvmin	double	0	DEF	$ > ZERO
13516	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13516	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13517	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13517	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13518	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13518	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13519	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13519	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13520	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13520	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13521	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	j <= $
13523	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13523	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13524	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13524	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13525	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13525	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13526	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13526	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13527	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13527	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13528	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	j <= $
13529	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13529	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13530	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13530	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13531	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	i <= $
13532	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13532	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
2045	BOBYQAOptimizer.java	bobyqb	ntrits	int	0	DEF	$ == 0
13533	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13533	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13534	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13534	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13535	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13535	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13537	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13537	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13538	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13538	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13539	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13539	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13540	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13540	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13541	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13541	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
2046	BOBYQAOptimizer.java	bobyqb	ntrits	int	1	DEF	$ == 0
2047	BOBYQAOptimizer.java	bobyqb	cauchy	double	0	DEF	$ > ZERO
13542	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13542	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13543	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13543	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13545	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13545	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13546	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13546	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
2053	BOBYQAOptimizer.java	bobyqb	ntrits	int	0	DEF	$ == -1
13547	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13547	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13548	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	i <= $
13549	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13549	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
2056	BOBYQAOptimizer.java	bobyqb	ntrits	int	0	MathIllegalStateException	$ > 0
13550	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13550	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13552	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13552	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13553	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13553	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13554	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	j <= $
13556	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13556	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13557	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13557	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13558	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13558	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13560	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13560	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13561	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13561	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13562	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13562	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13563	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13563	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13564	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	i <= $
2065	BOBYQAOptimizer.java	bobyqb	j	int	0	DEF	i < $
13565	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13565	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13566	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13566	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13567	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13567	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
2066	BOBYQAOptimizer.java	bobyqb	ntrits	int	0	DEF	$ > 0
13568	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13568	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13569	BOBYQAOptimizer.java	bobyqb	nptm	int	0	NIL-FOR	j < $
13570	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13570	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13571	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13571	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13572	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13572	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13573	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13573	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
13574	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13574	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13575	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13575	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13576	BOBYQAOptimizer.java	bobyqb	max	int	0	NIL-FOR	i < $
2071	BOBYQAOptimizer.java	bobyqb	i	int	0	DEF	$ < n
2071	BOBYQAOptimizer.java	bobyqb	n	int	0	DEF	i < $
2072	BOBYQAOptimizer.java	bobyqb	i	int	0	DEF	$ < npt
2072	BOBYQAOptimizer.java	bobyqb	npt	int	0	DEF	i < $
2073	BOBYQAOptimizer.java	bobyqb	nh	int	0	DEF	i < $
2074	BOBYQAOptimizer.java	bobyqb	ntrits	int	0	DEF	$ == 0
13577	BOBYQAOptimizer.java	bobyqb	k	int	0	NIL-FOR	$ < npt
13577	BOBYQAOptimizer.java	bobyqb	npt	int	0	NIL-FOR	k < $
13578	BOBYQAOptimizer.java	bobyqb	j	int	0	NIL-FOR	$ < n
13578	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	j < $
2077	BOBYQAOptimizer.java	bobyqb	knew	int	0	DEF	$ >= 0
2078	BOBYQAOptimizer.java	bobyqb	ntrits	int	0	DEF	$ == -1
2080	BOBYQAOptimizer.java	bobyqb	ntrits	int	0	DEF	$ == -1
2081	BOBYQAOptimizer.java	bobyqb	ratio	double	0	DEF	$ > ZERO
2086	BOBYQAOptimizer.java	bobyqb	ntrits	int	0	DEF	$ == -1
13579	BOBYQAOptimizer.java	bobyqb	i	int	0	NIL-FOR	$ < n
13579	BOBYQAOptimizer.java	bobyqb	n	int	0	NIL-FOR	i < $
13580	BOBYQAOptimizer.java	altmov	k	int	0	NIL-FOR	$ < npt
13580	BOBYQAOptimizer.java	altmov	npt	int	0	NIL-FOR	k < $
13581	BOBYQAOptimizer.java	altmov	max	int	0	NIL-FOR	j < $
13582	BOBYQAOptimizer.java	altmov	k	int	0	NIL-FOR	$ < npt
13582	BOBYQAOptimizer.java	altmov	npt	int	0	NIL-FOR	k < $
13583	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
13583	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
13584	BOBYQAOptimizer.java	altmov	k	int	0	NIL-FOR	$ < npt
13584	BOBYQAOptimizer.java	altmov	npt	int	0	NIL-FOR	k < $
13585	BOBYQAOptimizer.java	altmov	j	int	0	NIL-FOR	$ < n
13585	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	j < $
13586	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
13586	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
13587	BOBYQAOptimizer.java	altmov	k	int	0	NIL-FOR	$ < npt
13587	BOBYQAOptimizer.java	altmov	npt	int	0	NIL-FOR	k < $
13588	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
13588	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
13589	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
13589	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
2091	BOBYQAOptimizer.java	altmov	tmp	double	1	DEF	$ > ZERO
13590	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
13590	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
2104	BOBYQAOptimizer.java	altmov	ibdsav	int	0	DEF	$ < 0
2105	BOBYQAOptimizer.java	altmov	ibdsav	int	0	DEF	$ > 0
13591	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
13591	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
2108	BOBYQAOptimizer.java	altmov	tmp1	double	0	DEF	$ > ZERO
13592	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
13592	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
13593	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
13593	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
2114	BOBYQAOptimizer.java	altmov	glagValue	double	1	DEF	$ > ZERO
13594	BOBYQAOptimizer.java	altmov	k	int	0	NIL-FOR	$ < npt
13594	BOBYQAOptimizer.java	altmov	npt	int	0	NIL-FOR	k < $
13595	BOBYQAOptimizer.java	altmov	j	int	0	NIL-FOR	$ < n
13595	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	j < $
2115	BOBYQAOptimizer.java	altmov	iflag	int	0	DEF	$ == 1
13596	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
13596	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
2117	BOBYQAOptimizer.java	altmov	iflag	int	1	DEF	$ == 0
13597	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
13597	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
13598	BOBYQAOptimizer.java	altmov	i	int	0	NIL-FOR	$ < n
13598	BOBYQAOptimizer.java	altmov	n	int	0	NIL-FOR	i < $
13599	BOBYQAOptimizer.java	prelim	j	int	0	NIL-FOR	$ < n
13599	BOBYQAOptimizer.java	prelim	n	int	0	NIL-FOR	j < $
13600	BOBYQAOptimizer.java	prelim	k	int	0	NIL-FOR	$ < npt
13600	BOBYQAOptimizer.java	prelim	npt	int	0	NIL-FOR	k < $
13601	BOBYQAOptimizer.java	prelim	ndim	int	0	NIL-FOR	i < $
13602	BOBYQAOptimizer.java	prelim	max	int	0	NIL-FOR	i < $
13603	BOBYQAOptimizer.java	prelim	k	int	0	NIL-FOR	$ < npt
13603	BOBYQAOptimizer.java	prelim	npt	int	0	NIL-FOR	k < $
13604	BOBYQAOptimizer.java	prelim	max	int	0	NIL-FOR	j < $
13606	BOBYQAOptimizer.java	prelim	j	int	0	NIL-FOR	$ < n
13606	BOBYQAOptimizer.java	prelim	n	int	0	NIL-FOR	j < $
2128	BOBYQAOptimizer.java	prelim	numEval	int	1	DEF	$ == 1
13607	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
13607	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
13608	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
13608	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
13609	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
13609	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
2148	BOBYQAOptimizer.java	trsbox	shs	double	0	DEF	$ > ZERO
13610	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
13610	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
2152	BOBYQAOptimizer.java	trsbox	stplen	double	0	DEF	$ > ZERO
2153	BOBYQAOptimizer.java	trsbox	iact	int	0	DEF	$ == -1
2153	BOBYQAOptimizer.java	trsbox	temp	double	0	DEF	$ > ZERO
13611	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
13611	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
2156	BOBYQAOptimizer.java	trsbox	iact	int	0	DEF	$ >= 0
13612	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
13612	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
13613	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
13613	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
13614	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
13614	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
2169	BOBYQAOptimizer.java	trsbox	temp	double	0	DEF	$ > ZERO
2171	BOBYQAOptimizer.java	trsbox	temp	double	0	DEF	$ > ZERO
13615	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
13615	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
13616	BOBYQAOptimizer.java	trsbox	iu	int	0	NIL-FOR	i < $
2176	BOBYQAOptimizer.java	trsbox	isav	int	0	DEF	$ < 0
13617	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
13617	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
2180	BOBYQAOptimizer.java	trsbox	iact	int	0	DEF	$ >= 0
13618	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
13618	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
13619	BOBYQAOptimizer.java	trsbox	j	int	0	NIL-FOR	$ < n
13619	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	j < $
13620	BOBYQAOptimizer.java	trsbox	j	int	0	NIL-FOR	i <= $
2184	BOBYQAOptimizer.java	trsbox	j	int	0	DEF	i < $
13621	BOBYQAOptimizer.java	trsbox	k	int	0	NIL-FOR	$ < npt
13621	BOBYQAOptimizer.java	trsbox	npt	int	0	NIL-FOR	k < $
13622	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
13622	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
13623	BOBYQAOptimizer.java	trsbox	i	int	0	NIL-FOR	$ < n
13623	BOBYQAOptimizer.java	trsbox	n	int	0	NIL-FOR	i < $
13624	BOBYQAOptimizer.java	update	k	int	0	NIL-FOR	$ < npt
13624	BOBYQAOptimizer.java	update	npt	int	0	NIL-FOR	k < $
13625	BOBYQAOptimizer.java	update	nptm	int	0	NIL-FOR	j < $
13626	BOBYQAOptimizer.java	update	nptm	int	0	NIL-FOR	j < $
13627	BOBYQAOptimizer.java	update	i	int	0	NIL-FOR	$ < npt
13627	BOBYQAOptimizer.java	update	npt	int	0	NIL-FOR	i < $
13628	BOBYQAOptimizer.java	update	i	int	0	NIL-FOR	$ < npt
13628	BOBYQAOptimizer.java	update	npt	int	0	NIL-FOR	i < $
13629	BOBYQAOptimizer.java	update	i	int	0	NIL-FOR	$ < npt
13629	BOBYQAOptimizer.java	update	npt	int	0	NIL-FOR	i < $
13630	BOBYQAOptimizer.java	update	j	int	0	NIL-FOR	$ < n
13630	BOBYQAOptimizer.java	update	n	int	0	NIL-FOR	j < $
13631	BOBYQAOptimizer.java	update	jp	int	0	NIL-FOR	i <= $
13632	BOBYQAOptimizer.java	setup	i	int	0	NIL-FOR	$ < dimension
13632	BOBYQAOptimizer.java	setup	dimension	int	0	NIL-FOR	i < $
626	BSPTree.java	insertCut	chopped	SubHyperplane<S>	0	RET	$ == null
632	BSPTree.java	getCell	offset	double	1	RET	$ <= 0
636	BSPTree.java	merge	parentTree	BSPTree<S>	0	DEF	$ != null
637	BSPTree.java	merge	isPlusChild	boolean	1	DEF	$
642	BSPTree.java	insertInTree	parentTree	BSPTree<S>	0	DEF	$ != null
643	BSPTree.java	insertInTree	isPlusChild	boolean	1	DEF	$
13646	BaseAbstractMultivariateOptimizer.java	checkParameters	i	int	0	NIL-FOR	$ < dim
13646	BaseAbstractMultivariateOptimizer.java	checkParameters	dim	int	0	NIL-FOR	i < $
13647	BaseAbstractMultivariateOptimizer.java	checkParameters	i	int	0	NIL-FOR	$ < dim
13647	BaseAbstractMultivariateOptimizer.java	checkParameters	dim	int	0	NIL-FOR	i < $
13648	BaseAbstractMultivariateOptimizer.java	checkParameters	i	int	0	NIL-FOR	$ < dim
13648	BaseAbstractMultivariateOptimizer.java	checkParameters	dim	int	0	NIL-FOR	i < $
13649	BaseAbstractMultivariateOptimizer.java	checkParameters	i	int	0	NIL-FOR	$ < dim
13649	BaseAbstractMultivariateOptimizer.java	checkParameters	dim	int	0	NIL-FOR	i < $
1980	BaseAbstractMultivariateVectorOptimizer.java	optimizeInternal	f	FUNC	0	NullArgumentException	$ == null
1981	BaseAbstractMultivariateVectorOptimizer.java	optimizeInternal	t	double[]	0	NullArgumentException	$ == null
1982	BaseAbstractMultivariateVectorOptimizer.java	optimizeInternal	w	double[]	0	NullArgumentException	$ == null
1983	BaseAbstractMultivariateVectorOptimizer.java	optimizeInternal	startPoint	double[]	0	NullArgumentException	$ == null
13458	BaseAbstractMultivariateVectorOptimizer.java	setUp	i	int	0	NIL-FOR	$ < dim
13458	BaseAbstractMultivariateVectorOptimizer.java	setUp	dim	int	0	NIL-FOR	i < $
4298	BaseAbstractUnivariateIntegrator.java	BaseAbstractUnivariateIntegrator	minimalIterationCount	int	0	NotStrictlyPositiveException	$ <= 0
1823	BaseAbstractUnivariateOptimizer.java	optimize	f	UnivariateFunction	0	NullArgumentException	$ == null
1824	BaseAbstractUnivariateOptimizer.java	optimize	goalType	GoalType	0	NullArgumentException	$ == null
2786	BaseMultiStartMultivariateOptimizer.java	doOptimize	i	int	1	DEF	$ == 0
13872	BaseMultiStartMultivariateOptimizer.java	doOptimize	s	double[]	0	NIL-WHILE	$ == null
13873	BaseMultiStartMultivariateOptimizer.java	doOptimize	s	double[]	0	NIL-FOR	$ != null
2788	BaseMultiStartMultivariateOptimizer.java	doOptimize	min	double[]	0	DEF	$ != null
2788	BaseMultiStartMultivariateOptimizer.java	doOptimize	max	double[]	0	DEF	$ != null
2789	BaseMultiStartMultivariateOptimizer.java	doOptimize	optima	PAIR[]	0	DEF	$.length == 0
1813	BaseMultivariateMultiStartOptimizer.java	BaseMultivariateMultiStartOptimizer	optimizer	BaseMultivariateOptimizer<FUNC>	0	NullArgumentException	$ == null
1813	BaseMultivariateMultiStartOptimizer.java	BaseMultivariateMultiStartOptimizer	generator	RandomVectorGenerator	0	NullArgumentException	$ == null
13874	BaseMultivariateOptimizer.java	checkParameters	i	int	0	NIL-FOR	$ < dim
13874	BaseMultivariateOptimizer.java	checkParameters	dim	int	0	NIL-FOR	i < $
13875	BaseMultivariateOptimizer.java	checkParameters	i	int	0	NIL-FOR	$ < dim
13875	BaseMultivariateOptimizer.java	checkParameters	dim	int	0	NIL-FOR	i < $
1819	BaseMultivariateVectorMultiStartOptimizer.java	BaseMultivariateVectorMultiStartOptimizer	optimizer	BaseMultivariateVectorOptimizer<FUNC>	0	NullArgumentException	$ == null
1819	BaseMultivariateVectorMultiStartOptimizer.java	BaseMultivariateVectorMultiStartOptimizer	generator	RandomVectorGenerator	0	NullArgumentException	$ == null
4287	BaseRuleFactory.java	getRule	numberOfPoints	int	0	NotStrictlyPositiveException	$ <= 0
4288	BaseRuleFactory.java	getRule	cached	Pair<double[],double[]>	0	DEF	$ == null
4289	BaseRuleFactory.java	getRuleInternal	rule	Pair<T[],T[]>	0	RET	$ == null
14776	BaseRuleFactory.java	convertToDouble	len	int	0	NIL-FOR	i < $
4043	BaseSecantSolver.java	doSolve	f0	double	0	RET	$ == 0.0
4044	BaseSecantSolver.java	doSolve	f1	double	0	RET	$ == 0.0
4045	BaseSecantSolver.java	doSolve	fx	double	0	RET	$ == 0.0
4049	BaseSecantSolver.java	doSolve	inverted	boolean	0	RET	$
4050	BaseSecantSolver.java	doSolve	inverted	boolean	0	RET	$
4051	BaseSecantSolver.java	doSolve	f1	double	0	RET	$ <= 0
4052	BaseSecantSolver.java	doSolve	f1	double	0	RET	$ >= 0
3306	Beta.java	regularizedBeta	x	double	1	DEF	Double.isNaN($)
3306	Beta.java	regularizedBeta	x	double	1	DEF	$ > 1
3306	Beta.java	regularizedBeta	x	double	1	DEF	$ < 0
3306	Beta.java	regularizedBeta	a	double	1	DEF	Double.isNaN($)
3306	Beta.java	regularizedBeta	b	double	1	DEF	Double.isNaN($)
3312	Beta.java	logGammaMinusLogGammaSum	a	double	0	NumberIsTooSmallException	$ < 0.0
3315	Beta.java	deltaMinusDeltaSum	a	double	0	OutOfRangeException	$ < 0
14257	Beta.java	deltaMinusDeltaSum	s	double[]	0	NIL-FOR	i < $.length
14258	Beta.java	deltaMinusDeltaSum	i	int	0	NIL-FOR	$ >= 0
14259	Beta.java	sumDeltaMinusDeltaSum	i	int	0	NIL-FOR	$ >= 0
3319	Beta.java	logBeta	p	double	0	RET	Double.isNaN($)
3319	Beta.java	logBeta	q	double	0	RET	Double.isNaN($)
14260	Beta.java	logBeta	i	int	0	NIL-FOR	$ < n
14260	Beta.java	logBeta	n	int	0	NIL-FOR	i < $
1141	BetaDistribution.java	density	x	double	1	RET	$ > 1
1141	BetaDistribution.java	density	x	double	1	RET	$ < 0
1142	BetaDistribution.java	density	x	double	1	NumberIsTooSmallException:RET	$ == 0
1144	BetaDistribution.java	density	x	double	1	NumberIsTooSmallException:RET	$ == 1
1146	BetaDistribution.java	cumulativeProbability	x	double	1	RET	$ <= 0
12985	BiDiagonalTransformer.java	getU	j	int	0	NIL-FOR	$ < m
12985	BiDiagonalTransformer.java	getU	m	int	0	NIL-FOR	j < $
12986	BiDiagonalTransformer.java	getU	i	int	0	NIL-FOR	$ < m
12986	BiDiagonalTransformer.java	getU	m	int	0	NIL-FOR	i < $
12987	BiDiagonalTransformer.java	getU	i	int	0	NIL-FOR	$ < m
12987	BiDiagonalTransformer.java	getU	m	int	0	NIL-FOR	i < $
1573	BiDiagonalTransformer.java	getU	diagOffset	int	0	DEF	$ > 0
1575	BiDiagonalTransformer.java	getB	m	int	1	DEF	$ < n
1576	BiDiagonalTransformer.java	getB	i	int	0	DEF	$ > 0
12991	BiDiagonalTransformer.java	getV	j	int	0	NIL-FOR	$ < n
12991	BiDiagonalTransformer.java	getV	n	int	0	NIL-FOR	j < $
12992	BiDiagonalTransformer.java	getV	i	int	0	NIL-FOR	$ < n
12992	BiDiagonalTransformer.java	getV	n	int	0	NIL-FOR	i < $
12993	BiDiagonalTransformer.java	getV	i	int	0	NIL-FOR	$ < n
12993	BiDiagonalTransformer.java	getV	n	int	0	NIL-FOR	i < $
1580	BiDiagonalTransformer.java	getV	diagOffset	int	0	DEF	$ > 0
12994	BiDiagonalTransformer.java	transformToUpperBiDiagonal	k	int	0	NIL-FOR	$ < n
12994	BiDiagonalTransformer.java	transformToUpperBiDiagonal	n	int	0	NIL-FOR	k < $
12995	BiDiagonalTransformer.java	transformToUpperBiDiagonal	i	int	0	NIL-FOR	$ < m
12995	BiDiagonalTransformer.java	transformToUpperBiDiagonal	m	int	0	NIL-FOR	i < $
12996	BiDiagonalTransformer.java	transformToUpperBiDiagonal	j	int	0	NIL-FOR	$ < n
12996	BiDiagonalTransformer.java	transformToUpperBiDiagonal	n	int	0	NIL-FOR	j < $
12997	BiDiagonalTransformer.java	transformToUpperBiDiagonal	i	int	0	NIL-FOR	$ < m
12997	BiDiagonalTransformer.java	transformToUpperBiDiagonal	m	int	0	NIL-FOR	i < $
12998	BiDiagonalTransformer.java	transformToUpperBiDiagonal	i	int	0	NIL-FOR	$ < m
12998	BiDiagonalTransformer.java	transformToUpperBiDiagonal	m	int	0	NIL-FOR	i < $
12999	BiDiagonalTransformer.java	transformToUpperBiDiagonal	j	int	0	NIL-FOR	$ < n
12999	BiDiagonalTransformer.java	transformToUpperBiDiagonal	n	int	0	NIL-FOR	j < $
13000	BiDiagonalTransformer.java	transformToUpperBiDiagonal	i	int	0	NIL-FOR	$ < m
13000	BiDiagonalTransformer.java	transformToUpperBiDiagonal	m	int	0	NIL-FOR	i < $
13001	BiDiagonalTransformer.java	transformToUpperBiDiagonal	j	int	0	NIL-FOR	$ < n
13001	BiDiagonalTransformer.java	transformToUpperBiDiagonal	n	int	0	NIL-FOR	j < $
13002	BiDiagonalTransformer.java	transformToUpperBiDiagonal	j	int	0	NIL-FOR	$ < n
13002	BiDiagonalTransformer.java	transformToUpperBiDiagonal	n	int	0	NIL-FOR	j < $
13003	BiDiagonalTransformer.java	transformToLowerBiDiagonal	k	int	0	NIL-FOR	$ < m
13003	BiDiagonalTransformer.java	transformToLowerBiDiagonal	m	int	0	NIL-FOR	k < $
13004	BiDiagonalTransformer.java	transformToLowerBiDiagonal	j	int	0	NIL-FOR	$ < n
13004	BiDiagonalTransformer.java	transformToLowerBiDiagonal	n	int	0	NIL-FOR	j < $
13005	BiDiagonalTransformer.java	transformToLowerBiDiagonal	i	int	0	NIL-FOR	$ < m
13005	BiDiagonalTransformer.java	transformToLowerBiDiagonal	m	int	0	NIL-FOR	i < $
13006	BiDiagonalTransformer.java	transformToLowerBiDiagonal	j	int	0	NIL-FOR	$ < n
13006	BiDiagonalTransformer.java	transformToLowerBiDiagonal	n	int	0	NIL-FOR	j < $
13007	BiDiagonalTransformer.java	transformToLowerBiDiagonal	j	int	0	NIL-FOR	$ < n
13007	BiDiagonalTransformer.java	transformToLowerBiDiagonal	n	int	0	NIL-FOR	j < $
13008	BiDiagonalTransformer.java	transformToLowerBiDiagonal	i	int	0	NIL-FOR	$ < m
13008	BiDiagonalTransformer.java	transformToLowerBiDiagonal	m	int	0	NIL-FOR	i < $
13009	BiDiagonalTransformer.java	transformToLowerBiDiagonal	j	int	0	NIL-FOR	$ < n
13009	BiDiagonalTransformer.java	transformToLowerBiDiagonal	n	int	0	NIL-FOR	j < $
13010	BiDiagonalTransformer.java	transformToLowerBiDiagonal	i	int	0	NIL-FOR	$ < m
13010	BiDiagonalTransformer.java	transformToLowerBiDiagonal	m	int	0	NIL-FOR	i < $
13011	BiDiagonalTransformer.java	transformToLowerBiDiagonal	i	int	0	NIL-FOR	$ < m
13011	BiDiagonalTransformer.java	transformToLowerBiDiagonal	m	int	0	NIL-FOR	i < $
3966	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	xLen	int	0	NoDataException	$ == 0
3966	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	yLen	int	0	NoDataException	$ == 0
3966	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	f	double[][]	0	NoDataException	$.length == 0
14564	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	lastI	int	0	NIL-FOR	i < $
14565	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	lastJ	int	0	NIL-FOR	j < $
14566	BicubicSplineInterpolatingFunction.java	computePartialDerivatives	lastI	int	0	NIL-FOR	i < $
14567	BicubicSplineInterpolatingFunction.java	computePartialDerivatives	lastJ	int	0	NIL-FOR	j < $
3977	BicubicSplineInterpolatingFunction.java	searchIndex	r	int	0	OutOfRangeException	$ == -1
3978	BicubicSplineInterpolatingFunction.java	searchIndex	r	int	0	RET	$ < 0
3980	BicubicSplineInterpolatingFunction.java	value	x	double	0	OutOfRangeException	$ < 0
3980	BicubicSplineInterpolatingFunction.java	value	x	double	0	OutOfRangeException	$ > 1
3981	BicubicSplineInterpolatingFunction.java	value	y	double	0	OutOfRangeException	$ < 0
3981	BicubicSplineInterpolatingFunction.java	value	y	double	0	OutOfRangeException	$ > 1
3963	BicubicSplineInterpolator.java	interpolate	xval	double[]	0	NoDataException	$.length == 0
3963	BicubicSplineInterpolator.java	interpolate	yval	double[]	0	NoDataException	$.length == 0
3963	BicubicSplineInterpolator.java	interpolate	fval	double[][]	0	NoDataException	$.length == 0
14552	BicubicSplineInterpolator.java	interpolate	xLen	int	0	NIL-FOR	i < $
14553	BicubicSplineInterpolator.java	interpolate	yLen	int	0	NIL-FOR	j < $
14554	BicubicSplineInterpolator.java	interpolate	yLen	int	0	NIL-FOR	j < $
14555	BicubicSplineInterpolator.java	interpolate	xLen	int	0	NIL-FOR	i < $
14556	BicubicSplineInterpolator.java	interpolate	yLen	int	0	NIL-FOR	j < $
14557	BicubicSplineInterpolator.java	interpolate	xLen	int	0	NIL-FOR	i < $
14558	BicubicSplineInterpolator.java	interpolate	xLen	int	0	NIL-FOR	i < $
14559	BicubicSplineInterpolator.java	interpolate	yLen	int	0	NIL-FOR	j < $
14560	BicubicSplineInterpolator.java	interpolate	xLen	int	0	NIL-FOR	i < $
14561	BicubicSplineInterpolator.java	interpolate	yLen	int	0	NIL-FOR	j < $
958	BigFraction.java	BigFraction	value	double	0	MathIllegalArgumentException	Double.isNaN($)
959	BigFraction.java	BigFraction	value	double	0	MathIllegalArgumentException	Double.isInfinite($)
960	BigFraction.java	BigFraction	exponent	long	0	DEF	$ != 0
961	BigFraction.java	BigFraction	sign	long	0	DEF	$ != 0
962	BigFraction.java	BigFraction	k	int	1	DEF	$ < 0
12455	BigFraction.java	BigFraction	stop	boolean	0	NIL-DOWHILE	$
969	BigFraction.java	getReducedFraction	numerator	int	0	RET	$ == 0
970	BigFraction.java	add	fraction	BigFraction	0	NullArgumentException	$ == null
973	BigFraction.java	divide	bg	BigInteger	0	NullArgumentException	$ == null
975	BigFraction.java	divide	fraction	BigFraction	0	NullArgumentException	$ == null
977	BigFraction.java	doubleValue	result	double	0	DEF	Double.isNaN($)
978	BigFraction.java	equals	THIS	BigFraction	1	DEF	$ == other
978	BigFraction.java	equals	other	Object	1	DEF	this == $
980	BigFraction.java	floatValue	result	float	0	DEF	Double.isNaN($)
981	BigFraction.java	multiply	bg	BigInteger	0	NullArgumentException	$ == null
982	BigFraction.java	multiply	fraction	BigFraction	0	NullArgumentException	$ == null
984	BigFraction.java	pow	exponent	int	0	RET	$ < 0
985	BigFraction.java	pow	exponent	long	0	RET	$ < 0
987	BigFraction.java	subtract	bg	BigInteger	0	NullArgumentException	$ == null
988	BigFraction.java	subtract	fraction	BigFraction	0	NullArgumentException	$ == null
997	BigFractionFormat.java	parse	num	BigInteger	0	RET	$ == null
998	BigFractionFormat.java	parse	den	BigInteger	0	RET	$ == null
219	BigReal.java	equals	THIS	BigReal	0	RET	$ == other
219	BigReal.java	equals	other	Object	0	RET	this == $
1212	BinomialDistribution.java	BinomialDistribution	trials	int	0	NotPositiveException	$ < 0
1213	BinomialDistribution.java	BinomialDistribution	p	double	0	OutOfRangeException	$ < 0
1213	BinomialDistribution.java	BinomialDistribution	p	double	0	OutOfRangeException	$ > 1
1214	BinomialDistribution.java	probability	x	int	1	DEF	$ < 0
1215	BinomialDistribution.java	cumulativeProbability	x	int	1	DEF	$ < 0
14183	BitsStreamGenerator.java	nextBytes	iEnd	int	0	NIL-WHILE	i < $
14184	BitsStreamGenerator.java	nextBytes	bytes	byte[]	0	NIL-WHILE	i < $.length
3153	BitsStreamGenerator.java	nextInt	n	int	0	RET	$ > 0
3155	BitsStreamGenerator.java	nextLong	n	long	0	RET	$ > 0
1312	BlockFieldMatrix.java	BlockFieldMatrix	copyArray	boolean	1	DEF	$
12547	BlockFieldMatrix.java	BlockFieldMatrix	THIS	BlockFieldMatrix	0	NIL-FOR	iBlock < $.blockRows
12547	BlockFieldMatrix.java	BlockFieldMatrix	iBlock	int	0	NIL-FOR	$ < blockRows
12548	BlockFieldMatrix.java	BlockFieldMatrix	THIS	BlockFieldMatrix	0	NIL-FOR	jBlock < $.blockColumns
12548	BlockFieldMatrix.java	BlockFieldMatrix	jBlock	int	0	NIL-FOR	$ < blockColumns
1314	BlockFieldMatrix.java	BlockFieldMatrix	copyArray	boolean	0	DEF	$
12549	BlockFieldMatrix.java	toBlocksLayout	rawData	T[][]	0	NIL-FOR	i < $.length
12550	BlockFieldMatrix.java	toBlocksLayout	iBlock	int	0	NIL-FOR	$ < blockRows
12551	BlockFieldMatrix.java	toBlocksLayout	jBlock	int	0	NIL-FOR	$ < blockColumns
12552	BlockFieldMatrix.java	toBlocksLayout	p	int	0	NIL-FOR	$ < pEnd
12552	BlockFieldMatrix.java	toBlocksLayout	pEnd	int	0	NIL-FOR	p < $
12553	BlockFieldMatrix.java	createBlocksLayout	iBlock	int	0	NIL-FOR	$ < blockRows
12554	BlockFieldMatrix.java	createBlocksLayout	jBlock	int	0	NIL-FOR	$ < blockColumns
12556	BlockFieldMatrix.java	add	out	BlockFieldMatrix<T>	0	NIL-FOR	iBlock < $.blockRows
12557	BlockFieldMatrix.java	add	out	BlockFieldMatrix<T>	0	NIL-FOR	jBlock < $.blockColumns
12558	BlockFieldMatrix.java	add	p	int	0	NIL-FOR	$ < pEnd
12558	BlockFieldMatrix.java	add	pEnd	int	0	NIL-FOR	p < $
12559	BlockFieldMatrix.java	add	q	int	0	NIL-FOR	$ < qEnd
12559	BlockFieldMatrix.java	add	qEnd	int	0	NIL-FOR	q < $
12562	BlockFieldMatrix.java	subtract	out	BlockFieldMatrix<T>	0	NIL-FOR	iBlock < $.blockRows
12563	BlockFieldMatrix.java	subtract	out	BlockFieldMatrix<T>	0	NIL-FOR	jBlock < $.blockColumns
12564	BlockFieldMatrix.java	subtract	p	int	0	NIL-FOR	$ < pEnd
12564	BlockFieldMatrix.java	subtract	pEnd	int	0	NIL-FOR	p < $
12565	BlockFieldMatrix.java	subtract	q	int	0	NIL-FOR	$ < qEnd
12565	BlockFieldMatrix.java	subtract	qEnd	int	0	NIL-FOR	q < $
12572	BlockFieldMatrix.java	multiply	out	BlockFieldMatrix<T>	0	NIL-FOR	iBlock < $.blockRows
12573	BlockFieldMatrix.java	multiply	out	BlockFieldMatrix<T>	0	NIL-FOR	jBlock < $.blockColumns
12574	BlockFieldMatrix.java	multiply	kBlock	int	0	NIL-FOR	$ < blockColumns
12575	BlockFieldMatrix.java	multiply	p	int	0	NIL-FOR	$ < pEnd
12575	BlockFieldMatrix.java	multiply	pEnd	int	0	NIL-FOR	p < $
12576	BlockFieldMatrix.java	multiply	q	int	0	NIL-FOR	$ < qEnd
12576	BlockFieldMatrix.java	multiply	qEnd	int	0	NIL-FOR	q < $
12578	BlockFieldMatrix.java	multiply	out	BlockFieldMatrix<T>	0	NIL-FOR	iBlock < $.blockRows
12579	BlockFieldMatrix.java	multiply	out	BlockFieldMatrix<T>	0	NIL-FOR	jBlock < $.blockColumns
12580	BlockFieldMatrix.java	multiply	kBlock	int	0	NIL-FOR	$ < blockColumns
12581	BlockFieldMatrix.java	multiply	p	int	0	NIL-FOR	$ < pEnd
12581	BlockFieldMatrix.java	multiply	pEnd	int	0	NIL-FOR	p < $
12585	BlockFieldMatrix.java	getData	THIS	BlockFieldMatrix	0	NIL-FOR	iBlock < $.blockRows
12585	BlockFieldMatrix.java	getData	iBlock	int	0	NIL-FOR	$ < blockRows
12586	BlockFieldMatrix.java	getData	p	int	0	NIL-FOR	$ < pEnd
12586	BlockFieldMatrix.java	getData	pEnd	int	0	NIL-FOR	p < $
12588	BlockFieldMatrix.java	getSubMatrix	out	BlockFieldMatrix<T>	0	NIL-FOR	iBlock < $.blockRows
12589	BlockFieldMatrix.java	getSubMatrix	out	BlockFieldMatrix<T>	0	NIL-FOR	jBlock < $.blockColumns
1316	BlockFieldMatrix.java	getSubMatrix	heightExcess	int	1	DEF	$ > 0
1317	BlockFieldMatrix.java	getSubMatrix	widthExcess	int	1	DEF	$ > 0
1318	BlockFieldMatrix.java	getSubMatrix	widthExcess	int	1	DEF	$ > 0
1319	BlockFieldMatrix.java	setSubMatrix	refLength	int	0	NoDataException	$ == 0
12593	BlockFieldMatrix.java	setSubMatrix	iEnd	int	0	NIL-FOR	i < $
12594	BlockFieldMatrix.java	getRowMatrix	THIS	BlockFieldMatrix	0	NIL-FOR	jBlock < $.blockColumns
12594	BlockFieldMatrix.java	getRowMatrix	jBlock	int	0	NIL-FOR	$ < blockColumns
12595	BlockFieldMatrix.java	setRowMatrix	THIS	BlockFieldMatrix	0	NIL-FOR	jBlock < $.blockColumns
12595	BlockFieldMatrix.java	setRowMatrix	jBlock	int	0	NIL-FOR	$ < blockColumns
12596	BlockFieldMatrix.java	getColumnMatrix	THIS	BlockFieldMatrix	0	NIL-FOR	iBlock < $.blockRows
12596	BlockFieldMatrix.java	getColumnMatrix	iBlock	int	0	NIL-FOR	$ < blockRows
12597	BlockFieldMatrix.java	getColumnMatrix	iHeight	int	0	NIL-FOR	i < $
12598	BlockFieldMatrix.java	setColumnMatrix	THIS	BlockFieldMatrix	0	NIL-FOR	iBlock < $.blockRows
12598	BlockFieldMatrix.java	setColumnMatrix	iBlock	int	0	NIL-FOR	$ < blockRows
12599	BlockFieldMatrix.java	setColumnMatrix	iHeight	int	0	NIL-FOR	i < $
12600	BlockFieldMatrix.java	getRowVector	THIS	BlockFieldMatrix	0	NIL-FOR	jBlock < $.blockColumns
12600	BlockFieldMatrix.java	getRowVector	jBlock	int	0	NIL-FOR	$ < blockColumns
12601	BlockFieldMatrix.java	getColumnVector	THIS	BlockFieldMatrix	0	NIL-FOR	iBlock < $.blockRows
12601	BlockFieldMatrix.java	getColumnVector	iBlock	int	0	NIL-FOR	$ < blockRows
12602	BlockFieldMatrix.java	getColumnVector	iHeight	int	0	NIL-FOR	i < $
12603	BlockFieldMatrix.java	getRow	THIS	BlockFieldMatrix	0	NIL-FOR	jBlock < $.blockColumns
12603	BlockFieldMatrix.java	getRow	jBlock	int	0	NIL-FOR	$ < blockColumns
12604	BlockFieldMatrix.java	setRow	THIS	BlockFieldMatrix	0	NIL-FOR	jBlock < $.blockColumns
12604	BlockFieldMatrix.java	setRow	jBlock	int	0	NIL-FOR	$ < blockColumns
12605	BlockFieldMatrix.java	getColumn	THIS	BlockFieldMatrix	0	NIL-FOR	iBlock < $.blockRows
12605	BlockFieldMatrix.java	getColumn	iBlock	int	0	NIL-FOR	$ < blockRows
12606	BlockFieldMatrix.java	getColumn	iHeight	int	0	NIL-FOR	i < $
12607	BlockFieldMatrix.java	setColumn	THIS	BlockFieldMatrix	0	NIL-FOR	iBlock < $.blockRows
12607	BlockFieldMatrix.java	setColumn	iBlock	int	0	NIL-FOR	$ < blockRows
12608	BlockFieldMatrix.java	setColumn	iHeight	int	0	NIL-FOR	i < $
12609	BlockFieldMatrix.java	transpose	iBlock	int	0	NIL-FOR	$ < blockColumns
12610	BlockFieldMatrix.java	transpose	jBlock	int	0	NIL-FOR	$ < blockRows
12611	BlockFieldMatrix.java	transpose	p	int	0	NIL-FOR	$ < pEnd
12611	BlockFieldMatrix.java	transpose	pEnd	int	0	NIL-FOR	p < $
12612	BlockFieldMatrix.java	transpose	q	int	0	NIL-FOR	$ < qEnd
12612	BlockFieldMatrix.java	transpose	qEnd	int	0	NIL-FOR	q < $
12613	BlockFieldMatrix.java	operate	THIS	BlockFieldMatrix	0	NIL-FOR	iBlock < $.blockRows
12613	BlockFieldMatrix.java	operate	iBlock	int	0	NIL-FOR	$ < blockRows
12614	BlockFieldMatrix.java	operate	THIS	BlockFieldMatrix	0	NIL-FOR	jBlock < $.blockColumns
12614	BlockFieldMatrix.java	operate	jBlock	int	0	NIL-FOR	$ < blockColumns
12615	BlockFieldMatrix.java	operate	p	int	0	NIL-FOR	$ < pEnd
12615	BlockFieldMatrix.java	operate	pEnd	int	0	NIL-FOR	p < $
12617	BlockFieldMatrix.java	operate	q	int	0	NIL-WHILE	$ < qEnd
12617	BlockFieldMatrix.java	operate	qEnd	int	0	NIL-WHILE	q < $
12618	BlockFieldMatrix.java	preMultiply	THIS	BlockFieldMatrix	0	NIL-FOR	jBlock < $.blockColumns
12618	BlockFieldMatrix.java	preMultiply	jBlock	int	0	NIL-FOR	$ < blockColumns
12619	BlockFieldMatrix.java	preMultiply	THIS	BlockFieldMatrix	0	NIL-FOR	iBlock < $.blockRows
12619	BlockFieldMatrix.java	preMultiply	iBlock	int	0	NIL-FOR	$ < blockRows
12620	BlockFieldMatrix.java	preMultiply	q	int	0	NIL-FOR	$ < qEnd
12620	BlockFieldMatrix.java	preMultiply	qEnd	int	0	NIL-FOR	q < $
12622	BlockFieldMatrix.java	preMultiply	p	int	0	NIL-WHILE	$ < pEnd
12622	BlockFieldMatrix.java	preMultiply	pEnd	int	0	NIL-WHILE	p < $
12623	BlockFieldMatrix.java	walkInRowOrder	THIS	BlockFieldMatrix	0	NIL-FOR	iBlock < $.blockRows
12623	BlockFieldMatrix.java	walkInRowOrder	iBlock	int	0	NIL-FOR	$ < blockRows
12624	BlockFieldMatrix.java	walkInRowOrder	p	int	0	NIL-FOR	$ < pEnd
12624	BlockFieldMatrix.java	walkInRowOrder	pEnd	int	0	NIL-FOR	p < $
12625	BlockFieldMatrix.java	walkInRowOrder	THIS	BlockFieldMatrix	0	NIL-FOR	jBlock < $.blockColumns
12625	BlockFieldMatrix.java	walkInRowOrder	jBlock	int	0	NIL-FOR	$ < blockColumns
12626	BlockFieldMatrix.java	walkInRowOrder	q	int	0	NIL-FOR	$ < qEnd
12626	BlockFieldMatrix.java	walkInRowOrder	qEnd	int	0	NIL-FOR	q < $
12627	BlockFieldMatrix.java	walkInRowOrder	THIS	BlockFieldMatrix	0	NIL-FOR	iBlock < $.blockRows
12627	BlockFieldMatrix.java	walkInRowOrder	iBlock	int	0	NIL-FOR	$ < blockRows
12628	BlockFieldMatrix.java	walkInRowOrder	p	int	0	NIL-FOR	$ < pEnd
12628	BlockFieldMatrix.java	walkInRowOrder	pEnd	int	0	NIL-FOR	p < $
12629	BlockFieldMatrix.java	walkInRowOrder	THIS	BlockFieldMatrix	0	NIL-FOR	jBlock < $.blockColumns
12629	BlockFieldMatrix.java	walkInRowOrder	jBlock	int	0	NIL-FOR	$ < blockColumns
12630	BlockFieldMatrix.java	walkInRowOrder	q	int	0	NIL-FOR	$ < qEnd
12630	BlockFieldMatrix.java	walkInRowOrder	qEnd	int	0	NIL-FOR	q < $
12632	BlockFieldMatrix.java	walkInRowOrder	p	int	0	NIL-FOR	$ < pEnd
12632	BlockFieldMatrix.java	walkInRowOrder	pEnd	int	0	NIL-FOR	p < $
12634	BlockFieldMatrix.java	walkInRowOrder	q	int	0	NIL-FOR	$ < qEnd
12634	BlockFieldMatrix.java	walkInRowOrder	qEnd	int	0	NIL-FOR	q < $
12636	BlockFieldMatrix.java	walkInRowOrder	p	int	0	NIL-FOR	$ < pEnd
12636	BlockFieldMatrix.java	walkInRowOrder	pEnd	int	0	NIL-FOR	p < $
12638	BlockFieldMatrix.java	walkInRowOrder	q	int	0	NIL-FOR	$ < qEnd
12638	BlockFieldMatrix.java	walkInRowOrder	qEnd	int	0	NIL-FOR	q < $
12639	BlockFieldMatrix.java	walkInOptimizedOrder	THIS	BlockFieldMatrix	0	NIL-FOR	iBlock < $.blockRows
12639	BlockFieldMatrix.java	walkInOptimizedOrder	iBlock	int	0	NIL-FOR	$ < blockRows
12640	BlockFieldMatrix.java	walkInOptimizedOrder	THIS	BlockFieldMatrix	0	NIL-FOR	jBlock < $.blockColumns
12640	BlockFieldMatrix.java	walkInOptimizedOrder	jBlock	int	0	NIL-FOR	$ < blockColumns
12641	BlockFieldMatrix.java	walkInOptimizedOrder	p	int	0	NIL-FOR	$ < pEnd
12641	BlockFieldMatrix.java	walkInOptimizedOrder	pEnd	int	0	NIL-FOR	p < $
12642	BlockFieldMatrix.java	walkInOptimizedOrder	q	int	0	NIL-FOR	$ < qEnd
12642	BlockFieldMatrix.java	walkInOptimizedOrder	qEnd	int	0	NIL-FOR	q < $
12643	BlockFieldMatrix.java	walkInOptimizedOrder	THIS	BlockFieldMatrix	0	NIL-FOR	iBlock < $.blockRows
12643	BlockFieldMatrix.java	walkInOptimizedOrder	iBlock	int	0	NIL-FOR	$ < blockRows
12644	BlockFieldMatrix.java	walkInOptimizedOrder	THIS	BlockFieldMatrix	0	NIL-FOR	jBlock < $.blockColumns
12644	BlockFieldMatrix.java	walkInOptimizedOrder	jBlock	int	0	NIL-FOR	$ < blockColumns
12645	BlockFieldMatrix.java	walkInOptimizedOrder	p	int	0	NIL-FOR	$ < pEnd
12645	BlockFieldMatrix.java	walkInOptimizedOrder	pEnd	int	0	NIL-FOR	p < $
12646	BlockFieldMatrix.java	walkInOptimizedOrder	q	int	0	NIL-FOR	$ < qEnd
12646	BlockFieldMatrix.java	walkInOptimizedOrder	qEnd	int	0	NIL-FOR	q < $
12649	BlockFieldMatrix.java	walkInOptimizedOrder	p	int	0	NIL-FOR	$ < pEnd
12649	BlockFieldMatrix.java	walkInOptimizedOrder	pEnd	int	0	NIL-FOR	p < $
12650	BlockFieldMatrix.java	walkInOptimizedOrder	q	int	0	NIL-FOR	$ < qEnd
12650	BlockFieldMatrix.java	walkInOptimizedOrder	qEnd	int	0	NIL-FOR	q < $
12653	BlockFieldMatrix.java	walkInOptimizedOrder	p	int	0	NIL-FOR	$ < pEnd
12653	BlockFieldMatrix.java	walkInOptimizedOrder	pEnd	int	0	NIL-FOR	p < $
12654	BlockFieldMatrix.java	walkInOptimizedOrder	q	int	0	NIL-FOR	$ < qEnd
12654	BlockFieldMatrix.java	walkInOptimizedOrder	qEnd	int	0	NIL-FOR	q < $
1669	BlockRealMatrix.java	BlockRealMatrix	copyArray	boolean	1	DEF	$
13064	BlockRealMatrix.java	BlockRealMatrix	THIS	BlockRealMatrix	0	NIL-FOR	iBlock < $.blockRows
13064	BlockRealMatrix.java	BlockRealMatrix	iBlock	int	0	NIL-FOR	$ < blockRows
13065	BlockRealMatrix.java	BlockRealMatrix	THIS	BlockRealMatrix	0	NIL-FOR	jBlock < $.blockColumns
13065	BlockRealMatrix.java	BlockRealMatrix	jBlock	int	0	NIL-FOR	$ < blockColumns
1671	BlockRealMatrix.java	BlockRealMatrix	copyArray	boolean	0	DEF	$
13066	BlockRealMatrix.java	toBlocksLayout	rawData	double[][]	0	NIL-FOR	i < $.length
13067	BlockRealMatrix.java	toBlocksLayout	iBlock	int	0	NIL-FOR	$ < blockRows
13068	BlockRealMatrix.java	toBlocksLayout	jBlock	int	0	NIL-FOR	$ < blockColumns
13069	BlockRealMatrix.java	toBlocksLayout	p	int	0	NIL-FOR	$ < pEnd
13069	BlockRealMatrix.java	toBlocksLayout	pEnd	int	0	NIL-FOR	p < $
13070	BlockRealMatrix.java	createBlocksLayout	iBlock	int	0	NIL-FOR	$ < blockRows
13071	BlockRealMatrix.java	createBlocksLayout	jBlock	int	0	NIL-FOR	$ < blockColumns
13073	BlockRealMatrix.java	add	out	BlockRealMatrix	0	NIL-FOR	iBlock < $.blockRows
13074	BlockRealMatrix.java	add	out	BlockRealMatrix	0	NIL-FOR	jBlock < $.blockColumns
13075	BlockRealMatrix.java	add	p	int	0	NIL-FOR	$ < pEnd
13075	BlockRealMatrix.java	add	pEnd	int	0	NIL-FOR	p < $
13076	BlockRealMatrix.java	add	q	int	0	NIL-FOR	$ < qEnd
13076	BlockRealMatrix.java	add	qEnd	int	0	NIL-FOR	q < $
13079	BlockRealMatrix.java	subtract	out	BlockRealMatrix	0	NIL-FOR	iBlock < $.blockRows
13080	BlockRealMatrix.java	subtract	out	BlockRealMatrix	0	NIL-FOR	jBlock < $.blockColumns
13081	BlockRealMatrix.java	subtract	p	int	0	NIL-FOR	$ < pEnd
13081	BlockRealMatrix.java	subtract	pEnd	int	0	NIL-FOR	p < $
13082	BlockRealMatrix.java	subtract	q	int	0	NIL-FOR	$ < qEnd
13082	BlockRealMatrix.java	subtract	qEnd	int	0	NIL-FOR	q < $
13089	BlockRealMatrix.java	multiply	out	BlockRealMatrix	0	NIL-FOR	iBlock < $.blockRows
13090	BlockRealMatrix.java	multiply	out	BlockRealMatrix	0	NIL-FOR	jBlock < $.blockColumns
13091	BlockRealMatrix.java	multiply	kBlock	int	0	NIL-FOR	$ < blockColumns
13092	BlockRealMatrix.java	multiply	p	int	0	NIL-FOR	$ < pEnd
13092	BlockRealMatrix.java	multiply	pEnd	int	0	NIL-FOR	p < $
13093	BlockRealMatrix.java	multiply	q	int	0	NIL-FOR	$ < qEnd
13093	BlockRealMatrix.java	multiply	qEnd	int	0	NIL-FOR	q < $
13095	BlockRealMatrix.java	multiply	out	BlockRealMatrix	0	NIL-FOR	iBlock < $.blockRows
13096	BlockRealMatrix.java	multiply	out	BlockRealMatrix	0	NIL-FOR	jBlock < $.blockColumns
13097	BlockRealMatrix.java	multiply	kBlock	int	0	NIL-FOR	$ < blockColumns
13098	BlockRealMatrix.java	multiply	p	int	0	NIL-FOR	$ < pEnd
13098	BlockRealMatrix.java	multiply	pEnd	int	0	NIL-FOR	p < $
13102	BlockRealMatrix.java	getData	THIS	BlockRealMatrix	0	NIL-FOR	iBlock < $.blockRows
13102	BlockRealMatrix.java	getData	iBlock	int	0	NIL-FOR	$ < blockRows
13103	BlockRealMatrix.java	getData	p	int	0	NIL-FOR	$ < pEnd
13103	BlockRealMatrix.java	getData	pEnd	int	0	NIL-FOR	p < $
13105	BlockRealMatrix.java	getNorm	THIS	BlockRealMatrix	0	NIL-FOR	jBlock < $.blockColumns
13105	BlockRealMatrix.java	getNorm	jBlock	int	0	NIL-FOR	$ < blockColumns
13106	BlockRealMatrix.java	getNorm	THIS	BlockRealMatrix	0	NIL-FOR	iBlock < $.blockRows
13106	BlockRealMatrix.java	getNorm	iBlock	int	0	NIL-FOR	$ < blockRows
13107	BlockRealMatrix.java	getNorm	jWidth	int	0	NIL-FOR	j < $
13108	BlockRealMatrix.java	getNorm	iHeight	int	0	NIL-FOR	i < $
13109	BlockRealMatrix.java	getNorm	jWidth	int	0	NIL-FOR	j < $
13111	BlockRealMatrix.java	getSubMatrix	out	BlockRealMatrix	0	NIL-FOR	iBlock < $.blockRows
13112	BlockRealMatrix.java	getSubMatrix	out	BlockRealMatrix	0	NIL-FOR	jBlock < $.blockColumns
1673	BlockRealMatrix.java	getSubMatrix	heightExcess	int	1	DEF	$ > 0
1674	BlockRealMatrix.java	getSubMatrix	widthExcess	int	1	DEF	$ > 0
1675	BlockRealMatrix.java	getSubMatrix	widthExcess	int	1	DEF	$ > 0
1676	BlockRealMatrix.java	setSubMatrix	refLength	int	0	NoDataException	$ == 0
13116	BlockRealMatrix.java	setSubMatrix	iEnd	int	0	NIL-FOR	i < $
13117	BlockRealMatrix.java	getRowMatrix	THIS	BlockRealMatrix	0	NIL-FOR	jBlock < $.blockColumns
13117	BlockRealMatrix.java	getRowMatrix	jBlock	int	0	NIL-FOR	$ < blockColumns
13118	BlockRealMatrix.java	setRowMatrix	THIS	BlockRealMatrix	0	NIL-FOR	jBlock < $.blockColumns
13118	BlockRealMatrix.java	setRowMatrix	jBlock	int	0	NIL-FOR	$ < blockColumns
13119	BlockRealMatrix.java	getColumnMatrix	THIS	BlockRealMatrix	0	NIL-FOR	iBlock < $.blockRows
13119	BlockRealMatrix.java	getColumnMatrix	iBlock	int	0	NIL-FOR	$ < blockRows
13120	BlockRealMatrix.java	getColumnMatrix	iHeight	int	0	NIL-FOR	i < $
13121	BlockRealMatrix.java	setColumnMatrix	THIS	BlockRealMatrix	0	NIL-FOR	iBlock < $.blockRows
13121	BlockRealMatrix.java	setColumnMatrix	iBlock	int	0	NIL-FOR	$ < blockRows
13122	BlockRealMatrix.java	setColumnMatrix	iHeight	int	0	NIL-FOR	i < $
13123	BlockRealMatrix.java	getRowVector	THIS	BlockRealMatrix	0	NIL-FOR	jBlock < $.blockColumns
13123	BlockRealMatrix.java	getRowVector	jBlock	int	0	NIL-FOR	$ < blockColumns
13124	BlockRealMatrix.java	getColumnVector	THIS	BlockRealMatrix	0	NIL-FOR	iBlock < $.blockRows
13124	BlockRealMatrix.java	getColumnVector	iBlock	int	0	NIL-FOR	$ < blockRows
13125	BlockRealMatrix.java	getColumnVector	iHeight	int	0	NIL-FOR	i < $
13126	BlockRealMatrix.java	getRow	THIS	BlockRealMatrix	0	NIL-FOR	jBlock < $.blockColumns
13126	BlockRealMatrix.java	getRow	jBlock	int	0	NIL-FOR	$ < blockColumns
13127	BlockRealMatrix.java	setRow	THIS	BlockRealMatrix	0	NIL-FOR	jBlock < $.blockColumns
13127	BlockRealMatrix.java	setRow	jBlock	int	0	NIL-FOR	$ < blockColumns
13128	BlockRealMatrix.java	getColumn	THIS	BlockRealMatrix	0	NIL-FOR	iBlock < $.blockRows
13128	BlockRealMatrix.java	getColumn	iBlock	int	0	NIL-FOR	$ < blockRows
13129	BlockRealMatrix.java	getColumn	iHeight	int	0	NIL-FOR	i < $
13130	BlockRealMatrix.java	setColumn	THIS	BlockRealMatrix	0	NIL-FOR	iBlock < $.blockRows
13130	BlockRealMatrix.java	setColumn	iBlock	int	0	NIL-FOR	$ < blockRows
13131	BlockRealMatrix.java	setColumn	iHeight	int	0	NIL-FOR	i < $
13132	BlockRealMatrix.java	transpose	iBlock	int	0	NIL-FOR	$ < blockColumns
13133	BlockRealMatrix.java	transpose	jBlock	int	0	NIL-FOR	$ < blockRows
13134	BlockRealMatrix.java	transpose	p	int	0	NIL-FOR	$ < pEnd
13134	BlockRealMatrix.java	transpose	pEnd	int	0	NIL-FOR	p < $
13135	BlockRealMatrix.java	transpose	q	int	0	NIL-FOR	$ < qEnd
13135	BlockRealMatrix.java	transpose	qEnd	int	0	NIL-FOR	q < $
13136	BlockRealMatrix.java	operate	THIS	BlockRealMatrix	0	NIL-FOR	iBlock < $.blockRows
13136	BlockRealMatrix.java	operate	iBlock	int	0	NIL-FOR	$ < blockRows
13137	BlockRealMatrix.java	operate	THIS	BlockRealMatrix	0	NIL-FOR	jBlock < $.blockColumns
13137	BlockRealMatrix.java	operate	jBlock	int	0	NIL-FOR	$ < blockColumns
13138	BlockRealMatrix.java	operate	p	int	0	NIL-FOR	$ < pEnd
13138	BlockRealMatrix.java	operate	pEnd	int	0	NIL-FOR	p < $
13140	BlockRealMatrix.java	operate	q	int	0	NIL-WHILE	$ < qEnd
13140	BlockRealMatrix.java	operate	qEnd	int	0	NIL-WHILE	q < $
13141	BlockRealMatrix.java	preMultiply	THIS	BlockRealMatrix	0	NIL-FOR	jBlock < $.blockColumns
13141	BlockRealMatrix.java	preMultiply	jBlock	int	0	NIL-FOR	$ < blockColumns
13142	BlockRealMatrix.java	preMultiply	THIS	BlockRealMatrix	0	NIL-FOR	iBlock < $.blockRows
13142	BlockRealMatrix.java	preMultiply	iBlock	int	0	NIL-FOR	$ < blockRows
13143	BlockRealMatrix.java	preMultiply	q	int	0	NIL-FOR	$ < qEnd
13143	BlockRealMatrix.java	preMultiply	qEnd	int	0	NIL-FOR	q < $
13145	BlockRealMatrix.java	preMultiply	p	int	0	NIL-WHILE	$ < pEnd
13145	BlockRealMatrix.java	preMultiply	pEnd	int	0	NIL-WHILE	p < $
13146	BlockRealMatrix.java	walkInRowOrder	THIS	BlockRealMatrix	0	NIL-FOR	iBlock < $.blockRows
13146	BlockRealMatrix.java	walkInRowOrder	iBlock	int	0	NIL-FOR	$ < blockRows
13147	BlockRealMatrix.java	walkInRowOrder	p	int	0	NIL-FOR	$ < pEnd
13147	BlockRealMatrix.java	walkInRowOrder	pEnd	int	0	NIL-FOR	p < $
13148	BlockRealMatrix.java	walkInRowOrder	THIS	BlockRealMatrix	0	NIL-FOR	jBlock < $.blockColumns
13148	BlockRealMatrix.java	walkInRowOrder	jBlock	int	0	NIL-FOR	$ < blockColumns
13149	BlockRealMatrix.java	walkInRowOrder	q	int	0	NIL-FOR	$ < qEnd
13149	BlockRealMatrix.java	walkInRowOrder	qEnd	int	0	NIL-FOR	q < $
13150	BlockRealMatrix.java	walkInRowOrder	THIS	BlockRealMatrix	0	NIL-FOR	iBlock < $.blockRows
13150	BlockRealMatrix.java	walkInRowOrder	iBlock	int	0	NIL-FOR	$ < blockRows
13151	BlockRealMatrix.java	walkInRowOrder	p	int	0	NIL-FOR	$ < pEnd
13151	BlockRealMatrix.java	walkInRowOrder	pEnd	int	0	NIL-FOR	p < $
13152	BlockRealMatrix.java	walkInRowOrder	THIS	BlockRealMatrix	0	NIL-FOR	jBlock < $.blockColumns
13152	BlockRealMatrix.java	walkInRowOrder	jBlock	int	0	NIL-FOR	$ < blockColumns
13153	BlockRealMatrix.java	walkInRowOrder	q	int	0	NIL-FOR	$ < qEnd
13153	BlockRealMatrix.java	walkInRowOrder	qEnd	int	0	NIL-FOR	q < $
13155	BlockRealMatrix.java	walkInRowOrder	p	int	0	NIL-FOR	$ < pEnd
13155	BlockRealMatrix.java	walkInRowOrder	pEnd	int	0	NIL-FOR	p < $
13157	BlockRealMatrix.java	walkInRowOrder	q	int	0	NIL-FOR	$ < qEnd
13157	BlockRealMatrix.java	walkInRowOrder	qEnd	int	0	NIL-FOR	q < $
13159	BlockRealMatrix.java	walkInRowOrder	p	int	0	NIL-FOR	$ < pEnd
13159	BlockRealMatrix.java	walkInRowOrder	pEnd	int	0	NIL-FOR	p < $
13161	BlockRealMatrix.java	walkInRowOrder	q	int	0	NIL-FOR	$ < qEnd
13161	BlockRealMatrix.java	walkInRowOrder	qEnd	int	0	NIL-FOR	q < $
13162	BlockRealMatrix.java	walkInOptimizedOrder	THIS	BlockRealMatrix	0	NIL-FOR	iBlock < $.blockRows
13162	BlockRealMatrix.java	walkInOptimizedOrder	iBlock	int	0	NIL-FOR	$ < blockRows
13163	BlockRealMatrix.java	walkInOptimizedOrder	THIS	BlockRealMatrix	0	NIL-FOR	jBlock < $.blockColumns
13163	BlockRealMatrix.java	walkInOptimizedOrder	jBlock	int	0	NIL-FOR	$ < blockColumns
13164	BlockRealMatrix.java	walkInOptimizedOrder	p	int	0	NIL-FOR	$ < pEnd
13164	BlockRealMatrix.java	walkInOptimizedOrder	pEnd	int	0	NIL-FOR	p < $
13165	BlockRealMatrix.java	walkInOptimizedOrder	q	int	0	NIL-FOR	$ < qEnd
13165	BlockRealMatrix.java	walkInOptimizedOrder	qEnd	int	0	NIL-FOR	q < $
13166	BlockRealMatrix.java	walkInOptimizedOrder	THIS	BlockRealMatrix	0	NIL-FOR	iBlock < $.blockRows
13166	BlockRealMatrix.java	walkInOptimizedOrder	iBlock	int	0	NIL-FOR	$ < blockRows
13167	BlockRealMatrix.java	walkInOptimizedOrder	THIS	BlockRealMatrix	0	NIL-FOR	jBlock < $.blockColumns
13167	BlockRealMatrix.java	walkInOptimizedOrder	jBlock	int	0	NIL-FOR	$ < blockColumns
13168	BlockRealMatrix.java	walkInOptimizedOrder	p	int	0	NIL-FOR	$ < pEnd
13168	BlockRealMatrix.java	walkInOptimizedOrder	pEnd	int	0	NIL-FOR	p < $
13169	BlockRealMatrix.java	walkInOptimizedOrder	q	int	0	NIL-FOR	$ < qEnd
13169	BlockRealMatrix.java	walkInOptimizedOrder	qEnd	int	0	NIL-FOR	q < $
13172	BlockRealMatrix.java	walkInOptimizedOrder	p	int	0	NIL-FOR	$ < pEnd
13172	BlockRealMatrix.java	walkInOptimizedOrder	pEnd	int	0	NIL-FOR	p < $
13173	BlockRealMatrix.java	walkInOptimizedOrder	q	int	0	NIL-FOR	$ < qEnd
13173	BlockRealMatrix.java	walkInOptimizedOrder	qEnd	int	0	NIL-FOR	q < $
13176	BlockRealMatrix.java	walkInOptimizedOrder	p	int	0	NIL-FOR	$ < pEnd
13176	BlockRealMatrix.java	walkInOptimizedOrder	pEnd	int	0	NIL-FOR	p < $
13177	BlockRealMatrix.java	walkInOptimizedOrder	q	int	0	NIL-FOR	$ < qEnd
13177	BlockRealMatrix.java	walkInOptimizedOrder	qEnd	int	0	NIL-FOR	q < $
2684	BracketFinder.java	BracketFinder	growLimit	double	0	NotStrictlyPositiveException	$ <= 0
2685	BracketFinder.java	BracketFinder	maxEvaluations	int	0	NotStrictlyPositiveException	$ <= 0
1825	BracketFinder.java	BracketFinder	growLimit	double	0	NotStrictlyPositiveException	$ <= 0
1826	BracketFinder.java	BracketFinder	maxEvaluations	int	0	NotStrictlyPositiveException	$ <= 0
14634	BracketingNthOrderBrentSolver.java	doSolve	nextX	double	0	NIL-DOWHILE	Double.isNaN($)
4086	BracketingNthOrderBrentSolver.java	doSolve	nextX	double	0	DEF	Double.isNaN($)
14505	BracketingNthOrderBrentSolverDFP.java	solve	nextX	Dfp	0	NIL-DOWHILE	$.isNaN()
3844	BracketingNthOrderBrentSolverDFP.java	solve	nextX	Dfp	0	DEF	$.isNaN()
2699	BrentOptimizer.java	BrentOptimizer	abs	double	0	NotStrictlyPositiveException	$ <= 0
2701	BrentOptimizer.java	doOptimize	isMinim	boolean	0	DEF	$
2702	BrentOptimizer.java	doOptimize	stop	boolean	1	RET	$
2704	BrentOptimizer.java	doOptimize	q	double	1	DEF	$ > 0
2708	BrentOptimizer.java	doOptimize	x	double	1	DEF	$ < m
2709	BrentOptimizer.java	doOptimize	x	double	1	DEF	$ < m
2711	BrentOptimizer.java	doOptimize	d	double	1	DEF	$ >= 0
2712	BrentOptimizer.java	doOptimize	isMinim	boolean	0	DEF	$
2713	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariatePointValuePair>	0	RET	$ != null
2719	BrentOptimizer.java	best	a	UnivariatePointValuePair	0	RET	$ == null
2720	BrentOptimizer.java	best	b	UnivariatePointValuePair	0	RET	$ == null
2721	BrentOptimizer.java	best	isMinim	boolean	1	RET	$
1838	BrentOptimizer.java	BrentOptimizer	abs	double	0	NotStrictlyPositiveException	$ <= 0
1840	BrentOptimizer.java	doOptimize	isMinim	boolean	0	DEF	$
1841	BrentOptimizer.java	doOptimize	stop	boolean	1	RET	$
1843	BrentOptimizer.java	doOptimize	q	double	1	DEF	$ > 0
1847	BrentOptimizer.java	doOptimize	x	double	1	DEF	$ < m
1848	BrentOptimizer.java	doOptimize	x	double	1	DEF	$ < m
1850	BrentOptimizer.java	doOptimize	d	double	1	DEF	$ >= 0
1851	BrentOptimizer.java	doOptimize	isMinim	boolean	0	DEF	$
1852	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariatePointValuePair>	0	RET	$ != null
1858	BrentOptimizer.java	best	a	UnivariatePointValuePair	0	RET	$ == null
1859	BrentOptimizer.java	best	b	UnivariatePointValuePair	0	RET	$ == null
1860	BrentOptimizer.java	best	isMinim	boolean	1	RET	$
4136	BrentSolver.java	brent	p	double	1	DEF	$ > 0
4139	BrentSolver.java	brent	m	double	1	DEF	$ > 0
4140	BrentSolver.java	brent	fb	double	0	DEF	$ <= 0
4140	BrentSolver.java	brent	fb	double	0	DEF	$ > 0
4140	BrentSolver.java	brent	fc	double	0	DEF	$ <= 0
4140	BrentSolver.java	brent	fc	double	0	DEF	$ > 0
2824	CMAESOptimizer.java	doOptimize	lastResult	PointValuePair	0	DEF	$ != null
13894	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	0	NIL-FOR	i < $.dimension
13894	CMAESOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < dimension
13895	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	0	NIL-FOR	i < $.dimension
13895	CMAESOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < dimension
2833	CMAESOptimizer.java	doOptimize	lastResult	PointValuePair	0	DEF	$ != null
13896	CMAESOptimizer.java	checkParameters	init	double[]	0	NIL-FOR	i < $.length
13897	CMAESOptimizer.java	initializeCMA	guess	double[]	0	NIL-FOR	i < $.length
2843	CMAESOptimizer.java	updateEvolutionPaths	hsig	boolean	0	DEF	$
13900	CMAESOptimizer.java	updateBD	THIS	CMAESOptimizer	0	NIL-FOR	i < $.dimension
13900	CMAESOptimizer.java	updateBD	i	int	0	NIL-FOR	$ < dimension
13901	CMAESOptimizer.java	push	i	int	0	NIL-FOR	$ > 0
13902	CMAESOptimizer.java	sortedIndices	doubles	double[]	0	NIL-FOR	i < $.length
13903	CMAESOptimizer.java	sortedIndices	doubles	double[]	0	NIL-FOR	i < $.length
13904	CMAESOptimizer.java	log	r	int	0	NIL-FOR	$ < m.getRowDimension()
13906	CMAESOptimizer.java	sqrt	r	int	0	NIL-FOR	$ < m.getRowDimension()
13908	CMAESOptimizer.java	square	r	int	0	NIL-FOR	$ < m.getRowDimension()
13910	CMAESOptimizer.java	times	r	int	0	NIL-FOR	$ < m.getRowDimension()
13912	CMAESOptimizer.java	divide	r	int	0	NIL-FOR	$ < m.getRowDimension()
13914	CMAESOptimizer.java	selectColumns	r	int	0	NIL-FOR	$ < m.getRowDimension()
13916	CMAESOptimizer.java	triu	r	int	0	NIL-FOR	$ < m.getRowDimension()
13919	CMAESOptimizer.java	sumRows	r	int	0	NIL-FOR	$ < m.getRowDimension()
13920	CMAESOptimizer.java	diag	i	int	0	NIL-FOR	$ < m.getRowDimension()
13923	CMAESOptimizer.java	ones	r	int	0	NIL-FOR	$ < n
13924	CMAESOptimizer.java	eye	r	int	0	NIL-FOR	$ < n
2853	CMAESOptimizer.java	eye	r	int	0	DEF	$ < m
13928	CMAESOptimizer.java	max	r	int	0	NIL-FOR	$ < m.getRowDimension()
13930	CMAESOptimizer.java	min	r	int	0	NIL-FOR	$ < m.getRowDimension()
13934	CMAESOptimizer.java	inverse	indices	int[]	0	NIL-FOR	i < $.length
13935	CMAESOptimizer.java	reverse	indices	int[]	0	NIL-FOR	i < $.length
13936	CMAESOptimizer.java	randn	size	int	0	NIL-FOR	i < $
1995	CMAESOptimizer.java	doOptimize	lastResult	PointValuePair	0	DEF	$ != null
13464	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	0	NIL-FOR	i < $.dimension
13464	CMAESOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < dimension
13465	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	0	NIL-FOR	i < $.dimension
13465	CMAESOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < dimension
2004	CMAESOptimizer.java	doOptimize	lastResult	PointValuePair	0	DEF	$ != null
13466	CMAESOptimizer.java	checkParameters	init	double[]	0	NIL-FOR	i < $.length
13467	CMAESOptimizer.java	initializeCMA	guess	double[]	0	NIL-FOR	i < $.length
2015	CMAESOptimizer.java	updateEvolutionPaths	hsig	boolean	0	DEF	$
13470	CMAESOptimizer.java	updateBD	THIS	CMAESOptimizer	0	NIL-FOR	i < $.dimension
13470	CMAESOptimizer.java	updateBD	i	int	0	NIL-FOR	$ < dimension
13471	CMAESOptimizer.java	push	i	int	0	NIL-FOR	$ > 0
13472	CMAESOptimizer.java	sortedIndices	doubles	double[]	0	NIL-FOR	i < $.length
13473	CMAESOptimizer.java	sortedIndices	doubles	double[]	0	NIL-FOR	i < $.length
13474	CMAESOptimizer.java	log	r	int	0	NIL-FOR	$ < m.getRowDimension()
13476	CMAESOptimizer.java	sqrt	r	int	0	NIL-FOR	$ < m.getRowDimension()
13478	CMAESOptimizer.java	square	r	int	0	NIL-FOR	$ < m.getRowDimension()
13480	CMAESOptimizer.java	times	r	int	0	NIL-FOR	$ < m.getRowDimension()
13482	CMAESOptimizer.java	divide	r	int	0	NIL-FOR	$ < m.getRowDimension()
13484	CMAESOptimizer.java	selectColumns	r	int	0	NIL-FOR	$ < m.getRowDimension()
13486	CMAESOptimizer.java	triu	r	int	0	NIL-FOR	$ < m.getRowDimension()
13489	CMAESOptimizer.java	sumRows	r	int	0	NIL-FOR	$ < m.getRowDimension()
13490	CMAESOptimizer.java	diag	i	int	0	NIL-FOR	$ < m.getRowDimension()
13493	CMAESOptimizer.java	ones	r	int	0	NIL-FOR	$ < n
13494	CMAESOptimizer.java	eye	r	int	0	NIL-FOR	$ < n
2025	CMAESOptimizer.java	eye	r	int	0	DEF	$ < m
13498	CMAESOptimizer.java	max	r	int	0	NIL-FOR	$ < m.getRowDimension()
13500	CMAESOptimizer.java	min	r	int	0	NIL-FOR	$ < m.getRowDimension()
13504	CMAESOptimizer.java	inverse	indices	int[]	0	NIL-FOR	i < $.length
13505	CMAESOptimizer.java	reverse	indices	int[]	0	NIL-FOR	i < $.length
13506	CMAESOptimizer.java	randn	size	int	0	NIL-FOR	i < $
14233	CanberraDistance.java	compute	a	double[]	0	NIL-FOR	i < $.length
1199	CauchyDistribution.java	CauchyDistribution	scale	double	0	NotStrictlyPositiveException	$ <= 0
1200	CauchyDistribution.java	inverseCumulativeProbability	p	double	1	OutOfRangeException	$ < 0
1200	CauchyDistribution.java	inverseCumulativeProbability	p	double	1	OutOfRangeException	$ > 1
1201	CauchyDistribution.java	inverseCumulativeProbability	p	double	1	DEF	$ == 0
1202	CauchyDistribution.java	inverseCumulativeProbability	p	double	1	DEF	$ == 1
13703	ChiSquareTest.java	chiSquare	observed	long[]	0	NIL-FOR	i < $.length
13704	ChiSquareTest.java	chiSquare	observed	long[]	0	NIL-FOR	i < $.length
2412	ChiSquareTest.java	chiSquare	rescale	boolean	1	DEF	$
2413	ChiSquareTest.java	chiSquareTest	alpha	double	0	OutOfRangeException	$ <= 0
13705	ChiSquareTest.java	chiSquare	row	int	0	NIL-FOR	$ < nRows
13705	ChiSquareTest.java	chiSquare	nRows	int	0	NIL-FOR	row < $
13706	ChiSquareTest.java	chiSquare	col	int	0	NIL-FOR	$ < nCols
13706	ChiSquareTest.java	chiSquare	nCols	int	0	NIL-FOR	col < $
13707	ChiSquareTest.java	chiSquare	row	int	0	NIL-FOR	$ < nRows
13707	ChiSquareTest.java	chiSquare	nRows	int	0	NIL-FOR	row < $
13708	ChiSquareTest.java	chiSquare	col	int	0	NIL-FOR	$ < nCols
13708	ChiSquareTest.java	chiSquare	nCols	int	0	NIL-FOR	col < $
2414	ChiSquareTest.java	chiSquareTest	alpha	double	0	OutOfRangeException	$ <= 0
13709	ChiSquareTest.java	chiSquareDataSetsComparison	observed1	long[]	0	NIL-FOR	i < $.length
2417	ChiSquareTest.java	chiSquareDataSetsComparison	countSum1	long	0	ZeroException	$ == 0
2417	ChiSquareTest.java	chiSquareDataSetsComparison	countSum2	long	0	ZeroException	$ == 0
2418	ChiSquareTest.java	chiSquareDataSetsComparison	unequalCounts	boolean	0	DEF	$
13710	ChiSquareTest.java	chiSquareDataSetsComparison	observed1	long[]	0	NIL-FOR	i < $.length
2420	ChiSquareTest.java	chiSquareDataSetsComparison	unequalCounts	boolean	1	DEF	$
2421	ChiSquareTest.java	chiSquareTestDataSetsComparison	alpha	double	0	OutOfRangeException	$ <= 0
12914	CholeskyDecomposition.java	CholeskyDecomposition	order	int	0	NIL-FOR	i < $
12915	CholeskyDecomposition.java	CholeskyDecomposition	order	int	0	NIL-FOR	j < $
12916	CholeskyDecomposition.java	CholeskyDecomposition	order	int	0	NIL-FOR	i < $
12918	CholeskyDecomposition.java	CholeskyDecomposition	order	int	0	NIL-FOR	p < $
3221	Chromosome.java	searchForFitnessUpdate	sameChromosome	Chromosome	0	DEF	$ != null
893	Complex.java	abs	THIS	Complex	0	RET	$.isNaN
898	Complex.java	add	THIS	Complex	0	RET	$.isNaN
898	Complex.java	add	addend	Complex	0	RET	$.isNaN
899	Complex.java	add	THIS	Complex	0	RET	$.isNaN
899	Complex.java	add	addend	double	0	RET	Double.isNaN($)
900	Complex.java	conjugate	THIS	Complex	0	RET	$.isNaN
901	Complex.java	divide	THIS	Complex	0	RET	$.isNaN
901	Complex.java	divide	divisor	Complex	0	RET	$.isNaN
902	Complex.java	divide	c	double	0	RET	$ == 0.0
902	Complex.java	divide	d	double	0	RET	$ == 0.0
905	Complex.java	divide	THIS	Complex	0	RET	$.isNaN
905	Complex.java	divide	divisor	double	0	RET	Double.isNaN($)
907	Complex.java	divide	divisor	double	0	RET	Double.isInfinite($)
908	Complex.java	reciprocal	THIS	Complex	0	RET	$.isNaN
912	Complex.java	equals	THIS	Complex	0	RET	$ == other
912	Complex.java	equals	other	Object	0	RET	this == $
914	Complex.java	equals	c	Complex	1	RET	$.isNaN
915	Complex.java	hashCode	THIS	Complex	0	RET	$.isNaN
916	Complex.java	multiply	THIS	Complex	0	RET	$.isNaN
916	Complex.java	multiply	factor	Complex	0	RET	$.isNaN
918	Complex.java	multiply	THIS	Complex	0	RET	$.isNaN
920	Complex.java	multiply	THIS	Complex	0	RET	$.isNaN
920	Complex.java	multiply	factor	double	0	RET	Double.isNaN($)
921	Complex.java	multiply	factor	double	0	RET	Double.isInfinite($)
922	Complex.java	negate	THIS	Complex	0	RET	$.isNaN
923	Complex.java	subtract	THIS	Complex	0	RET	$.isNaN
923	Complex.java	subtract	subtrahend	Complex	0	RET	$.isNaN
924	Complex.java	subtract	THIS	Complex	0	RET	$.isNaN
924	Complex.java	subtract	subtrahend	double	0	RET	Double.isNaN($)
925	Complex.java	acos	THIS	Complex	0	RET	$.isNaN
926	Complex.java	asin	THIS	Complex	0	RET	$.isNaN
927	Complex.java	atan	THIS	Complex	0	RET	$.isNaN
928	Complex.java	cos	THIS	Complex	0	RET	$.isNaN
929	Complex.java	cosh	THIS	Complex	0	RET	$.isNaN
930	Complex.java	exp	THIS	Complex	0	RET	$.isNaN
931	Complex.java	log	THIS	Complex	0	RET	$.isNaN
932	Complex.java	sin	THIS	Complex	0	RET	$.isNaN
933	Complex.java	sinh	THIS	Complex	0	RET	$.isNaN
934	Complex.java	sqrt	THIS	Complex	0	RET	$.isNaN
937	Complex.java	tan	THIS	Complex	0	RET	$.isNaN
940	Complex.java	tanh	THIS	Complex	0	RET	$.isNaN
943	Complex.java	nthRoot	n	int	0	NotPositiveException	$ <= 0
944	Complex.java	nthRoot	THIS	Complex	0	RET	$.isNaN
12453	Complex.java	nthRoot	k	int	0	NIL-FOR	$ < n
12453	Complex.java	nthRoot	n	int	0	NIL-FOR	k < $
946	Complex.java	valueOf	realPart	double	0	RET	Double.isNaN($)
946	Complex.java	valueOf	imaginaryPart	double	0	RET	Double.isNaN($)
947	Complex.java	valueOf	realPart	double	0	RET	Double.isNaN($)
877	ComplexFormat.java	ComplexFormat	format	NumberFormat	0	NullArgumentException	$ == null
878	ComplexFormat.java	ComplexFormat	imaginaryFormat	NumberFormat	0	NullArgumentException	$ == null
879	ComplexFormat.java	ComplexFormat	realFormat	NumberFormat	0	NullArgumentException	$ == null
880	ComplexFormat.java	ComplexFormat	imaginaryCharacter	String	0	NullArgumentException	$ == null
882	ComplexFormat.java	ComplexFormat	imaginaryFormat	NumberFormat	0	NullArgumentException	$ == null
883	ComplexFormat.java	ComplexFormat	realFormat	NumberFormat	0	NullArgumentException	$ == null
884	ComplexFormat.java	format	im	double	1	DEF	$ < 0.0
885	ComplexFormat.java	format	im	double	0	DEF	Double.isNaN($)
890	ComplexFormat.java	parse	re	Number	0	RET	$ == null
891	ComplexFormat.java	parse	im	Number	0	RET	$ == null
869	ComplexUtils.java	polar2Complex	r	double	0	MathIllegalArgumentException	$ < 0
12451	ComplexUtils.java	convertToComplex	real	double[]	0	NIL-FOR	i < $.length
505	CompositeFormat.java	parseNextCharacter	index	int	0	DEF	$ < n
12411	CompositeFormat.java	parseNextCharacter	index	int	0	NIL-DOWHILE	$ < n
506	CompositeFormat.java	parseNextCharacter	index	int	0	DEF	$ < n
12412	CompositeFormat.java	parseNumber	special	double[]	0	NIL-FOR	i < $.length
509	CompositeFormat.java	parseNumber	number	Number	0	DEF	$ != null
511	CompositeFormat.java	formatDouble	value	double	1	DEF	Double.isNaN($)
511	CompositeFormat.java	formatDouble	value	double	1	DEF	Double.isInfinite($)
1774	ConjugateGradient.java	solveInPlace	m	RealLinearOperator	1	DEF	$ == null
1776	ConjugateGradient.java	solveInPlace	m	RealLinearOperator	0	DEF	$ != null
98	ContinuedFraction.java	evaluate	hN	double	0	ConvergenceException	Double.isInfinite($)
99	ContinuedFraction.java	evaluate	hN	double	0	ConvergenceException	Double.isNaN($)
3567	ContinuousOutputModel.java	handleStep	isLast	boolean	0	DEF	$
3570	ContinuousOutputModel.java	setInterpolatedTime	location	int	1	DEF	$ < 0
3571	ContinuousOutputModel.java	setInterpolatedTime	location	int	1	DEF	$ > 0
14153	CorrelatedRandomVectorGenerator.java	CorrelatedRandomVectorGenerator	order	int	0	NIL-FOR	i < $
14155	CorrelatedRandomVectorGenerator.java	nextVector	correlated	double[]	0	NIL-FOR	i < $.length
13751	Covariance.java	computeCovarianceMatrix	i	int	0	NIL-FOR	$ < dimension
13751	Covariance.java	computeCovarianceMatrix	dimension	int	0	NIL-FOR	i < $
13752	Covariance.java	computeCovarianceMatrix	i	int	0	NIL-FOR	j < $
13753	Covariance.java	covariance	length	int	0	NIL-FOR	i < $
3261	DBSCANClusterer.java	DBSCANClusterer	minPts	int	0	NotPositiveException	$ < 0
3264	DBSCANClusterer.java	expandCluster	pStatus	PointStatus	0	DEF	$ == null
2438	DBSCANClusterer.java	DBSCANClusterer	minPts	int	0	NotPositiveException	$ < 0
2441	DBSCANClusterer.java	expandCluster	pStatus	PointStatus	0	DEF	$ == null
4143	DSCompiler.java	getCompiler	cache	DSCompiler[][]	0	RET	$ != null
4144	DSCompiler.java	getCompiler	cache	DSCompiler[][]	0	DEF	$ != null
14644	DSCompiler.java	getCompiler	cache	DSCompiler[][]	0	NIL-FOR	i < $.length
4146	DSCompiler.java	compileSizes	parameters	int	1	DEF	$ == 0
14647	DSCompiler.java	compileSizes	order	int	0	NIL-FOR	i < $
4147	DSCompiler.java	compileDerivativesIndirection	parameters	int	0	RET	$ == 0
4147	DSCompiler.java	compileDerivativesIndirection	order	int	0	RET	$ == 0
14648	DSCompiler.java	compileDerivativesIndirection	vSize	int	0	NIL-FOR	i < $
14649	DSCompiler.java	compileDerivativesIndirection	dSize	int	0	NIL-FOR	i < $
4148	DSCompiler.java	compileLowerIndirection	parameters	int	0	RET	$ == 0
14650	DSCompiler.java	compileLowerIndirection	dSize	int	0	NIL-FOR	i < $
4149	DSCompiler.java	compileMultiplicationIndirection	parameters	int	0	RET	$ == 0
4149	DSCompiler.java	compileMultiplicationIndirection	order	int	0	RET	$ == 0
14651	DSCompiler.java	compileMultiplicationIndirection	dSize	int	0	NIL-FOR	i < $
14652	DSCompiler.java	compileMultiplicationIndirection	dRow	int[][]	0	NIL-FOR	j < $.length
4152	DSCompiler.java	compileCompositionIndirection	parameters	int	0	RET	$ == 0
4152	DSCompiler.java	compileCompositionIndirection	order	int	0	RET	$ == 0
14655	DSCompiler.java	compileCompositionIndirection	dSize	int	0	NIL-FOR	i < $
14661	DSCompiler.java	compileCompositionIndirection	equals	boolean	0	NIL-FOR	$
4155	DSCompiler.java	compileCompositionIndirection	equals	boolean	0	DEF	$
14662	DSCompiler.java	getPartialDerivativeIndex	i	int	0	NIL-FOR	$ >= 0
14670	DSCompiler.java	multiply	mappingI	int[][]	0	NIL-FOR	j < $.length
14672	DSCompiler.java	pow	i	int	0	NIL-FOR	$ > 0
4158	DSCompiler.java	pow	n	int	0	RET	$ == 0
4159	DSCompiler.java	pow	n	int	1	DEF	$ > 0
14674	DSCompiler.java	pow	i	int	0	NIL-FOR	$ > 0
14684	DSCompiler.java	tan	k	int	0	NIL-FOR	$ >= 0
14686	DSCompiler.java	acos	k	int	0	NIL-FOR	$ >= 0
14688	DSCompiler.java	asin	k	int	0	NIL-FOR	$ >= 0
14690	DSCompiler.java	atan	k	int	0	NIL-FOR	$ >= 0
14691	DSCompiler.java	atan2	tmp2	double[]	0	NIL-FOR	i < $.length
14692	DSCompiler.java	atan2	tmp2	double[]	0	NIL-FOR	i < $.length
14696	DSCompiler.java	tanh	k	int	0	NIL-FOR	$ >= 0
14698	DSCompiler.java	acosh	k	int	0	NIL-FOR	$ >= 0
14700	DSCompiler.java	asinh	k	int	0	NIL-FOR	$ >= 0
14702	DSCompiler.java	atanh	k	int	0	NIL-FOR	$ >= 0
14704	DSCompiler.java	compose	mappingI	int[][]	0	NIL-FOR	j < $.length
14706	DSCompiler.java	taylor	i	int	0	NIL-FOR	$ >= 0
12418	Decimal64.java	linearCombination	a	Decimal64[]	0	NIL-FOR	i < $.length
12419	Decimal64.java	linearCombination	a	double[]	0	NIL-FOR	i < $.length
524	DefaultTransformer.java	transform	o	Object	0	NullArgumentException	$ == null
526	DefaultTransformer.java	equals	THIS	DefaultTransformer	0	RET	$ == other
526	DefaultTransformer.java	equals	other	Object	0	RET	this == $
4210	DerivativeStructure.java	DerivativeStructure	order	int	0	DEF	$ > 0
4213	DerivativeStructure.java	copySign	m	long	0	RET	$ >= 0
4213	DerivativeStructure.java	copySign	m	long	0	RET	$ < 0
4213	DerivativeStructure.java	copySign	s	long	0	RET	$ < 0
4213	DerivativeStructure.java	copySign	s	long	0	RET	$ >= 0
4214	DerivativeStructure.java	copySign	m	long	0	RET	$ < 0
4214	DerivativeStructure.java	copySign	m	long	0	RET	$ >= 0
4214	DerivativeStructure.java	copySign	s	long	0	RET	$ >= 0
4214	DerivativeStructure.java	copySign	s	long	0	RET	$ < 0
14717	DerivativeStructure.java	linearCombination	a	DerivativeStructure[]	0	NIL-FOR	i < $.length
14718	DerivativeStructure.java	linearCombination	b	DerivativeStructure[]	0	NIL-FOR	i < $.length
14719	DerivativeStructure.java	linearCombination	a	DerivativeStructure[]	0	NIL-FOR	i < $.length
14720	DerivativeStructure.java	linearCombination	b	DerivativeStructure[]	0	NIL-FOR	i < $.length
14721	DerivativeStructure.java	linearCombination	a	double[]	0	NIL-FOR	i < $.length
4220	DerivativeStructure.java	equals	THIS	DerivativeStructure	0	RET	$ == other
4220	DerivativeStructure.java	equals	other	Object	0	RET	this == $
2309	DescriptiveStatistics.java	DescriptiveStatistics	initialDoubleArray	double[]	0	DEF	$ != null
3611	Dfp.java	Dfp	x	long	1	DEF	$ < 0
14451	Dfp.java	Dfp	x	long	0	NIL-WHILE	$ != 0
3612	Dfp.java	Dfp	isLongMin	boolean	0	DEF	$
3615	Dfp.java	Dfp	x	double	0	RET	$ == 0
3619	Dfp.java	Dfp	x	double	1	DEF	$ < 0
3624	Dfp.java	Dfp	p	int	0	DEF	$ == -1
3628	Dfp.java	Dfp	negative	boolean	0	DEF	$
3631	Dfp.java	Dfp	decimalFound	boolean	0	DEF	$
3638	Dfp.java	Dfp	decimalFound	boolean	0	DEF	$
3641	Dfp.java	Dfp	decimalFound	boolean	0	DEF	$
3641	Dfp.java	Dfp	significantDigits	int	0	DEF	$ == 0
3642	Dfp.java	Dfp	decimalFound	boolean	0	DEF	$
14457	Dfp.java	Dfp	rsize	int	0	NIL-FOR	i < $
14458	Dfp.java	Dfp	i	int	0	NIL-FOR	$ >= 0
14459	Dfp.java	shiftLeft	i	int	0	NIL-FOR	$ > 0
3646	Dfp.java	align	adiff	int	0	DEF	$ < 0
3647	Dfp.java	align	diff	int	0	RET	$ == 0
14461	Dfp.java	align	adiff	int	0	NIL-FOR	i < $
3649	Dfp.java	align	diff	int	1	DEF	$ < 0
3650	Dfp.java	align	lostdigit	int	0	DEF	$ != 0
3651	Dfp.java	align	inexact	boolean	0	DEF	$
3653	Dfp.java	lessThan	THIS	Dfp	0	RET	$.isNaN()
3653	Dfp.java	lessThan	x	Dfp	0	RET	$.isNaN()
3655	Dfp.java	greaterThan	THIS	Dfp	0	RET	$.isNaN()
3655	Dfp.java	greaterThan	x	Dfp	0	RET	$.isNaN()
3656	Dfp.java	negativeOrNull	THIS	Dfp	0	RET	$.isNaN()
3657	Dfp.java	strictlyNegative	THIS	Dfp	0	RET	$.isNaN()
3658	Dfp.java	positiveOrNull	THIS	Dfp	0	RET	$.isNaN()
3659	Dfp.java	strictlyPositive	THIS	Dfp	0	RET	$.isNaN()
3660	Dfp.java	isZero	THIS	Dfp	0	RET	$.isNaN()
3662	Dfp.java	equals	THIS	Dfp	0	RET	$.isNaN()
3662	Dfp.java	equals	x	Dfp	0	RET	$.isNaN()
3663	Dfp.java	unequal	THIS	Dfp	0	RET	$.isNaN()
3663	Dfp.java	unequal	x	Dfp	0	RET	$.isNaN()
3667	Dfp.java	compare	a	Dfp	0	RET	$.nans == INFINITE
3668	Dfp.java	compare	b	Dfp	0	RET	$.nans == INFINITE
3669	Dfp.java	compare	a	Dfp	0	RET	$.nans == INFINITE
3669	Dfp.java	compare	b	Dfp	0	RET	$.nans == INFINITE
14462	Dfp.java	compare	i	int	0	NIL-FOR	$ >= 0
3676	Dfp.java	trunc	THIS	Dfp	0	RET	$.isNaN()
3677	Dfp.java	trunc	THIS	Dfp	0	RET	$.nans == INFINITE
3681	Dfp.java	trunc	changed	boolean	0	RET	$
3692	Dfp.java	power10	e	int	1	DEF	$ >= 0
3695	Dfp.java	add	THIS	Dfp	0	RET	$.isNaN()
3696	Dfp.java	add	x	Dfp	0	RET	$.isNaN()
3697	Dfp.java	add	THIS	Dfp	0	RET	$.nans == INFINITE
3698	Dfp.java	add	x	Dfp	0	RET	$.nans == INFINITE
3699	Dfp.java	add	THIS	Dfp	0	RET	$.nans == INFINITE
3699	Dfp.java	add	x	Dfp	0	RET	$.nans == INFINITE
3700	Dfp.java	add	THIS	Dfp	0	RET	$.nans == INFINITE
3700	Dfp.java	add	x	Dfp	0	RET	$.nans == INFINITE
3707	Dfp.java	add	rh	int	0	DEF	$ != 0
3708	Dfp.java	add	excp	int	0	DEF	$ != 0
3710	Dfp.java	add	i	int	0	DEF	$ == 0
3713	Dfp.java	add	excp	int	0	DEF	$ != 0
3714	Dfp.java	round	inc	boolean	0	DEF	$
3715	Dfp.java	round	rh	int	0	DEF	$ != 0
3718	Dfp.java	round	n	int	0	RET	$ != 0
3721	Dfp.java	multiply	THIS	Dfp	0	RET	$.isNaN()
3722	Dfp.java	multiply	x	Dfp	0	RET	$.isNaN()
3723	Dfp.java	multiply	THIS	Dfp	0	RET	$.nans == INFINITE
3724	Dfp.java	multiply	x	Dfp	0	RET	$.nans == INFINITE
3725	Dfp.java	multiply	THIS	Dfp	0	RET	$.nans == INFINITE
3725	Dfp.java	multiply	x	Dfp	0	RET	$.nans == INFINITE
3726	Dfp.java	multiply	THIS	Dfp	0	RET	$.nans == INFINITE
3726	Dfp.java	multiply	x	Dfp	0	RET	$.nans == INFINITE
14472	Dfp.java	multiply	i	int	0	NIL-FOR	$ >= 0
3730	Dfp.java	multiply	excp	int	0	DEF	$ != 0
3731	Dfp.java	multiply	x	int	1	RET	$ >= 0
3733	Dfp.java	multiplyFast	THIS	Dfp	0	RET	$.isNaN()
3734	Dfp.java	multiplyFast	THIS	Dfp	0	RET	$.nans == INFINITE
3734	Dfp.java	multiplyFast	x	int	0	RET	$ != 0
3735	Dfp.java	multiplyFast	THIS	Dfp	0	RET	$.nans == INFINITE
3735	Dfp.java	multiplyFast	x	int	0	RET	$ == 0
3736	Dfp.java	multiplyFast	x	int	0	RET	$ < 0
3737	Dfp.java	multiplyFast	rh	int	0	DEF	$ != 0
3739	Dfp.java	multiplyFast	excp	int	0	DEF	$ != 0
3742	Dfp.java	divide	THIS	Dfp	0	RET	$.isNaN()
3743	Dfp.java	divide	divisor	Dfp	0	RET	$.isNaN()
3744	Dfp.java	divide	THIS	Dfp	0	RET	$.nans == INFINITE
3745	Dfp.java	divide	divisor	Dfp	0	RET	$.nans == INFINITE
3746	Dfp.java	divide	THIS	Dfp	0	RET	$.nans == INFINITE
3746	Dfp.java	divide	divisor	Dfp	0	RET	$.nans == INFINITE
14476	Dfp.java	divide	qd	int	0	NIL-FOR	$ >= 0
14477	Dfp.java	divide	trialgood	boolean	0	NIL-WHILE	$
3748	Dfp.java	divide	rh	int	0	DEF	$ == 0
14480	Dfp.java	divide	i	int	0	NIL-FOR	$ >= 0
3754	Dfp.java	divide	nsqd	int	0	DEF	$ != 0
3754	Dfp.java	divide	trial	int	0	DEF	$ != 0
14482	Dfp.java	divide	i	int	0	NIL-FOR	$ >= 0
3760	Dfp.java	divide	excp	int	0	DEF	$ != 0
3762	Dfp.java	divide	THIS	Dfp	0	RET	$.isNaN()
3763	Dfp.java	divide	THIS	Dfp	0	RET	$.nans == INFINITE
3764	Dfp.java	divide	divisor	int	0	RET	$ == 0
3765	Dfp.java	divide	divisor	int	0	RET	$ < 0
14484	Dfp.java	divide	i	int	0	NIL-FOR	$ >= 0
3767	Dfp.java	divide	excp	int	0	DEF	$ != 0
3770	Dfp.java	sqrt	THIS	Dfp	0	RET	$.nans == INFINITE
3778	Dfp.java	toString	THIS	Dfp	1	RET	$.nans == INFINITE
14486	Dfp.java	dfp2sci	i	int	0	NIL-FOR	$ >= 0
3783	Dfp.java	dfp2sci	e	int	0	DEF	$ < 0
3784	Dfp.java	dfp2sci	e	int	0	DEF	$ < 0
14490	Dfp.java	dfp2sci	p	int	0	NIL-WHILE	$ > 0
3785	Dfp.java	dfp2string	e	int	0	DEF	$ <= 0
14491	Dfp.java	dfp2string	e	int	0	NIL-WHILE	$ < 0
14492	Dfp.java	dfp2string	i	int	0	NIL-FOR	$ >= 0
14493	Dfp.java	dfp2string	e	int	0	NIL-WHILE	$ > 0
3787	Dfp.java	dfp2string	pointInserted	boolean	0	DEF	$
3792	Dfp.java	dotrap	THIS	Dfp	0	DEF	$.nans == INFINITE
3793	Dfp.java	dotrap	THIS	Dfp	0	DEF	$.nans == INFINITE
3799	Dfp.java	nextAfter	up	boolean	1	DEF	$
3807	Dfp.java	toDouble	THIS	Dfp	0	RET	$.isNaN()
3808	Dfp.java	toDouble	cmp0	int	1	RET	$ == 0
3809	Dfp.java	toDouble	cmp0	int	0	DEF	$ < 0
3810	Dfp.java	toDouble	exponent	int	0	DEF	$ < 0
3816	Dfp.java	toDouble	negate	boolean	0	DEF	$
3817	Dfp.java	signum	THIS	Dfp	1	RET	$.isNaN()
3819	Dfp.java	copySign	sb	long	0	RET	$ < 0
3819	Dfp.java	copySign	sb	long	0	RET	$ >= 0
14498	Dfp.java	linearCombination	a	Dfp[]	0	NIL-FOR	i < $.length
14499	Dfp.java	linearCombination	a	double[]	0	NIL-FOR	i < $.length
3590	DfpDec.java	round	msb	int	0	RET	$ == 0
3592	DfpDec.java	round	lsbthreshold	int	1	DEF	$ == 1
14449	DfpDec.java	round	lsd	int	0	NIL-FOR	i < $
3593	DfpDec.java	round	inc	boolean	0	DEF	$
3594	DfpDec.java	round	rh	int	0	DEF	$ != 0
3597	DfpDec.java	round	discarded	int	0	RET	$ != 0
3597	DfpDec.java	round	n	int	0	RET	$ != 0
3602	DfpDec.java	nextAfter	up	boolean	1	DEF	$
3823	DfpField.java	DfpField	computeConstants	boolean	1	DEF	$
14500	DfpField.java	split	buf	char[]	0	NIL-FOR	i < $.length
3827	DfpField.java	split	leading	boolean	0	DEF	$
14501	DfpField.java	split	buf	char[]	0	NIL-FOR	i < $.length
3828	DfpField.java	split	sp	int	0	DEF	i < $
14509	DfpMath.java	split	buf	char[]	0	NIL-FOR	i < $.length
3853	DfpMath.java	split	leading	boolean	0	DEF	$
14510	DfpMath.java	split	buf	char[]	0	NIL-FOR	i < $.length
3854	DfpMath.java	split	sp	int	0	DEF	i < $
3856	DfpMath.java	splitPow	a	int	0	RET	$ == 0
3857	DfpMath.java	splitPow	a	int	0	DEF	$ < 0
3859	DfpMath.java	splitPow	invert	boolean	0	DEF	$
3860	DfpMath.java	pow	a	int	0	RET	$ == 0
3861	DfpMath.java	pow	a	int	0	DEF	$ < 0
3862	DfpMath.java	pow	invert	boolean	0	DEF	$
3866	DfpMath.java	log	a	Dfp	0	RET	$.isNaN()
3872	DfpMath.java	pow	x	Dfp	0	RET	$.isNaN()
3873	DfpMath.java	pow	x	Dfp	0	RET	$.isNaN()
3873	DfpMath.java	pow	y	Dfp	0	RET	$.isNaN()
3887	DfpMath.java	pow	invert	boolean	1	RET	$
3892	DfpMath.java	pow	invert	boolean	0	RET	$
3895	DfpMath.java	pow	invert	boolean	0	DEF	$
3901	DfpMath.java	sin	neg	boolean	0	DEF	$
3905	DfpMath.java	cos	neg	boolean	0	DEF	$
3910	DfpMath.java	atan	sub	boolean	0	DEF	$
3911	DfpMath.java	atan	recp	boolean	0	DEF	$
3912	DfpMath.java	atan	neg	boolean	0	DEF	$
3914	DfpMath.java	acos	negative	boolean	0	DEF	$
12718	DiagonalMatrix.java	add	i	int	0	NIL-FOR	$ < dim
12718	DiagonalMatrix.java	add	dim	int	0	NIL-FOR	i < $
12719	DiagonalMatrix.java	subtract	i	int	0	NIL-FOR	$ < dim
12719	DiagonalMatrix.java	subtract	dim	int	0	NIL-FOR	i < $
12720	DiagonalMatrix.java	multiply	i	int	0	NIL-FOR	$ < dim
12720	DiagonalMatrix.java	multiply	dim	int	0	NIL-FOR	i < $
12721	DiagonalMatrix.java	multiply	r	int	0	NIL-FOR	$ < nRows
12722	DiagonalMatrix.java	multiply	c	int	0	NIL-FOR	$ < nCols
12723	DiagonalMatrix.java	getData	i	int	0	NIL-FOR	$ < dim
12723	DiagonalMatrix.java	getData	dim	int	0	NIL-FOR	i < $
14562	DividedDifferenceInterpolator.java	computeDividedDifference	i	int	0	NIL-FOR	$ < n
14562	DividedDifferenceInterpolator.java	computeDividedDifference	n	int	0	NIL-FOR	i < $
14390	DormandPrince853StepInterpolator.java	writeExternal	i	int	0	NIL-FOR	$ < dimension
14390	DormandPrince853StepInterpolator.java	writeExternal	dimension	int	0	NIL-FOR	i < $
14391	DormandPrince853StepInterpolator.java	readExternal	i	int	0	NIL-FOR	$ < dimension
14391	DormandPrince853StepInterpolator.java	readExternal	dimension	int	0	NIL-FOR	i < $
14246	DoublePoint.java	DoublePoint	point	int[]	0	NIL-FOR	i < $.length
12806	EigenDecomposition.java	EigenDecomposition	size	int	0	NIL-FOR	i < $
12807	EigenDecomposition.java	getV	k	int	0	NIL-FOR	$ < m
12807	EigenDecomposition.java	getV	m	int	0	NIL-FOR	k < $
12809	EigenDecomposition.java	getVT	k	int	0	NIL-FOR	$ < m
12809	EigenDecomposition.java	getVT	m	int	0	NIL-FOR	k < $
1447	EigenDecomposition.java	getSquareRoot	eigen	double	0	MathUnsupportedOperationException	$ <= 0
12813	EigenDecomposition.java	findEigenVectors	i	int	0	NIL-FOR	$ < n
12813	EigenDecomposition.java	findEigenVectors	n	int	0	NIL-FOR	i < $
1451	EigenDecomposition.java	findEigenVectors	maxAbsoluteValue	double	0	DEF	$ != 0
12814	EigenDecomposition.java	findEigenVectors	i	int	0	NIL-FOR	$ < n
12814	EigenDecomposition.java	findEigenVectors	n	int	0	NIL-FOR	i < $
12815	EigenDecomposition.java	findEigenVectors	j	int	0	NIL-FOR	$ < n
12815	EigenDecomposition.java	findEigenVectors	n	int	0	NIL-FOR	j < $
1457	EigenDecomposition.java	findEigenVectors	q	double	1	DEF	$ < 0.0
12819	EigenDecomposition.java	findEigenVectors	ia	int	0	NIL-FOR	$ < n
1460	EigenDecomposition.java	findEigenVectors	t	double	0	DEF	$ == 0.0
12820	EigenDecomposition.java	findEigenVectors	i	int	0	NIL-FOR	$ < n
12820	EigenDecomposition.java	findEigenVectors	n	int	0	NIL-FOR	i < $
12821	EigenDecomposition.java	findEigenVectors	j	int	0	NIL-FOR	$ < n
12821	EigenDecomposition.java	findEigenVectors	n	int	0	NIL-FOR	j < $
12822	EigenDecomposition.java	findEigenVectors	j	int	0	NIL-FOR	$ < n
12822	EigenDecomposition.java	findEigenVectors	n	int	0	NIL-FOR	j < $
12823	EigenDecomposition.java	findEigenVectors	i	int	0	NIL-FOR	$ < n
12823	EigenDecomposition.java	findEigenVectors	n	int	0	NIL-FOR	i < $
12824	EigenDecomposition.java	findEigenVectors	i	int	0	NIL-FOR	$ < n
12824	EigenDecomposition.java	findEigenVectors	n	int	0	NIL-FOR	i < $
12825	EigenDecomposition.java	findEigenVectors	i	int	0	NIL-FOR	$ < n
12825	EigenDecomposition.java	findEigenVectors	n	int	0	NIL-FOR	i < $
12826	EigenDecomposition.java	findEigenVectors	j	int	0	NIL-FOR	$ < n
12826	EigenDecomposition.java	findEigenVectors	n	int	0	NIL-FOR	j < $
12828	EigenDecomposition.java	findEigenVectorsFromSchur	i	int	0	NIL-FOR	$ < n
12828	EigenDecomposition.java	findEigenVectorsFromSchur	n	int	0	NIL-FOR	i < $
12829	EigenDecomposition.java	findEigenVectorsFromSchur	j	int	0	NIL-FOR	$ < n
12829	EigenDecomposition.java	findEigenVectorsFromSchur	n	int	0	NIL-FOR	j < $
12830	EigenDecomposition.java	findEigenVectorsFromSchur	idx	int	0	NIL-FOR	$ >= 0
12831	EigenDecomposition.java	findEigenVectorsFromSchur	i	int	0	NIL-FOR	$ >= 0
12832	EigenDecomposition.java	findEigenVectorsFromSchur	idx	int	0	NIL-FOR	j <= $
12833	EigenDecomposition.java	findEigenVectorsFromSchur	idx	int	0	NIL-FOR	j <= $
1474	EigenDecomposition.java	findEigenVectorsFromSchur	q	double	0	DEF	$ < 0.0
12834	EigenDecomposition.java	findEigenVectorsFromSchur	i	int	0	NIL-FOR	$ >= 0
12835	EigenDecomposition.java	findEigenVectorsFromSchur	idx	int	0	NIL-FOR	j <= $
12836	EigenDecomposition.java	findEigenVectorsFromSchur	idx	int	0	NIL-FOR	j <= $
12837	EigenDecomposition.java	findEigenVectorsFromSchur	i	int	0	NIL-FOR	$ < n
12837	EigenDecomposition.java	findEigenVectorsFromSchur	n	int	0	NIL-FOR	i < $
12838	EigenDecomposition.java	findEigenVectorsFromSchur	j	int	0	NIL-FOR	$ < n
12838	EigenDecomposition.java	findEigenVectorsFromSchur	n	int	0	NIL-FOR	j < $
12839	EigenDecomposition.java	findEigenVectorsFromSchur	j	int	0	NIL-FOR	$ >= 0
12842	EigenDecomposition.java	findEigenVectorsFromSchur	i	int	0	NIL-FOR	$ < n
12842	EigenDecomposition.java	findEigenVectorsFromSchur	n	int	0	NIL-FOR	i < $
12843	EigenDecomposition.java	findEigenVectorsFromSchur	j	int	0	NIL-FOR	$ < n
12843	EigenDecomposition.java	findEigenVectorsFromSchur	n	int	0	NIL-FOR	j < $
3204	ElitisticListPopulation.java	setElitismRate	elitismRate	double	0	OutOfRangeException	$ > 1
3204	ElitisticListPopulation.java	setElitismRate	elitismRate	double	0	OutOfRangeException	$ < 0
3479	EmbeddedRungeKuttaIntegrator.java	integrate	firstTime	boolean	0	DEF	$
3480	EmbeddedRungeKuttaIntegrator.java	integrate	firstTime	boolean	0	DEF	$
14371	EmbeddedRungeKuttaIntegrator.java	integrate	scale	double[]	0	NIL-FOR	i < $.length
14372	EmbeddedRungeKuttaIntegrator.java	integrate	scale	double[]	0	NIL-FOR	i < $.length
3482	EmbeddedRungeKuttaIntegrator.java	integrate	forward	boolean	1	DEF	$
14373	EmbeddedRungeKuttaIntegrator.java	integrate	stages	int	0	NIL-FOR	k < $
14374	EmbeddedRungeKuttaIntegrator.java	integrate	y0	double[]	0	NIL-FOR	j < $.length
14375	EmbeddedRungeKuttaIntegrator.java	integrate	l	int	0	NIL-FOR	$ < k
14376	EmbeddedRungeKuttaIntegrator.java	integrate	y0	double[]	0	NIL-FOR	j < $.length
3488	EmbeddedRungeKuttaIntegrator.java	integrate	filteredNextIsLast	boolean	0	DEF	$
3126	EmpiricalDistribution.java	inverseCumulativeProbability	p	double	0	OutOfRangeException	$ < 0.0
3127	EmpiricalDistribution.java	inverseCumulativeProbability	p	double	0	RET	$ == 0.0
3129	EmpiricalDistribution.java	inverseCumulativeProbability	pCrit	double	0	RET	$ <= 0
1103	EnumeratedDistribution.java	EnumeratedDistribution	p	double	0	NotPositiveException	$ < 0
1104	EnumeratedDistribution.java	EnumeratedDistribution	p	double	0	NotFiniteNumberException	Double.isInfinite($)
1105	EnumeratedDistribution.java	EnumeratedDistribution	p	double	0	NotANumberException	Double.isNaN($)
1106	EnumeratedDistribution.java	probability	x	T	0	DEF	$ != null
1106	EnumeratedDistribution.java	probability	x	T	0	DEF	$ == null
1108	EnumeratedDistribution.java	sample	sampleSize	int	0	NotStrictlyPositiveException	$ <= 0
12483	EnumeratedDistribution.java	sample	sampleSize	int	0	NIL-FOR	i < $
1109	EnumeratedDistribution.java	sample	sampleSize	int	0	NotStrictlyPositiveException	$ <= 0
1110	EnumeratedDistribution.java	sample	array	T[]	0	NullArgumentException	$ == null
12484	EnumeratedDistribution.java	sample	sampleSize	int	0	NIL-FOR	i < $
12485	EnumeratedIntegerDistribution.java	EnumeratedIntegerDistribution	singletons	int[]	0	NIL-FOR	i < $.length
12507	EnumeratedRealDistribution.java	EnumeratedRealDistribution	singletons	double[]	0	NIL-FOR	i < $.length
3305	Erf.java	erfInv	w	double	1	DEF	Double.isInfinite($)
13720	EuclideanDoublePoint.java	centroidOf	centroid	double[]	0	NIL-FOR	i < $.length
13721	EuclideanDoublePoint.java	centroidOf	centroid	double[]	0	NIL-FOR	i < $.length
13732	EuclideanIntegerPoint.java	centroidOf	centroid	int[]	0	NIL-FOR	i < $.length
13733	EuclideanIntegerPoint.java	centroidOf	centroid	int[]	0	NIL-FOR	i < $.length
14438	EventFilter.java	g	i	int	0	NIL-FOR	$ > 0
14440	EventState.java	evaluateStep	i	int	0	NIL-FOR	$ < n
14440	EventState.java	evaluateStep	n	int	0	NIL-FOR	i < $
14269	ExceptionContext.java	buildMessage	len	int	0	NIL-FOR	i < $
14270	ExceptionContext.java	serializeMessages	len	int	0	NIL-FOR	i < $
14271	ExceptionContext.java	serializeMessages	aLen	int	0	NIL-FOR	j < $
14272	ExceptionContext.java	deSerializeMessages	len	int	0	NIL-FOR	i < $
14273	ExceptionContext.java	deSerializeMessages	aLen	int	0	NIL-FOR	j < $
14274	ExceptionContext.java	deSerializeContext	len	int	0	NIL-FOR	i < $
14446	ExpandableStatefulODE.java	getSecondaryMappers	mappers	EquationsMapper[]	0	NIL-FOR	i < $.length
1148	ExponentialDistribution.java	ExponentialDistribution	mean	double	0	NotStrictlyPositiveException	$ <= 0
1149	ExponentialDistribution.java	density	x	double	0	RET	$ < 0
1151	ExponentialDistribution.java	inverseCumulativeProbability	p	double	1	OutOfRangeException	$ < 0.0
1206	FDistribution.java	FDistribution	numeratorDegreesOfFreedom	double	0	NotStrictlyPositiveException	$ <= 0
1207	FDistribution.java	FDistribution	denominatorDegreesOfFreedom	double	0	NotStrictlyPositiveException	$ <= 0
1208	FDistribution.java	cumulativeProbability	x	double	1	DEF	$ <= 0
3365	FastCosineTransformer.java	fct	n	int	0	RET	$ == 1
14289	FastFourierTransformer.java	bitReversalShuffle2	i	int	0	NIL-FOR	$ < n
14289	FastFourierTransformer.java	bitReversalShuffle2	n	int	0	NIL-FOR	i < $
3377	FastFourierTransformer.java	bitReversalShuffle2	j	int	0	DEF	i < $
14290	FastFourierTransformer.java	bitReversalShuffle2	k	int	0	NIL-WHILE	$ > 0
14291	FastFourierTransformer.java	normalizeTransformedData	i	int	0	NIL-FOR	$ < n
14291	FastFourierTransformer.java	normalizeTransformedData	n	int	0	NIL-FOR	i < $
14292	FastFourierTransformer.java	normalizeTransformedData	i	int	0	NIL-FOR	$ < n
14292	FastFourierTransformer.java	normalizeTransformedData	n	int	0	NIL-FOR	i < $
3382	FastFourierTransformer.java	transformInPlace	n	int	1	RET	$ == 1
14293	FastFourierTransformer.java	transformInPlace	i0	int	0	NIL-FOR	$ < n
14294	FastFourierTransformer.java	transformInPlace	i0	int	0	NIL-FOR	$ < n
14295	FastFourierTransformer.java	transformInPlace	lastN0	int	0	NIL-WHILE	$ < n
14296	FastFourierTransformer.java	transformInPlace	destEvenStartIndex	int	0	NIL-FOR	$ < n
14298	FastFourierTransformer.java	mdfft	dimensionSize	int[]	0	NIL-FOR	i < $.length
14281	FastHadamardTransformer.java	fht	j	int	0	NIL-FOR	$ < n
14281	FastHadamardTransformer.java	fht	n	int	0	NIL-FOR	j < $
14282	FastHadamardTransformer.java	fht	halfN	int	0	NIL-FOR	i < $
14283	FastHadamardTransformer.java	fht	i	int	0	NIL-FOR	$ < n
14283	FastHadamardTransformer.java	fht	n	int	0	NIL-FOR	i < $
14284	FastHadamardTransformer.java	fht	j	int	0	NIL-FOR	$ < n
14284	FastHadamardTransformer.java	fht	n	int	0	NIL-FOR	j < $
14285	FastHadamardTransformer.java	fht	halfN	int	0	NIL-FOR	i < $
14286	FastHadamardTransformer.java	fht	i	int	0	NIL-FOR	$ < n
14286	FastHadamardTransformer.java	fht	n	int	0	NIL-FOR	i < $
268	FastMath.java	cosh	x	double	0	DEF	$ < 0.0
274	FastMath.java	sinh	x	double	0	RET	$ == 0
275	FastMath.java	sinh	x	double	0	DEF	$ < 0.0
277	FastMath.java	sinh	negate	boolean	0	DEF	$
281	FastMath.java	tanh	x	double	0	RET	$ == 0
282	FastMath.java	tanh	x	double	0	DEF	$ < 0.0
284	FastMath.java	tanh	negate	boolean	0	DEF	$
285	FastMath.java	asinh	a	double	0	DEF	$ < 0
290	FastMath.java	atanh	a	double	0	DEF	$ < 0
295	FastMath.java	exp	x	double	1	RET	$ < 0.0
297	FastMath.java	exp	hiPrec	double[]	0	DEF	$ != null
299	FastMath.java	exp	hiPrec	double[]	0	DEF	$ != null
301	FastMath.java	exp	hiPrec	double[]	0	DEF	$ != null
303	FastMath.java	exp	hiPrec	double[]	0	DEF	$ != null
305	FastMath.java	exp	hiPrec	double[]	0	DEF	$ != null
306	FastMath.java	expm1	x	double	0	RET	$ == 0.0
309	FastMath.java	expm1	x	double	0	DEF	$ < 0.0
310	FastMath.java	expm1	negative	boolean	0	DEF	$
311	FastMath.java	expm1	hiPrecOut	double	0	DEF	$ != null
314	FastMath.java	log	hiPrec	double[]	0	DEF	$ != null
316	FastMath.java	log	hiPrec	double[]	0	DEF	$ != null
318	FastMath.java	log	x	double	0	RET	$ == 0
319	FastMath.java	log	hiPrec	double[]	0	DEF	$ != null
320	FastMath.java	log	exp	int	0	RET	$ == -1
320	FastMath.java	log	exp	int	0	RET	$ == 0
320	FastMath.java	log	hiPrec	double[]	0	RET	$ == null
12406	FastMath.java	log	i	int	0	NIL-FOR	$ >= 0
321	FastMath.java	log	hiPrec	double[]	1	DEF	$ != null
12407	FastMath.java	log	i	int	0	NIL-FOR	$ >= 0
322	FastMath.java	log	hiPrec	double[]	0	DEF	$ != null
323	FastMath.java	log1p	x	double	0	RET	$ == -1
326	FastMath.java	log1p	lores	double	0	RET	Double.isInfinite($)
327	FastMath.java	log10	lores	double	0	RET	Double.isInfinite($)
328	FastMath.java	pow	y	double	0	RET	$ == 0.0
330	FastMath.java	pow	x	double	0	RET	$ == 0
332	FastMath.java	pow	y	double	0	RET	$ < 0
333	FastMath.java	pow	y	double	0	RET	$ > 0
334	FastMath.java	pow	y	double	0	RET	$ < 0
335	FastMath.java	pow	y	double	0	RET	$ > 0
338	FastMath.java	pow	y	double	1	RET	$ < 0.0
344	FastMath.java	pow	y	double	0	RET	$ < 0
346	FastMath.java	pow	y	double	0	RET	$ > 0
351	FastMath.java	pow	x	double	0	RET	$ < 0
355	FastMath.java	pow	lores	double	0	RET	Double.isInfinite($)
356	FastMath.java	pow	e	int	1	RET	$ == 0
357	FastMath.java	pow	e	int	0	DEF	$ < 0
12408	FastMath.java	pow	e	int	0	NIL-WHILE	$ != 0
360	FastMath.java	tanQ	cotanFlag	boolean	0	DEF	$
362	FastMath.java	tanQ	cotanFlag	boolean	0	DEF	$
363	FastMath.java	reducePayneHanek	shift	int	1	DEF	$ != 0
364	FastMath.java	reducePayneHanek	bita	boolean	0	DEF	$
364	FastMath.java	reducePayneHanek	bita	boolean	0	DEF	$
364	FastMath.java	reducePayneHanek	bitb	boolean	0	DEF	$
364	FastMath.java	reducePayneHanek	bitb	boolean	0	DEF	$
364	FastMath.java	reducePayneHanek	bitsum	boolean	0	DEF	$
365	FastMath.java	reducePayneHanek	bita	boolean	0	DEF	$
365	FastMath.java	reducePayneHanek	bita	boolean	0	DEF	$
365	FastMath.java	reducePayneHanek	bitb	boolean	0	DEF	$
365	FastMath.java	reducePayneHanek	bitb	boolean	0	DEF	$
365	FastMath.java	reducePayneHanek	bitsum	boolean	0	DEF	$
366	FastMath.java	reducePayneHanek	bita	boolean	0	DEF	$
366	FastMath.java	reducePayneHanek	bita	boolean	0	DEF	$
366	FastMath.java	reducePayneHanek	bitb	boolean	0	DEF	$
366	FastMath.java	reducePayneHanek	bitb	boolean	0	DEF	$
366	FastMath.java	reducePayneHanek	bitsum	boolean	0	DEF	$
367	FastMath.java	reducePayneHanek	bita	boolean	0	DEF	$
367	FastMath.java	reducePayneHanek	bita	boolean	0	DEF	$
367	FastMath.java	reducePayneHanek	bitb	boolean	0	DEF	$
367	FastMath.java	reducePayneHanek	bitb	boolean	0	DEF	$
367	FastMath.java	reducePayneHanek	bitsum	boolean	0	DEF	$
368	FastMath.java	reducePayneHanek	bita	boolean	0	DEF	$
368	FastMath.java	reducePayneHanek	bita	boolean	0	DEF	$
368	FastMath.java	reducePayneHanek	bitb	boolean	0	DEF	$
368	FastMath.java	reducePayneHanek	bitb	boolean	0	DEF	$
368	FastMath.java	reducePayneHanek	bitsum	boolean	0	DEF	$
369	FastMath.java	reducePayneHanek	bita	boolean	0	DEF	$
369	FastMath.java	reducePayneHanek	bita	boolean	0	DEF	$
369	FastMath.java	reducePayneHanek	bitb	boolean	0	DEF	$
369	FastMath.java	reducePayneHanek	bitb	boolean	0	DEF	$
369	FastMath.java	reducePayneHanek	bitsum	boolean	0	DEF	$
370	FastMath.java	reducePayneHanek	bita	boolean	0	DEF	$
370	FastMath.java	reducePayneHanek	bita	boolean	0	DEF	$
370	FastMath.java	reducePayneHanek	bitb	boolean	0	DEF	$
370	FastMath.java	reducePayneHanek	bitb	boolean	0	DEF	$
370	FastMath.java	reducePayneHanek	bitsum	boolean	0	DEF	$
371	FastMath.java	sin	x	double	0	DEF	$ < 0
372	FastMath.java	sin	xa	double	0	RET	$ == 0.0
373	FastMath.java	sin	bits	long	0	RET	$ < 0
377	FastMath.java	sin	negative	boolean	0	DEF	$
378	FastMath.java	cos	x	double	0	DEF	$ < 0
382	FastMath.java	tan	x	double	0	DEF	$ < 0
383	FastMath.java	tan	xa	double	0	RET	$ == 0.0
384	FastMath.java	tan	bits	long	0	RET	$ < 0
390	FastMath.java	tan	negative	boolean	0	DEF	$
391	FastMath.java	atan	xa	double	0	RET	$ == 0.0
392	FastMath.java	atan	xa	double	0	DEF	$ < 0
395	FastMath.java	atan	idx	int	1	DEF	$ == 0
396	FastMath.java	atan	leftPlane	boolean	0	DEF	$
399	FastMath.java	atan2	y	double	0	RET	$ == 0
400	FastMath.java	atan2	invx	double	0	RET	$ == 0
401	FastMath.java	atan2	x	double	1	RET	$ > 0
402	FastMath.java	atan2	invx	double	1	RET	$ < 0
402	FastMath.java	atan2	x	double	1	RET	$ < 0
403	FastMath.java	atan2	invy	double	1	RET	$ < 0
403	FastMath.java	atan2	y	double	1	RET	$ < 0
411	FastMath.java	atan2	y	double	0	RET	$ > 0
412	FastMath.java	atan2	y	double	0	RET	$ < 0
415	FastMath.java	atan2	y	double	0	RET	$ < 0
416	FastMath.java	atan2	x	double	0	RET	$ == 0
417	FastMath.java	atan2	y	double	0	RET	$ > 0
418	FastMath.java	atan2	y	double	0	RET	$ < 0
419	FastMath.java	atan2	r	double	0	RET	Double.isInfinite($)
420	FastMath.java	atan2	ra	double	0	DEF	$ == 0
425	FastMath.java	asin	x	double	0	RET	$ == 0.0
430	FastMath.java	acos	x	double	0	RET	$ == 0
431	FastMath.java	acos	r	double	0	RET	Double.isInfinite($)
433	FastMath.java	cbrt	x	double	0	RET	$ == 0
435	FastMath.java	cbrt	subnormal	boolean	0	DEF	$
436	FastMath.java	toRadians	x	double	0	RET	Double.isInfinite($)
436	FastMath.java	toRadians	x	double	0	RET	$ == 0.0
437	FastMath.java	toRadians	result	double	0	DEF	$ == 0
438	FastMath.java	toDegrees	x	double	0	RET	Double.isInfinite($)
438	FastMath.java	toDegrees	x	double	0	RET	$ == 0.0
439	FastMath.java	ulp	x	double	0	RET	Double.isInfinite($)
442	FastMath.java	scalb	d	double	0	RET	$ == 0
442	FastMath.java	scalb	d	double	0	RET	Double.isInfinite($)
442	FastMath.java	scalb	d	double	0	RET	Double.isNaN($)
445	FastMath.java	scalb	n	int	1	RET	$ < 0
446	FastMath.java	scalb	scaledExponent	int	1	RET	$ > 0
448	FastMath.java	scalb	mostSignificantLostBit	long	0	DEF	$ != 0
449	FastMath.java	scalb	exponent	int	1	RET	$ == 0
456	FastMath.java	scalb	n	int	1	RET	$ < 0
457	FastMath.java	scalb	scaledExponent	int	1	RET	$ > 0
459	FastMath.java	scalb	mostSignificantLostBit	int	0	DEF	$ != 0
460	FastMath.java	scalb	exponent	int	1	RET	$ == 0
463	FastMath.java	nextAfter	d	double	1	RET	Double.isNaN($)
463	FastMath.java	nextAfter	direction	double	1	RET	Double.isNaN($)
465	FastMath.java	nextAfter	d	double	1	RET	Double.isInfinite($)
466	FastMath.java	nextAfter	d	double	0	RET	$ == 0
468	FastMath.java	nextAfter	f	float	1	RET	Double.isNaN($)
468	FastMath.java	nextAfter	direction	double	1	RET	Double.isNaN($)
475	FastMath.java	floor	x	double	0	DEF	$ < 0
476	FastMath.java	floor	y	long	0	RET	$ == 0
479	FastMath.java	ceil	y	double	0	RET	$ == 0
499	FastMath.java	hypot	x	double	1	RET	Double.isInfinite($)
499	FastMath.java	hypot	y	double	1	RET	Double.isInfinite($)
500	FastMath.java	hypot	x	double	1	RET	Double.isNaN($)
500	FastMath.java	hypot	y	double	1	RET	Double.isNaN($)
12394	FastMathCalc.java	slowCos	i	int	0	NIL-FOR	$ >= 0
176	FastMathCalc.java	slowCos	result	double	0	DEF	$ != null
12395	FastMathCalc.java	slowSin	i	int	0	NIL-FOR	$ >= 0
179	FastMathCalc.java	slowSin	result	double	0	DEF	$ != null
12396	FastMathCalc.java	slowexp	i	int	0	NIL-FOR	$ >= 0
180	FastMathCalc.java	slowexp	result	double	0	DEF	$ != null
12398	FastMathCalc.java	expint	p	int	0	NIL-WHILE	$ > 0
186	FastMathCalc.java	expint	result	double	0	DEF	$ != null
12399	FastMathCalc.java	slowLog	i	int	0	NIL-FOR	$ >= 0
3376	FastSineTransformer.java	fst	n	int	0	RET	$ == 1
14578	FieldHermiteInterpolator.java	addSamplePoint	value	T[]	0	NIL-FOR	i < $.length
3990	FieldHermiteInterpolator.java	addSamplePoint	i	int	0	DEF	$ > 1
14579	FieldHermiteInterpolator.java	addSamplePoint	y	T[]	0	NIL-FOR	j < $.length
14580	FieldHermiteInterpolator.java	addSamplePoint	j	int	0	NIL-FOR	$ < n
14580	FieldHermiteInterpolator.java	addSamplePoint	n	int	0	NIL-FOR	j < $
14584	FieldHermiteInterpolator.java	derivatives	order	int	0	NIL-FOR	i < $
14586	FieldHermiteInterpolator.java	derivatives	j	int	0	NIL-FOR	$ >= 0
3994	FieldHermiteInterpolator.java	derivatives	j	int	0	DEF	$ > 0
13035	FieldLUDecomposition.java	FieldLUDecomposition	row	int	0	NIL-FOR	$ < m
13035	FieldLUDecomposition.java	FieldLUDecomposition	m	int	0	NIL-FOR	row < $
13036	FieldLUDecomposition.java	FieldLUDecomposition	col	int	0	NIL-FOR	$ < m
13036	FieldLUDecomposition.java	FieldLUDecomposition	m	int	0	NIL-FOR	col < $
13037	FieldLUDecomposition.java	FieldLUDecomposition	col	int	0	NIL-FOR	row < $
13038	FieldLUDecomposition.java	FieldLUDecomposition	row	int	0	NIL-FOR	i < $
13039	FieldLUDecomposition.java	FieldLUDecomposition	row	int	0	NIL-FOR	$ < m
13039	FieldLUDecomposition.java	FieldLUDecomposition	m	int	0	NIL-FOR	row < $
13040	FieldLUDecomposition.java	FieldLUDecomposition	col	int	0	NIL-FOR	i < $
13041	FieldLUDecomposition.java	FieldLUDecomposition	i	int	0	NIL-FOR	$ < m
13041	FieldLUDecomposition.java	FieldLUDecomposition	m	int	0	NIL-FOR	i < $
13042	FieldLUDecomposition.java	FieldLUDecomposition	row	int	0	NIL-FOR	$ < m
13042	FieldLUDecomposition.java	FieldLUDecomposition	m	int	0	NIL-FOR	row < $
13043	FieldLUDecomposition.java	getL	i	int	0	NIL-FOR	$ < m
13043	FieldLUDecomposition.java	getL	m	int	0	NIL-FOR	i < $
13044	FieldLUDecomposition.java	getL	i	int	0	NIL-FOR	j < $
13045	FieldLUDecomposition.java	getU	i	int	0	NIL-FOR	$ < m
13045	FieldLUDecomposition.java	getU	m	int	0	NIL-FOR	i < $
13046	FieldLUDecomposition.java	getU	j	int	0	NIL-FOR	$ < m
13046	FieldLUDecomposition.java	getU	m	int	0	NIL-FOR	j < $
13047	FieldLUDecomposition.java	getP	i	int	0	NIL-FOR	$ < m
13047	FieldLUDecomposition.java	getP	m	int	0	NIL-FOR	i < $
13048	FieldLUDecomposition.java	getDeterminant	i	int	0	NIL-FOR	$ < m
13048	FieldLUDecomposition.java	getDeterminant	m	int	0	NIL-FOR	i < $
665	FieldRotation.java	FieldRotation	needsNormalization	boolean	1	DEF	$
780	FieldVector3D.java	orthogonal	threshold	double	0	MathArithmeticException	$ == 0
789	FieldVector3D.java	equals	THIS	FieldVector3D	0	RET	$ == other
789	FieldVector3D.java	equals	other	Object	0	RET	this == $
791	FieldVector3D.java	equals	rhs	FieldVector3D<T>	0	RET	$.isNaN()
792	FieldVector3D.java	hashCode	THIS	FieldVector3D	0	RET	$.isNaN()
4206	FiniteDifferencesDifferentiator.java	FiniteDifferencesDifferentiator	stepSize	double	0	NotPositiveException	$ <= 0
14709	FiniteDifferencesDifferentiator.java	evaluate	i	int	0	NIL-FOR	j <= $
4208	FiniteDifferencesDifferentiator.java	evaluate	i	int	1	DEF	$ == 0
3251	FixedElapsedTime.java	FixedElapsedTime	maxTime	long	0	NumberIsTooSmallException	$ < 0
3237	FixedGenerationCount.java	FixedGenerationCount	maxGenerations	int	0	NumberIsTooSmallException	$ <= 0
12458	Fraction.java	Fraction	stop	boolean	0	NIL-DOWHILE	$
1033	Fraction.java	Fraction	den	int	0	MathArithmeticException	$ == 0
1034	Fraction.java	Fraction	den	int	0	MathArithmeticException	$ < 0
1036	Fraction.java	Fraction	d	int	0	DEF	$ > 1
1037	Fraction.java	Fraction	den	int	0	DEF	$ < 0
1039	Fraction.java	equals	THIS	Fraction	0	RET	$ == other
1039	Fraction.java	equals	other	Object	0	RET	this == $
1042	Fraction.java	addSub	fraction	Fraction	0	NullArgumentException	$ == null
1047	Fraction.java	multiply	fraction	Fraction	0	NullArgumentException	$ == null
1049	Fraction.java	divide	fraction	Fraction	0	NullArgumentException	$ == null
1051	Fraction.java	getReducedFraction	denominator	int	0	MathArithmeticException	$ == 0
1054	Fraction.java	getReducedFraction	denominator	int	0	MathArithmeticException	$ < 0
1014	FractionFormat.java	parse	num	Number	0	RET	$ == null
1015	FractionFormat.java	parse	den	Number	0	RET	$ == null
13770	Frequency.java	toString	iter	Iterator<Comparable<?>>	0	NIL-WHILE	$.hasNext()
2504	Frequency.java	incrementValue	count	Long	1	DEF	$ == null
13771	Frequency.java	getSumFreq	iterator	Iterator<Long>	0	NIL-WHILE	$.hasNext()
2506	Frequency.java	getCount	count	Long	0	DEF	$ != null
2507	Frequency.java	getPct	sumFreq	long	0	RET	$ == 0
2510	Frequency.java	getCumFreq	c	Comparator<Comparable<?>>	0	DEF	$ == null
2511	Frequency.java	getCumFreq	value	Long	0	DEF	$ != null
13772	Frequency.java	getCumFreq	values	Iterator<Comparable<?>>	0	NIL-WHILE	$.hasNext()
2515	Frequency.java	getCumPct	sumFreq	long	0	RET	$ == 0
13773	Frequency.java	merge	iter	Iterator<Entry<Comparable<?>,Long>>	0	NIL-WHILE	$.hasNext()
2516	Frequency.java	equals	obj	Object	0	RET	this == $
4141	FunctionUtils.java	sample	n	int	0	NotStrictlyPositiveException	$ <= 0
14640	FunctionUtils.java	sample	i	int	0	NIL-FOR	$ < n
14640	FunctionUtils.java	sample	n	int	0	NIL-FOR	i < $
3297	FuzzyKMeansClusterer.java	cluster	size	int	0	NumberIsTooSmallException	$ < k
3298	FuzzyKMeansClusterer.java	cluster	size	int	0	RET	$ == 0
14247	FuzzyKMeansClusterer.java	cluster	i	int	0	NIL-FOR	$ < k
14253	FuzzyKMeansClusterer.java	initializeMembershipMatrix	j	int	0	NIL-FOR	$ < k
13711	GTest.java	g	observed	long[]	0	NIL-FOR	i < $.length
13712	GTest.java	g	observed	long[]	0	NIL-FOR	i < $.length
2427	GTest.java	gTest	alpha	double	0	OutOfRangeException	$ <= 0
13713	GTest.java	entropy	k	long[][]	0	NIL-FOR	i < $.length
13715	GTest.java	entropy	k	long[][]	0	NIL-FOR	i < $.length
13717	GTest.java	entropy	k	long[]	0	NIL-FOR	i < $.length
13718	GTest.java	entropy	k	long[]	0	NIL-FOR	i < $.length
13719	GTest.java	gDataSetsComparison	observed1	long[]	0	NIL-FOR	i < $.length
2433	GTest.java	gDataSetsComparison	countSum1	long	0	ZeroException	$ == 0
2433	GTest.java	gDataSetsComparison	countSum2	long	0	ZeroException	$ == 0
2435	GTest.java	gTestDataSetsComparison	alpha	double	0	OutOfRangeException	$ <= 0
3329	Gamma.java	logGamma	x	double	1	DEF	Double.isNaN($)
14264	Gamma.java	logGamma	n	int	0	NIL-FOR	i <= $
3333	Gamma.java	regularizedGammaP	a	double	1	DEF	Double.isNaN($)
3333	Gamma.java	regularizedGammaP	x	double	1	DEF	Double.isNaN($)
3333	Gamma.java	regularizedGammaP	x	double	1	DEF	$ < 0.0
3334	Gamma.java	regularizedGammaP	x	double	1	DEF	$ == 0.0
3337	Gamma.java	regularizedGammaP	sum	double	1	DEF	Double.isInfinite($)
3338	Gamma.java	regularizedGammaQ	a	double	1	DEF	Double.isNaN($)
3338	Gamma.java	regularizedGammaQ	x	double	1	DEF	$ < 0.0
3338	Gamma.java	regularizedGammaQ	x	double	1	DEF	Double.isNaN($)
3339	Gamma.java	regularizedGammaQ	x	double	1	DEF	$ == 0.0
3341	Gamma.java	digamma	x	double	0	RET	$ > 0
3343	Gamma.java	trigamma	x	double	0	RET	$ > 0
14266	Gamma.java	lanczos	i	int	0	NIL-FOR	$ > 0
3347	Gamma.java	invGamma1pm1	t	double	1	DEF	$ < 0.0
1257	GammaDistribution.java	GammaDistribution	shape	double	0	NotStrictlyPositiveException	$ <= 0
1258	GammaDistribution.java	GammaDistribution	scale	double	0	NotStrictlyPositiveException	$ <= 0
1259	GammaDistribution.java	density	x	double	0	RET	$ < 0
1261	GammaDistribution.java	cumulativeProbability	x	double	1	DEF	$ <= 0
1266	GammaDistribution.java	sample	v	double	0	DEF	$ <= 0
14777	GaussIntegratorFactory.java	transform	points	double[]	0	NIL-FOR	i < $.length
3103	GaussNewtonOptimizer.java	doOptimize	checker	ConvergenceChecker<PointVectorValuePair>	0	NullArgumentException	$ == null
14146	GaussNewtonOptimizer.java	doOptimize	nR	int	0	NIL-FOR	i < $
14147	GaussNewtonOptimizer.java	doOptimize	converged	boolean	0	NIL-FOR	$
14148	GaussNewtonOptimizer.java	doOptimize	nR	int	0	NIL-FOR	i < $
14149	GaussNewtonOptimizer.java	doOptimize	j	int	0	NIL-FOR	$ < nC
14149	GaussNewtonOptimizer.java	doOptimize	nC	int	0	NIL-FOR	j < $
14150	GaussNewtonOptimizer.java	doOptimize	k	int	0	NIL-FOR	$ < nC
14150	GaussNewtonOptimizer.java	doOptimize	nC	int	0	NIL-FOR	k < $
14151	GaussNewtonOptimizer.java	doOptimize	l	int	0	NIL-FOR	$ < nC
3104	GaussNewtonOptimizer.java	doOptimize	previous	PointVectorValuePair	0	RET	$ != null
3105	GaussNewtonOptimizer.java	doOptimize	converged	boolean	0	RET	$
14152	GaussNewtonOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < nC
14152	GaussNewtonOptimizer.java	doOptimize	nC	int	0	NIL-FOR	i < $
1963	GaussNewtonOptimizer.java	doOptimize	checker	ConvergenceChecker<PointVectorValuePair>	0	NullArgumentException	$ == null
13440	GaussNewtonOptimizer.java	doOptimize	nR	int	0	NIL-FOR	i < $
13441	GaussNewtonOptimizer.java	doOptimize	converged	boolean	0	NIL-FOR	$
13442	GaussNewtonOptimizer.java	doOptimize	nR	int	0	NIL-FOR	i < $
13443	GaussNewtonOptimizer.java	doOptimize	j	int	0	NIL-FOR	$ < nC
13443	GaussNewtonOptimizer.java	doOptimize	nC	int	0	NIL-FOR	j < $
13444	GaussNewtonOptimizer.java	doOptimize	k	int	0	NIL-FOR	$ < nC
13444	GaussNewtonOptimizer.java	doOptimize	nC	int	0	NIL-FOR	k < $
13445	GaussNewtonOptimizer.java	doOptimize	l	int	0	NIL-FOR	$ < nC
13446	GaussNewtonOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < nC
13446	GaussNewtonOptimizer.java	doOptimize	nC	int	0	NIL-FOR	i < $
1964	GaussNewtonOptimizer.java	doOptimize	previous	PointVectorValuePair	0	RET	$ != null
1965	GaussNewtonOptimizer.java	doOptimize	converged	boolean	0	RET	$
4024	Gaussian.java	Gaussian	sigma	double	0	NotStrictlyPositiveException	$ <= 0
14624	Gaussian.java	value	k	int	0	NIL-FOR	$ >= 0
3232	GeneticAlgorithm.java	GeneticAlgorithm	crossoverRate	double	0	OutOfRangeException	$ < 0
3232	GeneticAlgorithm.java	GeneticAlgorithm	crossoverRate	double	0	OutOfRangeException	$ > 1
3233	GeneticAlgorithm.java	GeneticAlgorithm	mutationRate	double	0	OutOfRangeException	$ < 0
3233	GeneticAlgorithm.java	GeneticAlgorithm	mutationRate	double	0	OutOfRangeException	$ > 1
1217	GeometricDistribution.java	GeometricDistribution	p	double	0	OutOfRangeException	$ > 1
1217	GeometricDistribution.java	GeometricDistribution	p	double	0	OutOfRangeException	$ <= 0
1218	GeometricDistribution.java	probability	x	int	1	DEF	$ < 0
1219	GeometricDistribution.java	cumulativeProbability	x	int	1	DEF	$ < 0
14722	GradientFunction.java	value	point	double[]	0	NIL-FOR	i < $.length
14723	GradientFunction.java	value	point	double[]	0	NIL-FOR	i < $.length
14327	GraggBulirschStoerIntegrator.java	initializeArrays	size	int	0	NIL-FOR	k < $
14328	GraggBulirschStoerIntegrator.java	initializeArrays	size	int	0	NIL-FOR	k < $
14329	GraggBulirschStoerIntegrator.java	initializeArrays	size	int	0	NIL-FOR	k < $
14330	GraggBulirschStoerIntegrator.java	initializeArrays	l	int	0	NIL-FOR	$ < k
3428	GraggBulirschStoerIntegrator.java	setInterpolationControl	mudifControlParameter	int	1	DEF	$ <= 0
14331	GraggBulirschStoerIntegrator.java	rescale	scale	double[]	0	NIL-FOR	i < $.length
14332	GraggBulirschStoerIntegrator.java	rescale	scale	double[]	0	NIL-FOR	i < $.length
14333	GraggBulirschStoerIntegrator.java	tryStep	y0	double[]	0	NIL-FOR	i < $.length
14334	GraggBulirschStoerIntegrator.java	tryStep	j	int	0	NIL-FOR	$ < n
14334	GraggBulirschStoerIntegrator.java	tryStep	n	int	0	NIL-FOR	j < $
14335	GraggBulirschStoerIntegrator.java	tryStep	y0	double[]	0	NIL-FOR	i < $.length
14338	GraggBulirschStoerIntegrator.java	tryStep	y0	double[]	0	NIL-FOR	i < $.length
14339	GraggBulirschStoerIntegrator.java	extrapolate	j	int	0	NIL-FOR	$ < k
14339	GraggBulirschStoerIntegrator.java	extrapolate	k	int	0	NIL-FOR	j < $
14340	GraggBulirschStoerIntegrator.java	extrapolate	last	double[]	0	NIL-FOR	i < $.length
14341	GraggBulirschStoerIntegrator.java	extrapolate	last	double[]	0	NIL-FOR	i < $.length
3434	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	0	DEF	$
3435	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	0	DEF	$
3436	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	0	DEF	$
3437	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	0	DEF	$
3437	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	0	DEF	$
14346	GraggBulirschStoerIntegrator.java	integrate	loop	boolean	0	NIL-FOR	$
3439	GraggBulirschStoerIntegrator.java	integrate	k	int	0	DEF	$ > 0
3440	GraggBulirschStoerIntegrator.java	integrate	k	int	1	DEF	$ > 1
3441	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	0	DEF	$ > 1
3441	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	0	DEF	$
3444	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	0	DEF	$ > 1
3447	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	0	DEF	$ > 1
3449	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	0	DEF	$ > 1
3450	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	0	DEF	$
3451	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	0	DEF	$
3452	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	0	DEF	$
14348	GraggBulirschStoerIntegrator.java	integrate	k	int	0	NIL-FOR	j <= $
14350	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	0	NIL-FOR	i < $.length
14352	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	0	NIL-FOR	i < $.length
14353	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	0	NIL-FOR	i < $.length
14354	GraggBulirschStoerIntegrator.java	integrate	k	int	0	NIL-FOR	j <= $
14356	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	0	NIL-FOR	i < $.length
3453	GraggBulirschStoerIntegrator.java	integrate	mu	int	0	DEF	$ >= 0
3456	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	0	DEF	$
3457	GraggBulirschStoerIntegrator.java	integrate	k	int	1	DEF	$ == 1
3458	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	0	DEF	$
3464	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	1	DEF	$
3466	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	1	DEF	k < $
3467	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	0	DEF	$
3468	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	1	DEF	$
3495	GraggBulirschStoerStepInterpolator.java	resetTables	maxDegree	int	1	DEF	$ < 0
14393	GraggBulirschStoerStepInterpolator.java	resetTables	newPols	double[][]	0	NIL-FOR	i < $.length
14394	GraggBulirschStoerStepInterpolator.java	resetTables	newPols	double[][]	0	NIL-FOR	i < $.length
14396	GraggBulirschStoerStepInterpolator.java	resetTables	i	int	0	NIL-FOR	j <= $
3499	GraggBulirschStoerStepInterpolator.java	computeCoefficients	mu	int	0	RET	$ < 0
3500	GraggBulirschStoerStepInterpolator.java	computeCoefficients	mu	int	0	DEF	$ > 0
3501	GraggBulirschStoerStepInterpolator.java	computeCoefficients	mu	int	0	DEF	$ > 1
14398	GraggBulirschStoerStepInterpolator.java	computeCoefficients	mu	int	0	NIL-FOR	j <= $
14399	GraggBulirschStoerStepInterpolator.java	estimateError	scale	double[]	0	NIL-FOR	i < $.length
14400	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	i	int	0	NIL-FOR	$ < dimension
14400	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	dimension	int	0	NIL-FOR	i < $
14403	GraggBulirschStoerStepInterpolator.java	writeExternal	l	int	0	NIL-FOR	$ < dimension
14405	GraggBulirschStoerStepInterpolator.java	readExternal	l	int	0	NIL-FOR	$ < dimension
3116	HaltonSequenceGenerator.java	HaltonSequenceGenerator	weights	int[]	0	DimensionMismatchException	$ != null
14166	HaltonSequenceGenerator.java	nextVector	THIS	HaltonSequenceGenerator	0	NIL-FOR	i < $.dimension
14166	HaltonSequenceGenerator.java	nextVector	i	int	0	NIL-FOR	$ < dimension
14167	HaltonSequenceGenerator.java	nextVector	index	int	0	NIL-WHILE	$ > 0
14625	HarmonicOscillator.java	value	f	double[]	0	NIL-FOR	i < $.length
14539	HermiteInterpolator.java	addSamplePoint	value	double[]	0	NIL-FOR	i < $.length
3952	HermiteInterpolator.java	addSamplePoint	i	int	0	DEF	$ > 1
14540	HermiteInterpolator.java	addSamplePoint	y	double[]	0	NIL-FOR	j < $.length
14541	HermiteInterpolator.java	addSamplePoint	j	int	0	NIL-FOR	$ < n
14541	HermiteInterpolator.java	addSamplePoint	n	int	0	NIL-FOR	j < $
3953	HermiteInterpolator.java	addSamplePoint	inv	double	0	ZeroException	Double.isInfinite($)
14543	HermiteInterpolator.java	getPolynomials	polynomials	PolynomialFunction[]	0	NIL-FOR	i < $.length
4279	HermiteRuleFactory.java	computeRule	numberOfPoints	int	0	RET	$ == 1
14766	HermiteRuleFactory.java	computeRule	iMax	int	0	NIL-FOR	i < $
14767	HermiteRuleFactory.java	computeRule	numberOfPoints	int	0	NIL-FOR	j < $
14768	HermiteRuleFactory.java	computeRule	done	boolean	0	NIL-WHILE	$
14769	HermiteRuleFactory.java	computeRule	numberOfPoints	int	0	NIL-FOR	j < $
4280	HermiteRuleFactory.java	computeRule	done	boolean	0	DEF	$
14770	HermiteRuleFactory.java	computeRule	numberOfPoints	int	0	NIL-FOR	j < $
12724	HessenbergTransformer.java	getP	i	int	0	NIL-FOR	$ < n
12724	HessenbergTransformer.java	getP	n	int	0	NIL-FOR	i < $
12725	HessenbergTransformer.java	getP	j	int	0	NIL-FOR	$ < n
12725	HessenbergTransformer.java	getP	n	int	0	NIL-FOR	j < $
12727	HessenbergTransformer.java	getP	high	int	0	NIL-FOR	i <= $
12728	HessenbergTransformer.java	getP	high	int	0	NIL-FOR	j <= $
12729	HessenbergTransformer.java	getP	high	int	0	NIL-FOR	i <= $
12730	HessenbergTransformer.java	getP	high	int	0	NIL-FOR	i <= $
12731	HessenbergTransformer.java	getH	i	int	0	NIL-FOR	$ < m
12731	HessenbergTransformer.java	getH	m	int	0	NIL-FOR	i < $
1404	HessenbergTransformer.java	getH	i	int	0	DEF	$ > 0
12732	HessenbergTransformer.java	getH	j	int	0	NIL-FOR	$ < m
12732	HessenbergTransformer.java	getH	m	int	0	NIL-FOR	j < $
12734	HessenbergTransformer.java	transform	high	int	0	NIL-FOR	i <= $
12736	HessenbergTransformer.java	transform	j	int	0	NIL-FOR	$ < n
12736	HessenbergTransformer.java	transform	n	int	0	NIL-FOR	j < $
12738	HessenbergTransformer.java	transform	high	int	0	NIL-FOR	i <= $
12739	HessenbergTransformer.java	transform	high	int	0	NIL-FOR	i <= $
12741	HessenbergTransformer.java	transform	high	int	0	NIL-FOR	j <= $
1129	HypergeometricDistribution.java	HypergeometricDistribution	populationSize	int	0	NotStrictlyPositiveException	$ <= 0
1130	HypergeometricDistribution.java	HypergeometricDistribution	numberOfSuccesses	int	0	NotPositiveException	$ < 0
1131	HypergeometricDistribution.java	HypergeometricDistribution	sampleSize	int	0	NotPositiveException	$ < 0
3110	ISAACRandom.java	setSeed	seed	int[]	0	RET	$ == null
14157	ISAACRandom.java	setSeed	rslLen	int	0	NIL-FOR	j < $
189	Incrementor.java	Incrementor	cb	MaxCountExceededCallback	0	NullArgumentException	$ == null
12400	Incrementor.java	incrementCount	value	int	0	NIL-FOR	i < $
808	IntervalsSet.java	buildTree	lower	double	0	RET	$ < 0
808	IntervalsSet.java	buildTree	lower	double	0	RET	Double.isInfinite($)
809	IntervalsSet.java	buildTree	upper	double	0	RET	Double.isInfinite($)
809	IntervalsSet.java	buildTree	upper	double	0	RET	$ > 0
810	IntervalsSet.java	buildTree	upper	double	0	RET	$ > 0
810	IntervalsSet.java	buildTree	upper	double	0	RET	Double.isInfinite($)
812	IntervalsSet.java	computeGeometricalProperties	size	double	1	DEF	Double.isInfinite($)
4291	IterativeLegendreGaussIntegrator.java	IterativeLegendreGaussIntegrator	n	int	0	NotStrictlyPositiveException	$ <= 0
14778	IterativeLegendreGaussIntegrator.java	stage	i	int	0	NIL-FOR	$ < n
14778	IterativeLegendreGaussIntegrator.java	stage	n	int	0	NIL-FOR	i < $
12655	JacobiPreconditioner.java	create	i	int	0	NIL-FOR	$ < n
12655	JacobiPreconditioner.java	create	n	int	0	NIL-FOR	i < $
12656	JacobiPreconditioner.java	create	i	int	0	NIL-FOR	$ < n
12656	JacobiPreconditioner.java	create	n	int	0	NIL-FOR	i < $
14641	JacobianFunction.java	value	point	double[]	0	NIL-FOR	i < $.length
14642	JacobianFunction.java	value	dsY	DerivativeStructure[]	0	NIL-FOR	i < $.length
14643	JacobianFunction.java	value	point	double[]	0	NIL-FOR	j < $.length
3553	JacobianMatrices.java	JacobianMatrices	parameters	String	1	DEF	$ == null
14441	JacobianMatrices.java	JacobianMatrices	parameters	String	0	NIL-FOR	i < $.length
3273	KMeansPlusPlusClusterer.java	cluster	emptyCluster	boolean	0	RET	$
3273	KMeansPlusPlusClusterer.java	cluster	changes	int	0	RET	$ == 0
14237	KMeansPlusPlusClusterer.java	chooseInitialCenters	numPoints	int	0	NIL-FOR	i < $
14239	KMeansPlusPlusClusterer.java	chooseInitialCenters	numPoints	int	0	NIL-FOR	i < $
14240	KMeansPlusPlusClusterer.java	chooseInitialCenters	numPoints	int	0	NIL-FOR	i < $
3279	KMeansPlusPlusClusterer.java	chooseInitialCenters	nextPointIndex	int	0	DEF	$ == -1
14241	KMeansPlusPlusClusterer.java	chooseInitialCenters	i	int	0	NIL-FOR	$ >= 0
3281	KMeansPlusPlusClusterer.java	chooseInitialCenters	nextPointIndex	int	1	DEF	$ >= 0
14242	KMeansPlusPlusClusterer.java	chooseInitialCenters	numPoints	int	0	NIL-FOR	j < $
3287	KMeansPlusPlusClusterer.java	getPointFromLargestVarianceCluster	selected	Cluster<T>	0	ConvergenceException	$ == null
3289	KMeansPlusPlusClusterer.java	getPointFromLargestNumberCluster	selected	Cluster<T>	0	ConvergenceException	$ == null
3291	KMeansPlusPlusClusterer.java	getFarthestPoint	selectedCluster	Cluster<T>	0	ConvergenceException	$ == null
14244	KMeansPlusPlusClusterer.java	centroidOf	centroid	double[]	0	NIL-FOR	i < $.length
14245	KMeansPlusPlusClusterer.java	centroidOf	centroid	double[]	0	NIL-FOR	i < $.length
13723	KMeansPlusPlusClusterer.java	cluster	numTrials	int	0	NIL-FOR	i < $
2450	KMeansPlusPlusClusterer.java	cluster	emptyCluster	boolean	0	RET	$
2450	KMeansPlusPlusClusterer.java	cluster	changes	int	0	RET	$ == 0
13725	KMeansPlusPlusClusterer.java	chooseInitialCenters	numPoints	int	0	NIL-FOR	i < $
13727	KMeansPlusPlusClusterer.java	chooseInitialCenters	numPoints	int	0	NIL-FOR	i < $
13728	KMeansPlusPlusClusterer.java	chooseInitialCenters	numPoints	int	0	NIL-FOR	i < $
2456	KMeansPlusPlusClusterer.java	chooseInitialCenters	nextPointIndex	int	0	DEF	$ == -1
13729	KMeansPlusPlusClusterer.java	chooseInitialCenters	i	int	0	NIL-FOR	$ >= 0
2458	KMeansPlusPlusClusterer.java	chooseInitialCenters	nextPointIndex	int	1	DEF	$ >= 0
13730	KMeansPlusPlusClusterer.java	chooseInitialCenters	numPoints	int	0	NIL-FOR	j < $
2464	KMeansPlusPlusClusterer.java	getPointFromLargestVarianceCluster	selected	Cluster<T>	0	ConvergenceException	$ == null
2466	KMeansPlusPlusClusterer.java	getPointFromLargestNumberCluster	selected	Cluster<T>	0	ConvergenceException	$ == null
2468	KMeansPlusPlusClusterer.java	getFarthestPoint	selectedCluster	Cluster<T>	0	ConvergenceException	$ == null
8	KalmanFilter.java	predict	u	RealVector	0	DimensionMismatchException	$ != null
9	KalmanFilter.java	predict	u	RealVector	0	DEF	$ != null
1269	KolmogorovSmirnovDistribution.java	KolmogorovSmirnovDistribution	n	int	0	NotStrictlyPositiveException	$ <= 0
12518	KolmogorovSmirnovDistribution.java	roundedK	i	int	0	NIL-FOR	$ < m
12518	KolmogorovSmirnovDistribution.java	roundedK	m	int	0	NIL-FOR	i < $
12519	KolmogorovSmirnovDistribution.java	roundedK	j	int	0	NIL-FOR	$ < m
12519	KolmogorovSmirnovDistribution.java	roundedK	m	int	0	NIL-FOR	j < $
12521	KolmogorovSmirnovDistribution.java	createH	i	int	0	NIL-FOR	$ < m
12521	KolmogorovSmirnovDistribution.java	createH	m	int	0	NIL-FOR	i < $
12522	KolmogorovSmirnovDistribution.java	createH	j	int	0	NIL-FOR	$ < m
12522	KolmogorovSmirnovDistribution.java	createH	m	int	0	NIL-FOR	j < $
12523	KolmogorovSmirnovDistribution.java	createH	i	int	0	NIL-FOR	$ < m
12523	KolmogorovSmirnovDistribution.java	createH	m	int	0	NIL-FOR	i < $
12524	KolmogorovSmirnovDistribution.java	createH	i	int	0	NIL-FOR	$ < m
12524	KolmogorovSmirnovDistribution.java	createH	m	int	0	NIL-FOR	i < $
12525	KolmogorovSmirnovDistribution.java	createH	i	int	0	NIL-FOR	$ < m
12525	KolmogorovSmirnovDistribution.java	createH	m	int	0	NIL-FOR	i < $
12533	LUDecomposition.java	LUDecomposition	row	int	0	NIL-FOR	$ < m
12533	LUDecomposition.java	LUDecomposition	m	int	0	NIL-FOR	row < $
12534	LUDecomposition.java	LUDecomposition	col	int	0	NIL-FOR	$ < m
12534	LUDecomposition.java	LUDecomposition	m	int	0	NIL-FOR	col < $
12535	LUDecomposition.java	LUDecomposition	col	int	0	NIL-FOR	row < $
12536	LUDecomposition.java	LUDecomposition	row	int	0	NIL-FOR	i < $
12537	LUDecomposition.java	LUDecomposition	row	int	0	NIL-FOR	$ < m
12537	LUDecomposition.java	LUDecomposition	m	int	0	NIL-FOR	row < $
12538	LUDecomposition.java	LUDecomposition	col	int	0	NIL-FOR	i < $
12539	LUDecomposition.java	LUDecomposition	i	int	0	NIL-FOR	$ < m
12539	LUDecomposition.java	LUDecomposition	m	int	0	NIL-FOR	i < $
12540	LUDecomposition.java	LUDecomposition	row	int	0	NIL-FOR	$ < m
12540	LUDecomposition.java	LUDecomposition	m	int	0	NIL-FOR	row < $
12541	LUDecomposition.java	getL	i	int	0	NIL-FOR	$ < m
12541	LUDecomposition.java	getL	m	int	0	NIL-FOR	i < $
12542	LUDecomposition.java	getL	i	int	0	NIL-FOR	j < $
12543	LUDecomposition.java	getU	i	int	0	NIL-FOR	$ < m
12543	LUDecomposition.java	getU	m	int	0	NIL-FOR	i < $
12544	LUDecomposition.java	getU	j	int	0	NIL-FOR	$ < m
12544	LUDecomposition.java	getU	m	int	0	NIL-FOR	j < $
12545	LUDecomposition.java	getP	i	int	0	NIL-FOR	$ < m
12545	LUDecomposition.java	getP	m	int	0	NIL-FOR	i < $
12546	LUDecomposition.java	getDeterminant	i	int	0	NIL-FOR	$ < m
12546	LUDecomposition.java	getDeterminant	m	int	0	NIL-FOR	i < $
14639	LaguerreSolver.java	laguerre	root	Complex[]	0	NIL-FOR	i < $.length
13876	LeastSquaresConverter.java	value	residuals	double[]	0	NIL-FOR	i < $.length
13877	LeastSquaresConverter.java	value	residuals	double[]	0	NIL-FOR	i < $.length
13372	LeastSquaresConverter.java	value	residuals	double[]	0	NIL-FOR	i < $.length
13373	LeastSquaresConverter.java	value	residuals	double[]	0	NIL-FOR	i < $.length
14780	LegendreGaussIntegrator.java	stage	i	int	0	NIL-FOR	$ < n
14780	LegendreGaussIntegrator.java	stage	n	int	0	NIL-FOR	i < $
4272	LegendreHighPrecisionRuleFactory.java	computeRule	numberOfPoints	int	0	RET	$ == 1
14759	LegendreHighPrecisionRuleFactory.java	computeRule	iMax	int	0	NIL-FOR	i < $
14760	LegendreHighPrecisionRuleFactory.java	computeRule	numberOfPoints	int	0	NIL-FOR	j < $
14761	LegendreHighPrecisionRuleFactory.java	computeRule	done	boolean	0	NIL-WHILE	$
14762	LegendreHighPrecisionRuleFactory.java	computeRule	numberOfPoints	int	0	NIL-FOR	j < $
4273	LegendreHighPrecisionRuleFactory.java	computeRule	done	boolean	0	DEF	$
14763	LegendreHighPrecisionRuleFactory.java	computeRule	numberOfPoints	int	0	NIL-FOR	j < $
4283	LegendreRuleFactory.java	computeRule	numberOfPoints	int	0	RET	$ == 1
14771	LegendreRuleFactory.java	computeRule	iMax	int	0	NIL-FOR	i < $
14772	LegendreRuleFactory.java	computeRule	numberOfPoints	int	0	NIL-FOR	j < $
14773	LegendreRuleFactory.java	computeRule	done	boolean	0	NIL-WHILE	$
14774	LegendreRuleFactory.java	computeRule	numberOfPoints	int	0	NIL-FOR	j < $
4284	LegendreRuleFactory.java	computeRule	done	boolean	0	DEF	$
14775	LegendreRuleFactory.java	computeRule	numberOfPoints	int	0	NIL-FOR	j < $
14092	LevenbergMarquardtOptimizer.java	doOptimize	nR	int	0	NIL-FOR	i < $
14093	LevenbergMarquardtOptimizer.java	doOptimize	k	int	0	NIL-FOR	$ < solvedCols
3066	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	0	DEF	$
14094	LevenbergMarquardtOptimizer.java	doOptimize	k	int	0	NIL-FOR	$ < nC
14094	LevenbergMarquardtOptimizer.java	doOptimize	nC	int	0	NIL-FOR	k < $
3067	LevenbergMarquardtOptimizer.java	doOptimize	dk	double	0	DEF	$ == 0
3068	LevenbergMarquardtOptimizer.java	doOptimize	currentCost	double	0	DEF	$ != 0
14095	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
14095	LevenbergMarquardtOptimizer.java	doOptimize	j	int	0	NIL-FOR	$ < solvedCols
3069	LevenbergMarquardtOptimizer.java	doOptimize	s	double	0	DEF	$ != 0
14096	LevenbergMarquardtOptimizer.java	doOptimize	j	int	0	NIL-FOR	i <= $
14097	LevenbergMarquardtOptimizer.java	doOptimize	j	int	0	NIL-FOR	$ < nC
14097	LevenbergMarquardtOptimizer.java	doOptimize	nC	int	0	NIL-FOR	j < $
14099	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
14099	LevenbergMarquardtOptimizer.java	doOptimize	j	int	0	NIL-FOR	$ < solvedCols
14100	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
14100	LevenbergMarquardtOptimizer.java	doOptimize	j	int	0	NIL-FOR	$ < solvedCols
3071	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	0	DEF	$
14101	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
14101	LevenbergMarquardtOptimizer.java	doOptimize	j	int	0	NIL-FOR	$ < solvedCols
14102	LevenbergMarquardtOptimizer.java	doOptimize	j	int	0	NIL-FOR	i <= $
14103	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
14103	LevenbergMarquardtOptimizer.java	doOptimize	j	int	0	NIL-FOR	$ < solvedCols
14104	LevenbergMarquardtOptimizer.java	doOptimize	k	int	0	NIL-FOR	$ < nC
14104	LevenbergMarquardtOptimizer.java	doOptimize	nC	int	0	NIL-FOR	k < $
3077	LevenbergMarquardtOptimizer.java	doOptimize	checker	ConvergenceChecker<PointVectorValuePair>	0	RET	$ != null
14105	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
14105	LevenbergMarquardtOptimizer.java	doOptimize	j	int	0	NIL-FOR	$ < solvedCols
14107	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < nC
14107	LevenbergMarquardtOptimizer.java	determineLMParameter	nC	int	0	NIL-FOR	j < $
14108	LevenbergMarquardtOptimizer.java	determineLMParameter	k	int	0	NIL-FOR	$ >= 0
14109	LevenbergMarquardtOptimizer.java	determineLMParameter	i	int	0	NIL-FOR	$ < k
14109	LevenbergMarquardtOptimizer.java	determineLMParameter	k	int	0	NIL-FOR	i < $
14110	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
14110	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < solvedCols
14111	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
14111	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < solvedCols
14112	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
14112	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < solvedCols
14113	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	i < $
14114	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
14114	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < solvedCols
14115	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	i <= $
3084	LevenbergMarquardtOptimizer.java	determineLMParameter	paru	double	0	DEF	$ == 0
14116	LevenbergMarquardtOptimizer.java	determineLMParameter	countdown	int	0	NIL-FOR	$ >= 0
14117	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
14117	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < solvedCols
14118	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
14118	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < solvedCols
3087	LevenbergMarquardtOptimizer.java	determineLMParameter	previousFP	double	0	RET	$ < 0
3087	LevenbergMarquardtOptimizer.java	determineLMParameter	parl	double	0	RET	$ == 0
14119	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
14119	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < solvedCols
14120	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
14120	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < solvedCols
14121	LevenbergMarquardtOptimizer.java	determineLMParameter	i	int	0	NIL-FOR	$ < solvedCols
14122	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
14122	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < solvedCols
3088	LevenbergMarquardtOptimizer.java	determineLMParameter	fp	double	1	DEF	$ > 0
3089	LevenbergMarquardtOptimizer.java	determineLMParameter	fp	double	0	DEF	$ < 0
14123	LevenbergMarquardtOptimizer.java	determineLMDirection	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
14123	LevenbergMarquardtOptimizer.java	determineLMDirection	j	int	0	NIL-FOR	$ < solvedCols
14124	LevenbergMarquardtOptimizer.java	determineLMDirection	i	int	0	NIL-FOR	$ < solvedCols
14125	LevenbergMarquardtOptimizer.java	determineLMDirection	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
14125	LevenbergMarquardtOptimizer.java	determineLMDirection	j	int	0	NIL-FOR	$ < solvedCols
3090	LevenbergMarquardtOptimizer.java	determineLMDirection	dpj	double	0	DEF	$ != 0
14126	LevenbergMarquardtOptimizer.java	determineLMDirection	k	int	0	NIL-FOR	$ < solvedCols
14127	LevenbergMarquardtOptimizer.java	determineLMDirection	i	int	0	NIL-FOR	$ < solvedCols
14128	LevenbergMarquardtOptimizer.java	determineLMDirection	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
14128	LevenbergMarquardtOptimizer.java	determineLMDirection	j	int	0	NIL-FOR	$ < solvedCols
3094	LevenbergMarquardtOptimizer.java	determineLMDirection	nSing	int	0	DEF	$ < solvedCols
3095	LevenbergMarquardtOptimizer.java	determineLMDirection	nSing	int	0	DEF	$ > 0
14129	LevenbergMarquardtOptimizer.java	determineLMDirection	j	int	0	NIL-FOR	$ >= 0
14130	LevenbergMarquardtOptimizer.java	determineLMDirection	nSing	int	0	NIL-FOR	i < $
14132	LevenbergMarquardtOptimizer.java	qrDecomposition	k	int	0	NIL-FOR	$ < nC
14132	LevenbergMarquardtOptimizer.java	qrDecomposition	nC	int	0	NIL-FOR	k < $
14133	LevenbergMarquardtOptimizer.java	qrDecomposition	nR	int	0	NIL-FOR	i < $
14134	LevenbergMarquardtOptimizer.java	qrDecomposition	k	int	0	NIL-FOR	$ < nC
14134	LevenbergMarquardtOptimizer.java	qrDecomposition	nC	int	0	NIL-FOR	k < $
14135	LevenbergMarquardtOptimizer.java	qrDecomposition	i	int	0	NIL-FOR	$ < nC
14135	LevenbergMarquardtOptimizer.java	qrDecomposition	nC	int	0	NIL-FOR	i < $
14136	LevenbergMarquardtOptimizer.java	qrDecomposition	nR	int	0	NIL-FOR	j < $
3096	LevenbergMarquardtOptimizer.java	qrDecomposition	norm2	double	0	ConvergenceException	Double.isNaN($)
3096	LevenbergMarquardtOptimizer.java	qrDecomposition	norm2	double	0	ConvergenceException	Double.isInfinite($)
14137	LevenbergMarquardtOptimizer.java	qrDecomposition	dk	int	0	NIL-FOR	$ > 0
14138	LevenbergMarquardtOptimizer.java	qrDecomposition	nR	int	0	NIL-FOR	j < $
14139	LevenbergMarquardtOptimizer.java	qrDecomposition	nR	int	0	NIL-FOR	j < $
14140	LevenbergMarquardtOptimizer.java	qTy	k	int	0	NIL-FOR	$ < nC
14140	LevenbergMarquardtOptimizer.java	qTy	nC	int	0	NIL-FOR	k < $
14141	LevenbergMarquardtOptimizer.java	qTy	nR	int	0	NIL-FOR	i < $
14142	LevenbergMarquardtOptimizer.java	qTy	nR	int	0	NIL-FOR	i < $
13374	LevenbergMarquardtOptimizer.java	doOptimize	nR	int	0	NIL-FOR	i < $
13375	LevenbergMarquardtOptimizer.java	doOptimize	k	int	0	NIL-FOR	$ < solvedCols
1919	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	0	DEF	$
13376	LevenbergMarquardtOptimizer.java	doOptimize	k	int	0	NIL-FOR	$ < nC
13376	LevenbergMarquardtOptimizer.java	doOptimize	nC	int	0	NIL-FOR	k < $
1920	LevenbergMarquardtOptimizer.java	doOptimize	dk	double	0	DEF	$ == 0
1921	LevenbergMarquardtOptimizer.java	doOptimize	currentCost	double	0	DEF	$ != 0
13377	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
13377	LevenbergMarquardtOptimizer.java	doOptimize	j	int	0	NIL-FOR	$ < solvedCols
1922	LevenbergMarquardtOptimizer.java	doOptimize	s	double	0	DEF	$ != 0
13378	LevenbergMarquardtOptimizer.java	doOptimize	j	int	0	NIL-FOR	i <= $
13379	LevenbergMarquardtOptimizer.java	doOptimize	j	int	0	NIL-FOR	$ < nC
13379	LevenbergMarquardtOptimizer.java	doOptimize	nC	int	0	NIL-FOR	j < $
13381	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
13381	LevenbergMarquardtOptimizer.java	doOptimize	j	int	0	NIL-FOR	$ < solvedCols
13382	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
13382	LevenbergMarquardtOptimizer.java	doOptimize	j	int	0	NIL-FOR	$ < solvedCols
1924	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	0	DEF	$
13383	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
13383	LevenbergMarquardtOptimizer.java	doOptimize	j	int	0	NIL-FOR	$ < solvedCols
13384	LevenbergMarquardtOptimizer.java	doOptimize	j	int	0	NIL-FOR	i <= $
13385	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
13385	LevenbergMarquardtOptimizer.java	doOptimize	j	int	0	NIL-FOR	$ < solvedCols
13386	LevenbergMarquardtOptimizer.java	doOptimize	k	int	0	NIL-FOR	$ < nC
13386	LevenbergMarquardtOptimizer.java	doOptimize	nC	int	0	NIL-FOR	k < $
1930	LevenbergMarquardtOptimizer.java	doOptimize	checker	ConvergenceChecker<PointVectorValuePair>	0	RET	$ != null
13387	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
13387	LevenbergMarquardtOptimizer.java	doOptimize	j	int	0	NIL-FOR	$ < solvedCols
13389	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < nC
13389	LevenbergMarquardtOptimizer.java	determineLMParameter	nC	int	0	NIL-FOR	j < $
13390	LevenbergMarquardtOptimizer.java	determineLMParameter	k	int	0	NIL-FOR	$ >= 0
13391	LevenbergMarquardtOptimizer.java	determineLMParameter	i	int	0	NIL-FOR	$ < k
13391	LevenbergMarquardtOptimizer.java	determineLMParameter	k	int	0	NIL-FOR	i < $
13392	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
13392	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < solvedCols
13393	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
13393	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < solvedCols
13394	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
13394	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < solvedCols
13395	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	i < $
13396	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
13396	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < solvedCols
13397	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	i <= $
1937	LevenbergMarquardtOptimizer.java	determineLMParameter	paru	double	0	DEF	$ == 0
13398	LevenbergMarquardtOptimizer.java	determineLMParameter	countdown	int	0	NIL-FOR	$ >= 0
13399	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
13399	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < solvedCols
13400	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
13400	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < solvedCols
1940	LevenbergMarquardtOptimizer.java	determineLMParameter	previousFP	double	0	RET	$ < 0
1940	LevenbergMarquardtOptimizer.java	determineLMParameter	parl	double	0	RET	$ == 0
13401	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
13401	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < solvedCols
13402	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
13402	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < solvedCols
13403	LevenbergMarquardtOptimizer.java	determineLMParameter	i	int	0	NIL-FOR	$ < solvedCols
13404	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
13404	LevenbergMarquardtOptimizer.java	determineLMParameter	j	int	0	NIL-FOR	$ < solvedCols
1941	LevenbergMarquardtOptimizer.java	determineLMParameter	fp	double	1	DEF	$ > 0
1942	LevenbergMarquardtOptimizer.java	determineLMParameter	fp	double	0	DEF	$ < 0
13405	LevenbergMarquardtOptimizer.java	determineLMDirection	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
13405	LevenbergMarquardtOptimizer.java	determineLMDirection	j	int	0	NIL-FOR	$ < solvedCols
13406	LevenbergMarquardtOptimizer.java	determineLMDirection	i	int	0	NIL-FOR	$ < solvedCols
13407	LevenbergMarquardtOptimizer.java	determineLMDirection	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
13407	LevenbergMarquardtOptimizer.java	determineLMDirection	j	int	0	NIL-FOR	$ < solvedCols
1943	LevenbergMarquardtOptimizer.java	determineLMDirection	dpj	double	0	DEF	$ != 0
13408	LevenbergMarquardtOptimizer.java	determineLMDirection	k	int	0	NIL-FOR	$ < solvedCols
13409	LevenbergMarquardtOptimizer.java	determineLMDirection	i	int	0	NIL-FOR	$ < solvedCols
13410	LevenbergMarquardtOptimizer.java	determineLMDirection	THIS	LevenbergMarquardtOptimizer	0	NIL-FOR	j < $.solvedCols
13410	LevenbergMarquardtOptimizer.java	determineLMDirection	j	int	0	NIL-FOR	$ < solvedCols
1947	LevenbergMarquardtOptimizer.java	determineLMDirection	nSing	int	0	DEF	$ < solvedCols
1948	LevenbergMarquardtOptimizer.java	determineLMDirection	nSing	int	0	DEF	$ > 0
13411	LevenbergMarquardtOptimizer.java	determineLMDirection	j	int	0	NIL-FOR	$ >= 0
13412	LevenbergMarquardtOptimizer.java	determineLMDirection	nSing	int	0	NIL-FOR	i < $
13414	LevenbergMarquardtOptimizer.java	qrDecomposition	k	int	0	NIL-FOR	$ < nC
13414	LevenbergMarquardtOptimizer.java	qrDecomposition	nC	int	0	NIL-FOR	k < $
13415	LevenbergMarquardtOptimizer.java	qrDecomposition	nR	int	0	NIL-FOR	i < $
13416	LevenbergMarquardtOptimizer.java	qrDecomposition	k	int	0	NIL-FOR	$ < nC
13416	LevenbergMarquardtOptimizer.java	qrDecomposition	nC	int	0	NIL-FOR	k < $
13417	LevenbergMarquardtOptimizer.java	qrDecomposition	i	int	0	NIL-FOR	$ < nC
13417	LevenbergMarquardtOptimizer.java	qrDecomposition	nC	int	0	NIL-FOR	i < $
13418	LevenbergMarquardtOptimizer.java	qrDecomposition	nR	int	0	NIL-FOR	j < $
1949	LevenbergMarquardtOptimizer.java	qrDecomposition	norm2	double	0	ConvergenceException	Double.isNaN($)
1949	LevenbergMarquardtOptimizer.java	qrDecomposition	norm2	double	0	ConvergenceException	Double.isInfinite($)
13419	LevenbergMarquardtOptimizer.java	qrDecomposition	dk	int	0	NIL-FOR	$ > 0
13420	LevenbergMarquardtOptimizer.java	qrDecomposition	nR	int	0	NIL-FOR	j < $
13421	LevenbergMarquardtOptimizer.java	qrDecomposition	nR	int	0	NIL-FOR	j < $
13422	LevenbergMarquardtOptimizer.java	qTy	k	int	0	NIL-FOR	$ < nC
13422	LevenbergMarquardtOptimizer.java	qTy	nC	int	0	NIL-FOR	k < $
13423	LevenbergMarquardtOptimizer.java	qTy	nR	int	0	NIL-FOR	i < $
13424	LevenbergMarquardtOptimizer.java	qTy	nR	int	0	NIL-FOR	i < $
1205	LevyDistribution.java	inverseCumulativeProbability	p	double	0	OutOfRangeException	$ < 0.0
706	Line.java	reset	norm2	double	0	MathIllegalArgumentException	$ == 0.0
819	Line.java	reset	d	double	1	DEF	$ == 0.0
13846	LinearConstraint.java	LinearConstraint	sub	double[]	0	NIL-FOR	i < $.length
2729	LinearConstraint.java	equals	THIS	LinearConstraint	0	RET	$ == other
2729	LinearConstraint.java	equals	other	Object	0	RET	this == $
13348	LinearConstraint.java	LinearConstraint	sub	double[]	0	NIL-FOR	i < $.length
1866	LinearConstraint.java	equals	THIS	LinearConstraint	0	RET	$ == other
1866	LinearConstraint.java	equals	other	Object	0	RET	this == $
14525	LinearInterpolator.java	interpolate	i	int	0	NIL-FOR	$ < n
14525	LinearInterpolator.java	interpolate	n	int	0	NIL-FOR	i < $
14526	LinearInterpolator.java	interpolate	i	int	0	NIL-FOR	$ < n
14526	LinearInterpolator.java	interpolate	n	int	0	NIL-FOR	i < $
2745	LinearObjectiveFunction.java	equals	THIS	LinearObjectiveFunction	0	RET	$ == other
2745	LinearObjectiveFunction.java	equals	other	Object	0	RET	this == $
1883	LinearObjectiveFunction.java	equals	THIS	LinearObjectiveFunction	0	RET	$ == other
1883	LinearObjectiveFunction.java	equals	other	Object	0	RET	this == $
3222	ListPopulation.java	ListPopulation	chromosomes	List<Chromosome>	0	NullArgumentException	$ == null
3223	ListPopulation.java	ListPopulation	populationLimit	int	0	NotPositiveException	$ <= 0
3225	ListPopulation.java	setChromosomes	chromosomes	List<Chromosome>	0	NullArgumentException	$ == null
3230	ListPopulation.java	setPopulationLimit	populationLimit	int	0	NotPositiveException	$ <= 0
3999	LoessInterpolator.java	LoessInterpolator	bandwidth	double	0	OutOfRangeException	$ > 1
3999	LoessInterpolator.java	LoessInterpolator	bandwidth	double	0	OutOfRangeException	$ < 0
4000	LoessInterpolator.java	LoessInterpolator	robustnessIters	int	0	NotPositiveException	$ < 0
4002	LoessInterpolator.java	smooth	n	int	0	NoDataException	$ == 0
4003	LoessInterpolator.java	smooth	n	int	0	RET	$ == 1
14607	LoessInterpolator.java	smooth	i	int	0	NIL-FOR	$ < n
14607	LoessInterpolator.java	smooth	n	int	0	NIL-FOR	i < $
4006	LoessInterpolator.java	smooth	i	int	0	DEF	$ > 0
14609	LoessInterpolator.java	smooth	i	int	0	NIL-FOR	$ < n
14609	LoessInterpolator.java	smooth	n	int	0	NIL-FOR	i < $
14610	LoessInterpolator.java	nextNonzero	weights	double[]	0	NIL-WHILE	j < $.length
14611	LoessInterpolator.java	checkAllFiniteReal	values	double[]	0	NIL-FOR	i < $.length
1291	LogNormalDistribution.java	LogNormalDistribution	shape	double	0	NotStrictlyPositiveException	$ <= 0
1292	LogNormalDistribution.java	density	x	double	0	RET	$ <= 0
1293	LogNormalDistribution.java	cumulativeProbability	x	double	0	RET	$ <= 0
1296	LogNormalDistribution.java	probability	x0	double	0	RET	$ <= 0
1296	LogNormalDistribution.java	probability	x1	double	0	RET	$ <= 0
4035	Logistic.java	Logistic	n	double	0	NotStrictlyPositiveException	$ <= 0
14621	Logit.java	value	f	double[]	0	NIL-FOR	i < $.length
14622	Logit.java	value	f	double[]	0	NIL-FOR	i < $.length
2398	MannWhitneyUTest.java	ensureDataConformance	x	double[]	0	NullArgumentException	$ == null
2398	MannWhitneyUTest.java	ensureDataConformance	y	double[]	0	NullArgumentException	$ == null
2399	MannWhitneyUTest.java	ensureDataConformance	x	double[]	0	NoDataException	$.length == 0
2399	MannWhitneyUTest.java	ensureDataConformance	y	double[]	0	NoDataException	$.length == 0
13702	MannWhitneyUTest.java	mannWhitneyU	x	double[]	0	NIL-FOR	i < $.length
12354	MathArrays.java	scale	arr	double[]	0	NIL-FOR	i < $.length
12355	MathArrays.java	scaleInPlace	arr	double[]	0	NIL-FOR	i < $.length
12356	MathArrays.java	ebeAdd	a	double[]	0	NIL-FOR	i < $.length
12357	MathArrays.java	ebeSubtract	a	double[]	0	NIL-FOR	i < $.length
12358	MathArrays.java	ebeMultiply	a	double[]	0	NIL-FOR	i < $.length
12359	MathArrays.java	ebeDivide	a	double[]	0	NIL-FOR	i < $.length
12360	MathArrays.java	distance1	p1	double[]	0	NIL-FOR	i < $.length
12361	MathArrays.java	distance1	p1	int[]	0	NIL-FOR	i < $.length
12362	MathArrays.java	distance	p1	double[]	0	NIL-FOR	i < $.length
12363	MathArrays.java	distance	p1	int[]	0	NIL-FOR	i < $.length
12364	MathArrays.java	distanceInf	p1	double[]	0	NIL-FOR	i < $.length
12365	MathArrays.java	distanceInf	p1	int[]	0	NIL-FOR	i < $.length
12366	MathArrays.java	isMonotonic	max	int	0	NIL-FOR	i < $
117	MathArrays.java	isMonotonic	strict	boolean	1	RET	$
118	MathArrays.java	isMonotonic	comp	int	0	RET	$ >= 0
119	MathArrays.java	isMonotonic	comp	int	0	RET	$ > 0
120	MathArrays.java	isMonotonic	strict	boolean	1	RET	$
121	MathArrays.java	isMonotonic	comp	int	0	RET	$ >= 0
122	MathArrays.java	isMonotonic	comp	int	0	RET	$ > 0
123	MathArrays.java	checkOrder	strict	boolean	1	DEF	$
126	MathArrays.java	checkOrder	strict	boolean	1	DEF	$
130	MathArrays.java	checkOrder	abort	boolean	1	NonMonotonicSequenceException	$
12368	MathArrays.java	checkRectangular	in	long[][]	0	NIL-FOR	i < $.length
12369	MathArrays.java	checkPositive	in	double[]	0	NIL-FOR	i < $.length
12370	MathArrays.java	checkNonNegative	in	long[]	0	NIL-FOR	i < $.length
12371	MathArrays.java	checkNonNegative	in	long[][]	0	NIL-FOR	i < $.length
12373	MathArrays.java	safeNorm	v	double[]	0	NIL-FOR	i < $.length
139	MathArrays.java	safeNorm	xabs	double	0	DEF	$ != 0
140	MathArrays.java	safeNorm	s1	double	1	DEF	$ != 0
141	MathArrays.java	safeNorm	s2	double	1	DEF	$ == 0
143	MathArrays.java	sortInPlace	x	double[]	0	NullArgumentException	$ == null
12374	MathArrays.java	sortInPlace	yListLen	int	0	NIL-FOR	j < $
144	MathArrays.java	sortInPlace	y	double[]	0	NullArgumentException	$ == null
12375	MathArrays.java	sortInPlace	len	int	0	NIL-FOR	i < $
12376	MathArrays.java	sortInPlace	len	int	0	NIL-FOR	i < $
12377	MathArrays.java	sortInPlace	yListLen	int	0	NIL-FOR	j < $
12378	MathArrays.java	sortInPlace	len	int	0	NIL-FOR	i < $
12379	MathArrays.java	linearCombination	len	int	0	NIL-FOR	i < $
12380	MathArrays.java	linearCombination	lenMinusOne	int	0	NIL-FOR	i < $
147	MathArrays.java	linearCombination	result	double	0	DEF	Double.isNaN($)
12381	MathArrays.java	linearCombination	len	int	0	NIL-FOR	i < $
148	MathArrays.java	linearCombination	result	double	0	DEF	Double.isNaN($)
149	MathArrays.java	linearCombination	result	double	0	DEF	Double.isNaN($)
150	MathArrays.java	linearCombination	result	double	0	DEF	Double.isNaN($)
151	MathArrays.java	equals	x	float[]	0	RET	$ == null
151	MathArrays.java	equals	y	float[]	0	RET	$ == null
12382	MathArrays.java	equals	x	float[]	0	NIL-FOR	i < $.length
154	MathArrays.java	equalsIncludingNaN	x	float[]	0	RET	$ == null
154	MathArrays.java	equalsIncludingNaN	y	float[]	0	RET	$ == null
12383	MathArrays.java	equalsIncludingNaN	x	float[]	0	NIL-FOR	i < $.length
157	MathArrays.java	equals	x	double[]	0	RET	$ == null
157	MathArrays.java	equals	y	double[]	0	RET	$ == null
12384	MathArrays.java	equals	x	double[]	0	NIL-FOR	i < $.length
160	MathArrays.java	equalsIncludingNaN	x	double[]	0	RET	$ == null
160	MathArrays.java	equalsIncludingNaN	y	double[]	0	RET	$ == null
12385	MathArrays.java	equalsIncludingNaN	x	double[]	0	NIL-FOR	i < $.length
163	MathArrays.java	normalizeArray	normalizedSum	double	0	MathIllegalArgumentException	Double.isInfinite($)
164	MathArrays.java	normalizeArray	normalizedSum	double	0	MathIllegalArgumentException	Double.isNaN($)
12386	MathArrays.java	normalizeArray	len	int	0	NIL-FOR	i < $
167	MathArrays.java	normalizeArray	sum	double	0	MathArithmeticException	$ == 0
12387	MathArrays.java	normalizeArray	len	int	0	NIL-FOR	i < $
169	MathArrays.java	buildArray	columns	int	1	DEF	$ < 0
12388	MathArrays.java	buildArray	i	int	0	NIL-FOR	$ < rows
12388	MathArrays.java	buildArray	rows	int	0	NIL-FOR	i < $
170	MathArrays.java	convolve	xLen	int	0	NoDataException	$ == 0
170	MathArrays.java	convolve	hLen	int	0	NoDataException	$ == 0
12390	MathArrays.java	convolve	j	int	0	NIL-WHILE	$ >= 0
12390	MathArrays.java	convolve	hLen	int	0	NIL-WHILE	k < $
512	MathUtils.java	copySign	magnitude	byte	1	RET	$ >= 0
512	MathUtils.java	copySign	magnitude	byte	1	RET	$ < 0
512	MathUtils.java	copySign	sign	byte	1	RET	$ < 0
512	MathUtils.java	copySign	sign	byte	1	RET	$ >= 0
513	MathUtils.java	copySign	sign	byte	1	MathArithmeticException	$ >= 0
514	MathUtils.java	copySign	magnitude	short	1	RET	$ < 0
514	MathUtils.java	copySign	magnitude	short	1	RET	$ >= 0
514	MathUtils.java	copySign	sign	short	1	RET	$ >= 0
514	MathUtils.java	copySign	sign	short	1	RET	$ < 0
515	MathUtils.java	copySign	sign	short	1	MathArithmeticException	$ >= 0
516	MathUtils.java	copySign	magnitude	int	1	RET	$ >= 0
516	MathUtils.java	copySign	magnitude	int	1	RET	$ < 0
516	MathUtils.java	copySign	sign	int	1	RET	$ < 0
516	MathUtils.java	copySign	sign	int	1	RET	$ >= 0
517	MathUtils.java	copySign	sign	int	1	MathArithmeticException	$ >= 0
518	MathUtils.java	copySign	magnitude	long	1	RET	$ >= 0
518	MathUtils.java	copySign	magnitude	long	1	RET	$ < 0
518	MathUtils.java	copySign	sign	long	1	RET	$ < 0
518	MathUtils.java	copySign	sign	long	1	RET	$ >= 0
519	MathUtils.java	copySign	sign	long	1	MathArithmeticException	$ >= 0
520	MathUtils.java	checkFinite	x	double	0	NotFiniteNumberException	Double.isInfinite($)
520	MathUtils.java	checkFinite	x	double	0	NotFiniteNumberException	Double.isNaN($)
12413	MathUtils.java	checkFinite	val	double[]	0	NIL-FOR	i < $.length
521	MathUtils.java	checkFinite	x	double	0	NotFiniteNumberException	Double.isNaN($)
521	MathUtils.java	checkFinite	x	double	0	NotFiniteNumberException	Double.isInfinite($)
522	MathUtils.java	checkNotNull	o	Object	0	NullArgumentException	$ == null
523	MathUtils.java	checkNotNull	o	Object	0	NullArgumentException	$ == null
1587	MatrixUtils.java	createRealMatrix	data	double[][]	0	NullArgumentException	$ == null
1588	MatrixUtils.java	createFieldMatrix	data	T[][]	0	NullArgumentException	$ == null
13012	MatrixUtils.java	createRealIdentityMatrix	i	int	0	NIL-FOR	$ < dimension
13012	MatrixUtils.java	createRealIdentityMatrix	dimension	int	0	NIL-FOR	i < $
13013	MatrixUtils.java	createFieldIdentityMatrix	row	int	0	NIL-FOR	$ < dimension
13013	MatrixUtils.java	createFieldIdentityMatrix	dimension	int	0	NIL-FOR	row < $
13014	MatrixUtils.java	createRealDiagonalMatrix	diagonal	double[]	0	NIL-FOR	i < $.length
13015	MatrixUtils.java	createFieldDiagonalMatrix	diagonal	T[]	0	NIL-FOR	i < $.length
1589	MatrixUtils.java	createRealVector	data	double[]	0	NullArgumentException	$ == null
1590	MatrixUtils.java	createFieldVector	data	T[]	0	NullArgumentException	$ == null
1591	MatrixUtils.java	createFieldVector	data	T[]	0	ZeroException	$.length == 0
1592	MatrixUtils.java	createRowRealMatrix	rowData	double[]	0	NullArgumentException	$ == null
13016	MatrixUtils.java	createRowRealMatrix	i	int	0	NIL-FOR	$ < nCols
13016	MatrixUtils.java	createRowRealMatrix	nCols	int	0	NIL-FOR	i < $
1593	MatrixUtils.java	createRowFieldMatrix	rowData	T[]	0	NullArgumentException	$ == null
1594	MatrixUtils.java	createRowFieldMatrix	nCols	int	0	NoDataException	$ == 0
13017	MatrixUtils.java	createRowFieldMatrix	i	int	0	NIL-FOR	$ < nCols
13017	MatrixUtils.java	createRowFieldMatrix	nCols	int	0	NIL-FOR	i < $
1595	MatrixUtils.java	createColumnRealMatrix	columnData	double[]	0	NullArgumentException	$ == null
13018	MatrixUtils.java	createColumnRealMatrix	i	int	0	NIL-FOR	$ < nRows
13018	MatrixUtils.java	createColumnRealMatrix	nRows	int	0	NIL-FOR	i < $
1596	MatrixUtils.java	createColumnFieldMatrix	columnData	T[]	0	NullArgumentException	$ == null
1597	MatrixUtils.java	createColumnFieldMatrix	nRows	int	0	NoDataException	$ == 0
13019	MatrixUtils.java	createColumnFieldMatrix	i	int	0	NIL-FOR	$ < nRows
13019	MatrixUtils.java	createColumnFieldMatrix	nRows	int	0	NIL-FOR	i < $
1599	MatrixUtils.java	isSymmetricInternal	raiseException	boolean	1	NonSquareMatrixException	$
13020	MatrixUtils.java	isSymmetricInternal	i	int	0	NIL-FOR	$ < rows
13020	MatrixUtils.java	isSymmetricInternal	rows	int	0	NIL-FOR	i < $
13021	MatrixUtils.java	isSymmetricInternal	j	int	0	NIL-FOR	$ < rows
13021	MatrixUtils.java	isSymmetricInternal	rows	int	0	NIL-FOR	j < $
1601	MatrixUtils.java	isSymmetricInternal	raiseException	boolean	1	NonSymmetricMatrixException	$
1602	MatrixUtils.java	checkRowIndex	row	int	0	OutOfRangeException	$ < 0
1603	MatrixUtils.java	checkColumnIndex	column	int	0	OutOfRangeException	$ < 0
1606	MatrixUtils.java	checkSubMatrixIndex	selectedRows	int[]	0	NullArgumentException	$ == null
1607	MatrixUtils.java	checkSubMatrixIndex	selectedColumns	int[]	0	NullArgumentException	$ == null
1608	MatrixUtils.java	checkSubMatrixIndex	selectedRows	int[]	0	NoDataException	$.length == 0
1609	MatrixUtils.java	checkSubMatrixIndex	selectedColumns	int[]	0	NoDataException	$.length == 0
13022	MatrixUtils.java	serializeRealVector	i	int	0	NIL-FOR	$ < n
13022	MatrixUtils.java	serializeRealVector	n	int	0	NIL-FOR	i < $
13023	MatrixUtils.java	deserializeRealVector	i	int	0	NIL-FOR	$ < n
13023	MatrixUtils.java	deserializeRealVector	n	int	0	NIL-FOR	i < $
13024	MatrixUtils.java	serializeRealMatrix	i	int	0	NIL-FOR	$ < n
13024	MatrixUtils.java	serializeRealMatrix	n	int	0	NIL-FOR	i < $
13025	MatrixUtils.java	serializeRealMatrix	j	int	0	NIL-FOR	$ < m
13025	MatrixUtils.java	serializeRealMatrix	m	int	0	NIL-FOR	j < $
13026	MatrixUtils.java	deserializeRealMatrix	i	int	0	NIL-FOR	$ < n
13026	MatrixUtils.java	deserializeRealMatrix	n	int	0	NIL-FOR	i < $
13027	MatrixUtils.java	deserializeRealMatrix	j	int	0	NIL-FOR	$ < m
13027	MatrixUtils.java	deserializeRealMatrix	m	int	0	NIL-FOR	j < $
1613	MatrixUtils.java	solveLowerTriangularSystem	rm	RealMatrix	0	DimensionMismatchException	$ == null
1613	MatrixUtils.java	solveLowerTriangularSystem	b	RealVector	0	DimensionMismatchException	$ == null
13028	MatrixUtils.java	solveLowerTriangularSystem	i	int	0	NIL-FOR	$ < rows
13028	MatrixUtils.java	solveLowerTriangularSystem	rows	int	0	NIL-FOR	i < $
1616	MatrixUtils.java	solveUpperTriangularSystem	rm	RealMatrix	0	DimensionMismatchException	$ == null
1616	MatrixUtils.java	solveUpperTriangularSystem	b	RealVector	0	DimensionMismatchException	$ == null
2779	MaxEval.java	MaxEval	max	int	0	NotStrictlyPositiveException	$ <= 0
2780	MaxIter.java	MaxIter	max	int	0	NotStrictlyPositiveException	$ <= 0
3147	MersenneTwister.java	setSeed	seed	int[]	0	RET	$ == null
14179	MersenneTwister.java	setSeed	k	int	0	NIL-FOR	$ != 0
14180	MersenneTwister.java	setSeed	k	int	0	NIL-FOR	$ != 0
3955	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	xval	double[][]	0	NullArgumentException	$ == null
3955	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	yval	double[]	0	NullArgumentException	$ == null
3956	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	xval	double[][]	0	NoDataException	$.length == 0
14550	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	xval	double[][]	0	NIL-FOR	i < $.length
3959	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	xvalI	double[]	0	NullArgumentException	$ == null
14551	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	microsphereElements	int	0	NIL-FOR	i < $
3962	MicrosphereInterpolatingFunction.java	value	sd	Entry<RealVector,Double>	0	DEF	$ != null
3987	MicrosphereInterpolator.java	MicrosphereInterpolator	exponent	int	0	NotPositiveException	$ < 0
3988	MicrosphereInterpolator.java	MicrosphereInterpolator	elements	int	0	NotStrictlyPositiveException	$ <= 0
14758	MidPointIntegrator.java	stage	np	long	0	NIL-FOR	i < $
2527	MillerUpdatingRegression.java	MillerUpdatingRegression	includeConstant	boolean	1	DEF	$
2528	MillerUpdatingRegression.java	MillerUpdatingRegression	errorTolerance	double	1	DEF	$ > 0
2531	MillerUpdatingRegression.java	addObservations	x	double[][]	0	ModelSpecificationException	$ == null
2531	MillerUpdatingRegression.java	addObservations	y	double[]	0	ModelSpecificationException	$ == null
2532	MillerUpdatingRegression.java	addObservations	x	double[][]	0	ModelSpecificationException	$.length == 0
13779	MillerUpdatingRegression.java	addObservations	x	double[][]	0	NIL-FOR	i < $.length
13780	MillerUpdatingRegression.java	include	x	double[]	0	NIL-FOR	i < $.length
2534	MillerUpdatingRegression.java	include	w	double	0	RET	$ == 0.0
2535	MillerUpdatingRegression.java	include	xi	double	0	DEF	$ == 0.0
13785	MillerUpdatingRegression.java	tolset	col	int	0	NIL-FOR	row < $
13787	MillerUpdatingRegression.java	regcf	nreq	int	0	NIL-FOR	j < $
2547	MillerUpdatingRegression.java	regcf	rankProblem	boolean	0	DEF	$
13788	MillerUpdatingRegression.java	regcf	nreq	int	0	NIL-FOR	i < $
13793	MillerUpdatingRegression.java	ss	i	int	0	NIL-FOR	$ > 0
13794	MillerUpdatingRegression.java	cov	nreq	int	0	NIL-FOR	i < $
13795	MillerUpdatingRegression.java	cov	nreq	int	0	NIL-FOR	row < $
13796	MillerUpdatingRegression.java	cov	nreq	int	0	NIL-FOR	col < $
13797	MillerUpdatingRegression.java	cov	nreq	int	0	NIL-FOR	k < $
13798	MillerUpdatingRegression.java	inverse	row	int	0	NIL-FOR	$ > 0
13802	MillerUpdatingRegression.java	getPartialCorrelations	col	int	0	NIL-FOR	row < $
13805	MillerUpdatingRegression.java	getPartialCorrelations	col1	int	0	NIL-FOR	row < $
2571	MillerUpdatingRegression.java	vmove	bSkipTo40	boolean	0	DEF	$
2572	MillerUpdatingRegression.java	vmove	m	int	0	DEF	$ > 0
13812	MillerUpdatingRegression.java	vmove	row	int	0	NIL-FOR	$ < m
13812	MillerUpdatingRegression.java	vmove	m	int	0	NIL-FOR	row < $
13814	MillerUpdatingRegression.java	reorderRegressors	list	int[]	0	NIL-FOR	j < $.length
13816	MillerUpdatingRegression.java	getDiagonalOfHatMatrix	col	int	0	NIL-FOR	row < $
13818	MillerUpdatingRegression.java	regress	numberOfRegressors	int	0	NIL-FOR	i < $
2583	MillerUpdatingRegression.java	regress	needsReorder	boolean	1	RET	$
13820	MillerUpdatingRegression.java	regress	numberOfRegressors	int	0	NIL-FOR	j < $
13821	MillerUpdatingRegression.java	regress	beta	double[]	0	NIL-FOR	i < $.length
13822	MillerUpdatingRegression.java	regress	i	int	0	NIL-FOR	j <= $
13823	MillerUpdatingRegression.java	regress	variablesToInclude	int[]	0	NIL-FOR	i < $.length
2589	MillerUpdatingRegression.java	regress	i	int	0	DEF	$ > 0
2590	MillerUpdatingRegression.java	regress	iExclude	int	1	DEF	$ > 0
13824	MillerUpdatingRegression.java	regress	variablesToInclude	int[]	0	NIL-FOR	i < $.length
2594	MillerUpdatingRegression.java	regress	needsReorder	boolean	1	RET	$
13827	MillerUpdatingRegression.java	regress	series	int[]	0	NIL-FOR	i < $.length
13829	MillerUpdatingRegression.java	regress	beta	double[]	0	NIL-FOR	i < $.length
13830	MillerUpdatingRegression.java	regress	i	int	0	NIL-FOR	j <= $
12489	MixtureMultivariateNormalDistribution.java	createComponents	weights	double[]	0	NIL-FOR	i < $.length
12508	MixtureMultivariateRealDistribution.java	MixtureMultivariateRealDistribution	numComp	int	0	NIL-FOR	i < $
1240	MixtureMultivariateRealDistribution.java	MixtureMultivariateRealDistribution	weightSum	double	0	MathArithmeticException	Double.isInfinite($)
12509	MixtureMultivariateRealDistribution.java	MixtureMultivariateRealDistribution	numComp	int	0	NIL-FOR	i < $
1242	MixtureMultivariateRealDistribution.java	sample	vals	double[]	0	DEF	$ == null
4111	MullerSolver.java	solve	bisect	boolean	1	DEF	$
4104	MullerSolver2.java	doSolve	denominator	double	1	DEF	$ != 0
13890	MultiDirectionalSimplex.java	evaluateNewSimplex	j	int	0	NIL-FOR	$ < dim
13890	MultiDirectionalSimplex.java	evaluateNewSimplex	dim	int	0	NIL-FOR	j < $
13460	MultiDirectionalSimplex.java	evaluateNewSimplex	j	int	0	NIL-FOR	$ < dim
13460	MultiDirectionalSimplex.java	evaluateNewSimplex	dim	int	0	NIL-FOR	j < $
12349	MultidimensionalCounter.java	MultidimensionalCounter	j	int	0	NIL-FOR	$ < dimension
109	MultidimensionalCounter.java	MultidimensionalCounter	tS	int	0	NotStrictlyPositiveException	$ <= 0
110	MultidimensionalCounter.java	getCounts	index	int	0	OutOfRangeException	$ < 0
12352	MultidimensionalCounter.java	getCount	THIS	MultidimensionalCounter	0	NIL-FOR	i < $.dimension
12352	MultidimensionalCounter.java	getCount	i	int	0	NIL-FOR	$ < dimension
112	MultidimensionalCounter.java	getCount	index	int	0	OutOfRangeException	$ < 0
12353	MultidimensionalCounter.java	toString	THIS	MultidimensionalCounter	0	NIL-FOR	i < $.dimension
12353	MultidimensionalCounter.java	toString	i	int	0	NIL-FOR	$ < dimension
14080	MultivariateFunctionMappingAdapter.java	MultivariateFunctionMappingAdapter	lower	double[]	0	NIL-FOR	i < $.length
13654	MultivariateFunctionMappingAdapter.java	MultivariateFunctionMappingAdapter	lower	double[]	0	NIL-FOR	i < $.length
14077	MultivariateFunctionPenaltyAdapter.java	MultivariateFunctionPenaltyAdapter	lower	double[]	0	NIL-FOR	i < $.length
13651	MultivariateFunctionPenaltyAdapter.java	MultivariateFunctionPenaltyAdapter	lower	double[]	0	NIL-FOR	i < $.length
12469	MultivariateNormalDistribution.java	MultivariateNormalDistribution	i	int	0	NIL-FOR	$ < dim
12469	MultivariateNormalDistribution.java	MultivariateNormalDistribution	dim	int	0	NIL-FOR	i < $
12470	MultivariateNormalDistribution.java	MultivariateNormalDistribution	covMatEigenvalues	double[]	0	NIL-FOR	i < $.length
12471	MultivariateNormalDistribution.java	MultivariateNormalDistribution	v	int	0	NIL-FOR	$ < dim
12472	MultivariateNormalDistribution.java	MultivariateNormalDistribution	row	int	0	NIL-FOR	$ < dim
12472	MultivariateNormalDistribution.java	MultivariateNormalDistribution	dim	int	0	NIL-FOR	row < $
12473	MultivariateNormalDistribution.java	MultivariateNormalDistribution	col	int	0	NIL-FOR	$ < dim
12473	MultivariateNormalDistribution.java	MultivariateNormalDistribution	dim	int	0	NIL-FOR	col < $
12474	MultivariateNormalDistribution.java	getStandardDeviations	i	int	0	NIL-FOR	$ < dim
12474	MultivariateNormalDistribution.java	getStandardDeviations	dim	int	0	NIL-FOR	i < $
12475	MultivariateNormalDistribution.java	sample	i	int	0	NIL-FOR	$ < dim
12475	MultivariateNormalDistribution.java	sample	dim	int	0	NIL-FOR	i < $
12476	MultivariateNormalDistribution.java	sample	i	int	0	NIL-FOR	$ < dim
12476	MultivariateNormalDistribution.java	sample	dim	int	0	NIL-FOR	i < $
12477	MultivariateNormalDistribution.java	getExponentTerm	centered	double[]	0	NIL-FOR	i < $.length
12478	MultivariateNormalDistribution.java	getExponentTerm	preMultiplied	double[]	0	NIL-FOR	i < $.length
12490	MultivariateNormalMixtureExpectationMaximization.java	MultivariateNormalMixtureExpectationMaximization	i	int	0	NIL-FOR	$ < data.length
12490	MultivariateNormalMixtureExpectationMaximization.java	MultivariateNormalMixtureExpectationMaximization	data	double[][]	0	NIL-FOR	i < $.length
12492	MultivariateNormalMixtureExpectationMaximization.java	fit	j	int	0	NIL-FOR	$ < k
12492	MultivariateNormalMixtureExpectationMaximization.java	fit	k	int	0	NIL-FOR	j < $
12493	MultivariateNormalMixtureExpectationMaximization.java	fit	i	int	0	NIL-FOR	$ < n
12493	MultivariateNormalMixtureExpectationMaximization.java	fit	n	int	0	NIL-FOR	i < $
12494	MultivariateNormalMixtureExpectationMaximization.java	fit	j	int	0	NIL-FOR	$ < k
12494	MultivariateNormalMixtureExpectationMaximization.java	fit	k	int	0	NIL-FOR	j < $
12495	MultivariateNormalMixtureExpectationMaximization.java	fit	numCols	int	0	NIL-FOR	col < $
12496	MultivariateNormalMixtureExpectationMaximization.java	fit	j	int	0	NIL-FOR	$ < k
12496	MultivariateNormalMixtureExpectationMaximization.java	fit	k	int	0	NIL-FOR	j < $
12497	MultivariateNormalMixtureExpectationMaximization.java	fit	numCols	int	0	NIL-FOR	col < $
12498	MultivariateNormalMixtureExpectationMaximization.java	fit	j	int	0	NIL-FOR	$ < k
12498	MultivariateNormalMixtureExpectationMaximization.java	fit	k	int	0	NIL-FOR	j < $
12499	MultivariateNormalMixtureExpectationMaximization.java	fit	i	int	0	NIL-FOR	$ < n
12499	MultivariateNormalMixtureExpectationMaximization.java	fit	n	int	0	NIL-FOR	i < $
12500	MultivariateNormalMixtureExpectationMaximization.java	fit	j	int	0	NIL-FOR	$ < k
12500	MultivariateNormalMixtureExpectationMaximization.java	fit	k	int	0	NIL-FOR	j < $
12501	MultivariateNormalMixtureExpectationMaximization.java	fit	j	int	0	NIL-FOR	$ < k
12501	MultivariateNormalMixtureExpectationMaximization.java	fit	k	int	0	NIL-FOR	j < $
12502	MultivariateNormalMixtureExpectationMaximization.java	estimate	numRows	int	0	NIL-FOR	i < $
12504	MultivariateNormalMixtureExpectationMaximization.java	estimate	maxIndex	int	0	NIL-FOR	i < $
12505	MultivariateNormalMixtureExpectationMaximization.java	estimate	numCols	int	0	NIL-FOR	j < $
13658	MultivariateSummaryStatistics.java	MultivariateSummaryStatistics	i	int	0	NIL-FOR	$ < k
13658	MultivariateSummaryStatistics.java	MultivariateSummaryStatistics	k	int	0	NIL-FOR	i < $
13659	MultivariateSummaryStatistics.java	addValue	i	int	0	NIL-FOR	$ < k
13660	MultivariateSummaryStatistics.java	getResults	results	double[]	0	NIL-FOR	i < $.length
13661	MultivariateSummaryStatistics.java	getStandardDeviation	i	int	0	NIL-FOR	$ < k
13662	MultivariateSummaryStatistics.java	append	i	int	0	NIL-FOR	$ < data.length
13662	MultivariateSummaryStatistics.java	append	data	double[]	0	NIL-FOR	i < $.length
2236	MultivariateSummaryStatistics.java	append	i	int	0	DEF	$ > 0
13663	MultivariateSummaryStatistics.java	clear	i	int	0	NIL-FOR	$ < k
3205	NPointCrossover.java	NPointCrossover	crossoverPoints	int	0	NotStrictlyPositiveException	$ <= 0
14212	NPointCrossover.java	mate	crossoverIndex	int	0	NIL-FOR	j < $
14213	NPointCrossover.java	mate	length	int	0	NIL-FOR	j < $
13759	NaturalRanking.java	rank	i	int	0	NIL-FOR	$ < data.length
13759	NaturalRanking.java	rank	data	double[]	0	NIL-FOR	i < $.length
13760	NaturalRanking.java	rank	ranks	IntDoublePair[]	0	NIL-FOR	i < $.length
13761	NaturalRanking.java	removeNaNs	ranks	IntDoublePair[]	0	NIL-FOR	i < $.length
13763	NaturalRanking.java	recodeNaNs	ranks	IntDoublePair[]	0	NIL-FOR	i < $.length
13764	NaturalRanking.java	containsNaNs	ranks	IntDoublePair[]	0	NIL-FOR	i < $.length
13765	NaturalRanking.java	resolveTie	iterator	Iterator<Integer>	0	NIL-WHILE	$.hasNext()
13766	NaturalRanking.java	resolveTie	iterator	Iterator<Integer>	0	NIL-WHILE	$.hasNext()
13767	NaturalRanking.java	fill	iterator	Iterator<Integer>	0	NIL-WHILE	$.hasNext()
13768	NaturalRanking.java	restoreNaNs	iterator	Iterator<Integer>	0	NIL-WHILE	$.hasNext()
13769	NaturalRanking.java	getNanPositions	ranks	IntDoublePair[]	0	NIL-FOR	i < $.length
14067	NelderMeadSimplex.java	iterate	i	int	0	NIL-FOR	$ < n
14067	NelderMeadSimplex.java	iterate	n	int	0	NIL-FOR	i < $
14068	NelderMeadSimplex.java	iterate	j	int	0	NIL-FOR	$ < n
14068	NelderMeadSimplex.java	iterate	n	int	0	NIL-FOR	j < $
14069	NelderMeadSimplex.java	iterate	j	int	0	NIL-FOR	$ < n
14069	NelderMeadSimplex.java	iterate	n	int	0	NIL-FOR	j < $
14070	NelderMeadSimplex.java	iterate	j	int	0	NIL-FOR	$ < n
14070	NelderMeadSimplex.java	iterate	n	int	0	NIL-FOR	j < $
14071	NelderMeadSimplex.java	iterate	j	int	0	NIL-FOR	$ < n
14071	NelderMeadSimplex.java	iterate	n	int	0	NIL-FOR	j < $
14072	NelderMeadSimplex.java	iterate	j	int	0	NIL-FOR	$ < n
14072	NelderMeadSimplex.java	iterate	n	int	0	NIL-FOR	j < $
14073	NelderMeadSimplex.java	iterate	j	int	0	NIL-FOR	$ < n
14073	NelderMeadSimplex.java	iterate	n	int	0	NIL-FOR	j < $
14074	NelderMeadSimplex.java	iterate	n	int	0	NIL-FOR	i <= $
14075	NelderMeadSimplex.java	iterate	j	int	0	NIL-FOR	$ < n
14075	NelderMeadSimplex.java	iterate	n	int	0	NIL-FOR	j < $
13637	NelderMeadSimplex.java	iterate	i	int	0	NIL-FOR	$ < n
13637	NelderMeadSimplex.java	iterate	n	int	0	NIL-FOR	i < $
13638	NelderMeadSimplex.java	iterate	j	int	0	NIL-FOR	$ < n
13638	NelderMeadSimplex.java	iterate	n	int	0	NIL-FOR	j < $
13639	NelderMeadSimplex.java	iterate	j	int	0	NIL-FOR	$ < n
13639	NelderMeadSimplex.java	iterate	n	int	0	NIL-FOR	j < $
13640	NelderMeadSimplex.java	iterate	j	int	0	NIL-FOR	$ < n
13640	NelderMeadSimplex.java	iterate	n	int	0	NIL-FOR	j < $
13641	NelderMeadSimplex.java	iterate	j	int	0	NIL-FOR	$ < n
13641	NelderMeadSimplex.java	iterate	n	int	0	NIL-FOR	j < $
13642	NelderMeadSimplex.java	iterate	j	int	0	NIL-FOR	$ < n
13642	NelderMeadSimplex.java	iterate	n	int	0	NIL-FOR	j < $
13643	NelderMeadSimplex.java	iterate	j	int	0	NIL-FOR	$ < n
13643	NelderMeadSimplex.java	iterate	n	int	0	NIL-FOR	j < $
13644	NelderMeadSimplex.java	iterate	n	int	0	NIL-FOR	i <= $
13645	NelderMeadSimplex.java	iterate	j	int	0	NIL-FOR	$ < n
13645	NelderMeadSimplex.java	iterate	n	int	0	NIL-FOR	j < $
12448	NestedLoops.java	NestedLoops	loop	Vector2D[]	0	NIL-FOR	i < $.length
12449	NestedLoops.java	add	iterator	Iterator<NestedLoops>	0	NIL-FOR	$.hasNext()
14084	NonLinearConjugateGradientOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < n
14084	NonLinearConjugateGradientOptimizer.java	doOptimize	n	int	0	NIL-FOR	i < $
14085	NonLinearConjugateGradientOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < n
14085	NonLinearConjugateGradientOptimizer.java	doOptimize	n	int	0	NIL-FOR	i < $
3056	NonLinearConjugateGradientOptimizer.java	doOptimize	previous	PointValuePair	0	RET	$ != null
14086	NonLinearConjugateGradientOptimizer.java	doOptimize	point	double[]	0	NIL-FOR	i < $.length
14087	NonLinearConjugateGradientOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < n
14087	NonLinearConjugateGradientOptimizer.java	doOptimize	n	int	0	NIL-FOR	i < $
14088	NonLinearConjugateGradientOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < n
14088	NonLinearConjugateGradientOptimizer.java	doOptimize	n	int	0	NIL-FOR	i < $
14089	NonLinearConjugateGradientOptimizer.java	doOptimize	r	double[]	0	NIL-FOR	i < $.length
3058	NonLinearConjugateGradientOptimizer.java	doOptimize	beta	double	1	DEF	$ < 0
14090	NonLinearConjugateGradientOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < n
14090	NonLinearConjugateGradientOptimizer.java	doOptimize	n	int	0	NIL-FOR	i < $
1956	NonLinearConjugateGradientOptimizer.java	setInitialStep	initialStep	double	1	DEF	$ <= 0
13432	NonLinearConjugateGradientOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < n
13432	NonLinearConjugateGradientOptimizer.java	doOptimize	n	int	0	NIL-FOR	i < $
13433	NonLinearConjugateGradientOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < n
13433	NonLinearConjugateGradientOptimizer.java	doOptimize	n	int	0	NIL-FOR	i < $
1958	NonLinearConjugateGradientOptimizer.java	doOptimize	previous	PointValuePair	0	RET	$ != null
13435	NonLinearConjugateGradientOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < n
13435	NonLinearConjugateGradientOptimizer.java	doOptimize	n	int	0	NIL-FOR	i < $
13436	NonLinearConjugateGradientOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < n
13436	NonLinearConjugateGradientOptimizer.java	doOptimize	n	int	0	NIL-FOR	i < $
13437	NonLinearConjugateGradientOptimizer.java	doOptimize	r	double[]	0	NIL-FOR	i < $.length
1961	NonLinearConjugateGradientOptimizer.java	doOptimize	beta	double	1	DEF	$ < 0
13438	NonLinearConjugateGradientOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < n
13438	NonLinearConjugateGradientOptimizer.java	doOptimize	n	int	0	NIL-FOR	i < $
14310	NordsieckStepInterpolator.java	rescale	nData	double[][]	0	NIL-FOR	i < $.length
14311	NordsieckStepInterpolator.java	rescale	nDataI	double[]	0	NIL-FOR	j < $.length
14312	NordsieckStepInterpolator.java	computeInterpolatedStateAndDerivatives	i	int	0	NIL-FOR	$ >= 0
14313	NordsieckStepInterpolator.java	computeInterpolatedStateAndDerivatives	nDataI	double[]	0	NIL-FOR	j < $.length
14315	NordsieckStepInterpolator.java	writeExternal	j	int	0	NIL-FOR	$ < n
14315	NordsieckStepInterpolator.java	writeExternal	n	int	0	NIL-FOR	j < $
3409	NordsieckStepInterpolator.java	readExternal	hasScaled	boolean	1	DEF	$
14316	NordsieckStepInterpolator.java	readExternal	j	int	0	NIL-FOR	$ < n
14316	NordsieckStepInterpolator.java	readExternal	n	int	0	NIL-FOR	j < $
3410	NordsieckStepInterpolator.java	readExternal	hasNordsieck	boolean	1	DEF	$
3411	NordsieckStepInterpolator.java	readExternal	hasScaled	boolean	1	DEF	$
3411	NordsieckStepInterpolator.java	readExternal	hasNordsieck	boolean	1	DEF	$
1112	NormalDistribution.java	NormalDistribution	sd	double	0	NotStrictlyPositiveException	$ <= 0
1114	NormalDistribution.java	inverseCumulativeProbability	p	double	0	OutOfRangeException	$ < 0.0
13831	OLSMultipleLinearRegression.java	calculateHat	i	int	0	NIL-FOR	$ < n
13831	OLSMultipleLinearRegression.java	calculateHat	n	int	0	NIL-FOR	i < $
13832	OLSMultipleLinearRegression.java	calculateHat	j	int	0	NIL-FOR	$ < n
13832	OLSMultipleLinearRegression.java	calculateHat	n	int	0	NIL-FOR	j < $
2597	OLSMultipleLinearRegression.java	calculateHat	p	int	1	DEF	i < $
14229	OnePointCrossover.java	crossover	crossoverIndex	int	0	NIL-FOR	i < $
14230	OnePointCrossover.java	crossover	length	int	0	NIL-FOR	i < $
2400	OneWayAnova.java	anovaTest	alpha	double	0	OutOfRangeException	$ <= 0
2401	OneWayAnova.java	anovaStats	allowOneElementData	boolean	0	DimensionMismatchException	$
239	OpenIntToDoubleHashMap.java	computeCapacity	expectedSize	int	0	RET	$ == 0
258	OpenIntToDoubleHashMap.java	put	index	int	0	DEF	$ < 0
259	OpenIntToDoubleHashMap.java	put	newMapping	boolean	0	DEF	$
12404	OpenIntToDoubleHashMap.java	growTable	oldLength	int	0	NIL-FOR	i < $
527	OpenIntToFieldHashMap.java	computeCapacity	expectedSize	int	0	RET	$ == 0
546	OpenIntToFieldHashMap.java	put	index	int	0	DEF	$ < 0
547	OpenIntToFieldHashMap.java	put	newMapping	boolean	0	DEF	$
12417	OpenIntToFieldHashMap.java	growTable	oldLength	int	0	NIL-FOR	i < $
13338	OpenMapRealMatrix.java	add	iterator	Iterator	0	NIL-FOR	$.hasNext()
13339	OpenMapRealMatrix.java	subtract	iterator	Iterator	0	NIL-FOR	$.hasNext()
13340	OpenMapRealMatrix.java	multiply	iterator	Iterator	0	NIL-FOR	$.hasNext()
13341	OpenMapRealMatrix.java	multiply	outCols	int	0	NIL-FOR	j < $
13342	OpenMapRealMatrix.java	multiply	iterator	Iterator	0	NIL-FOR	$.hasNext()
13343	OpenMapRealMatrix.java	multiply	outCols	int	0	NIL-FOR	j < $
1809	OpenMapRealMatrix.java	multiply	outValue	double	1	DEF	$ == 0.0
1810	OpenMapRealMatrix.java	setEntry	value	double	1	DEF	$ == 0.0
1811	OpenMapRealMatrix.java	addToEntry	value	double	1	DEF	$ == 0.0
1812	OpenMapRealMatrix.java	multiplyEntry	value	double	1	DEF	$ == 0.0
13266	OpenMapRealVector.java	add	iter	Iterator	0	NIL-WHILE	$.hasNext()
13267	OpenMapRealVector.java	append	iter	Iterator	0	NIL-WHILE	$.hasNext()
13269	OpenMapRealVector.java	ebeDivide	i	int	0	NIL-FOR	$ < n
13269	OpenMapRealVector.java	ebeDivide	n	int	0	NIL-FOR	i < $
13270	OpenMapRealVector.java	ebeMultiply	iter	Iterator	0	NIL-WHILE	$.hasNext()
1748	OpenMapRealVector.java	ebeMultiply	v	RealVector	0	DEF	$.isNaN()
13271	OpenMapRealVector.java	ebeMultiply	i	int	0	NIL-FOR	$ < n
13271	OpenMapRealVector.java	ebeMultiply	n	int	0	NIL-FOR	i < $
1749	OpenMapRealVector.java	ebeMultiply	y	double	1	DEF	Double.isNaN($)
1750	OpenMapRealVector.java	ebeMultiply	y	double	0	DEF	Double.isInfinite($)
1751	OpenMapRealVector.java	getSubVector	n	int	0	NotPositiveException	$ < 0
13272	OpenMapRealVector.java	getSubVector	iter	Iterator	0	NIL-WHILE	$.hasNext()
13273	OpenMapRealVector.java	getDistance	iter	Iterator	0	NIL-WHILE	$.hasNext()
13274	OpenMapRealVector.java	getDistance	iter	Iterator	0	NIL-WHILE	$.hasNext()
13275	OpenMapRealVector.java	getL1Distance	iter	Iterator	0	NIL-WHILE	$.hasNext()
13276	OpenMapRealVector.java	getL1Distance	iter	Iterator	0	NIL-WHILE	$.hasNext()
13277	OpenMapRealVector.java	getLInfDistance	iter	Iterator	0	NIL-WHILE	$.hasNext()
13278	OpenMapRealVector.java	getLInfDistance	iter	Iterator	0	NIL-WHILE	$.hasNext()
13279	OpenMapRealVector.java	isInfinite	iter	Iterator	0	NIL-WHILE	$.hasNext()
1760	OpenMapRealVector.java	isInfinite	value	double	0	RET	Double.isNaN($)
1761	OpenMapRealVector.java	isInfinite	value	double	0	DEF	Double.isInfinite($)
13280	OpenMapRealVector.java	isNaN	iter	Iterator	0	NIL-WHILE	$.hasNext()
13284	OpenMapRealVector.java	subtract	iter	Iterator	0	NIL-WHILE	$.hasNext()
13285	OpenMapRealVector.java	unitize	iter	Iterator	0	NIL-WHILE	$.hasNext()
13286	OpenMapRealVector.java	toArray	iter	Iterator	0	NIL-WHILE	$.hasNext()
13287	OpenMapRealVector.java	hashCode	iter	Iterator	0	NIL-WHILE	$.hasNext()
1768	OpenMapRealVector.java	equals	obj	Object	0	RET	this == $
13288	OpenMapRealVector.java	equals	iter	Iterator	0	NIL-WHILE	$.hasNext()
13289	OpenMapRealVector.java	equals	iter	Iterator	0	NIL-WHILE	$.hasNext()
14232	OrderedCrossover.java	mate	length	int	0	NIL-FOR	i <= $
12423	OrderedTuple.java	OrderedTuple	components	double	0	NIL-FOR	i < $.length
568	OrderedTuple.java	OrderedTuple	m	long	0	DEF	$ != 0
12426	OrderedTuple.java	compareTo	limit	int	0	NIL-FOR	i < $
585	OrderedTuple.java	equals	THIS	OrderedTuple	1	RET	$ == other
585	OrderedTuple.java	equals	other	Object	1	RET	this == $
12427	OrderedTuple.java	computeMSB	scale	int	0	NIL-WHILE	$ != 0
12428	OrderedTuple.java	computeLSB	scale	int	0	NIL-WHILE	$ != 0
589	OrderedTuple.java	getBit	e	int	1	RET	k < $
12437	OutlineExtractor.java	getOutline	outline	Vector2D[][]	0	NIL-FOR	i < $.length
12438	OutlineExtractor.java	getOutline	end	int	0	NIL-WHILE	j < $
171	Pair.java	equals	o	Object	0	RET	this == $
14302	ParameterJacobianWrapper.java	computeParameterJacobian	i	int	0	NIL-FOR	$ < n
14302	ParameterJacobianWrapper.java	computeParameterJacobian	n	int	0	NIL-FOR	i < $
1243	ParetoDistribution.java	ParetoDistribution	scale	double	0	NotStrictlyPositiveException	$ <= 0
1244	ParetoDistribution.java	ParetoDistribution	shape	double	0	NotStrictlyPositiveException	$ <= 0
1161	PascalDistribution.java	PascalDistribution	r	int	0	NotStrictlyPositiveException	$ <= 0
1162	PascalDistribution.java	PascalDistribution	p	double	0	OutOfRangeException	$ > 1
1162	PascalDistribution.java	PascalDistribution	p	double	0	OutOfRangeException	$ < 0
1163	PascalDistribution.java	probability	x	int	1	DEF	$ < 0
1164	PascalDistribution.java	cumulativeProbability	x	int	1	DEF	$ < 0
2475	PearsonsCorrelation.java	PearsonsCorrelation	covarianceMatrix	RealMatrix	0	NullArgumentException	$ == null
13742	PearsonsCorrelation.java	getCorrelationStandardErrors	nVars	int	0	NIL-FOR	i < $
13743	PearsonsCorrelation.java	getCorrelationStandardErrors	nVars	int	0	NIL-FOR	j < $
13744	PearsonsCorrelation.java	getCorrelationPValues	nVars	int	0	NIL-FOR	i < $
13745	PearsonsCorrelation.java	getCorrelationPValues	nVars	int	0	NIL-FOR	j < $
13746	PearsonsCorrelation.java	computeCorrelationMatrix	nVars	int	0	NIL-FOR	i < $
13747	PearsonsCorrelation.java	computeCorrelationMatrix	i	int	0	NIL-FOR	j < $
13749	PearsonsCorrelation.java	covarianceToCorrelation	nVars	int	0	NIL-FOR	i < $
13750	PearsonsCorrelation.java	covarianceToCorrelation	i	int	0	NIL-FOR	j < $
2345	Percentile.java	setData	values	double[]	1	DEF	$ == null
2346	Percentile.java	setData	values	double[]	1	DEF	$ == null
2347	Percentile.java	evaluate	p	double	0	OutOfRangeException	$ <= 0
2348	Percentile.java	evaluate	length	int	0	RET	$ == 0
2349	Percentile.java	evaluate	length	int	0	RET	$ == 1
2356	Percentile.java	select	pivot	int	1	DEF	k < $
13690	Percentile.java	partition	j	int	0	NIL-WHILE	i < $
13691	Percentile.java	partition	j	int	0	NIL-WHILE	i < $
13692	Percentile.java	partition	j	int	0	NIL-WHILE	i < $
2360	Percentile.java	partition	j	int	0	DEF	i < $
13693	Percentile.java	insertionSort	end	int	0	NIL-FOR	j < $
2362	Percentile.java	setQuantile	p	double	0	OutOfRangeException	$ <= 0
1220	PoissonDistribution.java	PoissonDistribution	p	double	0	NotStrictlyPositiveException	$ <= 0
1221	PoissonDistribution.java	probability	x	int	1	DEF	$ < 0
1222	PoissonDistribution.java	probability	x	int	1	DEF	$ == 0
1223	PoissonDistribution.java	cumulativeProbability	x	int	0	RET	$ < 0
1230	PoissonDistribution.java	nextPoisson	a	int	0	DEF	$ == 0
12463	PollardRho.java	rhoBrent	r	int	0	NIL-FOR	i < $
12464	PollardRho.java	rhoBrent	r	int	0	NIL-DOWHILE	k < $
12465	PollardRho.java	rhoBrent	bound	int	0	NIL-FOR	i < $
1084	PollardRho.java	gcdPositive	a	int	1	RET	$ == 0
1085	PollardRho.java	gcdPositive	b	int	0	RET	$ == 0
827	PolygonsSet.java	verticesToTree	n	int	0	RET	$ == 0
12442	PolygonsSet.java	verticesToTree	i	int	0	NIL-FOR	$ < n
12442	PolygonsSet.java	verticesToTree	n	int	0	NIL-FOR	i < $
12443	PolygonsSet.java	verticesToTree	i	int	0	NIL-FOR	$ < n
12443	PolygonsSet.java	verticesToTree	n	int	0	NIL-FOR	i < $
828	PolygonsSet.java	verticesToTree	line	Line	0	DEF	$ == null
12444	PolygonsSet.java	insertEdges	inserted	Edge	0	NIL-WHILE	$ == null
832	PolygonsSet.java	insertEdges	inserted	Edge	0	RET	$ == null
833	PolygonsSet.java	insertEdges	parent	BSPTree<Euclidean2D>	1	DEF	$ == null
841	PolygonsSet.java	computeGeometricalProperties	v	Vector2D[][]	1	DEF	$.length == 0
844	PolygonsSet.java	computeGeometricalProperties	sum	double	1	DEF	$ < 0
847	PolygonsSet.java	getVertices	loop	List<ComparableSegment>	0	DEF	$ != null
850	PolygonsSet.java	getVertices	j	int	0	DEF	$ == 0
12446	PolygonsSet.java	followLoop	end	Vector2D	0	NIL-WHILE	$ != null
12446	PolygonsSet.java	followLoop	open	boolean	0	NIL-WHILE	$
12447	PolygonsSet.java	followLoop	n	Node	0	NIL-FOR	$ != null
855	PolygonsSet.java	followLoop	open	boolean	0	RET	$
856	PolygonsSet.java	followLoop	end	Vector2D	0	MathInternalError	$ == null
856	PolygonsSet.java	followLoop	open	boolean	0	MathInternalError	$
765	PolyhedronsSet.java	recurseFirstIntersection	cut	SubHyperplane<Euclidean3D>	0	RET	$ == null
766	PolyhedronsSet.java	recurseFirstIntersection	offset	double	1	DEF	$ < 0
767	PolyhedronsSet.java	recurseFirstIntersection	in	boolean	0	RET	$
768	PolyhedronsSet.java	recurseFirstIntersection	facet	SubHyperplane<Euclidean3D>	0	RET	$ != null
769	PolyhedronsSet.java	recurseFirstIntersection	crossed	SubHyperplane<Euclidean3D>	0	RET	$ != null
770	PolyhedronsSet.java	recurseFirstIntersection	in	boolean	0	RET	$
771	PolyhedronsSet.java	recurseFirstIntersection	hit3D	Vector3D	0	RET	$ != null
772	PolyhedronsSet.java	recurseFirstIntersection	facet	SubHyperplane<Euclidean3D>	0	RET	$ != null
4240	PolynomialFunction.java	PolynomialFunction	n	int	0	NoDataException	$ == 0
14734	PolynomialFunction.java	PolynomialFunction	n	int	0	NIL-WHILE	$ > 1
4241	PolynomialFunction.java	evaluate	n	int	0	NoDataException	$ == 0
14735	PolynomialFunction.java	evaluate	j	int	0	NIL-FOR	$ >= 0
4242	PolynomialFunction.java	value	n	int	0	NoDataException	$ == 0
14736	PolynomialFunction.java	value	j	int	0	NIL-FOR	$ >= 0
14737	PolynomialFunction.java	add	lowLength	int	0	NIL-FOR	i < $
14738	PolynomialFunction.java	subtract	lowLength	int	0	NIL-FOR	i < $
14739	PolynomialFunction.java	subtract	highLength	int	0	NIL-FOR	i < $
14741	PolynomialFunction.java	multiply	newCoefficients	double[]	0	NIL-FOR	i < $.length
4244	PolynomialFunction.java	differentiate	n	int	0	NoDataException	$ == 0
4245	PolynomialFunction.java	differentiate	n	int	0	RET	$ == 1
14743	PolynomialFunction.java	differentiate	i	int	0	NIL-FOR	$ > 0
4253	PolynomialFunction.java	toString	i	int	0	DEF	$ > 1
4255	PolynomialFunction.java	equals	obj	Object	0	RET	this == $
14725	PolynomialFunctionLagrangeForm.java	evaluateInternal	i	int	0	NIL-FOR	$ < n
14725	PolynomialFunctionLagrangeForm.java	evaluateInternal	n	int	0	NIL-FOR	i < $
14726	PolynomialFunctionLagrangeForm.java	evaluateInternal	i	int	0	NIL-FOR	$ < n
14726	PolynomialFunctionLagrangeForm.java	evaluateInternal	n	int	0	NIL-FOR	i < $
14728	PolynomialFunctionLagrangeForm.java	computeCoefficients	i	int	0	NIL-FOR	$ < n
14728	PolynomialFunctionLagrangeForm.java	computeCoefficients	n	int	0	NIL-FOR	i < $
14729	PolynomialFunctionLagrangeForm.java	computeCoefficients	i	int	0	NIL-FOR	$ < n
14729	PolynomialFunctionLagrangeForm.java	computeCoefficients	n	int	0	NIL-FOR	i < $
14730	PolynomialFunctionLagrangeForm.java	computeCoefficients	j	int	0	NIL-FOR	$ > 0
14731	PolynomialFunctionLagrangeForm.java	computeCoefficients	i	int	0	NIL-FOR	$ < n
14731	PolynomialFunctionLagrangeForm.java	computeCoefficients	n	int	0	NIL-FOR	i < $
14732	PolynomialFunctionLagrangeForm.java	computeCoefficients	j	int	0	NIL-FOR	$ < n
14732	PolynomialFunctionLagrangeForm.java	computeCoefficients	n	int	0	NIL-FOR	j < $
14733	PolynomialFunctionLagrangeForm.java	computeCoefficients	j	int	0	NIL-FOR	$ >= 0
14753	PolynomialFunctionNewtonForm.java	value	i	int	0	NIL-FOR	$ >= 0
14754	PolynomialFunctionNewtonForm.java	evaluate	i	int	0	NIL-FOR	$ >= 0
14755	PolynomialFunctionNewtonForm.java	computeCoefficients	n	int	0	NIL-FOR	i <= $
14756	PolynomialFunctionNewtonForm.java	computeCoefficients	i	int	0	NIL-FOR	$ >= 0
14757	PolynomialFunctionNewtonForm.java	computeCoefficients	j	int	0	NIL-FOR	$ > 0
4261	PolynomialFunctionNewtonForm.java	verifyInputArray	a	double	0	NoDataException	$.length == 0
4261	PolynomialFunctionNewtonForm.java	verifyInputArray	c	double	0	NoDataException	$.length == 0
4222	PolynomialSplineFunction.java	PolynomialSplineFunction	knots	double	0	NullArgumentException	$ == null
4222	PolynomialSplineFunction.java	PolynomialSplineFunction	polynomials	PolynomialFunction	0	NullArgumentException	$ == null
4226	PolynomialSplineFunction.java	value	i	int	0	DEF	$ < 0
14724	PolynomialSplineFunction.java	polynomialSplineDerivative	i	int	0	NIL-FOR	$ < n
4229	PolynomialSplineFunction.java	value	i	int	0	DEF	$ < 0
14745	PolynomialsUtils.java	shift	dp1	int	0	NIL-FOR	i < $
14746	PolynomialsUtils.java	shift	i	int	0	NIL-FOR	j <= $
14747	PolynomialsUtils.java	shift	dp1	int	0	NIL-FOR	i < $
14748	PolynomialsUtils.java	shift	d	int	0	NIL-FOR	i < $
14749	PolynomialsUtils.java	shift	d	int	0	NIL-FOR	j < $
14750	PolynomialsUtils.java	buildPolynomial	degree	int	0	NIL-FOR	i <= $
14751	PolynomialsUtils.java	computeUpToDegree	degree	int	0	NIL-FOR	k < $
14752	PolynomialsUtils.java	computeUpToDegree	i	int	0	NIL-FOR	$ < k
14752	PolynomialsUtils.java	computeUpToDegree	k	int	0	NIL-FOR	i < $
3022	PowellOptimizer.java	PowellOptimizer	abs	double	0	NotStrictlyPositiveException	$ <= 0
14063	PowellOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < n
14063	PowellOptimizer.java	doOptimize	n	int	0	NIL-FOR	i < $
14064	PowellOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < n
14064	PowellOptimizer.java	doOptimize	n	int	0	NIL-FOR	i < $
3024	PowellOptimizer.java	doOptimize	stop	boolean	0	DEF	$
3024	PowellOptimizer.java	doOptimize	checker	ConvergenceChecker<PointValuePair>	0	DEF	$ != null
3025	PowellOptimizer.java	doOptimize	stop	boolean	0	RET	$
14065	PowellOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < n
14065	PowellOptimizer.java	doOptimize	n	int	0	NIL-FOR	i < $
3028	PowellOptimizer.java	doOptimize	t	double	0	DEF	$ < 0.0
14066	PowellOptimizer.java	newPointAndDirection	i	int	0	NIL-FOR	$ < n
14066	PowellOptimizer.java	newPointAndDirection	n	int	0	NIL-FOR	i < $
2194	PowellOptimizer.java	PowellOptimizer	abs	double	0	NotStrictlyPositiveException	$ <= 0
13633	PowellOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < n
13633	PowellOptimizer.java	doOptimize	n	int	0	NIL-FOR	i < $
13634	PowellOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < n
13634	PowellOptimizer.java	doOptimize	n	int	0	NIL-FOR	i < $
2196	PowellOptimizer.java	doOptimize	stop	boolean	0	DEF	$
2196	PowellOptimizer.java	doOptimize	checker	ConvergenceChecker<PointValuePair>	0	DEF	$ != null
2197	PowellOptimizer.java	doOptimize	stop	boolean	0	RET	$
13635	PowellOptimizer.java	doOptimize	i	int	0	NIL-FOR	$ < n
13635	PowellOptimizer.java	doOptimize	n	int	0	NIL-FOR	i < $
2200	PowellOptimizer.java	doOptimize	t	double	0	DEF	$ < 0.0
13636	PowellOptimizer.java	newPointAndDirection	i	int	0	NIL-FOR	$ < n
13636	PowellOptimizer.java	newPointAndDirection	n	int	0	NIL-FOR	i < $
225	Precision.java	equals	xInt	int	0	DEF	$ < 0
226	Precision.java	equals	yInt	int	0	DEF	$ < 0
228	Precision.java	equals	xInt	long	0	DEF	$ < 0
229	Precision.java	equals	yInt	long	0	DEF	$ < 0
230	Precision.java	round	x	double	1	RET	Double.isInfinite($)
231	Precision.java	roundUnscaled	sign	double	1	DEF	$ == -1
232	Precision.java	roundUnscaled	sign	double	1	DEF	$ == -1
1482	PreconditionedIterativeLinearSolver.java	checkParameters	m	RealLinearOperator	0	DimensionMismatchException	$ != null
1060	Primes.java	nextPrime	n	int	0	MathIllegalArgumentException	$ < 0
1062	Primes.java	nextPrime	n	int	0	RET	$ == 1
1018	ProperBigFractionFormat.java	parse	ret	BigFraction	0	RET	$ != null
1019	ProperBigFractionFormat.java	parse	whole	BigInteger	0	RET	$ == null
1020	ProperBigFractionFormat.java	parse	num	BigInteger	0	RET	$ == null
1022	ProperBigFractionFormat.java	parse	den	BigInteger	0	RET	$ == null
1024	ProperBigFractionFormat.java	parse	wholeIsNeg	boolean	0	DEF	$
1025	ProperBigFractionFormat.java	parse	wholeIsNeg	boolean	0	DEF	$
1026	ProperBigFractionFormat.java	setWholeFormat	format	NumberFormat	0	NullArgumentException	$ == null
999	ProperFractionFormat.java	format	whole	int	0	DEF	$ != 0
1000	ProperFractionFormat.java	parse	ret	Fraction	0	RET	$ != null
1001	ProperFractionFormat.java	parse	whole	Number	0	RET	$ == null
1002	ProperFractionFormat.java	parse	num	Number	0	RET	$ == null
1004	ProperFractionFormat.java	parse	den	Number	0	RET	$ == null
1006	ProperFractionFormat.java	setWholeFormat	format	NumberFormat	0	NullArgumentException	$ == null
12874	QRDecomposition.java	getR	row	int	0	NIL-FOR	$ >= 0
12875	QRDecomposition.java	getR	col	int	0	NIL-FOR	$ < n
12875	QRDecomposition.java	getR	n	int	0	NIL-FOR	col < $
12877	QRDecomposition.java	getQT	minor	int	0	NIL-FOR	$ >= 0
12878	QRDecomposition.java	getQT	col	int	0	NIL-FOR	$ < m
12878	QRDecomposition.java	getQT	m	int	0	NIL-FOR	col < $
12879	QRDecomposition.java	getQT	row	int	0	NIL-FOR	$ < m
12879	QRDecomposition.java	getQT	m	int	0	NIL-FOR	row < $
12880	QRDecomposition.java	getQT	row	int	0	NIL-FOR	$ < m
12880	QRDecomposition.java	getQT	m	int	0	NIL-FOR	row < $
12881	QRDecomposition.java	getH	i	int	0	NIL-FOR	$ < m
12881	QRDecomposition.java	getH	m	int	0	NIL-FOR	i < $
950	Quaternion.java	equals	THIS	Quaternion	0	RET	$ == other
950	Quaternion.java	equals	other	Object	0	RET	this == $
12658	RRQRDecomposition.java	performHouseholderReflection	qrt	double[][]	0	NIL-FOR	i < $.length
12660	RRQRDecomposition.java	getP	i	int	0	NIL-FOR	$ < n
12660	RRQRDecomposition.java	getP	n	int	0	NIL-FOR	i < $
1336	RRQRDecomposition.java	getRank	thisNorm	double	0	DEF	$ == 0
3156	RandomDataGenerator.java	nextHexString	len	int	0	NotStrictlyPositiveException	$ <= 0
14187	RandomDataGenerator.java	nextHexString	randomBytes	byte[]	0	NIL-FOR	i < $.length
3159	RandomDataGenerator.java	nextInt	max	int	1	RET	$ <= 0
3162	RandomDataGenerator.java	nextLong	max	long	1	RET	$ <= 0
3165	RandomDataGenerator.java	nextLong	n	long	0	RET	$ > 0
3166	RandomDataGenerator.java	nextSecureHexString	len	int	0	NotStrictlyPositiveException	$ <= 0
14190	RandomDataGenerator.java	nextSecureHexString	hash	byte[]	0	NIL-FOR	i < $.length
3169	RandomDataGenerator.java	nextSecureInt	max	int	1	RET	$ <= 0
3172	RandomDataGenerator.java	nextSecureLong	max	long	1	RET	$ <= 0
3175	RandomDataGenerator.java	nextLong	n	long	0	RET	$ > 0
3176	RandomDataGenerator.java	nextGaussian	sigma	double	0	NotStrictlyPositiveException	$ <= 0
3178	RandomDataGenerator.java	nextUniform	lower	double	0	NotFiniteNumberException	Double.isInfinite($)
3179	RandomDataGenerator.java	nextUniform	upper	double	0	NotFiniteNumberException	Double.isInfinite($)
3180	RandomDataGenerator.java	nextUniform	lower	double	0	NotANumberException	Double.isNaN($)
3180	RandomDataGenerator.java	nextUniform	upper	double	0	NotANumberException	Double.isNaN($)
14192	RandomDataGenerator.java	nextUniform	lowerInclusive	boolean	0	NIL-WHILE	$
3182	RandomDataGenerator.java	nextPermutation	k	int	0	NotStrictlyPositiveException	$ <= 0
14193	RandomDataGenerator.java	nextPermutation	i	int	0	NIL-FOR	$ < k
14193	RandomDataGenerator.java	nextPermutation	k	int	0	NIL-FOR	i < $
3184	RandomDataGenerator.java	nextSample	k	int	0	NotStrictlyPositiveException	$ <= 0
14194	RandomDataGenerator.java	nextSample	i	int	0	NIL-FOR	$ < k
14194	RandomDataGenerator.java	nextSample	k	int	0	NIL-FOR	i < $
3187	RandomDataGenerator.java	shuffle	i	int	1	DEF	$ == 0
14196	RandomDataGenerator.java	getNatural	i	int	0	NIL-FOR	$ < n
14196	RandomDataGenerator.java	getNatural	n	int	0	NIL-FOR	i < $
3250	RandomKey.java	inducedPermutation	index	int	0	MathIllegalArgumentException	$ == -1
12662	RealMatrixFormat.java	format	i	int	0	NIL-FOR	$ < rows
12662	RealMatrixFormat.java	format	rows	int	0	NIL-FOR	i < $
1337	RealMatrixFormat.java	format	j	int	0	DEF	$ > 0
12664	RealMatrixFormat.java	parse	loop	boolean	0	NIL-FOR	$
1346	RealMatrixFormat.java	parse	loop	boolean	0	RET	$
1347	RealMatrixFormat.java	parse	component	Number	1	DEF	$ != null
1782	RealVector.java	checkIndex	index	int	0	OutOfRangeException	$ < 0
1783	RealVector.java	checkIndices	start	int	0	OutOfRangeException	$ < 0
1784	RealVector.java	checkIndices	end	int	0	OutOfRangeException	$ < 0
13290	RealVector.java	add	it	Iterator<Entry>	0	NIL-WHILE	$.hasNext()
13291	RealVector.java	subtract	it	Iterator<Entry>	0	NIL-WHILE	$.hasNext()
1786	RealVector.java	mapAddToSelf	d	double	0	RET	$ != 0
13292	RealVector.java	dotProduct	i	int	0	NIL-FOR	$ < n
13292	RealVector.java	dotProduct	n	int	0	NIL-FOR	i < $
1787	RealVector.java	cosine	norm	double	0	MathArithmeticException	$ == 0
1787	RealVector.java	cosine	vNorm	double	0	MathArithmeticException	$ == 0
13293	RealVector.java	getDistance	it	Iterator<Entry>	0	NIL-WHILE	$.hasNext()
13294	RealVector.java	getNorm	it	Iterator<Entry>	0	NIL-WHILE	$.hasNext()
13295	RealVector.java	getL1Norm	it	Iterator<Entry>	0	NIL-WHILE	$.hasNext()
13296	RealVector.java	getLInfNorm	it	Iterator<Entry>	0	NIL-WHILE	$.hasNext()
13297	RealVector.java	getL1Distance	it	Iterator<Entry>	0	NIL-WHILE	$.hasNext()
13298	RealVector.java	getLInfDistance	it	Iterator<Entry>	0	NIL-WHILE	$.hasNext()
13299	RealVector.java	getMinIndex	iterator	Iterator<Entry>	0	NIL-WHILE	$.hasNext()
13300	RealVector.java	getMaxIndex	iterator	Iterator<Entry>	0	NIL-WHILE	$.hasNext()
13301	RealVector.java	outerProduct	i	int	0	NIL-FOR	$ < m
13301	RealVector.java	outerProduct	m	int	0	NIL-FOR	i < $
13302	RealVector.java	outerProduct	j	int	0	NIL-FOR	$ < n
13302	RealVector.java	outerProduct	n	int	0	NIL-FOR	j < $
1791	RealVector.java	projection	norm2	double	0	MathArithmeticException	$ == 0.0
13303	RealVector.java	set	it	Iterator<Entry>	0	NIL-WHILE	$.hasNext()
13304	RealVector.java	toArray	i	int	0	NIL-FOR	$ < dim
13304	RealVector.java	toArray	dim	int	0	NIL-FOR	i < $
1792	RealVector.java	unitVector	norm	double	0	MathArithmeticException	$ == 0
1793	RealVector.java	unitize	norm	double	0	MathArithmeticException	$ == 0
13305	RealVector.java	mapToSelf	it	Iterator<Entry>	0	NIL-WHILE	$.hasNext()
13307	RealVector.java	walkInDefaultOrder	i	int	0	NIL-FOR	$ < dim
13307	RealVector.java	walkInDefaultOrder	dim	int	0	NIL-FOR	i < $
13308	RealVector.java	walkInDefaultOrder	end	int	0	NIL-FOR	i <= $
13309	RealVector.java	walkInDefaultOrder	i	int	0	NIL-FOR	$ < dim
13309	RealVector.java	walkInDefaultOrder	dim	int	0	NIL-FOR	i < $
13310	RealVector.java	walkInDefaultOrder	end	int	0	NIL-FOR	i <= $
1624	RealVectorFormat.java	format	i	int	0	DEF	$ > 0
13033	RealVectorFormat.java	parse	loop	boolean	0	NIL-FOR	$
1629	RealVectorFormat.java	parse	loop	boolean	0	RET	$
1630	RealVectorFormat.java	parse	component	Number	1	DEF	$ != null
13034	RealVectorFormat.java	parse	i	int	0	NIL-FOR	$ < data.length
13034	RealVectorFormat.java	parse	data	double[]	0	NIL-FOR	i < $.length
13178	RectangularCholeskyDecomposition.java	RectangularCholeskyDecomposition	order	int	0	NIL-FOR	i < $
13179	RectangularCholeskyDecomposition.java	RectangularCholeskyDecomposition	loop	boolean	0	NIL-FOR	$
13180	RectangularCholeskyDecomposition.java	RectangularCholeskyDecomposition	order	int	0	NIL-FOR	i < $
1691	RectangularCholeskyDecomposition.java	RectangularCholeskyDecomposition	r	int	0	NonPositiveDefiniteMatrixException	$ == 0
13181	RectangularCholeskyDecomposition.java	RectangularCholeskyDecomposition	order	int	0	NIL-FOR	i < $
13182	RectangularCholeskyDecomposition.java	RectangularCholeskyDecomposition	order	int	0	NIL-FOR	i < $
13183	RectangularCholeskyDecomposition.java	RectangularCholeskyDecomposition	i	int	0	NIL-FOR	j < $
13184	RectangularCholeskyDecomposition.java	RectangularCholeskyDecomposition	order	int	0	NIL-FOR	i < $
13185	RectangularCholeskyDecomposition.java	RectangularCholeskyDecomposition	r	int	0	NIL-FOR	j < $
650	RegionFactory.java	buildConvex	hyperplanes	Hyperplane<S>	0	RET	$.length == 0
650	RegionFactory.java	buildConvex	hyperplanes	Hyperplane<S>	0	RET	$ == null
653	RegionFactory.java	recurseComplement	attribute	BoundaryAttribute<S>	0	DEF	$ != null
2616	RegressionResults.java	RegressionResults	copyData	boolean	1	DEF	$
13837	RegressionResults.java	RegressionResults	varcov	double[][]	0	NIL-FOR	i < $.length
2617	RegressionResults.java	RegressionResults	rank	int	0	DEF	$ > 0
2618	RegressionResults.java	RegressionResults	containsConstant	boolean	1	DEF	$
2620	RegressionResults.java	getParameterEstimate	index	int	0	OutOfRangeException	$ < 0
2623	RegressionResults.java	getStdErrorOfEstimate	index	int	0	OutOfRangeException	$ < 0
2624	RegressionResults.java	getStdErrorOfEstimate	var	double	0	RET	Double.isNaN($)
2626	RegressionResults.java	getStdErrorOfEstimates	var	double	0	DEF	Double.isNaN($)
2628	RegressionResults.java	getCovarianceOfParameters	i	int	0	OutOfRangeException	$ < 0
2629	RegressionResults.java	getCovarianceOfParameters	j	int	0	OutOfRangeException	$ < 0
191	ResizableDoubleArray.java	ResizableDoubleArray	initialCapacity	int	0	NotStrictlyPositiveException	$ <= 0
192	ResizableDoubleArray.java	ResizableDoubleArray	data	double	0	DEF	$ != null
201	ResizableDoubleArray.java	discardExtremeElements	i	int	1	MathIllegalArgumentException	$ < 0
202	ResizableDoubleArray.java	discardExtremeElements	front	boolean	0	DEF	$
206	ResizableDoubleArray.java	getElement	index	int	1	RET	$ >= 0
207	ResizableDoubleArray.java	setElement	index	int	0	ArrayIndexOutOfBoundsException	$ < 0
213	ResizableDoubleArray.java	setNumElements	i	int	0	MathIllegalArgumentException	$ < 0
218	ResizableDoubleArray.java	equals	result	boolean	1	RET	$
4092	RiddersSolver.java	doSolve	y1	double	0	RET	$ == 0
4093	RiddersSolver.java	doSolve	y2	double	0	RET	$ == 0
14782	RombergIntegrator.java	doIntegrate	i	int	0	NIL-FOR	j <= $
871	RootsOfUnity.java	computeRoots	n	int	0	ZeroException	$ == 0
12452	RootsOfUnity.java	computeRoots	absN	int	0	NIL-FOR	i < $
874	RootsOfUnity.java	getReal	k	int	0	OutOfRangeException	$ < 0
876	RootsOfUnity.java	getImaginary	k	int	0	OutOfRangeException	$ < 0
709	Rotation.java	Rotation	needsNormalization	boolean	0	DEF	$
710	Rotation.java	Rotation	norm	double	0	MathIllegalArgumentException	$ == 0
712	Rotation.java	Rotation	det	double	0	NotARotationMatrixException	$ < 0.0
713	Rotation.java	Rotation	normProduct	double	0	MathArithmeticException	$ == 0
718	Rotation.java	getAxis	squaredSine	double	1	RET	$ == 0
14417	RungeKuttaIntegrator.java	integrate	stages	int	0	NIL-FOR	i < $
14419	RungeKuttaIntegrator.java	integrate	stages	int	0	NIL-FOR	k < $
14420	RungeKuttaIntegrator.java	integrate	y0	double[]	0	NIL-FOR	j < $.length
14421	RungeKuttaIntegrator.java	integrate	l	int	0	NIL-FOR	$ < k
14422	RungeKuttaIntegrator.java	integrate	y0	double[]	0	NIL-FOR	j < $.length
3523	RungeKuttaIntegrator.java	integrate	nextIsLast	boolean	0	DEF	$
14318	RungeKuttaStepInterpolator.java	writeExternal	i	int	0	NIL-FOR	$ < n
14318	RungeKuttaStepInterpolator.java	writeExternal	n	int	0	NIL-FOR	i < $
14319	RungeKuttaStepInterpolator.java	writeExternal	kMax	int	0	NIL-FOR	k < $
14320	RungeKuttaStepInterpolator.java	writeExternal	i	int	0	NIL-FOR	$ < n
14320	RungeKuttaStepInterpolator.java	writeExternal	n	int	0	NIL-FOR	i < $
3413	RungeKuttaStepInterpolator.java	readExternal	n	int	1	DEF	$ < 0
14321	RungeKuttaStepInterpolator.java	readExternal	i	int	0	NIL-FOR	$ < n
14321	RungeKuttaStepInterpolator.java	readExternal	n	int	0	NIL-FOR	i < $
14322	RungeKuttaStepInterpolator.java	readExternal	kMax	int	0	NIL-FOR	k < $
14323	RungeKuttaStepInterpolator.java	readExternal	i	int	0	NIL-FOR	$ < n
14323	RungeKuttaStepInterpolator.java	readExternal	n	int	0	NIL-FOR	i < $
1253	SaddlePointExpansion.java	logBinomialProbability	x	int	1	DEF	$ == 0
13049	SchurTransformer.java	transform	iu	int	0	NIL-WHILE	$ >= 0
1646	SchurTransformer.java	transform	q	double	0	DEF	$ >= 0
1647	SchurTransformer.java	transform	p	double	1	DEF	$ >= 0
13050	SchurTransformer.java	transform	j	int	0	NIL-FOR	$ < n
13050	SchurTransformer.java	transform	n	int	0	NIL-FOR	j < $
13051	SchurTransformer.java	transform	iu	int	0	NIL-FOR	i <= $
13055	SchurTransformer.java	findSmallSubDiagonalElement	l	int	0	NIL-WHILE	$ > 0
1649	SchurTransformer.java	findSmallSubDiagonalElement	s	double	0	DEF	$ == 0.0
13056	SchurTransformer.java	computeShift	idx	int	0	NIL-FOR	i <= $
13057	SchurTransformer.java	computeShift	idx	int	0	NIL-FOR	i <= $
1661	SchurTransformer.java	performDoubleQRStep	p	double	0	DEF	$ < 0.0
13060	SchurTransformer.java	performDoubleQRStep	j	int	0	NIL-FOR	$ < n
13060	SchurTransformer.java	performDoubleQRStep	n	int	0	NIL-FOR	j < $
1665	SchurTransformer.java	performDoubleQRStep	notlast	boolean	0	DEF	$
1666	SchurTransformer.java	performDoubleQRStep	notlast	boolean	0	DEF	$
13062	SchurTransformer.java	performDoubleQRStep	high	int	0	NIL-FOR	i <= $
1667	SchurTransformer.java	performDoubleQRStep	notlast	boolean	0	DEF	$
13063	SchurTransformer.java	performDoubleQRStep	iu	int	0	NIL-FOR	i <= $
4113	SecantSolver.java	doSolve	f0	double	0	RET	$ == 0.0
4114	SecantSolver.java	doSolve	f1	double	0	RET	$ == 0.0
4115	SecantSolver.java	doSolve	fx	double	0	RET	$ == 0.0
826	Segment.java	distance	r	double	1	RET	$ < 0
826	Segment.java	distance	r	double	1	RET	$ > 1
2301	SemiVariance.java	evaluate	values	double[]	1	RET	$.length == 0
13683	SemiVariance.java	evaluate	length	int	0	NIL-FOR	i < $
2304	SemiVariance.java	evaluate	corrected	boolean	1	RET	$
4036	Sigmoid.java	value	exp	double	1	DEF	Double.isInfinite($)
14631	Sigmoid.java	value	k	int	0	NIL-FOR	$ >= 0
4037	Sigmoid.java	value	k	int	1	DEF	$ > 1
2773	SimplePointChecker.java	SimplePointChecker	maxIter	int	0	NotStrictlyPositiveException	$ <= 0
13868	SimplePointChecker.java	converged	p	double[]	0	NIL-FOR	i < $.length
1908	SimplePointChecker.java	SimplePointChecker	maxIter	int	0	NotStrictlyPositiveException	$ <= 0
13370	SimplePointChecker.java	converged	p	double[]	0	NIL-FOR	i < $.length
13839	SimpleRegression.java	addData	i	int	0	NIL-FOR	$ < data.length
13839	SimpleRegression.java	addData	data	double[][]	0	NIL-FOR	i < $.length
2644	SimpleRegression.java	addObservation	x	double[]	0	ModelSpecificationException	$ == null
2644	SimpleRegression.java	addObservation	x	double[]	0	ModelSpecificationException	$.length == 0
2645	SimpleRegression.java	addObservations	x	double[][]	0	ModelSpecificationException	$ == null
2645	SimpleRegression.java	addObservations	y	double[]	0	ModelSpecificationException	$ == null
13840	SimpleRegression.java	addObservations	x	double[][]	0	NIL-FOR	i < $.length
2647	SimpleRegression.java	addObservations	obsOk	boolean	0	ModelSpecificationException	$
13841	SimpleRegression.java	addObservations	x	double[][]	0	NIL-FOR	i < $.length
13842	SimpleRegression.java	removeData	i	int	0	NIL-FOR	$ < data.length
13842	SimpleRegression.java	removeData	data	double[][]	0	NIL-FOR	i < $.length
2654	SimpleRegression.java	getR	b1	double	0	DEF	$ < 0
2657	SimpleRegression.java	getSlopeConfidenceInterval	alpha	double	0	OutOfRangeException	$ <= 0
2665	SimpleRegression.java	regress	variablesToInclude	int[]	0	MathIllegalArgumentException	$.length == 0
2665	SimpleRegression.java	regress	variablesToInclude	int[]	0	MathIllegalArgumentException	$ == null
2675	SimpleRegression.java	regress	_sxx	double	1	RET	Double.isNaN($)
2694	SimpleUnivariateValueChecker.java	SimpleUnivariateValueChecker	maxIter	int	0	NotStrictlyPositiveException	$ <= 0
1835	SimpleUnivariateValueChecker.java	SimpleUnivariateValueChecker	maxIter	int	0	NotStrictlyPositiveException	$ <= 0
2679	SimpleValueChecker.java	SimpleValueChecker	maxIter	int	0	NotStrictlyPositiveException	$ <= 0
1817	SimpleValueChecker.java	SimpleValueChecker	maxIter	int	0	NotStrictlyPositiveException	$ <= 0
2776	SimpleVectorValueChecker.java	SimpleVectorValueChecker	maxIter	int	0	NotStrictlyPositiveException	$ <= 0
13869	SimpleVectorValueChecker.java	converged	p	double[]	0	NIL-FOR	i < $.length
1911	SimpleVectorValueChecker.java	SimpleVectorValueChecker	maxIter	int	0	NotStrictlyPositiveException	$ <= 0
13371	SimpleVectorValueChecker.java	converged	p	double[]	0	NIL-FOR	i < $.length
3037	SimplexOptimizer.java	doOptimize	converged	boolean	0	RET	$
2220	SimplexOptimizer.java	doOptimize	iteration	int	0	RET	$ > 0
2221	SimplexOptimizer.java	doOptimize	converged	boolean	0	RET	$
2733	SimplexSolver.java	getPivotRow	cmp	int	1	DEF	$ == 0
2734	SimplexSolver.java	getPivotRow	cmp	int	0	DEF	$ < 0
13850	SimplexSolver.java	getPivotRow	varEnd	int	0	NIL-FOR	i < $
2740	SimplexSolver.java	getPivotRow	basicRow	Integer	0	DEF	$ != null
2740	SimplexSolver.java	getPivotRow	minIndex	int	0	DEF	i < $
2741	SimplexSolver.java	doIteration	pivotRow	Integer	0	UnboundedSolutionException	$ == null
1870	SimplexSolver.java	getPivotRow	cmp	int	1	DEF	$ == 0
1871	SimplexSolver.java	getPivotRow	cmp	int	0	DEF	$ < 0
13352	SimplexSolver.java	getPivotRow	varEnd	int	0	NIL-FOR	i < $
1877	SimplexSolver.java	getPivotRow	basicRow	Integer	0	DEF	$ != null
1877	SimplexSolver.java	getPivotRow	minIndex	int	0	DEF	i < $
1878	SimplexSolver.java	doIteration	pivotRow	Integer	0	UnboundedSolutionException	$ == null
2760	SimplexTableau.java	getBasicRow	row	Integer	1	DEF	$ == null
13863	SimplexTableau.java	dropPhase1Objective	i	int	0	NIL-FOR	$ >= 0
13865	SimplexTableau.java	getSolution	coefficients	double[]	0	NIL-FOR	i < $.length
2767	SimplexTableau.java	getSolution	colIndex	int	0	DEF	$ < 0
2768	SimplexTableau.java	getSolution	basicRow	Integer	1	DEF	$ == 0
2768	SimplexTableau.java	getSolution	basicRow	Integer	1	DEF	$ != null
2771	SimplexTableau.java	equals	THIS	SimplexTableau	0	RET	$ == other
2771	SimplexTableau.java	equals	other	Object	0	RET	this == $
1895	SimplexTableau.java	getBasicRow	row	Integer	1	DEF	$ == null
13365	SimplexTableau.java	dropPhase1Objective	i	int	0	NIL-FOR	$ >= 0
13367	SimplexTableau.java	getSolution	coefficients	double[]	0	NIL-FOR	i < $.length
1902	SimplexTableau.java	getSolution	colIndex	int	0	DEF	$ < 0
1903	SimplexTableau.java	getSolution	basicRow	Integer	1	DEF	$ == 0
1903	SimplexTableau.java	getSolution	basicRow	Integer	1	DEF	$ != null
1906	SimplexTableau.java	equals	THIS	SimplexTableau	0	RET	$ == other
1906	SimplexTableau.java	equals	other	Object	0	RET	this == $
14626	Sinc.java	value	f	double[]	0	NIL-FOR	i < $.length
14628	Sinc.java	value	k	int	0	NIL-FOR	$ > 1
14629	Sinc.java	value	f	double[]	0	NIL-FOR	i < $.length
1707	SingularValueDecomposition.java	SingularValueDecomposition	nct	int	0	DEF	k < $
13219	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < m
13220	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < m
13221	SingularValueDecomposition.java	SingularValueDecomposition	j	int	0	NIL-FOR	$ < n
1710	SingularValueDecomposition.java	SingularValueDecomposition	nct	int	0	DEF	k < $
13222	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < m
13223	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < m
1711	SingularValueDecomposition.java	SingularValueDecomposition	nct	int	0	DEF	k < $
13224	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < m
1712	SingularValueDecomposition.java	SingularValueDecomposition	nrt	int	0	DEF	k < $
13225	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < n
13226	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < n
13227	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < m
13228	SingularValueDecomposition.java	SingularValueDecomposition	j	int	0	NIL-FOR	$ < n
13229	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < m
13230	SingularValueDecomposition.java	SingularValueDecomposition	j	int	0	NIL-FOR	$ < n
13231	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < m
13232	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < n
1716	SingularValueDecomposition.java	SingularValueDecomposition	nct	int	0	DEF	$ < n
13233	SingularValueDecomposition.java	SingularValueDecomposition	j	int	0	NIL-FOR	$ < n
13234	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < m
13235	SingularValueDecomposition.java	SingularValueDecomposition	k	int	0	NIL-FOR	$ >= 0
13236	SingularValueDecomposition.java	SingularValueDecomposition	j	int	0	NIL-FOR	$ < n
13237	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < m
13238	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < m
13239	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < m
13241	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < m
13242	SingularValueDecomposition.java	SingularValueDecomposition	k	int	0	NIL-FOR	$ >= 0
1720	SingularValueDecomposition.java	SingularValueDecomposition	nrt	int	0	DEF	k < $
13243	SingularValueDecomposition.java	SingularValueDecomposition	j	int	0	NIL-FOR	$ < n
13244	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < n
13245	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < n
13246	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < n
13247	SingularValueDecomposition.java	SingularValueDecomposition	p	int	0	NIL-WHILE	$ > 0
13248	SingularValueDecomposition.java	SingularValueDecomposition	k	int	0	NIL-FOR	$ >= 0
13251	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < n
13252	SingularValueDecomposition.java	SingularValueDecomposition	p	int	0	NIL-FOR	j < $
13253	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < m
1728	SingularValueDecomposition.java	SingularValueDecomposition	b	double	0	DEF	$ != 0
1728	SingularValueDecomposition.java	SingularValueDecomposition	c	double	0	DEF	$ != 0
1729	SingularValueDecomposition.java	SingularValueDecomposition	b	double	0	DEF	$ < 0
13255	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < n
13256	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < m
13257	SingularValueDecomposition.java	SingularValueDecomposition	pp	int	0	NIL-FOR	i <= $
13258	SingularValueDecomposition.java	SingularValueDecomposition	pp	int	0	NIL-WHILE	k < $
13259	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < n
13260	SingularValueDecomposition.java	SingularValueDecomposition	i	int	0	NIL-FOR	$ < m
1740	SingularValueDecomposition.java	getCovariance	dimension	int	0	NumberIsTooLargeException	$ == 0
12461	SmallPrimes.java	millerRabinPrimeTest	t	int	0	NIL-FOR	i < $
4015	SmoothingPolynomialBicubicSplineInterpolator.java	SmoothingPolynomialBicubicSplineInterpolator	xDegree	int	0	NotPositiveException	$ < 0
4016	SmoothingPolynomialBicubicSplineInterpolator.java	SmoothingPolynomialBicubicSplineInterpolator	yDegree	int	0	NotPositiveException	$ < 0
4017	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	xval	double[]	0	NoDataException	$.length == 0
4017	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	yval	double[]	0	NoDataException	$.length == 0
4017	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	fval	double[][]	0	NoDataException	$.length == 0
14612	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	xLen	int	0	NIL-FOR	i < $
14613	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	yLen	int	0	NIL-FOR	j < $
14614	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	xLen	int	0	NIL-FOR	i < $
14615	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	yLen	int	0	NIL-FOR	j < $
14616	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	xLen	int	0	NIL-FOR	i < $
14617	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	xLen	int	0	NIL-FOR	i < $
14618	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	yLen	int	0	NIL-FOR	j < $
14619	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	xLen	int	0	NIL-FOR	i < $
14620	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	yLen	int	0	NIL-FOR	j < $
3190	SobolSequenceGenerator.java	SobolSequenceGenerator	is	InputStream	0	MathInternalError	$ == null
3192	SobolSequenceGenerator.java	SobolSequenceGenerator	lastDimension	int	0	OutOfRangeException	$ < dimension
14200	SobolSequenceGenerator.java	initFromStream	s	int	0	NIL-FOR	i <= $
14201	SobolSequenceGenerator.java	initDirectionVector	s	int	0	NIL-FOR	i <= $
14205	SobolSequenceGenerator.java	nextVector	THIS	SobolSequenceGenerator	0	NIL-FOR	i < $.dimension
14205	SobolSequenceGenerator.java	nextVector	i	int	0	NIL-FOR	$ < dimension
3196	SobolSequenceGenerator.java	skipTo	index	int	1	DEF	$ == 0
14206	SobolSequenceGenerator.java	skipTo	j	int	0	NIL-FOR	$ < dimension
3197	SobolSequenceGenerator.java	skipTo	shift	long	0	DEF	$ == 0
12742	SparseFieldMatrix.java	SparseFieldMatrix	i	int	0	NIL-FOR	$ < rows
12845	SparseFieldVector.java	add	iter	Iterator	0	NIL-WHILE	$.hasNext()
12846	SparseFieldVector.java	append	iter	Iterator	0	NIL-WHILE	$.hasNext()
12847	SparseFieldVector.java	append	i	int	0	NIL-FOR	$ < n
12847	SparseFieldVector.java	append	n	int	0	NIL-FOR	i < $
12848	SparseFieldVector.java	dotProduct	iter	Iterator	0	NIL-WHILE	$.hasNext()
12849	SparseFieldVector.java	ebeDivide	iter	Iterator	0	NIL-WHILE	$.hasNext()
12850	SparseFieldVector.java	ebeMultiply	iter	Iterator	0	NIL-WHILE	$.hasNext()
1487	SparseFieldVector.java	getSubVector	n	int	0	NotPositiveException	$ < 0
12851	SparseFieldVector.java	getSubVector	iter	Iterator	0	NIL-WHILE	$.hasNext()
12853	SparseFieldVector.java	mapDivideToSelf	iter	Iterator	0	NIL-WHILE	$.hasNext()
12855	SparseFieldVector.java	mapMultiplyToSelf	iter	Iterator	0	NIL-WHILE	$.hasNext()
12856	SparseFieldVector.java	outerProduct	iter	Iterator	0	NIL-WHILE	$.hasNext()
12857	SparseFieldVector.java	outerProduct	iter2	Iterator	0	NIL-WHILE	$.hasNext()
12858	SparseFieldVector.java	outerProduct	iter	Iterator	0	NIL-WHILE	$.hasNext()
12859	SparseFieldVector.java	outerProduct	col	int	0	NIL-FOR	$ < n
12859	SparseFieldVector.java	outerProduct	n	int	0	NIL-FOR	col < $
12861	SparseFieldVector.java	setSubVector	i	int	0	NIL-FOR	$ < n
12861	SparseFieldVector.java	setSubVector	n	int	0	NIL-FOR	i < $
12862	SparseFieldVector.java	subtract	iter	Iterator	0	NIL-WHILE	$.hasNext()
12863	SparseFieldVector.java	subtract	i	int	0	NIL-FOR	$ < n
12863	SparseFieldVector.java	subtract	n	int	0	NIL-FOR	i < $
12864	SparseFieldVector.java	toArray	iter	Iterator	0	NIL-WHILE	$.hasNext()
1493	SparseFieldVector.java	checkIndex	index	int	0	OutOfRangeException	$ < 0
12865	SparseFieldVector.java	add	i	int	0	NIL-FOR	$ < n
12865	SparseFieldVector.java	add	n	int	0	NIL-FOR	i < $
12866	SparseFieldVector.java	hashCode	iter	Iterator	0	NIL-WHILE	$.hasNext()
1496	SparseFieldVector.java	equals	obj	Object	0	RET	this == $
12867	SparseFieldVector.java	equals	iter	Iterator	0	NIL-WHILE	$.hasNext()
12868	SparseFieldVector.java	equals	iter	Iterator	0	NIL-WHILE	$.hasNext()
2488	SpearmansCorrelation.java	rankTransform	transformed	RealMatrix	0	DEF	$ == null
13757	SpearmansCorrelation.java	getNaNPositions	input	double[]	0	NIL-FOR	i < $.length
13758	SpearmansCorrelation.java	removeValues	input	double[]	0	NIL-FOR	i < $.length
14521	SplineInterpolator.java	interpolate	i	int	0	NIL-FOR	$ < n
14521	SplineInterpolator.java	interpolate	n	int	0	NIL-FOR	i < $
14522	SplineInterpolator.java	interpolate	i	int	0	NIL-FOR	$ < n
14522	SplineInterpolator.java	interpolate	n	int	0	NIL-FOR	i < $
14524	SplineInterpolator.java	interpolate	i	int	0	NIL-FOR	$ < n
14524	SplineInterpolator.java	interpolate	n	int	0	NIL-FOR	i < $
3135	StableRandomGenerator.java	StableRandomGenerator	generator	RandomGenerator	0	NullArgumentException	$ == null
2522	StatUtils.java	sumDifference	n	int	0	NoDataException	$ <= 0
13774	StatUtils.java	sumDifference	i	int	0	NIL-FOR	$ < n
13774	StatUtils.java	sumDifference	n	int	0	NIL-FOR	i < $
13775	StatUtils.java	varianceDifference	i	int	0	NIL-FOR	$ < n
13775	StatUtils.java	varianceDifference	n	int	0	NIL-FOR	i < $
13776	StatUtils.java	normalize	sample	double[]	0	NIL-FOR	i < $.length
13777	StatUtils.java	normalize	sample	double[]	0	NIL-FOR	i < $.length
4038	StepFunction.java	StepFunction	x	double[]	0	NullArgumentException	$ == null
4038	StepFunction.java	StepFunction	y	double[]	0	NullArgumentException	$ == null
4039	StepFunction.java	StepFunction	x	double[]	0	NoDataException	$.length == 0
4039	StepFunction.java	StepFunction	y	double[]	0	NoDataException	$.length == 0
4042	StepFunction.java	value	index	int	1	DEF	$ >= 0
14308	StepNormalizer.java	handleStep	nextInStep	boolean	0	NIL-WHILE	$
3401	StepNormalizer.java	handleStep	isLast	boolean	0	DEF	$
3402	StepNormalizer.java	handleStep	addLast	boolean	0	DEF	$
13734	StorelessCovariance.java	initializeMatrix	THIS	StorelessCovariance	0	NIL-FOR	i < $.dimension
13734	StorelessCovariance.java	initializeMatrix	i	int	0	NIL-FOR	$ < dimension
13735	StorelessCovariance.java	initializeMatrix	j	int	0	NIL-FOR	$ < dimension
13736	StorelessCovariance.java	increment	length	int	0	NIL-FOR	i < $
13737	StorelessCovariance.java	increment	length	int	0	NIL-FOR	j < $
13738	StorelessCovariance.java	append	THIS	StorelessCovariance	0	NIL-FOR	i < $.dimension
13738	StorelessCovariance.java	append	i	int	0	NIL-FOR	$ < dimension
13739	StorelessCovariance.java	append	j	int	0	NIL-FOR	$ < dimension
13740	StorelessCovariance.java	getData	THIS	StorelessCovariance	0	NIL-FOR	i < $.dimension
13740	StorelessCovariance.java	getData	i	int	0	NIL-FOR	$ < dimension
13741	StorelessCovariance.java	getData	j	int	0	NIL-FOR	$ < dimension
748	SubLine.java	intersection	v1D	Vector3D	0	RET	$ == null
749	SubLine.java	intersection	includeEndPoints	boolean	1	RET	$
822	SubLine.java	intersection	v2D	Vector2D	0	RET	$ == null
823	SubLine.java	intersection	includeEndPoints	boolean	1	RET	$
824	SubLine.java	side	crossing	Vector2D	0	RET	$ == null
825	SubLine.java	split	crossing	Vector2D	0	RET	$ == null
659	SubPlane.java	side	inter	Line	0	RET	$ == null
661	SubPlane.java	split	inter	Line	0	RET	$ == null
1361	SymmLQ.java	solveInPlace	earlyStop	boolean	0	DEF	$
4276	SymmetricGaussIntegrator.java	integrate	ruleLength	int	0	RET	$ == 1
14764	SymmetricGaussIntegrator.java	integrate	iMax	int	0	NIL-FOR	i < $
1155	TDistribution.java	TDistribution	degreesOfFreedom	double	0	NotStrictlyPositiveException	$ <= 0
1156	TDistribution.java	cumulativeProbability	x	double	1	DEF	$ == 0
1157	TDistribution.java	cumulativeProbability	x	double	1	DEF	$ < 0.0
1158	TDistribution.java	getNumericalMean	df	double	0	RET	$ > 1
1160	TDistribution.java	getNumericalVariance	df	double	0	RET	$ > 1
2404	TTest.java	checkSignificanceLevel	alpha	double	0	OutOfRangeException	$ <= 0
2405	TTest.java	checkSampleData	data	double[]	0	NullArgumentException	$ == null
2407	TTest.java	checkSampleData	stat	StatisticalSummary	0	NullArgumentException	$ == null
14277	TransformUtils.java	scaleArray	f	double[]	0	NIL-FOR	i < $.length
14278	TransformUtils.java	scaleArray	f	Complex[]	0	NIL-FOR	i < $.length
14279	TransformUtils.java	createRealImaginaryArray	dataC	Complex[]	0	NIL-FOR	i < $.length
14280	TransformUtils.java	createComplexArray	i	int	0	NIL-FOR	$ < n
14280	TransformUtils.java	createComplexArray	n	int	0	NIL-FOR	i < $
3368	TransformUtils.java	exactLog2	index	int	0	MathIllegalArgumentException	$ < 0
103	TransformerMap.java	transform	trans	NumberTransformer	0	DEF	$ != null
104	TransformerMap.java	equals	THIS	TransformerMap	0	RET	$ == other
104	TransformerMap.java	equals	other	Object	0	RET	this == $
4295	TrapezoidIntegrator.java	stage	n	int	1	RET	$ == 0
14779	TrapezoidIntegrator.java	stage	np	long	0	NIL-FOR	i < $
12667	TriDiagonalTransformer.java	getQT	i	int	0	NIL-FOR	$ < m
12667	TriDiagonalTransformer.java	getQT	m	int	0	NIL-FOR	i < $
12668	TriDiagonalTransformer.java	getQT	j	int	0	NIL-FOR	$ < m
12668	TriDiagonalTransformer.java	getQT	m	int	0	NIL-FOR	j < $
12669	TriDiagonalTransformer.java	getQT	i	int	0	NIL-FOR	$ < m
12669	TriDiagonalTransformer.java	getQT	m	int	0	NIL-FOR	i < $
12670	TriDiagonalTransformer.java	getQT	i	int	0	NIL-FOR	$ < m
12670	TriDiagonalTransformer.java	getQT	m	int	0	NIL-FOR	i < $
12671	TriDiagonalTransformer.java	getT	i	int	0	NIL-FOR	$ < m
12671	TriDiagonalTransformer.java	getT	m	int	0	NIL-FOR	i < $
1357	TriDiagonalTransformer.java	getT	i	int	0	DEF	$ > 0
12673	TriDiagonalTransformer.java	transform	j	int	0	NIL-FOR	$ < m
12673	TriDiagonalTransformer.java	transform	m	int	0	NIL-FOR	j < $
12674	TriDiagonalTransformer.java	transform	i	int	0	NIL-FOR	$ < m
12674	TriDiagonalTransformer.java	transform	m	int	0	NIL-FOR	i < $
12675	TriDiagonalTransformer.java	transform	j	int	0	NIL-FOR	$ < m
12675	TriDiagonalTransformer.java	transform	m	int	0	NIL-FOR	j < $
12676	TriDiagonalTransformer.java	transform	i	int	0	NIL-FOR	$ < m
12676	TriDiagonalTransformer.java	transform	m	int	0	NIL-FOR	i < $
12677	TriDiagonalTransformer.java	transform	i	int	0	NIL-FOR	$ < m
12677	TriDiagonalTransformer.java	transform	m	int	0	NIL-FOR	i < $
12678	TriDiagonalTransformer.java	transform	i	int	0	NIL-FOR	$ < m
12678	TriDiagonalTransformer.java	transform	m	int	0	NIL-FOR	i < $
12679	TriDiagonalTransformer.java	transform	j	int	0	NIL-FOR	$ < m
12679	TriDiagonalTransformer.java	transform	m	int	0	NIL-FOR	j < $
1176	TriangularDistribution.java	inverseCumulativeProbability	p	double	0	OutOfRangeException	$ > 1
1176	TriangularDistribution.java	inverseCumulativeProbability	p	double	0	OutOfRangeException	$ < 0
1177	TriangularDistribution.java	inverseCumulativeProbability	p	double	0	RET	$ == 0
1178	TriangularDistribution.java	inverseCumulativeProbability	p	double	0	RET	$ == 1
3919	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	0	NoDataException	$ == 0
3919	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	0	NoDataException	$ == 0
3919	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	0	NoDataException	$.length == 0
3919	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	0	NoDataException	$.length == 0
14527	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastI	int	0	NIL-FOR	i < $
14528	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastJ	int	0	NIL-FOR	j < $
14529	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastK	int	0	NIL-FOR	k < $
3944	TricubicSplineInterpolatingFunction.java	value	i	int	0	OutOfRangeException	$ == -1
3945	TricubicSplineInterpolatingFunction.java	value	j	int	0	OutOfRangeException	$ == -1
3946	TricubicSplineInterpolatingFunction.java	value	k	int	0	OutOfRangeException	$ == -1
14530	TricubicSplineInterpolatingFunction.java	searchIndex	max	int	0	NIL-FOR	i < $
14531	TricubicSplineInterpolatingFunction.java	computeSplineCoefficients	sz	int	0	NIL-FOR	i < $
14532	TricubicSplineInterpolatingFunction.java	computeSplineCoefficients	sz	int	0	NIL-FOR	j < $
3949	TricubicSplineInterpolatingFunction.java	value	x	double	0	OutOfRangeException	$ > 1
3949	TricubicSplineInterpolatingFunction.java	value	x	double	0	OutOfRangeException	$ < 0
3950	TricubicSplineInterpolatingFunction.java	value	y	double	0	OutOfRangeException	$ < 0
3950	TricubicSplineInterpolatingFunction.java	value	y	double	0	OutOfRangeException	$ > 1
3951	TricubicSplineInterpolatingFunction.java	value	z	double	0	OutOfRangeException	$ > 1
3951	TricubicSplineInterpolatingFunction.java	value	z	double	0	OutOfRangeException	$ < 0
3995	TricubicSplineInterpolator.java	interpolate	xval	double[]	0	NoDataException	$.length == 0
3995	TricubicSplineInterpolator.java	interpolate	yval	double[]	0	NoDataException	$.length == 0
3995	TricubicSplineInterpolator.java	interpolate	zval	double[]	0	NoDataException	$.length == 0
3995	TricubicSplineInterpolator.java	interpolate	fval	double[][][]	0	NoDataException	$.length == 0
14588	TricubicSplineInterpolator.java	interpolate	xLen	int	0	NIL-FOR	i < $
14589	TricubicSplineInterpolator.java	interpolate	yLen	int	0	NIL-FOR	j < $
14590	TricubicSplineInterpolator.java	interpolate	zLen	int	0	NIL-FOR	k < $
14591	TricubicSplineInterpolator.java	interpolate	xLen	int	0	NIL-FOR	i < $
14592	TricubicSplineInterpolator.java	interpolate	yLen	int	0	NIL-FOR	j < $
14593	TricubicSplineInterpolator.java	interpolate	zLen	int	0	NIL-FOR	k < $
14594	TricubicSplineInterpolator.java	interpolate	zLen	int	0	NIL-FOR	k < $
14595	TricubicSplineInterpolator.java	interpolate	xLen	int	0	NIL-FOR	i < $
14596	TricubicSplineInterpolator.java	interpolate	yLen	int	0	NIL-FOR	j < $
14597	TricubicSplineInterpolator.java	interpolate	xLen	int	0	NIL-FOR	i < $
14598	TricubicSplineInterpolator.java	interpolate	yLen	int	0	NIL-FOR	j < $
14599	TricubicSplineInterpolator.java	interpolate	zLen	int	0	NIL-FOR	k < $
14600	TricubicSplineInterpolator.java	interpolate	yLen	int	0	NIL-FOR	j < $
14601	TricubicSplineInterpolator.java	interpolate	zLen	int	0	NIL-FOR	k < $
14602	TricubicSplineInterpolator.java	interpolate	xLen	int	0	NIL-FOR	i < $
14603	TricubicSplineInterpolator.java	interpolate	xLen	int	0	NIL-FOR	i < $
14604	TricubicSplineInterpolator.java	interpolate	yLen	int	0	NIL-FOR	j < $
14605	TricubicSplineInterpolator.java	interpolate	zLen	int	0	NIL-FOR	k < $
14197	UncorrelatedRandomVectorGenerator.java	nextVector	random	double[]	0	NIL-FOR	i < $.length
1198	UniformRealDistribution.java	inverseCumulativeProbability	p	double	0	OutOfRangeException	$ < 0.0
14173	UnitSphereRandomVectorGenerator.java	nextVector	THIS	UnitSphereRandomVectorGenerator	0	NIL-FOR	i < $.dimension
14173	UnitSphereRandomVectorGenerator.java	nextVector	i	int	0	NIL-FOR	$ < dimension
14174	UnitSphereRandomVectorGenerator.java	nextVector	THIS	UnitSphereRandomVectorGenerator	0	NIL-FOR	i < $.dimension
14174	UnitSphereRandomVectorGenerator.java	nextVector	i	int	0	NIL-FOR	$ < dimension
1861	UnivariateMultiStartOptimizer.java	UnivariateMultiStartOptimizer	optimizer	BaseUnivariateOptimizer<FUNC>	0	NullArgumentException	$ == null
1861	UnivariateMultiStartOptimizer.java	UnivariateMultiStartOptimizer	generator	RandomGenerator	0	NullArgumentException	$ == null
14576	UnivariatePeriodicInterpolator.java	interpolate	xval	double[]	0	NIL-FOR	i < $.length
4054	UnivariateSolverUtils.java	solve	function	UnivariateFunction	0	NullArgumentException	$ == null
4055	UnivariateSolverUtils.java	solve	function	UnivariateFunction	0	NullArgumentException	$ == null
14632	UnivariateSolverUtils.java	forceSide	remainingEval	int	0	NIL-WHILE	$ > 0
4057	UnivariateSolverUtils.java	forceSide	fLo	double	0	RET	$ <= 0
4057	UnivariateSolverUtils.java	forceSide	fLo	double	0	RET	$ >= 0
4057	UnivariateSolverUtils.java	forceSide	fHi	double	0	RET	$ <= 0
4057	UnivariateSolverUtils.java	forceSide	fHi	double	0	RET	$ >= 0
4059	UnivariateSolverUtils.java	forceSide	fLo	double	1	DEF	$ >= 0
4061	UnivariateSolverUtils.java	forceSide	fLo	double	1	DEF	$ <= 0
4062	UnivariateSolverUtils.java	forceSide	changeLo	boolean	0	DEF	$
4063	UnivariateSolverUtils.java	forceSide	changeHi	boolean	0	DEF	$
4064	UnivariateSolverUtils.java	bracket	function	UnivariateFunction	0	NullArgumentException	$ == null
4065	UnivariateSolverUtils.java	bracket	maximumIterations	int	0	NotStrictlyPositiveException	$ <= 0
4067	UnivariateSolverUtils.java	isBracketing	function	UnivariateFunction	0	NullArgumentException	$ == null
4069	UnivariateSolverUtils.java	verifyBracketing	function	UnivariateFunction	0	NullArgumentException	$ == null
14208	ValueServer.java	fill	values	double[]	0	NIL-FOR	i < $.length
14209	ValueServer.java	fill	length	int	0	NIL-FOR	i < $
2258	Variance.java	evaluate	values	double[]	0	NullArgumentException	$ == null
2260	Variance.java	evaluate	length	int	1	DEF	$ == 1
2261	Variance.java	evaluate	length	int	0	DEF	$ > 1
2263	Variance.java	evaluate	length	int	1	DEF	$ == 1
2264	Variance.java	evaluate	length	int	0	DEF	$ > 1
2266	Variance.java	evaluate	length	int	1	DEF	$ == 1
2267	Variance.java	evaluate	length	int	0	DEF	$ > 1
2270	Variance.java	evaluate	length	int	1	DEF	$ == 1
2271	Variance.java	evaluate	length	int	0	DEF	$ > 1
803	Vector1D.java	normalize	s	double	0	MathArithmeticException	$ == 0
804	Vector1D.java	equals	THIS	Vector1D	0	RET	$ == other
804	Vector1D.java	equals	other	Object	0	RET	this == $
806	Vector1D.java	equals	rhs	Vector1D	0	RET	$.isNaN()
807	Vector1D.java	hashCode	THIS	Vector1D	0	RET	$.isNaN()
800	Vector1DFormat.java	parse	coordinates	double[]	0	RET	$ == null
864	Vector2D.java	normalize	s	double	0	MathArithmeticException	$ == 0
865	Vector2D.java	equals	THIS	Vector2D	0	RET	$ == other
865	Vector2D.java	equals	other	Object	0	RET	this == $
867	Vector2D.java	equals	rhs	Vector2D	0	RET	$.isNaN()
868	Vector2D.java	hashCode	THIS	Vector2D	0	RET	$.isNaN()
818	Vector2DFormat.java	parse	coordinates	double[]	0	RET	$ == null
751	Vector3D.java	normalize	s	double	0	MathArithmeticException	$ == 0
752	Vector3D.java	orthogonal	threshold	double	0	MathArithmeticException	$ == 0
755	Vector3D.java	angle	normProduct	double	0	MathArithmeticException	$ == 0
757	Vector3D.java	angle	dot	double	0	RET	$ >= 0
758	Vector3D.java	equals	THIS	Vector3D	0	RET	$ == other
758	Vector3D.java	equals	other	Object	0	RET	this == $
760	Vector3D.java	equals	rhs	Vector3D	0	RET	$.isNaN()
761	Vector3D.java	hashCode	THIS	Vector3D	0	RET	$.isNaN()
664	Vector3DFormat.java	parse	coordinates	double[]	0	RET	$ == null
12433	VectorFormat.java	format	coordinates	double	0	NIL-FOR	i < $.length
654	VectorFormat.java	format	i	int	0	DEF	$ > 0
12434	VectorFormat.java	parseCoordinates	i	int	0	NIL-FOR	$ < dimension
12434	VectorFormat.java	parseCoordinates	dimension	int	0	NIL-FOR	i < $
656	VectorFormat.java	parseCoordinates	i	int	0	RET	$ > 0
657	VectorFormat.java	parseCoordinates	c	Number	0	RET	$ == null
13678	VectorialCovariance.java	increment	v	double[]	0	NIL-FOR	i < $.length
13679	VectorialCovariance.java	increment	i	int	0	NIL-FOR	j <= $
13680	VectorialCovariance.java	getResult	i	int	0	NIL-FOR	$ < dimension
13680	VectorialCovariance.java	getResult	dimension	int	0	NIL-FOR	i < $
13681	VectorialCovariance.java	getResult	i	int	0	NIL-FOR	j <= $
2285	VectorialCovariance.java	equals	obj	Object	0	RET	this == $
13684	VectorialMean.java	VectorialMean	i	int	0	NIL-FOR	$ < dimension
13684	VectorialMean.java	VectorialMean	dimension	int	0	NIL-FOR	i < $
13685	VectorialMean.java	increment	v	double[]	0	NIL-FOR	i < $.length
13686	VectorialMean.java	getResult	result	double[]	0	NIL-FOR	i < $.length
2306	VectorialMean.java	equals	obj	Object	0	RET	this == $
1120	WeibullDistribution.java	WeibullDistribution	alpha	double	0	NotStrictlyPositiveException	$ <= 0
1121	WeibullDistribution.java	WeibullDistribution	beta	double	0	NotStrictlyPositiveException	$ <= 0
1122	WeibullDistribution.java	density	x	double	0	RET	$ < 0
1124	WeibullDistribution.java	inverseCumulativeProbability	p	double	1	OutOfRangeException	$ < 0.0
1125	WeibullDistribution.java	inverseCumulativeProbability	p	double	1	DEF	$ == 0
1126	WeibullDistribution.java	inverseCumulativeProbability	p	double	1	DEF	$ == 1
2388	WilcoxonSignedRankTest.java	ensureDataConformance	x	double[]	0	NullArgumentException	$ == null
2388	WilcoxonSignedRankTest.java	ensureDataConformance	y	double[]	0	NullArgumentException	$ == null
2389	WilcoxonSignedRankTest.java	ensureDataConformance	x	double[]	0	NoDataException	$.length == 0
2389	WilcoxonSignedRankTest.java	ensureDataConformance	y	double[]	0	NoDataException	$.length == 0
13697	WilcoxonSignedRankTest.java	calculateDifferences	x	double[]	0	NIL-FOR	i < $.length
2391	WilcoxonSignedRankTest.java	calculateAbsoluteDifferences	z	double[]	0	NullArgumentException	$ == null
2392	WilcoxonSignedRankTest.java	calculateAbsoluteDifferences	z	double[]	0	NoDataException	$.length == 0
13698	WilcoxonSignedRankTest.java	calculateAbsoluteDifferences	z	double[]	0	NIL-FOR	i < $.length
13699	WilcoxonSignedRankTest.java	wilcoxonSignedRank	z	double[]	0	NIL-FOR	i < $.length
13700	WilcoxonSignedRankTest.java	calculateExactPValue	i	int	0	NIL-FOR	$ < m
13700	WilcoxonSignedRankTest.java	calculateExactPValue	m	int	0	NIL-FOR	i < $
2396	WilcoxonSignedRankTest.java	wilcoxonSignedRankTest	exactPValue	boolean	0	NumberIsTooLargeException	$
2397	WilcoxonSignedRankTest.java	wilcoxonSignedRankTest	exactPValue	boolean	1	RET	$
1297	ZipfDistribution.java	ZipfDistribution	numberOfElements	int	0	NotStrictlyPositiveException	$ <= 0
1298	ZipfDistribution.java	ZipfDistribution	exponent	double	0	NotStrictlyPositiveException	$ <= 0
1299	ZipfDistribution.java	probability	x	int	0	RET	$ <= 0
1300	ZipfDistribution.java	cumulativeProbability	x	int	1	RET	$ <= 0
12532	ZipfDistribution.java	generalizedHarmonic	k	int	0	NIL-FOR	$ > 0

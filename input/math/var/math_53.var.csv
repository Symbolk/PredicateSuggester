id	line	column	filename	methodname	varname	vartype	lastassign	isparam	incondnum	bodyuse	if
0	137	8	MathException.java	getMessage	locale	Locale	PARAM_AS	1	0	PARAM_USE	0
0	137	8	MathException.java	getMessage	THIS	MathException	UNKNOWN_AS	0	1	FIELD_USE	1
1	133	8	KalmanFilter.java	KalmanFilter	process	ProcessModel	PARAM_AS	1	0	NO_USE	0
1	133	8	KalmanFilter.java	KalmanFilter	measurement	MeasurementModel	PARAM_AS	1	0	NO_USE	0
1	133	8	KalmanFilter.java	KalmanFilter	THIS	KalmanFilter	transpose()	0	15	FIELD_USE	1
2	153	8	KalmanFilter.java	KalmanFilter	processNoise	RealMatrix	getProcessNoise()	0	0	NO_USE	0
2	153	8	KalmanFilter.java	KalmanFilter	measNoise	RealMatrix	getMeasurementNoise()	0	2	NO_USE	0
2	153	8	KalmanFilter.java	KalmanFilter	process	ProcessModel	PARAM_AS	1	0	NO_USE	0
2	153	8	KalmanFilter.java	KalmanFilter	measurement	MeasurementModel	PARAM_AS	1	0	NO_USE	0
2	153	8	KalmanFilter.java	KalmanFilter	THIS	KalmanFilter	transpose()	0	15	FIELD_USE	1
3	160	8	KalmanFilter.java	KalmanFilter	processNoise	RealMatrix	getProcessNoise()	0	0	NO_USE	0
3	160	8	KalmanFilter.java	KalmanFilter	measNoise	RealMatrix	getMeasurementNoise()	0	2	NO_USE	0
3	160	8	KalmanFilter.java	KalmanFilter	process	ProcessModel	PARAM_AS	1	0	NO_USE	0
3	160	8	KalmanFilter.java	KalmanFilter	measurement	MeasurementModel	PARAM_AS	1	0	NO_USE	0
3	160	8	KalmanFilter.java	KalmanFilter	THIS	KalmanFilter	getInitialStateEstimate()	0	15	FIELD_USE	1
4	167	8	KalmanFilter.java	KalmanFilter	processNoise	RealMatrix	getProcessNoise()	0	0	CLALLER_USE	0
4	167	8	KalmanFilter.java	KalmanFilter	measNoise	RealMatrix	getMeasurementNoise()	0	2	NO_USE	0
4	167	8	KalmanFilter.java	KalmanFilter	process	ProcessModel	PARAM_AS	1	0	NO_USE	0
4	167	8	KalmanFilter.java	KalmanFilter	measurement	MeasurementModel	PARAM_AS	1	0	NO_USE	0
4	167	8	KalmanFilter.java	KalmanFilter	THIS	KalmanFilter	getInitialStateEstimate()	0	15	FIELD_USE	1
5	176	8	KalmanFilter.java	KalmanFilter	processNoise	RealMatrix	getProcessNoise()	0	0	NO_USE	0
5	176	8	KalmanFilter.java	KalmanFilter	measNoise	RealMatrix	getMeasurementNoise()	0	2	NO_USE	0
5	176	8	KalmanFilter.java	KalmanFilter	process	ProcessModel	PARAM_AS	1	0	NO_USE	0
5	176	8	KalmanFilter.java	KalmanFilter	measurement	MeasurementModel	PARAM_AS	1	0	NO_USE	0
5	176	8	KalmanFilter.java	KalmanFilter	THIS	KalmanFilter	getInitialErrorCovariance()	0	15	FIELD_USE	1
6	183	8	KalmanFilter.java	KalmanFilter	processNoise	RealMatrix	getProcessNoise()	0	0	NO_USE	0
6	183	8	KalmanFilter.java	KalmanFilter	measNoise	RealMatrix	getMeasurementNoise()	0	2	NO_USE	0
6	183	8	KalmanFilter.java	KalmanFilter	process	ProcessModel	PARAM_AS	1	0	NO_USE	0
6	183	8	KalmanFilter.java	KalmanFilter	measurement	MeasurementModel	PARAM_AS	1	0	NO_USE	0
6	183	8	KalmanFilter.java	KalmanFilter	THIS	KalmanFilter	getInitialErrorCovariance()	0	15	FIELD_USE	1
7	197	8	KalmanFilter.java	KalmanFilter	processNoise	RealMatrix	getProcessNoise()	0	0	NO_USE	0
7	197	8	KalmanFilter.java	KalmanFilter	measNoise	RealMatrix	getMeasurementNoise()	0	2	NO_USE	0
7	197	8	KalmanFilter.java	KalmanFilter	process	ProcessModel	PARAM_AS	1	0	NO_USE	0
7	197	8	KalmanFilter.java	KalmanFilter	measurement	MeasurementModel	PARAM_AS	1	0	NO_USE	0
7	197	8	KalmanFilter.java	KalmanFilter	THIS	KalmanFilter	getInitialErrorCovariance()	0	15	FIELD_USE	1
8	205	8	KalmanFilter.java	KalmanFilter	processNoise	RealMatrix	getProcessNoise()	0	0	NO_USE	0
8	205	8	KalmanFilter.java	KalmanFilter	measNoise	RealMatrix	getMeasurementNoise()	0	2	CLALLER_USE	1
8	205	8	KalmanFilter.java	KalmanFilter	process	ProcessModel	PARAM_AS	1	0	NO_USE	0
8	205	8	KalmanFilter.java	KalmanFilter	measurement	MeasurementModel	PARAM_AS	1	0	NO_USE	0
8	205	8	KalmanFilter.java	KalmanFilter	THIS	KalmanFilter	getInitialErrorCovariance()	0	15	FIELD_USE	1
9	296	8	KalmanFilter.java	predict	u	RealVector	PARAM_AS	1	3	CLALLER_USE	1
9	296	8	KalmanFilter.java	predict	THIS	KalmanFilter	UNKNOWN_AS	0	1	FIELD_USE	1
10	307	8	KalmanFilter.java	predict	u	RealVector	PARAM_AS	1	3	PARAM_USE	1
10	307	8	KalmanFilter.java	predict	THIS	KalmanFilter	operate()	0	1	FIELD_USE	0
11	345	8	KalmanFilter.java	correct	z	RealVector	PARAM_AS	1	1	CLALLER_USE	1
11	345	8	KalmanFilter.java	correct	THIS	KalmanFilter	UNKNOWN_AS	0	1	FIELD_USE	1
12	139	12	ContinuedFraction.java	evaluate	a	double	getA()	0	2	PARAM_USE	0
12	139	12	ContinuedFraction.java	evaluate	b	double	getB()	0	2	PARAM_USE	0
12	139	12	ContinuedFraction.java	evaluate	p2	double	+	0	1	PARAM_USE	1
12	139	12	ContinuedFraction.java	evaluate	q2	double	+	0	1	PARAM_USE	1
12	139	12	ContinuedFraction.java	evaluate	infinite	boolean	LITERAL	0	1	!x	0
12	139	12	ContinuedFraction.java	evaluate	p0	double	1.0	0	0	*	0
12	139	12	ContinuedFraction.java	evaluate	p1	double	getA()	0	0	/	0
12	139	12	ContinuedFraction.java	evaluate	q0	double	0.0	0	0	*	0
12	139	12	ContinuedFraction.java	evaluate	q1	double	1.0	0	0	/	0
12	139	12	ContinuedFraction.java	evaluate	c	double	/	0	0	NO_USE	0
12	139	12	ContinuedFraction.java	evaluate	n	int	0	0	1	NO_USE	0
12	139	12	ContinuedFraction.java	evaluate	relativeError	double	NAME	0	0	NO_USE	0
12	139	12	ContinuedFraction.java	evaluate	x	double	PARAM_AS	1	0	OTHER_USE	0
12	139	12	ContinuedFraction.java	evaluate	epsilon	double	PARAM_AS	1	0	NO_USE	0
12	139	12	ContinuedFraction.java	evaluate	maxIterations	int	PARAM_AS	1	1	NO_USE	0
12	139	12	ContinuedFraction.java	evaluate	THIS	ContinuedFraction	UNKNOWN_AS	0	0	FIELD_USE	0
13	149	16	ContinuedFraction.java	evaluate	scaleFactor	double	1d	0	0	NO_USE	0
13	149	16	ContinuedFraction.java	evaluate	lastScaleFactor	double	1d	0	0	NO_USE	0
13	149	16	ContinuedFraction.java	evaluate	maxPower	int	5	0	0	NO_USE	0
13	149	16	ContinuedFraction.java	evaluate	scale	double	max()	0	1	NO_USE	1
13	149	16	ContinuedFraction.java	evaluate	a	double	getA()	0	2	NO_USE	0
13	149	16	ContinuedFraction.java	evaluate	b	double	getB()	0	2	NO_USE	0
13	149	16	ContinuedFraction.java	evaluate	p2	double	+	0	1	NO_USE	0
13	149	16	ContinuedFraction.java	evaluate	q2	double	+	0	1	NO_USE	0
13	149	16	ContinuedFraction.java	evaluate	infinite	boolean	LITERAL	0	1	NO_USE	0
13	149	16	ContinuedFraction.java	evaluate	p0	double	1.0	0	0	NO_USE	0
13	149	16	ContinuedFraction.java	evaluate	p1	double	getA()	0	0	NO_USE	0
13	149	16	ContinuedFraction.java	evaluate	q0	double	0.0	0	0	NO_USE	0
13	149	16	ContinuedFraction.java	evaluate	q1	double	1.0	0	0	NO_USE	0
13	149	16	ContinuedFraction.java	evaluate	c	double	/	0	0	NO_USE	0
13	149	16	ContinuedFraction.java	evaluate	n	int	0	0	1	NO_USE	0
13	149	16	ContinuedFraction.java	evaluate	relativeError	double	NAME	0	0	NO_USE	0
13	149	16	ContinuedFraction.java	evaluate	x	double	PARAM_AS	1	0	OTHER_USE	0
13	149	16	ContinuedFraction.java	evaluate	epsilon	double	PARAM_AS	1	0	NO_USE	0
13	149	16	ContinuedFraction.java	evaluate	maxIterations	int	PARAM_AS	1	1	NO_USE	0
13	149	16	ContinuedFraction.java	evaluate	THIS	ContinuedFraction	UNKNOWN_AS	0	0	FIELD_USE	0
14	157	20	ContinuedFraction.java	evaluate	i	int	0	0	0	NO_USE	0
14	157	20	ContinuedFraction.java	evaluate	scaleFactor	double	NAME	0	0	/	0
14	157	20	ContinuedFraction.java	evaluate	lastScaleFactor	double	NAME	0	0	/	0
14	157	20	ContinuedFraction.java	evaluate	maxPower	int	5	0	0	NO_USE	0
14	157	20	ContinuedFraction.java	evaluate	scale	double	max()	0	1	NO_USE	0
14	157	20	ContinuedFraction.java	evaluate	a	double	getA()	0	2	/	1
14	157	20	ContinuedFraction.java	evaluate	b	double	getB()	0	2	/	1
14	157	20	ContinuedFraction.java	evaluate	p2	double	+	0	1	NO_USE	0
14	157	20	ContinuedFraction.java	evaluate	q2	double	+	0	1	NO_USE	0
14	157	20	ContinuedFraction.java	evaluate	infinite	boolean	LITERAL	0	1	NO_USE	0
14	157	20	ContinuedFraction.java	evaluate	p0	double	1.0	0	0	*	0
14	157	20	ContinuedFraction.java	evaluate	p1	double	getA()	0	0	/	0
14	157	20	ContinuedFraction.java	evaluate	q0	double	0.0	0	0	*	0
14	157	20	ContinuedFraction.java	evaluate	q1	double	1.0	0	0	/	0
14	157	20	ContinuedFraction.java	evaluate	c	double	/	0	0	NO_USE	0
14	157	20	ContinuedFraction.java	evaluate	n	int	0	0	1	NO_USE	0
14	157	20	ContinuedFraction.java	evaluate	relativeError	double	NAME	0	0	NO_USE	0
14	157	20	ContinuedFraction.java	evaluate	x	double	PARAM_AS	1	0	NO_USE	0
14	157	20	ContinuedFraction.java	evaluate	epsilon	double	PARAM_AS	1	0	NO_USE	0
14	157	20	ContinuedFraction.java	evaluate	maxIterations	int	PARAM_AS	1	1	NO_USE	0
14	157	20	ContinuedFraction.java	evaluate	THIS	ContinuedFraction	UNKNOWN_AS	0	0	NO_USE	0
15	160	27	ContinuedFraction.java	evaluate	i	int	0	0	0	NO_USE	0
15	160	27	ContinuedFraction.java	evaluate	scaleFactor	double	NAME	0	0	/	0
15	160	27	ContinuedFraction.java	evaluate	lastScaleFactor	double	NAME	0	0	/	0
15	160	27	ContinuedFraction.java	evaluate	maxPower	int	5	0	0	NO_USE	0
15	160	27	ContinuedFraction.java	evaluate	scale	double	max()	0	1	NO_USE	0
15	160	27	ContinuedFraction.java	evaluate	a	double	getA()	0	2	/	0
15	160	27	ContinuedFraction.java	evaluate	b	double	getB()	0	2	NO_USE	1
15	160	27	ContinuedFraction.java	evaluate	p2	double	+	0	1	NO_USE	0
15	160	27	ContinuedFraction.java	evaluate	q2	double	+	0	1	NO_USE	0
15	160	27	ContinuedFraction.java	evaluate	infinite	boolean	LITERAL	0	1	NO_USE	0
15	160	27	ContinuedFraction.java	evaluate	p0	double	1.0	0	0	/	0
15	160	27	ContinuedFraction.java	evaluate	p1	double	getA()	0	0	*	0
15	160	27	ContinuedFraction.java	evaluate	q0	double	0.0	0	0	/	0
15	160	27	ContinuedFraction.java	evaluate	q1	double	1.0	0	0	*	0
15	160	27	ContinuedFraction.java	evaluate	c	double	/	0	0	NO_USE	0
15	160	27	ContinuedFraction.java	evaluate	n	int	0	0	1	NO_USE	0
15	160	27	ContinuedFraction.java	evaluate	relativeError	double	NAME	0	0	NO_USE	0
15	160	27	ContinuedFraction.java	evaluate	x	double	PARAM_AS	1	0	NO_USE	0
15	160	27	ContinuedFraction.java	evaluate	epsilon	double	PARAM_AS	1	0	NO_USE	0
15	160	27	ContinuedFraction.java	evaluate	maxIterations	int	PARAM_AS	1	1	NO_USE	0
15	160	27	ContinuedFraction.java	evaluate	THIS	ContinuedFraction	UNKNOWN_AS	0	0	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	i	int	0	0	0	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	scaleFactor	double	NAME	0	0	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	lastScaleFactor	double	NAME	0	0	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	maxPower	int	5	0	0	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	scale	double	max()	0	1	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	a	double	getA()	0	2	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	b	double	getB()	0	2	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	p2	double	+	0	1	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	q2	double	+	0	1	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	infinite	boolean	||	0	1	NO_USE	1
16	165	20	ContinuedFraction.java	evaluate	p0	double	1.0	0	0	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	p1	double	getA()	0	0	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	q0	double	0.0	0	0	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	q1	double	1.0	0	0	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	c	double	/	0	0	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	n	int	0	0	1	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	relativeError	double	NAME	0	0	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	x	double	PARAM_AS	1	0	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	epsilon	double	PARAM_AS	1	0	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	maxIterations	int	PARAM_AS	1	1	NO_USE	0
16	165	20	ContinuedFraction.java	evaluate	THIS	ContinuedFraction	UNKNOWN_AS	0	0	NO_USE	0
17	171	12	ContinuedFraction.java	evaluate	a	double	getA()	0	2	NO_USE	0
17	171	12	ContinuedFraction.java	evaluate	b	double	getB()	0	2	NO_USE	0
17	171	12	ContinuedFraction.java	evaluate	p2	double	+	0	1	NO_USE	0
17	171	12	ContinuedFraction.java	evaluate	q2	double	+	0	1	NO_USE	0
17	171	12	ContinuedFraction.java	evaluate	infinite	boolean	||	0	1	NO_USE	1
17	171	12	ContinuedFraction.java	evaluate	p0	double	1.0	0	0	NO_USE	0
17	171	12	ContinuedFraction.java	evaluate	p1	double	getA()	0	0	NO_USE	0
17	171	12	ContinuedFraction.java	evaluate	q0	double	0.0	0	0	NO_USE	0
17	171	12	ContinuedFraction.java	evaluate	q1	double	1.0	0	0	NO_USE	0
17	171	12	ContinuedFraction.java	evaluate	c	double	/	0	0	NO_USE	0
17	171	12	ContinuedFraction.java	evaluate	n	int	0	0	1	NO_USE	0
17	171	12	ContinuedFraction.java	evaluate	relativeError	double	NAME	0	0	NO_USE	0
17	171	12	ContinuedFraction.java	evaluate	x	double	PARAM_AS	1	0	OTHER_USE	0
17	171	12	ContinuedFraction.java	evaluate	epsilon	double	PARAM_AS	1	0	NO_USE	0
17	171	12	ContinuedFraction.java	evaluate	maxIterations	int	PARAM_AS	1	1	NO_USE	0
17	171	12	ContinuedFraction.java	evaluate	THIS	ContinuedFraction	UNKNOWN_AS	0	0	FIELD_USE	0
18	179	12	ContinuedFraction.java	evaluate	a	double	getA()	0	2	NO_USE	0
18	179	12	ContinuedFraction.java	evaluate	b	double	getB()	0	2	NO_USE	0
18	179	12	ContinuedFraction.java	evaluate	p2	double	+	0	1	NO_USE	0
18	179	12	ContinuedFraction.java	evaluate	q2	double	+	0	1	NO_USE	0
18	179	12	ContinuedFraction.java	evaluate	infinite	boolean	||	0	1	NO_USE	0
18	179	12	ContinuedFraction.java	evaluate	r	double	/	0	1	NO_USE	1
18	179	12	ContinuedFraction.java	evaluate	p0	double	1.0	0	0	NO_USE	0
18	179	12	ContinuedFraction.java	evaluate	p1	double	getA()	0	0	NO_USE	0
18	179	12	ContinuedFraction.java	evaluate	q0	double	0.0	0	0	NO_USE	0
18	179	12	ContinuedFraction.java	evaluate	q1	double	1.0	0	0	NO_USE	0
18	179	12	ContinuedFraction.java	evaluate	c	double	/	0	0	NO_USE	0
18	179	12	ContinuedFraction.java	evaluate	n	int	0	0	1	NO_USE	0
18	179	12	ContinuedFraction.java	evaluate	relativeError	double	NAME	0	0	NO_USE	0
18	179	12	ContinuedFraction.java	evaluate	x	double	PARAM_AS	1	0	OTHER_USE	0
18	179	12	ContinuedFraction.java	evaluate	epsilon	double	PARAM_AS	1	0	NO_USE	0
18	179	12	ContinuedFraction.java	evaluate	maxIterations	int	PARAM_AS	1	1	NO_USE	0
18	179	12	ContinuedFraction.java	evaluate	THIS	ContinuedFraction	UNKNOWN_AS	0	0	FIELD_USE	0
19	193	8	ContinuedFraction.java	evaluate	p0	double	NAME	0	0	NO_USE	0
19	193	8	ContinuedFraction.java	evaluate	p1	double	NAME	0	0	NO_USE	0
19	193	8	ContinuedFraction.java	evaluate	q0	double	NAME	0	0	NO_USE	0
19	193	8	ContinuedFraction.java	evaluate	q1	double	NAME	0	0	NO_USE	0
19	193	8	ContinuedFraction.java	evaluate	c	double	/	0	0	NO_USE	0
19	193	8	ContinuedFraction.java	evaluate	n	int	0	0	1	NO_USE	1
19	193	8	ContinuedFraction.java	evaluate	relativeError	double	abs()	0	0	NO_USE	0
19	193	8	ContinuedFraction.java	evaluate	x	double	PARAM_AS	1	0	OTHER_USE	0
19	193	8	ContinuedFraction.java	evaluate	epsilon	double	PARAM_AS	1	0	NO_USE	0
19	193	8	ContinuedFraction.java	evaluate	maxIterations	int	PARAM_AS	1	1	OTHER_USE	1
19	193	8	ContinuedFraction.java	evaluate	THIS	ContinuedFraction	UNKNOWN_AS	0	0	FIELD_USE	0
20	143	8	TransformerMap.java	transform	value	double	NAME	0	0	NO_USE	0
20	143	8	TransformerMap.java	transform	o	Object	PARAM_AS	1	2	PARAM_USE	1
20	143	8	TransformerMap.java	transform	THIS	TransformerMap	UNKNOWN_AS	0	0	FIELD_USE	0
21	147	12	TransformerMap.java	transform	trans	NumberTransformer	getTransformer()	0	1	CLALLER_USE	1
21	147	12	TransformerMap.java	transform	value	double	transform()	0	0	NO_USE	0
21	147	12	TransformerMap.java	transform	o	Object	PARAM_AS	1	2	PARAM_USE	0
21	147	12	TransformerMap.java	transform	THIS	TransformerMap	UNKNOWN_AS	0	0	NO_USE	0
22	158	8	TransformerMap.java	equals	other	Object	PARAM_AS	1	2	NO_USE	1
22	158	8	TransformerMap.java	equals	THIS	TransformerMap	UNKNOWN_AS	0	6	NO_USE	1
23	161	8	TransformerMap.java	equals	other	Object	PARAM_AS	1	2	OTHER_USE	1
23	161	8	TransformerMap.java	equals	THIS	TransformerMap	UNKNOWN_AS	0	6	FIELD_USE	0
24	163	12	TransformerMap.java	equals	rhs	TransformerMap	CAST	0	3	NO_USE	1
24	163	12	TransformerMap.java	equals	other	Object	PARAM_AS	1	2	NO_USE	0
24	163	12	TransformerMap.java	equals	THIS	TransformerMap	UNKNOWN_AS	0	6	NO_USE	1
25	166	12	TransformerMap.java	equals	rhs	TransformerMap	CAST	0	3	NO_USE	1
25	166	12	TransformerMap.java	equals	other	Object	PARAM_AS	1	2	NO_USE	0
25	166	12	TransformerMap.java	equals	THIS	TransformerMap	UNKNOWN_AS	0	6	NO_USE	1
26	170	16	TransformerMap.java	equals	rhs	TransformerMap	CAST	0	3	NO_USE	1
26	170	16	TransformerMap.java	equals	other	Object	PARAM_AS	1	2	NO_USE	0
26	170	16	TransformerMap.java	equals	THIS	TransformerMap	UNKNOWN_AS	0	6	NO_USE	1
27	183	8	MultidimensionalCounter.java	MultidimensionalCounter	tS	int	ARRAY_ACCESS	0	1	OTHER_USE	1
27	183	8	MultidimensionalCounter.java	MultidimensionalCounter	size	int	PARAM_AS	1	0	NO_USE	0
27	183	8	MultidimensionalCounter.java	MultidimensionalCounter	THIS	MultidimensionalCounter	0	0	0	NO_USE	0
28	217	8	MultidimensionalCounter.java	getCounts	index	int	PARAM_AS	1	2	OTHER_USE	1
28	217	8	MultidimensionalCounter.java	getCounts	THIS	MultidimensionalCounter	UNKNOWN_AS	0	1	FIELD_USE	1
29	254	8	MultidimensionalCounter.java	getCount	c	int	PARAM_AS	1	1	OTHER_USE	1
29	254	8	MultidimensionalCounter.java	getCount	THIS	MultidimensionalCounter	UNKNOWN_AS	0	3	FIELD_USE	1
30	260	12	MultidimensionalCounter.java	getCount	index	int	ARRAY_ACCESS	0	2	OTHER_USE	1
30	260	12	MultidimensionalCounter.java	getCount	i	int	0	0	1	ARRIDX_USE	1
30	260	12	MultidimensionalCounter.java	getCount	count	int	0	0	0	NO_USE	0
30	260	12	MultidimensionalCounter.java	getCount	c	int	PARAM_AS	1	1	NO_USE	0
30	260	12	MultidimensionalCounter.java	getCount	THIS	MultidimensionalCounter	UNKNOWN_AS	0	3	FIELD_USE	1
31	84	8	Pair.java	equals	o	Object	PARAM_AS	1	2	NO_USE	1
31	84	8	Pair.java	equals	THIS	Pair	UNKNOWN_AS	0	0	NO_USE	0
32	87	8	Pair.java	equals	o	Object	PARAM_AS	1	2	OTHER_USE	1
32	87	8	Pair.java	equals	THIS	Pair	UNKNOWN_AS	0	0	FIELD_USE	0
33	84	8	Incrementor.java	incrementCount	THIS	Incrementor	UNKNOWN_AS	0	2	FIELD_USE	1
34	182	8	ResizableDoubleArray.java	ResizableDoubleArray	initialArray	double[]	PARAM_AS	1	1	OTHER_USE	1
34	182	8	ResizableDoubleArray.java	ResizableDoubleArray	THIS	ResizableDoubleArray	UNKNOWN_AS	0	0	FIELD_USE	0
35	301	8	ResizableDoubleArray.java	addElement	value	double	PARAM_AS	1	0	NO_USE	0
35	301	8	ResizableDoubleArray.java	addElement	THIS	ResizableDoubleArray	UNKNOWN_AS	0	5	CLALLER_USE	1
36	305	8	ResizableDoubleArray.java	addElement	value	double	PARAM_AS	1	0	NO_USE	0
36	305	8	ResizableDoubleArray.java	addElement	THIS	ResizableDoubleArray	NAME	0	5	CLALLER_USE	1
37	344	8	ResizableDoubleArray.java	addElementRolling	discarded	double	ARRAY_ACCESS	0	0	NO_USE	0
37	344	8	ResizableDoubleArray.java	addElementRolling	value	double	PARAM_AS	1	0	NO_USE	0
37	344	8	ResizableDoubleArray.java	addElementRolling	THIS	ResizableDoubleArray	UNKNOWN_AS	0	5	CLALLER_USE	1
38	354	8	ResizableDoubleArray.java	addElementRolling	discarded	double	ARRAY_ACCESS	0	0	NO_USE	0
38	354	8	ResizableDoubleArray.java	addElementRolling	value	double	PARAM_AS	1	0	NO_USE	0
38	354	8	ResizableDoubleArray.java	addElementRolling	THIS	ResizableDoubleArray	NAME	0	5	CLALLER_USE	1
39	370	8	ResizableDoubleArray.java	substituteMostRecentElement	value	double	PARAM_AS	1	0	NO_USE	0
39	370	8	ResizableDoubleArray.java	substituteMostRecentElement	THIS	ResizableDoubleArray	UNKNOWN_AS	0	1	FIELD_USE	1
40	395	8	ResizableDoubleArray.java	checkContractExpand	contraction	float	PARAM_AS	1	2	PARAM_USE	1
40	395	8	ResizableDoubleArray.java	checkContractExpand	expansion	float	PARAM_AS	1	2	PARAM_USE	1
40	395	8	ResizableDoubleArray.java	checkContractExpand	THIS	ResizableDoubleArray	UNKNOWN_AS	0	0	FIELD_USE	0
41	401	8	ResizableDoubleArray.java	checkContractExpand	contraction	float	PARAM_AS	1	2	PARAM_USE	1
41	401	8	ResizableDoubleArray.java	checkContractExpand	expansion	float	PARAM_AS	1	2	NO_USE	0
41	401	8	ResizableDoubleArray.java	checkContractExpand	THIS	ResizableDoubleArray	UNKNOWN_AS	0	0	FIELD_USE	0
42	407	8	ResizableDoubleArray.java	checkContractExpand	contraction	float	PARAM_AS	1	2	NO_USE	0
42	407	8	ResizableDoubleArray.java	checkContractExpand	expansion	float	PARAM_AS	1	2	PARAM_USE	1
42	407	8	ResizableDoubleArray.java	checkContractExpand	THIS	ResizableDoubleArray	UNKNOWN_AS	0	0	FIELD_USE	0
43	494	8	ResizableDoubleArray.java	discardExtremeElements	i	int	PARAM_AS	1	2	PARAM_USE	1
43	494	8	ResizableDoubleArray.java	discardExtremeElements	front	boolean	PARAM_AS	1	0	OTHER_USE	0
43	494	8	ResizableDoubleArray.java	discardExtremeElements	THIS	ResizableDoubleArray	UNKNOWN_AS	0	2	FIELD_USE	1
44	498	14	ResizableDoubleArray.java	discardExtremeElements	i	int	PARAM_AS	1	2	PARAM_USE	1
44	498	14	ResizableDoubleArray.java	discardExtremeElements	front	boolean	PARAM_AS	1	0	OTHER_USE	0
44	498	14	ResizableDoubleArray.java	discardExtremeElements	THIS	ResizableDoubleArray	UNKNOWN_AS	0	2	FIELD_USE	0
45	505	12	ResizableDoubleArray.java	discardExtremeElements	i	int	PARAM_AS	1	2	OTHER_USE	0
45	505	12	ResizableDoubleArray.java	discardExtremeElements	front	boolean	PARAM_AS	1	0	NO_USE	1
45	505	12	ResizableDoubleArray.java	discardExtremeElements	THIS	ResizableDoubleArray	NAME	0	2	NO_USE	0
46	509	8	ResizableDoubleArray.java	discardExtremeElements	i	int	PARAM_AS	1	2	NO_USE	0
46	509	8	ResizableDoubleArray.java	discardExtremeElements	front	boolean	PARAM_AS	1	0	NO_USE	0
46	509	8	ResizableDoubleArray.java	discardExtremeElements	THIS	ResizableDoubleArray	NAME	0	2	CLALLER_USE	1
47	531	8	ResizableDoubleArray.java	expand	newSize	int	0	0	0	NO_USE	0
47	531	8	ResizableDoubleArray.java	expand	THIS	ResizableDoubleArray	UNKNOWN_AS	0	1	FIELD_USE	1
48	580	8	ResizableDoubleArray.java	getElement	index	int	PARAM_AS	1	2	PARAM_USE	1
48	580	8	ResizableDoubleArray.java	getElement	THIS	ResizableDoubleArray	UNKNOWN_AS	0	1	FIELD_USE	1
49	584	15	ResizableDoubleArray.java	getElement	index	int	PARAM_AS	1	2	+	1
49	584	15	ResizableDoubleArray.java	getElement	THIS	ResizableDoubleArray	UNKNOWN_AS	0	1	FIELD_USE	0
50	698	8	ResizableDoubleArray.java	setElement	index	int	PARAM_AS	1	3	PARAM_USE	1
50	698	8	ResizableDoubleArray.java	setElement	value	double	PARAM_AS	1	0	NO_USE	0
50	698	8	ResizableDoubleArray.java	setElement	THIS	ResizableDoubleArray	UNKNOWN_AS	0	4	FIELD_USE	0
51	703	8	ResizableDoubleArray.java	setElement	index	int	PARAM_AS	1	3	+	1
51	703	8	ResizableDoubleArray.java	setElement	value	double	PARAM_AS	1	0	NO_USE	0
51	703	8	ResizableDoubleArray.java	setElement	THIS	ResizableDoubleArray	UNKNOWN_AS	0	4	NO_USE	1
52	706	8	ResizableDoubleArray.java	setElement	index	int	PARAM_AS	1	3	+	1
52	706	8	ResizableDoubleArray.java	setElement	value	double	PARAM_AS	1	0	NO_USE	0
52	706	8	ResizableDoubleArray.java	setElement	THIS	ResizableDoubleArray	+	0	4	CLALLER_USE	1
53	739	8	ResizableDoubleArray.java	setExpansionMode	expansionMode	int	PARAM_AS	1	2	PARAM_USE	1
53	739	8	ResizableDoubleArray.java	setExpansionMode	THIS	ResizableDoubleArray	UNKNOWN_AS	0	0	FIELD_USE	0
54	759	8	ResizableDoubleArray.java	setInitialCapacity	initialCapacity	int	PARAM_AS	1	1	OTHER_USE	1
54	759	8	ResizableDoubleArray.java	setInitialCapacity	THIS	ResizableDoubleArray	UNKNOWN_AS	0	0	FIELD_USE	0
55	781	8	ResizableDoubleArray.java	setNumElements	i	int	PARAM_AS	1	2	PARAM_USE	1
55	781	8	ResizableDoubleArray.java	setNumElements	THIS	ResizableDoubleArray	UNKNOWN_AS	0	3	FIELD_USE	0
56	789	8	ResizableDoubleArray.java	setNumElements	i	int	PARAM_AS	1	2	+	1
56	789	8	ResizableDoubleArray.java	setNumElements	THIS	ResizableDoubleArray	UNKNOWN_AS	0	3	CLALLER_USE	1
57	804	8	ResizableDoubleArray.java	shouldContract	THIS	ResizableDoubleArray	UNKNOWN_AS	0	1	FIELD_USE	1
58	885	8	ResizableDoubleArray.java	equals	object	Object	PARAM_AS	1	2	NO_USE	1
58	885	8	ResizableDoubleArray.java	equals	THIS	ResizableDoubleArray	UNKNOWN_AS	0	1	NO_USE	1
59	888	7	ResizableDoubleArray.java	equals	object	Object	PARAM_AS	1	2	NO_USE	1
59	888	7	ResizableDoubleArray.java	equals	THIS	ResizableDoubleArray	UNKNOWN_AS	0	1	NO_USE	0
60	901	15	ResizableDoubleArray.java	equals	result	boolean	&&	0	1	NO_USE	1
60	901	15	ResizableDoubleArray.java	equals	other	ResizableDoubleArray	CAST	0	0	OTHER_USE	0
60	901	15	ResizableDoubleArray.java	equals	object	Object	PARAM_AS	1	2	NO_USE	0
60	901	15	ResizableDoubleArray.java	equals	THIS	ResizableDoubleArray	UNKNOWN_AS	0	1	FIELD_USE	0
61	271	8	BigReal.java	equals	other	Object	PARAM_AS	1	2	NO_USE	1
61	271	8	BigReal.java	equals	THIS	BigReal	UNKNOWN_AS	0	1	NO_USE	1
62	275	8	BigReal.java	equals	other	Object	PARAM_AS	1	2	OTHER_USE	1
62	275	8	BigReal.java	equals	THIS	BigReal	UNKNOWN_AS	0	1	FIELD_USE	0
63	153	8	OpenIntToDoubleHashMap.java	computeCapacity	expectedSize	int	PARAM_AS	1	1	NO_USE	1
63	153	8	OpenIntToDoubleHashMap.java	computeCapacity	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	0	NO_USE	0
64	158	8	OpenIntToDoubleHashMap.java	computeCapacity	capacity	int	CAST	0	1	RET_USE	1
64	158	8	OpenIntToDoubleHashMap.java	computeCapacity	powerOfTwo	int	highestOneBit()	0	1	NO_USE	1
64	158	8	OpenIntToDoubleHashMap.java	computeCapacity	expectedSize	int	PARAM_AS	1	1	NO_USE	0
64	158	8	OpenIntToDoubleHashMap.java	computeCapacity	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	0	NO_USE	0
65	182	8	OpenIntToDoubleHashMap.java	get	hash	int	hashOf()	0	0	NO_USE	0
65	182	8	OpenIntToDoubleHashMap.java	get	index	int	&	0	3	ARRIDX_USE	1
65	182	8	OpenIntToDoubleHashMap.java	get	key	int	PARAM_AS	1	2	NO_USE	1
65	182	8	OpenIntToDoubleHashMap.java	get	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	3	FIELD_USE	1
66	186	8	OpenIntToDoubleHashMap.java	get	hash	int	hashOf()	0	0	NO_USE	0
66	186	8	OpenIntToDoubleHashMap.java	get	index	int	&	0	3	NO_USE	1
66	186	8	OpenIntToDoubleHashMap.java	get	key	int	PARAM_AS	1	2	NO_USE	0
66	186	8	OpenIntToDoubleHashMap.java	get	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	3	FIELD_USE	1
67	194	12	OpenIntToDoubleHashMap.java	get	perturb	int	NAME	0	0	NO_USE	0
67	194	12	OpenIntToDoubleHashMap.java	get	hash	int	hashOf()	0	0	NO_USE	0
67	194	12	OpenIntToDoubleHashMap.java	get	index	int	&	0	3	ARRIDX_USE	1
67	194	12	OpenIntToDoubleHashMap.java	get	j	int	probe()	0	0	NO_USE	0
67	194	12	OpenIntToDoubleHashMap.java	get	key	int	PARAM_AS	1	2	NO_USE	1
67	194	12	OpenIntToDoubleHashMap.java	get	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	3	FIELD_USE	1
68	212	8	OpenIntToDoubleHashMap.java	containsKey	hash	int	hashOf()	0	0	NO_USE	0
68	212	8	OpenIntToDoubleHashMap.java	containsKey	index	int	&	0	3	NO_USE	1
68	212	8	OpenIntToDoubleHashMap.java	containsKey	key	int	PARAM_AS	1	2	NO_USE	1
68	212	8	OpenIntToDoubleHashMap.java	containsKey	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	3	NO_USE	1
69	216	8	OpenIntToDoubleHashMap.java	containsKey	hash	int	hashOf()	0	0	NO_USE	0
69	216	8	OpenIntToDoubleHashMap.java	containsKey	index	int	&	0	3	NO_USE	1
69	216	8	OpenIntToDoubleHashMap.java	containsKey	key	int	PARAM_AS	1	2	NO_USE	0
69	216	8	OpenIntToDoubleHashMap.java	containsKey	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	3	NO_USE	1
70	224	12	OpenIntToDoubleHashMap.java	containsKey	perturb	int	NAME	0	0	NO_USE	0
70	224	12	OpenIntToDoubleHashMap.java	containsKey	hash	int	hashOf()	0	0	NO_USE	0
70	224	12	OpenIntToDoubleHashMap.java	containsKey	index	int	&	0	3	NO_USE	1
70	224	12	OpenIntToDoubleHashMap.java	containsKey	j	int	probe()	0	0	NO_USE	0
70	224	12	OpenIntToDoubleHashMap.java	containsKey	key	int	PARAM_AS	1	2	NO_USE	1
70	224	12	OpenIntToDoubleHashMap.java	containsKey	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	3	NO_USE	1
71	274	8	OpenIntToDoubleHashMap.java	findInsertionIndex	hash	int	hashOf()	0	0	NO_USE	0
71	274	8	OpenIntToDoubleHashMap.java	findInsertionIndex	index	int	&	0	11	RET_USE	1
71	274	8	OpenIntToDoubleHashMap.java	findInsertionIndex	keys	int[]	PARAM_AS	1	3	ARR_USE	0
71	274	8	OpenIntToDoubleHashMap.java	findInsertionIndex	states	byte[]	PARAM_AS	1	8	ARR_USE	1
71	274	8	OpenIntToDoubleHashMap.java	findInsertionIndex	key	int	PARAM_AS	1	3	==	0
71	274	8	OpenIntToDoubleHashMap.java	findInsertionIndex	mask	int	PARAM_AS	1	0	NO_USE	0
71	274	8	OpenIntToDoubleHashMap.java	findInsertionIndex	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	0	CLALLER_USE	0
72	276	15	OpenIntToDoubleHashMap.java	findInsertionIndex	hash	int	hashOf()	0	0	NO_USE	0
72	276	15	OpenIntToDoubleHashMap.java	findInsertionIndex	index	int	&	0	11	PARAM_USE	1
72	276	15	OpenIntToDoubleHashMap.java	findInsertionIndex	keys	int[]	PARAM_AS	1	3	NO_USE	1
72	276	15	OpenIntToDoubleHashMap.java	findInsertionIndex	states	byte[]	PARAM_AS	1	8	NO_USE	1
72	276	15	OpenIntToDoubleHashMap.java	findInsertionIndex	key	int	PARAM_AS	1	3	NO_USE	1
72	276	15	OpenIntToDoubleHashMap.java	findInsertionIndex	mask	int	PARAM_AS	1	0	NO_USE	0
72	276	15	OpenIntToDoubleHashMap.java	findInsertionIndex	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	0	CLALLER_USE	0
73	282	8	OpenIntToDoubleHashMap.java	findInsertionIndex	hash	int	hashOf()	0	0	NO_USE	0
73	282	8	OpenIntToDoubleHashMap.java	findInsertionIndex	index	int	&	0	11	ARRIDX_USE	1
73	282	8	OpenIntToDoubleHashMap.java	findInsertionIndex	perturb	int	perturb()	0	0	PARAM_USE	0
73	282	8	OpenIntToDoubleHashMap.java	findInsertionIndex	j	int	NAME	0	0	PARAM_USE	0
73	282	8	OpenIntToDoubleHashMap.java	findInsertionIndex	keys	int[]	PARAM_AS	1	3	ARR_USE	0
73	282	8	OpenIntToDoubleHashMap.java	findInsertionIndex	states	byte[]	PARAM_AS	1	8	ARR_USE	1
73	282	8	OpenIntToDoubleHashMap.java	findInsertionIndex	key	int	PARAM_AS	1	3	==	0
73	282	8	OpenIntToDoubleHashMap.java	findInsertionIndex	mask	int	PARAM_AS	1	0	&	0
73	282	8	OpenIntToDoubleHashMap.java	findInsertionIndex	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	0	CLALLER_USE	0
74	288	16	OpenIntToDoubleHashMap.java	findInsertionIndex	hash	int	hashOf()	0	0	NO_USE	0
74	288	16	OpenIntToDoubleHashMap.java	findInsertionIndex	index	int	&	0	11	NO_USE	1
74	288	16	OpenIntToDoubleHashMap.java	findInsertionIndex	perturb	int	NAME	0	0	NO_USE	0
74	288	16	OpenIntToDoubleHashMap.java	findInsertionIndex	j	int	probe()	0	0	NO_USE	0
74	288	16	OpenIntToDoubleHashMap.java	findInsertionIndex	keys	int[]	PARAM_AS	1	3	NO_USE	1
74	288	16	OpenIntToDoubleHashMap.java	findInsertionIndex	states	byte[]	PARAM_AS	1	8	NO_USE	1
74	288	16	OpenIntToDoubleHashMap.java	findInsertionIndex	key	int	PARAM_AS	1	3	NO_USE	1
74	288	16	OpenIntToDoubleHashMap.java	findInsertionIndex	mask	int	PARAM_AS	1	0	NO_USE	0
74	288	16	OpenIntToDoubleHashMap.java	findInsertionIndex	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	0	NO_USE	0
75	294	8	OpenIntToDoubleHashMap.java	findInsertionIndex	hash	int	hashOf()	0	0	NO_USE	0
75	294	8	OpenIntToDoubleHashMap.java	findInsertionIndex	index	int	&	0	11	RET_USE	1
75	294	8	OpenIntToDoubleHashMap.java	findInsertionIndex	perturb	int	NAME	0	0	NO_USE	0
75	294	8	OpenIntToDoubleHashMap.java	findInsertionIndex	j	int	probe()	0	0	NO_USE	0
75	294	8	OpenIntToDoubleHashMap.java	findInsertionIndex	keys	int[]	PARAM_AS	1	3	NO_USE	0
75	294	8	OpenIntToDoubleHashMap.java	findInsertionIndex	states	byte[]	PARAM_AS	1	8	ARR_USE	1
75	294	8	OpenIntToDoubleHashMap.java	findInsertionIndex	key	int	PARAM_AS	1	3	NO_USE	0
75	294	8	OpenIntToDoubleHashMap.java	findInsertionIndex	mask	int	PARAM_AS	1	0	NO_USE	0
75	294	8	OpenIntToDoubleHashMap.java	findInsertionIndex	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	0	CLALLER_USE	0
76	296	15	OpenIntToDoubleHashMap.java	findInsertionIndex	hash	int	hashOf()	0	0	NO_USE	0
76	296	15	OpenIntToDoubleHashMap.java	findInsertionIndex	index	int	&	0	11	PARAM_USE	1
76	296	15	OpenIntToDoubleHashMap.java	findInsertionIndex	perturb	int	NAME	0	0	NO_USE	0
76	296	15	OpenIntToDoubleHashMap.java	findInsertionIndex	j	int	probe()	0	0	NO_USE	0
76	296	15	OpenIntToDoubleHashMap.java	findInsertionIndex	keys	int[]	PARAM_AS	1	3	NO_USE	0
76	296	15	OpenIntToDoubleHashMap.java	findInsertionIndex	states	byte[]	PARAM_AS	1	8	NO_USE	1
76	296	15	OpenIntToDoubleHashMap.java	findInsertionIndex	key	int	PARAM_AS	1	3	NO_USE	0
76	296	15	OpenIntToDoubleHashMap.java	findInsertionIndex	mask	int	PARAM_AS	1	0	NO_USE	0
76	296	15	OpenIntToDoubleHashMap.java	findInsertionIndex	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	0	CLALLER_USE	0
77	307	12	OpenIntToDoubleHashMap.java	findInsertionIndex	hash	int	hashOf()	0	0	NO_USE	0
77	307	12	OpenIntToDoubleHashMap.java	findInsertionIndex	index	int	&	0	11	ARRIDX_USE	1
77	307	12	OpenIntToDoubleHashMap.java	findInsertionIndex	perturb	int	NAME	0	0	NO_USE	0
77	307	12	OpenIntToDoubleHashMap.java	findInsertionIndex	j	int	probe()	0	0	NO_USE	0
77	307	12	OpenIntToDoubleHashMap.java	findInsertionIndex	firstRemoved	int	NAME	0	0	RET_USE	0
77	307	12	OpenIntToDoubleHashMap.java	findInsertionIndex	keys	int[]	PARAM_AS	1	3	ARR_USE	0
77	307	12	OpenIntToDoubleHashMap.java	findInsertionIndex	states	byte[]	PARAM_AS	1	8	ARR_USE	1
77	307	12	OpenIntToDoubleHashMap.java	findInsertionIndex	key	int	PARAM_AS	1	3	==	0
77	307	12	OpenIntToDoubleHashMap.java	findInsertionIndex	mask	int	PARAM_AS	1	0	NO_USE	0
77	307	12	OpenIntToDoubleHashMap.java	findInsertionIndex	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	0	CLALLER_USE	0
78	309	19	OpenIntToDoubleHashMap.java	findInsertionIndex	hash	int	hashOf()	0	0	NO_USE	0
78	309	19	OpenIntToDoubleHashMap.java	findInsertionIndex	index	int	&	0	11	PARAM_USE	1
78	309	19	OpenIntToDoubleHashMap.java	findInsertionIndex	perturb	int	NAME	0	0	NO_USE	0
78	309	19	OpenIntToDoubleHashMap.java	findInsertionIndex	j	int	probe()	0	0	NO_USE	0
78	309	19	OpenIntToDoubleHashMap.java	findInsertionIndex	firstRemoved	int	NAME	0	0	NO_USE	0
78	309	19	OpenIntToDoubleHashMap.java	findInsertionIndex	keys	int[]	PARAM_AS	1	3	NO_USE	1
78	309	19	OpenIntToDoubleHashMap.java	findInsertionIndex	states	byte[]	PARAM_AS	1	8	NO_USE	1
78	309	19	OpenIntToDoubleHashMap.java	findInsertionIndex	key	int	PARAM_AS	1	3	NO_USE	1
78	309	19	OpenIntToDoubleHashMap.java	findInsertionIndex	mask	int	PARAM_AS	1	0	NO_USE	0
78	309	19	OpenIntToDoubleHashMap.java	findInsertionIndex	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	0	CLALLER_USE	0
79	356	8	OpenIntToDoubleHashMap.java	remove	hash	int	hashOf()	0	0	NO_USE	0
79	356	8	OpenIntToDoubleHashMap.java	remove	index	int	&	0	3	PARAM_USE	1
79	356	8	OpenIntToDoubleHashMap.java	remove	key	int	PARAM_AS	1	2	NO_USE	1
79	356	8	OpenIntToDoubleHashMap.java	remove	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	3	CLALLER_USE	1
80	360	8	OpenIntToDoubleHashMap.java	remove	hash	int	hashOf()	0	0	NO_USE	0
80	360	8	OpenIntToDoubleHashMap.java	remove	index	int	&	0	3	NO_USE	1
80	360	8	OpenIntToDoubleHashMap.java	remove	key	int	PARAM_AS	1	2	NO_USE	0
80	360	8	OpenIntToDoubleHashMap.java	remove	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	3	FIELD_USE	1
81	368	12	OpenIntToDoubleHashMap.java	remove	perturb	int	NAME	0	0	NO_USE	0
81	368	12	OpenIntToDoubleHashMap.java	remove	hash	int	hashOf()	0	0	NO_USE	0
81	368	12	OpenIntToDoubleHashMap.java	remove	index	int	&	0	3	PARAM_USE	1
81	368	12	OpenIntToDoubleHashMap.java	remove	j	int	probe()	0	0	NO_USE	0
81	368	12	OpenIntToDoubleHashMap.java	remove	key	int	PARAM_AS	1	2	NO_USE	1
81	368	12	OpenIntToDoubleHashMap.java	remove	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	3	CLALLER_USE	1
82	413	8	OpenIntToDoubleHashMap.java	put	index	int	findInsertionIndex()	0	1	PARAM_USE	1
82	413	8	OpenIntToDoubleHashMap.java	put	previous	double	NAME	0	0	NO_USE	0
82	413	8	OpenIntToDoubleHashMap.java	put	newMapping	boolean	LITERAL	0	0	NO_USE	0
82	413	8	OpenIntToDoubleHashMap.java	put	key	int	PARAM_AS	1	0	NO_USE	0
82	413	8	OpenIntToDoubleHashMap.java	put	value	double	PARAM_AS	1	0	NO_USE	0
82	413	8	OpenIntToDoubleHashMap.java	put	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	1	CLALLER_USE	0
83	421	8	OpenIntToDoubleHashMap.java	put	index	int	NAME	0	1	NO_USE	0
83	421	8	OpenIntToDoubleHashMap.java	put	previous	double	ARRAY_ACCESS	0	0	NO_USE	0
83	421	8	OpenIntToDoubleHashMap.java	put	newMapping	boolean	LITERAL	0	0	NO_USE	1
83	421	8	OpenIntToDoubleHashMap.java	put	key	int	PARAM_AS	1	0	NO_USE	0
83	421	8	OpenIntToDoubleHashMap.java	put	value	double	PARAM_AS	1	0	NO_USE	0
83	421	8	OpenIntToDoubleHashMap.java	put	THIS	OpenIntToDoubleHashMap	NAME	0	1	FIELD_USE	0
84	423	12	OpenIntToDoubleHashMap.java	put	index	int	NAME	0	1	NO_USE	0
84	423	12	OpenIntToDoubleHashMap.java	put	previous	double	ARRAY_ACCESS	0	0	NO_USE	0
84	423	12	OpenIntToDoubleHashMap.java	put	newMapping	boolean	LITERAL	0	0	NO_USE	0
84	423	12	OpenIntToDoubleHashMap.java	put	key	int	PARAM_AS	1	0	NO_USE	0
84	423	12	OpenIntToDoubleHashMap.java	put	value	double	PARAM_AS	1	0	NO_USE	0
84	423	12	OpenIntToDoubleHashMap.java	put	THIS	OpenIntToDoubleHashMap	NAME	0	1	CLALLER_USE	1
85	448	12	OpenIntToDoubleHashMap.java	growTable	i	int	0	0	1	ARRIDX_USE	1
85	448	12	OpenIntToDoubleHashMap.java	growTable	oldLength	int	NAME	0	0	NO_USE	0
85	448	12	OpenIntToDoubleHashMap.java	growTable	oldKeys	int[]	NAME	0	0	ARR_USE	0
85	448	12	OpenIntToDoubleHashMap.java	growTable	oldValues	double[]	NAME	0	0	ARR_USE	0
85	448	12	OpenIntToDoubleHashMap.java	growTable	oldStates	byte[]	NAME	0	1	NO_USE	1
85	448	12	OpenIntToDoubleHashMap.java	growTable	newLength	int	*	0	0	NO_USE	0
85	448	12	OpenIntToDoubleHashMap.java	growTable	newKeys	int[]	ARRAY_CREATION	0	0	PARAM_USE	0
85	448	12	OpenIntToDoubleHashMap.java	growTable	newValues	double[]	ARRAY_CREATION	0	0	ARR_USE	0
85	448	12	OpenIntToDoubleHashMap.java	growTable	newStates	byte[]	ARRAY_CREATION	0	0	PARAM_USE	0
85	448	12	OpenIntToDoubleHashMap.java	growTable	newMask	int	-	0	0	PARAM_USE	0
85	448	12	OpenIntToDoubleHashMap.java	growTable	THIS	OpenIntToDoubleHashMap	UNKNOWN_AS	0	0	CLALLER_USE	0
86	288	8	FastMath.java	doubleHighPart	d	double	PARAM_AS	1	2	RET_USE	1
86	288	8	FastMath.java	doubleHighPart	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
87	310	6	FastMath.java	cosh	x	double	PARAM_AS	1	5	RET_USE	1
87	310	6	FastMath.java	cosh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
88	314	6	FastMath.java	cosh	x	double	PARAM_AS	1	5	PARAM_USE	1
88	314	6	FastMath.java	cosh	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
89	318	6	FastMath.java	cosh	x	double	PARAM_AS	1	5	-x	1
89	318	6	FastMath.java	cosh	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
90	323	6	FastMath.java	cosh	hiPrec	double[]	ARRAY_CREATION	0	0	NO_USE	0
90	323	6	FastMath.java	cosh	x	double	PARAM_AS	1	5	-x	1
90	323	6	FastMath.java	cosh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
91	365	6	FastMath.java	sinh	negate	boolean	LITERAL	0	0	NO_USE	0
91	365	6	FastMath.java	sinh	x	double	PARAM_AS	1	7	RET_USE	1
91	365	6	FastMath.java	sinh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
92	369	6	FastMath.java	sinh	negate	boolean	LITERAL	0	0	NO_USE	0
92	369	6	FastMath.java	sinh	x	double	PARAM_AS	1	7	PARAM_USE	1
92	369	6	FastMath.java	sinh	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
93	373	6	FastMath.java	sinh	negate	boolean	LITERAL	0	0	NO_USE	0
93	373	6	FastMath.java	sinh	x	double	PARAM_AS	1	7	-x	1
93	373	6	FastMath.java	sinh	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
94	377	6	FastMath.java	sinh	negate	boolean	LITERAL	0	0	NO_USE	0
94	377	6	FastMath.java	sinh	x	double	PARAM_AS	1	7	RET_USE	1
94	377	6	FastMath.java	sinh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
95	381	6	FastMath.java	sinh	negate	boolean	LITERAL	0	0	NO_USE	0
95	381	6	FastMath.java	sinh	x	double	PARAM_AS	1	7	-x	1
95	381	6	FastMath.java	sinh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
96	388	6	FastMath.java	sinh	negate	boolean	LITERAL	0	0	NO_USE	0
96	388	6	FastMath.java	sinh	result	double	UNKNOWN_AS	0	0	NO_USE	0
96	388	6	FastMath.java	sinh	x	double	PREFIX_EXPR	1	7	PARAM_USE	1
96	388	6	FastMath.java	sinh	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
97	462	6	FastMath.java	sinh	negate	boolean	LITERAL	0	0	NO_USE	1
97	462	6	FastMath.java	sinh	result	double	0.5	0	0	-x	0
97	462	6	FastMath.java	sinh	x	double	PREFIX_EXPR	1	7	NO_USE	0
97	462	6	FastMath.java	sinh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
98	476	6	FastMath.java	tanh	negate	boolean	LITERAL	0	0	NO_USE	0
98	476	6	FastMath.java	tanh	x	double	PARAM_AS	1	7	RET_USE	1
98	476	6	FastMath.java	tanh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
99	480	6	FastMath.java	tanh	negate	boolean	LITERAL	0	0	NO_USE	0
99	480	6	FastMath.java	tanh	x	double	PARAM_AS	1	7	NO_USE	1
99	480	6	FastMath.java	tanh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
100	484	6	FastMath.java	tanh	negate	boolean	LITERAL	0	0	NO_USE	0
100	484	6	FastMath.java	tanh	x	double	PARAM_AS	1	7	NO_USE	1
100	484	6	FastMath.java	tanh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
101	488	6	FastMath.java	tanh	negate	boolean	LITERAL	0	0	NO_USE	0
101	488	6	FastMath.java	tanh	x	double	PARAM_AS	1	7	RET_USE	1
101	488	6	FastMath.java	tanh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
102	492	6	FastMath.java	tanh	negate	boolean	LITERAL	0	0	NO_USE	0
102	492	6	FastMath.java	tanh	x	double	PARAM_AS	1	7	-x	1
102	492	6	FastMath.java	tanh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
103	498	6	FastMath.java	tanh	negate	boolean	LITERAL	0	0	NO_USE	0
103	498	6	FastMath.java	tanh	result	double	UNKNOWN_AS	0	0	NO_USE	0
103	498	6	FastMath.java	tanh	x	double	PREFIX_EXPR	1	7	*	1
103	498	6	FastMath.java	tanh	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
104	580	6	FastMath.java	tanh	negate	boolean	LITERAL	0	0	NO_USE	1
104	580	6	FastMath.java	tanh	result	double	+	0	0	-x	0
104	580	6	FastMath.java	tanh	x	double	PREFIX_EXPR	1	7	NO_USE	0
104	580	6	FastMath.java	tanh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
105	602	8	FastMath.java	asinh	negative	boolean	LITERAL	0	0	NO_USE	0
105	602	8	FastMath.java	asinh	a	double	PARAM_AS	1	5	-x	1
105	602	8	FastMath.java	asinh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
106	608	8	FastMath.java	asinh	negative	boolean	LITERAL	0	0	NO_USE	0
106	608	8	FastMath.java	asinh	absAsinh	double	UNKNOWN_AS	0	0	NO_USE	0
106	608	8	FastMath.java	asinh	a	double	PREFIX_EXPR	1	5	*	1
106	608	8	FastMath.java	asinh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
107	612	12	FastMath.java	asinh	a2	double	*	0	0	*	0
107	612	12	FastMath.java	asinh	negative	boolean	LITERAL	0	0	NO_USE	0
107	612	12	FastMath.java	asinh	absAsinh	double	log()	0	0	NO_USE	0
107	612	12	FastMath.java	asinh	a	double	PREFIX_EXPR	1	5	*	1
107	612	12	FastMath.java	asinh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
108	614	19	FastMath.java	asinh	a2	double	*	0	0	*	0
108	614	19	FastMath.java	asinh	negative	boolean	LITERAL	0	0	NO_USE	0
108	614	19	FastMath.java	asinh	absAsinh	double	*	0	0	NO_USE	0
108	614	19	FastMath.java	asinh	a	double	PREFIX_EXPR	1	5	*	1
108	614	19	FastMath.java	asinh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
109	616	19	FastMath.java	asinh	a2	double	*	0	0	*	0
109	616	19	FastMath.java	asinh	negative	boolean	LITERAL	0	0	NO_USE	0
109	616	19	FastMath.java	asinh	absAsinh	double	*	0	0	NO_USE	0
109	616	19	FastMath.java	asinh	a	double	PREFIX_EXPR	1	5	*	1
109	616	19	FastMath.java	asinh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
110	634	8	FastMath.java	atanh	negative	boolean	LITERAL	0	0	NO_USE	0
110	634	8	FastMath.java	atanh	a	double	PARAM_AS	1	5	-x	1
110	634	8	FastMath.java	atanh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
111	640	8	FastMath.java	atanh	negative	boolean	LITERAL	0	0	NO_USE	0
111	640	8	FastMath.java	atanh	absAtanh	double	UNKNOWN_AS	0	0	NO_USE	0
111	640	8	FastMath.java	atanh	a	double	PREFIX_EXPR	1	5	+	1
111	640	8	FastMath.java	atanh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
112	644	12	FastMath.java	atanh	a2	double	*	0	0	*	0
112	644	12	FastMath.java	atanh	negative	boolean	LITERAL	0	0	NO_USE	0
112	644	12	FastMath.java	atanh	absAtanh	double	*	0	0	NO_USE	0
112	644	12	FastMath.java	atanh	a	double	PREFIX_EXPR	1	5	*	1
112	644	12	FastMath.java	atanh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
113	646	19	FastMath.java	atanh	a2	double	*	0	0	*	0
113	646	19	FastMath.java	atanh	negative	boolean	LITERAL	0	0	NO_USE	0
113	646	19	FastMath.java	atanh	absAtanh	double	*	0	0	NO_USE	0
113	646	19	FastMath.java	atanh	a	double	PREFIX_EXPR	1	5	*	1
113	646	19	FastMath.java	atanh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
114	648	19	FastMath.java	atanh	a2	double	*	0	0	*	0
114	648	19	FastMath.java	atanh	negative	boolean	LITERAL	0	0	NO_USE	0
114	648	19	FastMath.java	atanh	absAtanh	double	*	0	0	NO_USE	0
114	648	19	FastMath.java	atanh	a	double	PREFIX_EXPR	1	5	*	1
114	648	19	FastMath.java	atanh	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
115	741	8	FastMath.java	exp	intPartA	double	UNKNOWN_AS	0	0	NO_USE	0
115	741	8	FastMath.java	exp	intPartB	double	UNKNOWN_AS	0	0	NO_USE	0
115	741	8	FastMath.java	exp	intVal	int	UNKNOWN_AS	0	4	>	0
115	741	8	FastMath.java	exp	x	double	PARAM_AS	1	1	-x	1
115	741	8	FastMath.java	exp	extra	double	PARAM_AS	1	1	PARAM_USE	0
115	741	8	FastMath.java	exp	hiPrec	double[]	PARAM_AS	1	5	!=	0
115	741	8	FastMath.java	exp	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
116	744	12	FastMath.java	exp	intPartA	double	UNKNOWN_AS	0	0	NO_USE	0
116	744	12	FastMath.java	exp	intPartB	double	UNKNOWN_AS	0	0	NO_USE	0
116	744	12	FastMath.java	exp	intVal	int	CAST	0	4	NO_USE	1
116	744	12	FastMath.java	exp	x	double	PARAM_AS	1	1	NO_USE	0
116	744	12	FastMath.java	exp	extra	double	PARAM_AS	1	1	NO_USE	0
116	744	12	FastMath.java	exp	hiPrec	double[]	PARAM_AS	1	5	!=	0
116	744	12	FastMath.java	exp	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
117	745	16	FastMath.java	exp	intPartA	double	UNKNOWN_AS	0	0	NO_USE	0
117	745	16	FastMath.java	exp	intPartB	double	UNKNOWN_AS	0	0	NO_USE	0
117	745	16	FastMath.java	exp	intVal	int	CAST	0	4	NO_USE	0
117	745	16	FastMath.java	exp	x	double	PARAM_AS	1	1	NO_USE	0
117	745	16	FastMath.java	exp	extra	double	PARAM_AS	1	1	NO_USE	0
117	745	16	FastMath.java	exp	hiPrec	double[]	PARAM_AS	1	5	ARR_USE	1
117	745	16	FastMath.java	exp	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
118	752	12	FastMath.java	exp	intPartA	double	UNKNOWN_AS	0	0	NO_USE	0
118	752	12	FastMath.java	exp	intPartB	double	UNKNOWN_AS	0	0	NO_USE	0
118	752	12	FastMath.java	exp	intVal	int	CAST	0	4	NO_USE	1
118	752	12	FastMath.java	exp	x	double	PARAM_AS	1	1	+	0
118	752	12	FastMath.java	exp	extra	double	PARAM_AS	1	1	PARAM_USE	0
118	752	12	FastMath.java	exp	hiPrec	double[]	0.0	1	5	PARAM_USE	0
118	752	12	FastMath.java	exp	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
119	755	16	FastMath.java	exp	result	double	/	0	0	NO_USE	0
119	755	16	FastMath.java	exp	intPartA	double	UNKNOWN_AS	0	0	NO_USE	0
119	755	16	FastMath.java	exp	intPartB	double	UNKNOWN_AS	0	0	NO_USE	0
119	755	16	FastMath.java	exp	intVal	int	CAST	0	4	NO_USE	0
119	755	16	FastMath.java	exp	x	double	PARAM_AS	1	1	NO_USE	0
119	755	16	FastMath.java	exp	extra	double	PARAM_AS	1	1	NO_USE	0
119	755	16	FastMath.java	exp	hiPrec	double[]	0.0	1	5	ARR_USE	1
119	755	16	FastMath.java	exp	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
120	762	12	FastMath.java	exp	intPartA	double	UNKNOWN_AS	0	0	NO_USE	0
120	762	12	FastMath.java	exp	intPartB	double	UNKNOWN_AS	0	0	NO_USE	0
120	762	12	FastMath.java	exp	intVal	int	CAST	0	4	NO_USE	1
120	762	12	FastMath.java	exp	x	double	PARAM_AS	1	1	+	0
120	762	12	FastMath.java	exp	extra	double	PARAM_AS	1	1	PARAM_USE	0
120	762	12	FastMath.java	exp	hiPrec	double[]	285040095144011776.0	1	5	PARAM_USE	0
120	762	12	FastMath.java	exp	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
121	765	16	FastMath.java	exp	result	double	/	0	0	NO_USE	0
121	765	16	FastMath.java	exp	intPartA	double	UNKNOWN_AS	0	0	NO_USE	0
121	765	16	FastMath.java	exp	intPartB	double	UNKNOWN_AS	0	0	NO_USE	0
121	765	16	FastMath.java	exp	intVal	int	CAST	0	4	NO_USE	0
121	765	16	FastMath.java	exp	x	double	PARAM_AS	1	1	NO_USE	0
121	765	16	FastMath.java	exp	extra	double	PARAM_AS	1	1	NO_USE	0
121	765	16	FastMath.java	exp	hiPrec	double[]	285040095144011776.0	1	5	ARR_USE	1
121	765	16	FastMath.java	exp	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
122	781	12	FastMath.java	exp	intPartA	double	ARRAY_ACCESS	0	0	NO_USE	0
122	781	12	FastMath.java	exp	intPartB	double	ARRAY_ACCESS	0	0	NO_USE	0
122	781	12	FastMath.java	exp	intVal	int	CAST	0	4	NO_USE	1
122	781	12	FastMath.java	exp	x	double	PARAM_AS	1	1	NO_USE	0
122	781	12	FastMath.java	exp	extra	double	PARAM_AS	1	1	NO_USE	0
122	781	12	FastMath.java	exp	hiPrec	double[]	4.455505956692756620	1	5	!=	0
122	781	12	FastMath.java	exp	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
123	782	16	FastMath.java	exp	intPartA	double	ARRAY_ACCESS	0	0	NO_USE	0
123	782	16	FastMath.java	exp	intPartB	double	ARRAY_ACCESS	0	0	NO_USE	0
123	782	16	FastMath.java	exp	intVal	int	CAST	0	4	NO_USE	0
123	782	16	FastMath.java	exp	x	double	PARAM_AS	1	1	NO_USE	0
123	782	16	FastMath.java	exp	extra	double	PARAM_AS	1	1	NO_USE	0
123	782	16	FastMath.java	exp	hiPrec	double[]	4.455505956692756620	1	5	ARR_USE	1
123	782	16	FastMath.java	exp	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
124	834	8	FastMath.java	exp	intPartA	double	ARRAY_ACCESS	0	0	NO_USE	0
124	834	8	FastMath.java	exp	intPartB	double	ARRAY_ACCESS	0	0	NO_USE	0
124	834	8	FastMath.java	exp	intVal	int	CAST	0	4	NO_USE	0
124	834	8	FastMath.java	exp	intFrac	int	CAST	0	0	NO_USE	0
124	834	8	FastMath.java	exp	fracPartA	double	ARRAY_ACCESS	0	0	NO_USE	0
124	834	8	FastMath.java	exp	fracPartB	double	ARRAY_ACCESS	0	0	NO_USE	0
124	834	8	FastMath.java	exp	epsilon	double	-	0	0	NO_USE	0
124	834	8	FastMath.java	exp	z	double	+	0	0	OTHER_USE	0
124	834	8	FastMath.java	exp	tempA	double	*	0	0	+	0
124	834	8	FastMath.java	exp	tempB	double	+	0	0	+	0
124	834	8	FastMath.java	exp	tempC	double	+	0	0	*	0
124	834	8	FastMath.java	exp	result	double	UNKNOWN_AS	0	0	NO_USE	0
124	834	8	FastMath.java	exp	x	double	PARAM_AS	1	1	NO_USE	0
124	834	8	FastMath.java	exp	extra	double	PARAM_AS	1	1	*	1
124	834	8	FastMath.java	exp	hiPrec	double[]	0.0	1	5	NO_USE	0
124	834	8	FastMath.java	exp	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
125	840	8	FastMath.java	exp	intPartA	double	ARRAY_ACCESS	0	0	NO_USE	0
125	840	8	FastMath.java	exp	intPartB	double	ARRAY_ACCESS	0	0	NO_USE	0
125	840	8	FastMath.java	exp	intVal	int	CAST	0	4	NO_USE	0
125	840	8	FastMath.java	exp	intFrac	int	CAST	0	0	NO_USE	0
125	840	8	FastMath.java	exp	fracPartA	double	ARRAY_ACCESS	0	0	NO_USE	0
125	840	8	FastMath.java	exp	fracPartB	double	ARRAY_ACCESS	0	0	NO_USE	0
125	840	8	FastMath.java	exp	epsilon	double	-	0	0	NO_USE	0
125	840	8	FastMath.java	exp	z	double	+	0	0	OTHER_USE	0
125	840	8	FastMath.java	exp	tempA	double	*	0	0	OTHER_USE	0
125	840	8	FastMath.java	exp	tempB	double	+	0	0	+	0
125	840	8	FastMath.java	exp	tempC	double	+	0	0	*	0
125	840	8	FastMath.java	exp	result	double	+	0	0	NO_USE	0
125	840	8	FastMath.java	exp	x	double	PARAM_AS	1	1	NO_USE	0
125	840	8	FastMath.java	exp	extra	double	PARAM_AS	1	1	*	0
125	840	8	FastMath.java	exp	hiPrec	double[]	0.0	1	5	ARR_USE	1
125	840	8	FastMath.java	exp	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
126	863	8	FastMath.java	expm1	x	double	PARAM_AS	1	7	RET_USE	1
126	863	8	FastMath.java	expm1	hiPrecOut	double	PARAM_AS	1	1	NO_USE	0
126	863	8	FastMath.java	expm1	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
127	867	8	FastMath.java	expm1	x	double	PARAM_AS	1	7	PARAM_USE	1
127	867	8	FastMath.java	expm1	hiPrecOut	double	PARAM_AS	1	1	NO_USE	0
127	867	8	FastMath.java	expm1	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
128	872	12	FastMath.java	expm1	hiPrec	double[]	ARRAY_CREATION	0	0	ARR_USE	0
128	872	12	FastMath.java	expm1	x	double	PARAM_AS	1	7	NO_USE	1
128	872	12	FastMath.java	expm1	hiPrecOut	double	PARAM_AS	1	1	NO_USE	0
128	872	12	FastMath.java	expm1	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
129	887	8	FastMath.java	expm1	baseA	double	UNKNOWN_AS	0	0	NO_USE	0
129	887	8	FastMath.java	expm1	baseB	double	UNKNOWN_AS	0	0	NO_USE	0
129	887	8	FastMath.java	expm1	epsilon	double	UNKNOWN_AS	0	0	NO_USE	0
129	887	8	FastMath.java	expm1	negative	boolean	LITERAL	0	0	NO_USE	0
129	887	8	FastMath.java	expm1	x	double	PARAM_AS	1	7	-x	1
129	887	8	FastMath.java	expm1	hiPrecOut	double	PARAM_AS	1	1	NO_USE	0
129	887	8	FastMath.java	expm1	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
130	963	8	FastMath.java	expm1	baseA	double	-	0	0	NO_USE	0
130	963	8	FastMath.java	expm1	baseB	double	+	0	0	NO_USE	0
130	963	8	FastMath.java	expm1	epsilon	double	-	0	0	NO_USE	0
130	963	8	FastMath.java	expm1	negative	boolean	LITERAL	0	0	NO_USE	1
130	963	8	FastMath.java	expm1	zb	double	-	0	0	*	0
130	963	8	FastMath.java	expm1	za	double	NAME	0	0	-	0
130	963	8	FastMath.java	expm1	temp	double	+	0	0	+	0
130	963	8	FastMath.java	expm1	ya	double	NAME	0	0	+	0
130	963	8	FastMath.java	expm1	yb	double	PREFIX_EXPR	0	0	+	0
130	963	8	FastMath.java	expm1	x	double	PREFIX_EXPR	1	7	NO_USE	0
130	963	8	FastMath.java	expm1	hiPrecOut	double	PARAM_AS	1	1	NO_USE	0
130	963	8	FastMath.java	expm1	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
131	996	8	FastMath.java	expm1	baseA	double	-	0	0	NO_USE	0
131	996	8	FastMath.java	expm1	baseB	double	+	0	0	NO_USE	0
131	996	8	FastMath.java	expm1	epsilon	double	-	0	0	NO_USE	0
131	996	8	FastMath.java	expm1	negative	boolean	LITERAL	0	0	NO_USE	0
131	996	8	FastMath.java	expm1	zb	double	-	0	0	NO_USE	0
131	996	8	FastMath.java	expm1	za	double	-	0	0	NO_USE	0
131	996	8	FastMath.java	expm1	temp	double	*	0	0	NO_USE	0
131	996	8	FastMath.java	expm1	ya	double	PREFIX_EXPR	0	0	OTHER_USE	0
131	996	8	FastMath.java	expm1	yb	double	PREFIX_EXPR	0	0	OTHER_USE	0
131	996	8	FastMath.java	expm1	x	double	PREFIX_EXPR	1	7	NO_USE	0
131	996	8	FastMath.java	expm1	hiPrecOut	double	PARAM_AS	1	1	ARR_USE	1
131	996	8	FastMath.java	expm1	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
132	1032	8	FastMath.java	slowexp	xs	double[]	ARRAY_CREATION	0	0	NO_USE	0
132	1032	8	FastMath.java	slowexp	ys	double[]	ARRAY_ACCESS	0	0	ARR_USE	0
132	1032	8	FastMath.java	slowexp	facts	double[]	ARRAY_CREATION	0	0	NO_USE	0
132	1032	8	FastMath.java	slowexp	as	double[]	ARRAY_CREATION	0	0	NO_USE	0
132	1032	8	FastMath.java	slowexp	x	double	PARAM_AS	1	0	NO_USE	0
132	1032	8	FastMath.java	slowexp	result	double	PARAM_AS	1	1	ARR_USE	1
132	1032	8	FastMath.java	slowexp	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
133	1046	8	FastMath.java	split	d	double	PARAM_AS	1	2	*	1
133	1046	8	FastMath.java	split	split	double	PARAM_AS	1	0	ARR_USE	0
133	1046	8	FastMath.java	split	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
134	1065	8	FastMath.java	resplit	c	double	+	0	2	*	1
134	1065	8	FastMath.java	resplit	d	double	PREFIX_EXPR	0	0	+	0
134	1065	8	FastMath.java	resplit	a	double	PARAM_AS	1	0	ARR_USE	0
134	1065	8	FastMath.java	resplit	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
135	1123	8	FastMath.java	splitReciprocal	b	double	/	0	0	NO_USE	0
135	1123	8	FastMath.java	splitReciprocal	a	double	-	0	0	NO_USE	0
135	1123	8	FastMath.java	splitReciprocal	in	double	PARAM_AS	1	1	ARR_USE	1
135	1123	8	FastMath.java	splitReciprocal	result	double	PARAM_AS	1	2	NO_USE	0
135	1123	8	FastMath.java	splitReciprocal	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
136	1131	8	FastMath.java	splitReciprocal	b	double	/	0	0	NO_USE	0
136	1131	8	FastMath.java	splitReciprocal	a	double	-	0	0	NO_USE	0
136	1131	8	FastMath.java	splitReciprocal	in	double	0.0	1	1	NO_USE	0
136	1131	8	FastMath.java	splitReciprocal	result	double	/	1	2	ARR_USE	1
136	1131	8	FastMath.java	splitReciprocal	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
137	1227	12	FastMath.java	expint	xs	double[]	1.4456468917292502E-16	0	0	PARAM_USE	0
137	1227	12	FastMath.java	expint	as	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
137	1227	12	FastMath.java	expint	ys	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
137	1227	12	FastMath.java	expint	p	int	PARAM_AS	1	1	NO_USE	1
137	1227	12	FastMath.java	expint	result	double	PARAM_AS	1	1	NO_USE	0
137	1227	12	FastMath.java	expint	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
138	1238	8	FastMath.java	expint	xs	double[]	ARRAY_ACCESS	0	0	NO_USE	0
138	1238	8	FastMath.java	expint	as	double[]	ARRAY_CREATION	0	0	NO_USE	0
138	1238	8	FastMath.java	expint	ys	double[]	ARRAY_ACCESS	0	0	ARR_USE	0
138	1238	8	FastMath.java	expint	p	int	1	1	1	NO_USE	0
138	1238	8	FastMath.java	expint	result	double	PARAM_AS	1	1	ARR_USE	1
138	1238	8	FastMath.java	expint	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
139	1266	8	FastMath.java	log	x	double	PARAM_AS	1	8	NO_USE	1
139	1266	8	FastMath.java	log	hiPrec	double[]	PARAM_AS	1	6	NO_USE	0
139	1266	8	FastMath.java	log	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
140	1272	8	FastMath.java	log	bits	long	doubleToLongBits()	0	2	NO_USE	1
140	1272	8	FastMath.java	log	x	double	PARAM_AS	1	8	!=	1
140	1272	8	FastMath.java	log	hiPrec	double[]	PARAM_AS	1	6	!=	0
140	1272	8	FastMath.java	log	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
141	1273	12	FastMath.java	log	bits	long	doubleToLongBits()	0	2	NO_USE	0
141	1273	12	FastMath.java	log	x	double	PARAM_AS	1	8	NO_USE	1
141	1273	12	FastMath.java	log	hiPrec	double[]	PARAM_AS	1	6	!=	0
141	1273	12	FastMath.java	log	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
142	1274	16	FastMath.java	log	bits	long	doubleToLongBits()	0	2	NO_USE	0
142	1274	16	FastMath.java	log	x	double	PARAM_AS	1	8	NO_USE	0
142	1274	16	FastMath.java	log	hiPrec	double[]	PARAM_AS	1	6	ARR_USE	1
142	1274	16	FastMath.java	log	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
143	1283	8	FastMath.java	log	bits	long	doubleToLongBits()	0	2	NO_USE	0
143	1283	8	FastMath.java	log	x	double	PARAM_AS	1	8	NO_USE	1
143	1283	8	FastMath.java	log	hiPrec	double[]	NAME	1	6	!=	0
143	1283	8	FastMath.java	log	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
144	1284	12	FastMath.java	log	bits	long	doubleToLongBits()	0	2	NO_USE	0
144	1284	12	FastMath.java	log	x	double	PARAM_AS	1	8	NO_USE	0
144	1284	12	FastMath.java	log	hiPrec	double[]	NAME	1	6	ARR_USE	1
144	1284	12	FastMath.java	log	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
145	1294	8	FastMath.java	log	bits	long	doubleToLongBits()	0	2	&	1
145	1294	8	FastMath.java	log	exp	int	-	0	2	x--	0
145	1294	8	FastMath.java	log	x	double	PARAM_AS	1	8	==	0
145	1294	8	FastMath.java	log	hiPrec	double[]	NAME	1	6	!=	0
145	1294	8	FastMath.java	log	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
146	1296	12	FastMath.java	log	bits	long	doubleToLongBits()	0	2	NO_USE	0
146	1296	12	FastMath.java	log	exp	int	-	0	2	NO_USE	0
146	1296	12	FastMath.java	log	x	double	PARAM_AS	1	8	NO_USE	1
146	1296	12	FastMath.java	log	hiPrec	double[]	NAME	1	6	!=	0
146	1296	12	FastMath.java	log	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
147	1298	16	FastMath.java	log	bits	long	doubleToLongBits()	0	2	NO_USE	0
147	1298	16	FastMath.java	log	exp	int	-	0	2	NO_USE	0
147	1298	16	FastMath.java	log	x	double	PARAM_AS	1	8	NO_USE	0
147	1298	16	FastMath.java	log	hiPrec	double[]	NAME	1	6	ARR_USE	1
147	1298	16	FastMath.java	log	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
148	1314	8	FastMath.java	log	bits	long	1	0	2	NO_USE	0
148	1314	8	FastMath.java	log	exp	int	-	0	2	NO_USE	1
148	1314	8	FastMath.java	log	x	double	PARAM_AS	1	8	<	0
148	1314	8	FastMath.java	log	hiPrec	double[]	NAME	1	6	==	0
148	1314	8	FastMath.java	log	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
149	1315	12	FastMath.java	log	bits	long	1	0	2	NO_USE	0
149	1315	12	FastMath.java	log	exp	int	-	0	2	NO_USE	0
149	1315	12	FastMath.java	log	x	double	PARAM_AS	1	8	-	1
149	1315	12	FastMath.java	log	hiPrec	double[]	NAME	1	6	NO_USE	1
149	1315	12	FastMath.java	log	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
150	1378	8	FastMath.java	log	bits	long	1	0	2	&	0
150	1378	8	FastMath.java	log	exp	int	-	0	2	NO_USE	0
150	1378	8	FastMath.java	log	lnm	double[]	ARRAY_ACCESS	0	0	NO_USE	0
150	1378	8	FastMath.java	log	epsilon	double	/	0	0	*	0
150	1378	8	FastMath.java	log	lnza	double	0.0	0	0	-	0
150	1378	8	FastMath.java	log	lnzb	double	0.0	0	0	NO_USE	0
150	1378	8	FastMath.java	log	x	double	PARAM_AS	1	8	NO_USE	0
150	1378	8	FastMath.java	log	hiPrec	double[]	NAME	1	6	NO_USE	1
150	1378	8	FastMath.java	log	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
151	1479	8	FastMath.java	log	bits	long	1	0	2	NO_USE	0
151	1479	8	FastMath.java	log	exp	int	-	0	2	NO_USE	0
151	1479	8	FastMath.java	log	lnm	double[]	ARRAY_ACCESS	0	0	NO_USE	0
151	1479	8	FastMath.java	log	epsilon	double	/	0	0	NO_USE	0
151	1479	8	FastMath.java	log	lnza	double	*	0	0	NO_USE	0
151	1479	8	FastMath.java	log	lnzb	double	PREFIX_EXPR	0	0	NO_USE	0
151	1479	8	FastMath.java	log	a	double	NAME	0	0	OTHER_USE	0
151	1479	8	FastMath.java	log	b	double	+	0	0	OTHER_USE	0
151	1479	8	FastMath.java	log	c	double	+	0	0	NO_USE	0
151	1479	8	FastMath.java	log	d	double	PREFIX_EXPR	0	0	NO_USE	0
151	1479	8	FastMath.java	log	x	double	PARAM_AS	1	8	NO_USE	0
151	1479	8	FastMath.java	log	hiPrec	double[]	NAME	1	6	ARR_USE	1
151	1479	8	FastMath.java	log	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
152	1493	8	FastMath.java	log1p	x	double	PARAM_AS	1	5	/	1
152	1493	8	FastMath.java	log1p	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
153	1497	8	FastMath.java	log1p	x	double	PARAM_AS	1	5	RET_USE	1
153	1497	8	FastMath.java	log1p	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
154	1501	8	FastMath.java	log1p	x	double	PARAM_AS	1	5	+	1
154	1501	8	FastMath.java	log1p	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
155	1508	12	FastMath.java	log1p	xpa	double	+	0	0	NO_USE	0
155	1508	12	FastMath.java	log1p	xpb	double	PREFIX_EXPR	0	0	NO_USE	0
155	1508	12	FastMath.java	log1p	hiPrec	double[]	ARRAY_CREATION	0	0	NO_USE	0
155	1508	12	FastMath.java	log1p	lores	double	log()	0	1	RET_USE	1
155	1508	12	FastMath.java	log1p	x	double	PARAM_AS	1	5	NO_USE	0
155	1508	12	FastMath.java	log1p	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
156	1538	8	FastMath.java	log10	hiPrec	double[]	ARRAY_CREATION	0	0	NO_USE	0
156	1538	8	FastMath.java	log10	lores	double	log()	0	1	RET_USE	1
156	1538	8	FastMath.java	log10	x	double	PARAM_AS	1	0	NO_USE	0
156	1538	8	FastMath.java	log10	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
157	1562	8	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
157	1562	8	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	0
157	1562	8	FastMath.java	pow	y	double	PARAM_AS	1	26	NO_USE	1
157	1562	8	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
158	1566	8	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
158	1566	8	FastMath.java	pow	x	double	PARAM_AS	1	14	RET_USE	1
158	1566	8	FastMath.java	pow	y	double	PARAM_AS	1	26	NO_USE	0
158	1566	8	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
159	1571	8	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
159	1571	8	FastMath.java	pow	x	double	PARAM_AS	1	14	PARAM_USE	1
159	1571	8	FastMath.java	pow	y	double	PARAM_AS	1	26	OTHER_USE	0
159	1571	8	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	FIELD_USE	0
160	1573	12	FastMath.java	pow	bits	long	doubleToLongBits()	0	1	NO_USE	1
160	1573	12	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
160	1573	12	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	0
160	1573	12	FastMath.java	pow	y	double	PARAM_AS	1	26	OTHER_USE	0
160	1573	12	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
161	1577	16	FastMath.java	pow	yi	long	CAST	0	6	NO_USE	1
161	1577	16	FastMath.java	pow	bits	long	doubleToLongBits()	0	1	NO_USE	0
161	1577	16	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
161	1577	16	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	0
161	1577	16	FastMath.java	pow	y	double	PARAM_AS	1	26	NO_USE	1
161	1577	16	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
162	1581	16	FastMath.java	pow	yi	long	CAST	0	6	NO_USE	1
162	1581	16	FastMath.java	pow	bits	long	doubleToLongBits()	0	1	NO_USE	0
162	1581	16	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
162	1581	16	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	0
162	1581	16	FastMath.java	pow	y	double	PARAM_AS	1	26	NO_USE	1
162	1581	16	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
163	1585	16	FastMath.java	pow	yi	long	CAST	0	6	NO_USE	1
163	1585	16	FastMath.java	pow	bits	long	doubleToLongBits()	0	1	NO_USE	0
163	1585	16	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
163	1585	16	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	0
163	1585	16	FastMath.java	pow	y	double	PARAM_AS	1	26	NO_USE	1
163	1585	16	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
164	1590	12	FastMath.java	pow	bits	long	doubleToLongBits()	0	1	NO_USE	0
164	1590	12	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
164	1590	12	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	0
164	1590	12	FastMath.java	pow	y	double	PARAM_AS	1	26	NO_USE	1
164	1590	12	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
165	1593	12	FastMath.java	pow	bits	long	doubleToLongBits()	0	1	NO_USE	0
165	1593	12	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
165	1593	12	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	0
165	1593	12	FastMath.java	pow	y	double	PARAM_AS	1	26	NO_USE	1
165	1593	12	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
166	1600	8	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
166	1600	8	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	1
166	1600	8	FastMath.java	pow	y	double	PARAM_AS	1	26	!=	0
166	1600	8	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
167	1601	12	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
167	1601	12	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	0
167	1601	12	FastMath.java	pow	y	double	PARAM_AS	1	26	RET_USE	1
167	1601	12	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
168	1604	12	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
168	1604	12	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	0
168	1604	12	FastMath.java	pow	y	double	PARAM_AS	1	26	NO_USE	1
168	1604	12	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
169	1611	8	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
169	1611	8	FastMath.java	pow	x	double	PARAM_AS	1	14	*	0
169	1611	8	FastMath.java	pow	y	double	PARAM_AS	1	26	NO_USE	1
169	1611	8	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	FIELD_USE	0
170	1612	12	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
170	1612	12	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	1
170	1612	12	FastMath.java	pow	y	double	PARAM_AS	1	26	NO_USE	0
170	1612	12	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	FIELD_USE	0
171	1616	12	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
171	1616	12	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	1
171	1616	12	FastMath.java	pow	y	double	PARAM_AS	1	26	NO_USE	0
171	1616	12	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
172	1623	8	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
172	1623	8	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	1
172	1623	8	FastMath.java	pow	y	double	PARAM_AS	1	26	!=	0
172	1623	8	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
173	1624	12	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
173	1624	12	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	0
173	1624	12	FastMath.java	pow	y	double	PARAM_AS	1	26	RET_USE	1
173	1624	12	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
174	1628	12	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
174	1628	12	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	0
174	1628	12	FastMath.java	pow	y	double	PARAM_AS	1	26	OTHER_USE	1
174	1628	12	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
175	1630	16	FastMath.java	pow	yi	long	CAST	0	2	NO_USE	1
175	1630	16	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
175	1630	16	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	0
175	1630	16	FastMath.java	pow	y	double	PARAM_AS	1	26	NO_USE	1
175	1630	16	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
176	1637	12	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
176	1637	12	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	0
176	1637	12	FastMath.java	pow	y	double	PARAM_AS	1	26	OTHER_USE	1
176	1637	12	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
177	1639	16	FastMath.java	pow	yi	long	CAST	0	2	NO_USE	1
177	1639	16	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
177	1639	16	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	0
177	1639	16	FastMath.java	pow	y	double	PARAM_AS	1	26	NO_USE	1
177	1639	16	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
178	1647	8	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
178	1647	8	FastMath.java	pow	x	double	PARAM_AS	1	14	*	0
178	1647	8	FastMath.java	pow	y	double	PARAM_AS	1	26	NO_USE	1
178	1647	8	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	FIELD_USE	0
179	1649	12	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
179	1649	12	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	1
179	1649	12	FastMath.java	pow	y	double	PARAM_AS	1	26	NO_USE	0
179	1649	12	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	FIELD_USE	0
180	1653	12	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
180	1653	12	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	1
180	1653	12	FastMath.java	pow	y	double	PARAM_AS	1	26	NO_USE	0
180	1653	12	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
181	1661	8	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
181	1661	8	FastMath.java	pow	x	double	PARAM_AS	1	14	-x	1
181	1661	8	FastMath.java	pow	y	double	PARAM_AS	1	26	>=	0
181	1661	8	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	FIELD_USE	0
182	1663	12	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
182	1663	12	FastMath.java	pow	x	double	PARAM_AS	1	14	-x	0
182	1663	12	FastMath.java	pow	y	double	PARAM_AS	1	26	PARAM_USE	1
182	1663	12	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	CLALLER_USE	1
183	1667	12	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
183	1667	12	FastMath.java	pow	x	double	PARAM_AS	1	14	-x	0
183	1667	12	FastMath.java	pow	y	double	PARAM_AS	1	26	OTHER_USE	1
183	1667	12	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	CLALLER_USE	0
184	1678	8	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
184	1678	8	FastMath.java	pow	ya	double	UNKNOWN_AS	0	0	-	0
184	1678	8	FastMath.java	pow	yb	double	UNKNOWN_AS	0	0	NO_USE	0
184	1678	8	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	0
184	1678	8	FastMath.java	pow	y	double	PARAM_AS	1	26	*	1
184	1678	8	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	FIELD_USE	0
185	1691	8	FastMath.java	pow	lns	double[]	ARRAY_CREATION	0	0	NO_USE	0
185	1691	8	FastMath.java	pow	ya	double	*	0	0	NO_USE	0
185	1691	8	FastMath.java	pow	yb	double	-	0	0	NO_USE	0
185	1691	8	FastMath.java	pow	lores	double	log()	0	1	RET_USE	1
185	1691	8	FastMath.java	pow	x	double	PARAM_AS	1	14	NO_USE	0
185	1691	8	FastMath.java	pow	y	double	PARAM_AS	1	26	NO_USE	0
185	1691	8	FastMath.java	pow	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
186	1804	12	FastMath.java	slowSin	i	int	19	0	2	NO_USE	1
186	1804	12	FastMath.java	slowSin	xs	double[]	ARRAY_CREATION	0	0	NO_USE	0
186	1804	12	FastMath.java	slowSin	ys	double[]	ARRAY_ACCESS	0	0	NO_USE	0
186	1804	12	FastMath.java	slowSin	facts	double[]	ARRAY_CREATION	0	0	NO_USE	0
186	1804	12	FastMath.java	slowSin	as	double[]	ARRAY_CREATION	0	0	NO_USE	0
186	1804	12	FastMath.java	slowSin	x	double	PARAM_AS	1	0	NO_USE	0
186	1804	12	FastMath.java	slowSin	result	double	PARAM_AS	1	1	NO_USE	0
186	1804	12	FastMath.java	slowSin	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
187	1811	12	FastMath.java	slowSin	i	int	19	0	2	NO_USE	1
187	1811	12	FastMath.java	slowSin	xs	double[]	ARRAY_CREATION	0	0	NO_USE	0
187	1811	12	FastMath.java	slowSin	ys	double[]	ARRAY_ACCESS	0	0	NO_USE	0
187	1811	12	FastMath.java	slowSin	facts	double[]	ARRAY_CREATION	0	0	ARR_USE	0
187	1811	12	FastMath.java	slowSin	as	double[]	ARRAY_CREATION	0	0	NO_USE	0
187	1811	12	FastMath.java	slowSin	x	double	PARAM_AS	1	0	NO_USE	0
187	1811	12	FastMath.java	slowSin	result	double	PARAM_AS	1	1	NO_USE	0
187	1811	12	FastMath.java	slowSin	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
188	1820	8	FastMath.java	slowSin	xs	double[]	ARRAY_CREATION	0	0	NO_USE	0
188	1820	8	FastMath.java	slowSin	ys	double[]	ARRAY_ACCESS	0	0	ARR_USE	0
188	1820	8	FastMath.java	slowSin	facts	double[]	PREFIX_EXPR	0	0	NO_USE	0
188	1820	8	FastMath.java	slowSin	as	double[]	ARRAY_CREATION	0	0	NO_USE	0
188	1820	8	FastMath.java	slowSin	x	double	PARAM_AS	1	0	NO_USE	0
188	1820	8	FastMath.java	slowSin	result	double	PARAM_AS	1	1	ARR_USE	1
188	1820	8	FastMath.java	slowSin	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
189	1847	12	FastMath.java	slowCos	i	int	19	0	2	NO_USE	1
189	1847	12	FastMath.java	slowCos	xs	double[]	ARRAY_CREATION	0	0	NO_USE	0
189	1847	12	FastMath.java	slowCos	ys	double[]	ARRAY_ACCESS	0	0	NO_USE	0
189	1847	12	FastMath.java	slowCos	facts	double[]	ARRAY_CREATION	0	0	NO_USE	0
189	1847	12	FastMath.java	slowCos	as	double[]	ARRAY_CREATION	0	0	NO_USE	0
189	1847	12	FastMath.java	slowCos	x	double	PARAM_AS	1	0	NO_USE	0
189	1847	12	FastMath.java	slowCos	result	double	PARAM_AS	1	1	NO_USE	0
189	1847	12	FastMath.java	slowCos	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
190	1854	12	FastMath.java	slowCos	i	int	19	0	2	NO_USE	1
190	1854	12	FastMath.java	slowCos	xs	double[]	ARRAY_CREATION	0	0	NO_USE	0
190	1854	12	FastMath.java	slowCos	ys	double[]	ARRAY_ACCESS	0	0	NO_USE	0
190	1854	12	FastMath.java	slowCos	facts	double[]	ARRAY_CREATION	0	0	ARR_USE	0
190	1854	12	FastMath.java	slowCos	as	double[]	ARRAY_CREATION	0	0	NO_USE	0
190	1854	12	FastMath.java	slowCos	x	double	PARAM_AS	1	0	NO_USE	0
190	1854	12	FastMath.java	slowCos	result	double	PARAM_AS	1	1	NO_USE	0
190	1854	12	FastMath.java	slowCos	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
191	1863	8	FastMath.java	slowCos	xs	double[]	ARRAY_CREATION	0	0	NO_USE	0
191	1863	8	FastMath.java	slowCos	ys	double[]	ARRAY_ACCESS	0	0	ARR_USE	0
191	1863	8	FastMath.java	slowCos	facts	double[]	PREFIX_EXPR	0	0	NO_USE	0
191	1863	8	FastMath.java	slowCos	as	double[]	ARRAY_CREATION	0	0	NO_USE	0
191	1863	8	FastMath.java	slowCos	x	double	PARAM_AS	1	0	NO_USE	0
191	1863	8	FastMath.java	slowCos	result	double	PARAM_AS	1	1	ARR_USE	1
191	1863	8	FastMath.java	slowCos	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
192	1897	12	FastMath.java	buildSinCosTables	xs	double[]	ARRAY_CREATION	0	0	ARR_USE	0
192	1897	12	FastMath.java	buildSinCosTables	ys	double[]	ARRAY_CREATION	0	0	ARR_USE	0
192	1897	12	FastMath.java	buildSinCosTables	as	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
192	1897	12	FastMath.java	buildSinCosTables	bs	double[]	ARRAY_CREATION	0	0	ARR_USE	0
192	1897	12	FastMath.java	buildSinCosTables	temps	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
192	1897	12	FastMath.java	buildSinCosTables	i	int	7	0	1	/	1
192	1897	12	FastMath.java	buildSinCosTables	result	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
192	1897	12	FastMath.java	buildSinCosTables	THIS	FastMath	ARRAY_ACCESS	0	0	CLALLER_USE	0
193	2116	8	FastMath.java	sinQ	idx	int	CAST	0	0	NO_USE	0
193	2116	8	FastMath.java	sinQ	epsilon	double	-	0	0	NO_USE	0
193	2116	8	FastMath.java	sinQ	sintA	double	ARRAY_ACCESS	0	0	+	0
193	2116	8	FastMath.java	sinQ	sintB	double	ARRAY_ACCESS	0	0	+	0
193	2116	8	FastMath.java	sinQ	costA	double	ARRAY_ACCESS	0	0	+	0
193	2116	8	FastMath.java	sinQ	costB	double	ARRAY_ACCESS	0	0	+	0
193	2116	8	FastMath.java	sinQ	sinEpsA	double	NAME	0	0	+	0
193	2116	8	FastMath.java	sinQ	sinEpsB	double	-	0	0	+	0
193	2116	8	FastMath.java	sinQ	cosEpsA	double	1.0	0	0	+	0
193	2116	8	FastMath.java	sinQ	cosEpsB	double	polyCosine()	0	0	+	0
193	2116	8	FastMath.java	sinQ	temp	double	*	0	0	NO_USE	0
193	2116	8	FastMath.java	sinQ	temp2	double	-	0	0	NO_USE	0
193	2116	8	FastMath.java	sinQ	result	double	UNKNOWN_AS	0	0	NO_USE	0
193	2116	8	FastMath.java	sinQ	a	double	NAME	0	0	+	0
193	2116	8	FastMath.java	sinQ	b	double	+	0	0	+	0
193	2116	8	FastMath.java	sinQ	t	double	*	0	0	+	0
193	2116	8	FastMath.java	sinQ	c	double	+	0	0	-	0
193	2116	8	FastMath.java	sinQ	d	double	PREFIX_EXPR	0	0	+	0
193	2116	8	FastMath.java	sinQ	xa	double	PARAM_AS	1	0	NO_USE	0
193	2116	8	FastMath.java	sinQ	xb	double	PARAM_AS	1	1	*	1
193	2116	8	FastMath.java	sinQ	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
194	2246	8	FastMath.java	tanQ	idx	int	CAST	0	0	NO_USE	0
194	2246	8	FastMath.java	tanQ	epsilon	double	-	0	0	NO_USE	0
194	2246	8	FastMath.java	tanQ	sintA	double	ARRAY_ACCESS	0	0	NO_USE	0
194	2246	8	FastMath.java	tanQ	sintB	double	ARRAY_ACCESS	0	0	NO_USE	0
194	2246	8	FastMath.java	tanQ	costA	double	ARRAY_ACCESS	0	0	NO_USE	0
194	2246	8	FastMath.java	tanQ	costB	double	ARRAY_ACCESS	0	0	NO_USE	0
194	2246	8	FastMath.java	tanQ	sinEpsA	double	NAME	0	0	NO_USE	0
194	2246	8	FastMath.java	tanQ	sinEpsB	double	-	0	0	NO_USE	0
194	2246	8	FastMath.java	tanQ	cosEpsA	double	1.0	0	0	NO_USE	0
194	2246	8	FastMath.java	tanQ	cosEpsB	double	polyCosine()	0	0	NO_USE	0
194	2246	8	FastMath.java	tanQ	temp	double	*	0	0	NO_USE	0
194	2246	8	FastMath.java	tanQ	temp2	double	-	0	0	NO_USE	0
194	2246	8	FastMath.java	tanQ	a	double	NAME	0	0	NO_USE	0
194	2246	8	FastMath.java	tanQ	b	double	-	0	0	NO_USE	0
194	2246	8	FastMath.java	tanQ	t	double	*	0	0	NO_USE	0
194	2246	8	FastMath.java	tanQ	c	double	+	0	0	NO_USE	0
194	2246	8	FastMath.java	tanQ	d	double	PREFIX_EXPR	0	0	NO_USE	0
194	2246	8	FastMath.java	tanQ	sina	double	+	0	0	OTHER_USE	0
194	2246	8	FastMath.java	tanQ	sinb	double	PREFIX_EXPR	0	0	OTHER_USE	0
194	2246	8	FastMath.java	tanQ	cosa	double	+	0	0	OTHER_USE	0
194	2246	8	FastMath.java	tanQ	cosb	double	PREFIX_EXPR	0	0	OTHER_USE	0
194	2246	8	FastMath.java	tanQ	xa	double	PARAM_AS	1	0	NO_USE	0
194	2246	8	FastMath.java	tanQ	xb	double	PARAM_AS	1	1	NO_USE	0
194	2246	8	FastMath.java	tanQ	cotanFlag	boolean	PARAM_AS	1	0	NO_USE	1
194	2246	8	FastMath.java	tanQ	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	idx	int	CAST	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	epsilon	double	-	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	sintA	double	ARRAY_ACCESS	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	sintB	double	ARRAY_ACCESS	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	costA	double	ARRAY_ACCESS	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	costB	double	ARRAY_ACCESS	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	sinEpsA	double	NAME	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	sinEpsB	double	-	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	cosEpsA	double	1.0	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	cosEpsB	double	polyCosine()	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	temp	double	*	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	temp2	double	-	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	a	double	NAME	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	b	double	-	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	t	double	*	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	c	double	+	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	d	double	PREFIX_EXPR	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	sina	double	NAME	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	sinb	double	NAME	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	cosa	double	NAME	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	cosb	double	NAME	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	est	double	/	0	0	*	0
195	2279	8	FastMath.java	tanQ	esta	double	-	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	estb	double	-	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	cosaa	double	-	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	cosab	double	-	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	err	double	/	0	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	xa	double	PARAM_AS	1	0	NO_USE	0
195	2279	8	FastMath.java	tanQ	xb	double	PARAM_AS	1	1	+	1
195	2279	8	FastMath.java	tanQ	cotanFlag	boolean	PARAM_AS	1	0	OTHER_USE	0
195	2279	8	FastMath.java	tanQ	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	xbadj	double	+	0	0	-x	0
196	2283	12	FastMath.java	tanQ	idx	int	CAST	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	epsilon	double	-	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	sintA	double	ARRAY_ACCESS	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	sintB	double	ARRAY_ACCESS	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	costA	double	ARRAY_ACCESS	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	costB	double	ARRAY_ACCESS	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	sinEpsA	double	NAME	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	sinEpsB	double	-	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	cosEpsA	double	1.0	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	cosEpsB	double	polyCosine()	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	temp	double	*	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	temp2	double	-	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	a	double	NAME	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	b	double	-	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	t	double	*	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	c	double	+	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	d	double	PREFIX_EXPR	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	sina	double	NAME	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	sinb	double	NAME	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	cosa	double	NAME	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	cosb	double	NAME	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	est	double	/	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	esta	double	-	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	estb	double	-	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	cosaa	double	-	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	cosab	double	-	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	err	double	/	0	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	xa	double	PARAM_AS	1	0	NO_USE	0
196	2283	12	FastMath.java	tanQ	xb	double	PARAM_AS	1	1	NO_USE	0
196	2283	12	FastMath.java	tanQ	cotanFlag	boolean	PARAM_AS	1	0	NO_USE	1
196	2283	12	FastMath.java	tanQ	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
197	2325	8	FastMath.java	reducePayneHanek	inbits	long	11	0	0	NO_USE	0
197	2325	8	FastMath.java	reducePayneHanek	exponent	int	-	0	0	NO_USE	0
197	2325	8	FastMath.java	reducePayneHanek	shpi0	long	UNKNOWN_AS	0	0	NO_USE	0
197	2325	8	FastMath.java	reducePayneHanek	shpiA	long	UNKNOWN_AS	0	0	NO_USE	0
197	2325	8	FastMath.java	reducePayneHanek	shpiB	long	UNKNOWN_AS	0	0	NO_USE	0
197	2325	8	FastMath.java	reducePayneHanek	idx	int	>>	0	0	==	0
197	2325	8	FastMath.java	reducePayneHanek	shift	int	-	0	1	<<	1
197	2325	8	FastMath.java	reducePayneHanek	x	double	PARAM_AS	1	0	NO_USE	0
197	2325	8	FastMath.java	reducePayneHanek	result	double	PARAM_AS	1	0	NO_USE	0
197	2325	8	FastMath.java	reducePayneHanek	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
198	2356	8	FastMath.java	reducePayneHanek	inbits	long	11	0	0	NO_USE	0
198	2356	8	FastMath.java	reducePayneHanek	exponent	int	-	0	0	NO_USE	0
198	2356	8	FastMath.java	reducePayneHanek	shpi0	long	OTHERS	0	0	NO_USE	0
198	2356	8	FastMath.java	reducePayneHanek	shpiA	long	ARRAY_ACCESS	0	0	NO_USE	0
198	2356	8	FastMath.java	reducePayneHanek	shpiB	long	ARRAY_ACCESS	0	0	NO_USE	0
198	2356	8	FastMath.java	reducePayneHanek	idx	int	>>	0	0	NO_USE	0
198	2356	8	FastMath.java	reducePayneHanek	shift	int	-	0	1	NO_USE	0
198	2356	8	FastMath.java	reducePayneHanek	a	long	>>>	0	0	NO_USE	0
198	2356	8	FastMath.java	reducePayneHanek	b	long	&	0	0	NO_USE	0
198	2356	8	FastMath.java	reducePayneHanek	c	long	>>>	0	0	NO_USE	0
198	2356	8	FastMath.java	reducePayneHanek	d	long	&	0	0	NO_USE	0
198	2356	8	FastMath.java	reducePayneHanek	ac	long	*	0	0	NO_USE	0
198	2356	8	FastMath.java	reducePayneHanek	bd	long	*	0	0	NO_USE	0
198	2356	8	FastMath.java	reducePayneHanek	bc	long	*	0	0	NO_USE	0
198	2356	8	FastMath.java	reducePayneHanek	ad	long	*	0	0	NO_USE	0
198	2356	8	FastMath.java	reducePayneHanek	prodB	long	+	0	0	NO_USE	0
198	2356	8	FastMath.java	reducePayneHanek	prodA	long	+	0	0	x++	0
198	2356	8	FastMath.java	reducePayneHanek	bita	boolean	!=	0	14	NO_USE	1
198	2356	8	FastMath.java	reducePayneHanek	bitb	boolean	!=	0	14	NO_USE	1
198	2356	8	FastMath.java	reducePayneHanek	bitsum	boolean	!=	0	7	NO_USE	1
198	2356	8	FastMath.java	reducePayneHanek	x	double	PARAM_AS	1	0	NO_USE	0
198	2356	8	FastMath.java	reducePayneHanek	result	double	PARAM_AS	1	0	NO_USE	0
198	2356	8	FastMath.java	reducePayneHanek	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
199	2370	8	FastMath.java	reducePayneHanek	inbits	long	11	0	0	NO_USE	0
199	2370	8	FastMath.java	reducePayneHanek	exponent	int	-	0	0	NO_USE	0
199	2370	8	FastMath.java	reducePayneHanek	shpi0	long	OTHERS	0	0	NO_USE	0
199	2370	8	FastMath.java	reducePayneHanek	shpiA	long	ARRAY_ACCESS	0	0	NO_USE	0
199	2370	8	FastMath.java	reducePayneHanek	shpiB	long	ARRAY_ACCESS	0	0	NO_USE	0
199	2370	8	FastMath.java	reducePayneHanek	idx	int	>>	0	0	NO_USE	0
199	2370	8	FastMath.java	reducePayneHanek	shift	int	-	0	1	NO_USE	0
199	2370	8	FastMath.java	reducePayneHanek	a	long	>>>	0	0	NO_USE	0
199	2370	8	FastMath.java	reducePayneHanek	b	long	&	0	0	NO_USE	0
199	2370	8	FastMath.java	reducePayneHanek	c	long	>>>	0	0	NO_USE	0
199	2370	8	FastMath.java	reducePayneHanek	d	long	&	0	0	NO_USE	0
199	2370	8	FastMath.java	reducePayneHanek	ac	long	*	0	0	NO_USE	0
199	2370	8	FastMath.java	reducePayneHanek	bd	long	*	0	0	NO_USE	0
199	2370	8	FastMath.java	reducePayneHanek	bc	long	*	0	0	NO_USE	0
199	2370	8	FastMath.java	reducePayneHanek	ad	long	*	0	0	NO_USE	0
199	2370	8	FastMath.java	reducePayneHanek	prodB	long	+	0	0	NO_USE	0
199	2370	8	FastMath.java	reducePayneHanek	prodA	long	+	0	0	x++	0
199	2370	8	FastMath.java	reducePayneHanek	bita	boolean	!=	0	14	NO_USE	1
199	2370	8	FastMath.java	reducePayneHanek	bitb	boolean	!=	0	14	NO_USE	1
199	2370	8	FastMath.java	reducePayneHanek	bitsum	boolean	!=	0	7	NO_USE	1
199	2370	8	FastMath.java	reducePayneHanek	x	double	PARAM_AS	1	0	NO_USE	0
199	2370	8	FastMath.java	reducePayneHanek	result	double	PARAM_AS	1	0	NO_USE	0
199	2370	8	FastMath.java	reducePayneHanek	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
200	2390	8	FastMath.java	reducePayneHanek	inbits	long	11	0	0	NO_USE	0
200	2390	8	FastMath.java	reducePayneHanek	exponent	int	-	0	0	NO_USE	0
200	2390	8	FastMath.java	reducePayneHanek	shpi0	long	OTHERS	0	0	NO_USE	0
200	2390	8	FastMath.java	reducePayneHanek	shpiA	long	ARRAY_ACCESS	0	0	NO_USE	0
200	2390	8	FastMath.java	reducePayneHanek	shpiB	long	ARRAY_ACCESS	0	0	NO_USE	0
200	2390	8	FastMath.java	reducePayneHanek	idx	int	>>	0	0	NO_USE	0
200	2390	8	FastMath.java	reducePayneHanek	shift	int	-	0	1	NO_USE	0
200	2390	8	FastMath.java	reducePayneHanek	a	long	>>>	0	0	NO_USE	0
200	2390	8	FastMath.java	reducePayneHanek	b	long	&	0	0	NO_USE	0
200	2390	8	FastMath.java	reducePayneHanek	c	long	>>>	0	0	NO_USE	0
200	2390	8	FastMath.java	reducePayneHanek	d	long	&	0	0	NO_USE	0
200	2390	8	FastMath.java	reducePayneHanek	ac	long	+	0	0	NO_USE	0
200	2390	8	FastMath.java	reducePayneHanek	bd	long	*	0	0	NO_USE	0
200	2390	8	FastMath.java	reducePayneHanek	bc	long	*	0	0	NO_USE	0
200	2390	8	FastMath.java	reducePayneHanek	ad	long	*	0	0	NO_USE	0
200	2390	8	FastMath.java	reducePayneHanek	prodB	long	NAME	0	0	NO_USE	0
200	2390	8	FastMath.java	reducePayneHanek	prodA	long	+	0	0	x++	0
200	2390	8	FastMath.java	reducePayneHanek	bita	boolean	!=	0	14	NO_USE	1
200	2390	8	FastMath.java	reducePayneHanek	bitb	boolean	!=	0	14	NO_USE	1
200	2390	8	FastMath.java	reducePayneHanek	bitsum	boolean	!=	0	7	NO_USE	1
200	2390	8	FastMath.java	reducePayneHanek	x	double	PARAM_AS	1	0	NO_USE	0
200	2390	8	FastMath.java	reducePayneHanek	result	double	PARAM_AS	1	0	NO_USE	0
200	2390	8	FastMath.java	reducePayneHanek	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	inbits	long	11	0	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	exponent	int	-	0	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	shpi0	long	OTHERS	0	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	shpiA	long	ARRAY_ACCESS	0	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	shpiB	long	ARRAY_ACCESS	0	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	idx	int	>>	0	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	shift	int	-	0	1	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	a	long	>>>	0	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	b	long	&	0	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	c	long	>>>	0	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	d	long	&	0	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	ac	long	*	0	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	bd	long	*	0	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	bc	long	*	0	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	ad	long	*	0	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	prodB	long	2	0	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	prodA	long	>>>	0	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	bita	boolean	!=	0	14	NO_USE	1
201	2442	8	FastMath.java	reducePayneHanek	bitb	boolean	!=	0	14	NO_USE	1
201	2442	8	FastMath.java	reducePayneHanek	bitsum	boolean	!=	0	7	NO_USE	1
201	2442	8	FastMath.java	reducePayneHanek	intPart	int	CAST	0	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	prod2B	long	+	0	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	prod2A	long	+	0	0	x++	0
201	2442	8	FastMath.java	reducePayneHanek	x	double	PARAM_AS	1	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	result	double	PARAM_AS	1	0	NO_USE	0
201	2442	8	FastMath.java	reducePayneHanek	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	inbits	long	11	0	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	exponent	int	-	0	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	shpi0	long	OTHERS	0	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	shpiA	long	ARRAY_ACCESS	0	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	shpiB	long	ARRAY_ACCESS	0	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	idx	int	>>	0	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	shift	int	-	0	1	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	a	long	>>>	0	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	b	long	&	0	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	c	long	>>>	0	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	d	long	&	0	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	ac	long	*	0	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	bd	long	*	0	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	bc	long	*	0	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	ad	long	*	0	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	prodB	long	2	0	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	prodA	long	>>>	0	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	bita	boolean	!=	0	14	NO_USE	1
202	2456	8	FastMath.java	reducePayneHanek	bitb	boolean	!=	0	14	NO_USE	1
202	2456	8	FastMath.java	reducePayneHanek	bitsum	boolean	!=	0	7	NO_USE	1
202	2456	8	FastMath.java	reducePayneHanek	intPart	int	CAST	0	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	prod2B	long	+	0	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	prod2A	long	+	0	0	x++	0
202	2456	8	FastMath.java	reducePayneHanek	x	double	PARAM_AS	1	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	result	double	PARAM_AS	1	0	NO_USE	0
202	2456	8	FastMath.java	reducePayneHanek	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	inbits	long	11	0	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	exponent	int	-	0	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	shpi0	long	OTHERS	0	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	shpiA	long	ARRAY_ACCESS	0	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	shpiB	long	ARRAY_ACCESS	0	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	idx	int	>>	0	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	shift	int	-	0	1	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	a	long	>>>	0	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	b	long	&	0	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	c	long	>>>	0	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	d	long	&	0	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	ac	long	+	0	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	bd	long	*	0	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	bc	long	*	0	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	ad	long	*	0	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	prodB	long	2	0	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	prodA	long	>>>	0	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	bita	boolean	!=	0	14	NO_USE	1
203	2476	8	FastMath.java	reducePayneHanek	bitb	boolean	!=	0	14	NO_USE	1
203	2476	8	FastMath.java	reducePayneHanek	bitsum	boolean	!=	0	7	NO_USE	1
203	2476	8	FastMath.java	reducePayneHanek	intPart	int	CAST	0	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	prod2B	long	NAME	0	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	prod2A	long	+	0	0	x++	0
203	2476	8	FastMath.java	reducePayneHanek	x	double	PARAM_AS	1	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	result	double	PARAM_AS	1	0	NO_USE	0
203	2476	8	FastMath.java	reducePayneHanek	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	inbits	long	11	0	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	exponent	int	-	0	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	shpi0	long	OTHERS	0	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	shpiA	long	ARRAY_ACCESS	0	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	shpiB	long	ARRAY_ACCESS	0	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	idx	int	>>	0	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	shift	int	-	0	1	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	a	long	>>>	0	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	b	long	&	0	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	c	long	>>>	0	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	d	long	&	0	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	ac	long	+	0	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	bd	long	*	0	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	bc	long	*	0	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	ad	long	*	0	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	prodB	long	2	0	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	prodA	long	>>>	0	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	bita	boolean	!=	0	14	NO_USE	1
204	2498	8	FastMath.java	reducePayneHanek	bitb	boolean	!=	0	14	NO_USE	1
204	2498	8	FastMath.java	reducePayneHanek	bitsum	boolean	!=	0	7	NO_USE	1
204	2498	8	FastMath.java	reducePayneHanek	intPart	int	CAST	0	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	prod2B	long	NAME	0	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	prod2A	long	+	0	0	x++	0
204	2498	8	FastMath.java	reducePayneHanek	x	double	PARAM_AS	1	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	result	double	PARAM_AS	1	0	NO_USE	0
204	2498	8	FastMath.java	reducePayneHanek	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
205	2529	8	FastMath.java	sin	negative	boolean	LITERAL	0	0	NO_USE	0
205	2529	8	FastMath.java	sin	quadrant	int	0	0	0	NO_USE	0
205	2529	8	FastMath.java	sin	xa	double	NAME	0	6	-x	0
205	2529	8	FastMath.java	sin	xb	double	0.0	0	0	NO_USE	0
205	2529	8	FastMath.java	sin	x	double	PARAM_AS	1	1	NO_USE	1
205	2529	8	FastMath.java	sin	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
206	2535	8	FastMath.java	sin	negative	boolean	LITERAL	0	0	NO_USE	0
206	2535	8	FastMath.java	sin	quadrant	int	0	0	0	NO_USE	0
206	2535	8	FastMath.java	sin	xa	double	PREFIX_EXPR	0	6	NO_USE	1
206	2535	8	FastMath.java	sin	xb	double	0.0	0	0	NO_USE	0
206	2535	8	FastMath.java	sin	x	double	PARAM_AS	1	1	PARAM_USE	0
206	2535	8	FastMath.java	sin	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
207	2537	12	FastMath.java	sin	bits	long	doubleToLongBits()	0	1	NO_USE	1
207	2537	12	FastMath.java	sin	negative	boolean	LITERAL	0	0	NO_USE	0
207	2537	12	FastMath.java	sin	quadrant	int	0	0	0	NO_USE	0
207	2537	12	FastMath.java	sin	xa	double	PREFIX_EXPR	0	6	NO_USE	0
207	2537	12	FastMath.java	sin	xb	double	0.0	0	0	NO_USE	0
207	2537	12	FastMath.java	sin	x	double	PARAM_AS	1	1	NO_USE	0
207	2537	12	FastMath.java	sin	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
208	2543	8	FastMath.java	sin	negative	boolean	LITERAL	0	0	NO_USE	0
208	2543	8	FastMath.java	sin	quadrant	int	0	0	0	NO_USE	0
208	2543	8	FastMath.java	sin	xa	double	PREFIX_EXPR	0	6	NO_USE	1
208	2543	8	FastMath.java	sin	xb	double	0.0	0	0	NO_USE	0
208	2543	8	FastMath.java	sin	x	double	PARAM_AS	1	1	NO_USE	0
208	2543	8	FastMath.java	sin	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
209	2548	8	FastMath.java	sin	negative	boolean	LITERAL	0	0	NO_USE	0
209	2548	8	FastMath.java	sin	quadrant	int	0	0	0	NO_USE	0
209	2548	8	FastMath.java	sin	xa	double	PREFIX_EXPR	0	6	PARAM_USE	1
209	2548	8	FastMath.java	sin	xb	double	0.0	0	0	NO_USE	0
209	2548	8	FastMath.java	sin	x	double	PARAM_AS	1	1	NO_USE	0
209	2548	8	FastMath.java	sin	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
210	2557	15	FastMath.java	sin	negative	boolean	LITERAL	0	0	NO_USE	0
210	2557	15	FastMath.java	sin	quadrant	int	&	0	0	NO_USE	0
210	2557	15	FastMath.java	sin	xa	double	ARRAY_ACCESS	0	6	*	1
210	2557	15	FastMath.java	sin	xb	double	ARRAY_ACCESS	0	0	NO_USE	0
210	2557	15	FastMath.java	sin	x	double	PARAM_AS	1	1	NO_USE	0
210	2557	15	FastMath.java	sin	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
211	2582	16	FastMath.java	sin	a	double	*	0	0	NO_USE	0
211	2582	16	FastMath.java	sin	b	double	NAME	0	0	NO_USE	0
211	2582	16	FastMath.java	sin	k	int	CAST	0	0	NO_USE	0
211	2582	16	FastMath.java	sin	remA	double	+	0	1	NO_USE	1
211	2582	16	FastMath.java	sin	remB	double	PREFIX_EXPR	0	0	NO_USE	0
211	2582	16	FastMath.java	sin	negative	boolean	LITERAL	0	0	NO_USE	0
211	2582	16	FastMath.java	sin	quadrant	int	&	0	0	NO_USE	0
211	2582	16	FastMath.java	sin	xa	double	ARRAY_ACCESS	0	6	NO_USE	0
211	2582	16	FastMath.java	sin	xb	double	ARRAY_ACCESS	0	0	NO_USE	0
211	2582	16	FastMath.java	sin	x	double	PARAM_AS	1	1	NO_USE	0
211	2582	16	FastMath.java	sin	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
212	2596	8	FastMath.java	sin	negative	boolean	LITERAL	0	0	NO_USE	1
212	2596	8	FastMath.java	sin	quadrant	int	&	0	0	NO_USE	0
212	2596	8	FastMath.java	sin	xa	double	NAME	0	6	NO_USE	0
212	2596	8	FastMath.java	sin	xb	double	NAME	0	0	NO_USE	0
212	2596	8	FastMath.java	sin	x	double	PARAM_AS	1	1	NO_USE	0
212	2596	8	FastMath.java	sin	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
213	2624	8	FastMath.java	cos	quadrant	int	0	0	0	NO_USE	0
213	2624	8	FastMath.java	cos	xa	double	NAME	0	5	-x	0
213	2624	8	FastMath.java	cos	x	double	PARAM_AS	1	1	NO_USE	1
213	2624	8	FastMath.java	cos	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
214	2628	8	FastMath.java	cos	quadrant	int	0	0	0	NO_USE	0
214	2628	8	FastMath.java	cos	xa	double	PREFIX_EXPR	0	5	NO_USE	1
214	2628	8	FastMath.java	cos	x	double	PARAM_AS	1	1	NO_USE	0
214	2628	8	FastMath.java	cos	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
215	2634	8	FastMath.java	cos	quadrant	int	0	0	0	NO_USE	0
215	2634	8	FastMath.java	cos	xa	double	PREFIX_EXPR	0	5	PARAM_USE	1
215	2634	8	FastMath.java	cos	xb	double	0	0	0	NO_USE	0
215	2634	8	FastMath.java	cos	x	double	PARAM_AS	1	1	NO_USE	0
215	2634	8	FastMath.java	cos	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
216	2643	15	FastMath.java	cos	quadrant	int	&	0	0	NO_USE	0
216	2643	15	FastMath.java	cos	xa	double	ARRAY_ACCESS	0	5	*	1
216	2643	15	FastMath.java	cos	xb	double	ARRAY_ACCESS	0	0	NO_USE	0
216	2643	15	FastMath.java	cos	x	double	PARAM_AS	1	1	NO_USE	0
216	2643	15	FastMath.java	cos	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
217	2668	16	FastMath.java	cos	a	double	*	0	0	NO_USE	0
217	2668	16	FastMath.java	cos	b	double	NAME	0	0	NO_USE	0
217	2668	16	FastMath.java	cos	k	int	CAST	0	0	NO_USE	0
217	2668	16	FastMath.java	cos	remA	double	+	0	1	NO_USE	1
217	2668	16	FastMath.java	cos	remB	double	PREFIX_EXPR	0	0	NO_USE	0
217	2668	16	FastMath.java	cos	quadrant	int	&	0	0	NO_USE	0
217	2668	16	FastMath.java	cos	xa	double	ARRAY_ACCESS	0	5	NO_USE	0
217	2668	16	FastMath.java	cos	xb	double	ARRAY_ACCESS	0	0	NO_USE	0
217	2668	16	FastMath.java	cos	x	double	PARAM_AS	1	1	NO_USE	0
217	2668	16	FastMath.java	cos	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
218	2710	8	FastMath.java	tan	negative	boolean	LITERAL	0	0	NO_USE	0
218	2710	8	FastMath.java	tan	quadrant	int	0	0	1	NO_USE	0
218	2710	8	FastMath.java	tan	xa	double	NAME	0	7	-x	0
218	2710	8	FastMath.java	tan	x	double	PARAM_AS	1	1	NO_USE	1
218	2710	8	FastMath.java	tan	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
219	2716	8	FastMath.java	tan	negative	boolean	LITERAL	0	0	NO_USE	0
219	2716	8	FastMath.java	tan	quadrant	int	0	0	1	NO_USE	0
219	2716	8	FastMath.java	tan	xa	double	PREFIX_EXPR	0	7	NO_USE	1
219	2716	8	FastMath.java	tan	x	double	PARAM_AS	1	1	PARAM_USE	0
219	2716	8	FastMath.java	tan	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
220	2718	12	FastMath.java	tan	bits	long	doubleToLongBits()	0	1	NO_USE	1
220	2718	12	FastMath.java	tan	negative	boolean	LITERAL	0	0	NO_USE	0
220	2718	12	FastMath.java	tan	quadrant	int	0	0	1	NO_USE	0
220	2718	12	FastMath.java	tan	xa	double	PREFIX_EXPR	0	7	NO_USE	0
220	2718	12	FastMath.java	tan	x	double	PARAM_AS	1	1	NO_USE	0
220	2718	12	FastMath.java	tan	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
221	2724	8	FastMath.java	tan	negative	boolean	LITERAL	0	0	NO_USE	0
221	2724	8	FastMath.java	tan	quadrant	int	0	0	1	NO_USE	0
221	2724	8	FastMath.java	tan	xa	double	PREFIX_EXPR	0	7	NO_USE	1
221	2724	8	FastMath.java	tan	x	double	PARAM_AS	1	1	NO_USE	0
221	2724	8	FastMath.java	tan	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
222	2730	8	FastMath.java	tan	negative	boolean	LITERAL	0	0	NO_USE	0
222	2730	8	FastMath.java	tan	quadrant	int	0	0	1	NO_USE	0
222	2730	8	FastMath.java	tan	xa	double	PREFIX_EXPR	0	7	PARAM_USE	1
222	2730	8	FastMath.java	tan	xb	double	0	0	0	NO_USE	0
222	2730	8	FastMath.java	tan	x	double	PARAM_AS	1	1	NO_USE	0
222	2730	8	FastMath.java	tan	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
223	2739	15	FastMath.java	tan	negative	boolean	LITERAL	0	0	NO_USE	0
223	2739	15	FastMath.java	tan	quadrant	int	&	0	1	NO_USE	0
223	2739	15	FastMath.java	tan	xa	double	ARRAY_ACCESS	0	7	*	1
223	2739	15	FastMath.java	tan	xb	double	ARRAY_ACCESS	0	0	NO_USE	0
223	2739	15	FastMath.java	tan	x	double	PARAM_AS	1	1	NO_USE	0
223	2739	15	FastMath.java	tan	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
224	2764	16	FastMath.java	tan	a	double	*	0	0	NO_USE	0
224	2764	16	FastMath.java	tan	b	double	NAME	0	0	NO_USE	0
224	2764	16	FastMath.java	tan	k	int	CAST	0	0	NO_USE	0
224	2764	16	FastMath.java	tan	remA	double	+	0	1	NO_USE	1
224	2764	16	FastMath.java	tan	remB	double	PREFIX_EXPR	0	0	NO_USE	0
224	2764	16	FastMath.java	tan	negative	boolean	LITERAL	0	0	NO_USE	0
224	2764	16	FastMath.java	tan	quadrant	int	&	0	1	NO_USE	0
224	2764	16	FastMath.java	tan	xa	double	ARRAY_ACCESS	0	7	NO_USE	0
224	2764	16	FastMath.java	tan	xb	double	ARRAY_ACCESS	0	0	NO_USE	0
224	2764	16	FastMath.java	tan	x	double	PARAM_AS	1	1	NO_USE	0
224	2764	16	FastMath.java	tan	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
225	2778	8	FastMath.java	tan	negative	boolean	LITERAL	0	0	NO_USE	0
225	2778	8	FastMath.java	tan	quadrant	int	&	0	1	NO_USE	0
225	2778	8	FastMath.java	tan	xa	double	NAME	0	7	-	1
225	2778	8	FastMath.java	tan	xb	double	NAME	0	0	-	0
225	2778	8	FastMath.java	tan	x	double	PARAM_AS	1	1	NO_USE	0
225	2778	8	FastMath.java	tan	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
226	2794	8	FastMath.java	tan	negative	boolean	LITERAL	0	0	NO_USE	0
226	2794	8	FastMath.java	tan	quadrant	int	1	0	1	NO_USE	1
226	2794	8	FastMath.java	tan	xa	double	+	0	7	PARAM_USE	0
226	2794	8	FastMath.java	tan	xb	double	PREFIX_EXPR	0	0	PARAM_USE	0
226	2794	8	FastMath.java	tan	result	double	UNKNOWN_AS	0	0	NO_USE	0
226	2794	8	FastMath.java	tan	x	double	PARAM_AS	1	1	NO_USE	0
226	2794	8	FastMath.java	tan	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
227	2800	8	FastMath.java	tan	negative	boolean	LITERAL	0	0	NO_USE	1
227	2800	8	FastMath.java	tan	quadrant	int	1	0	1	NO_USE	0
227	2800	8	FastMath.java	tan	xa	double	+	0	7	NO_USE	0
227	2800	8	FastMath.java	tan	xb	double	PREFIX_EXPR	0	0	NO_USE	0
227	2800	8	FastMath.java	tan	result	double	PREFIX_EXPR	0	0	-x	0
227	2800	8	FastMath.java	tan	x	double	PARAM_AS	1	1	NO_USE	0
227	2800	8	FastMath.java	tan	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
228	2826	8	FastMath.java	atan	negate	boolean	LITERAL	0	1	NO_USE	0
228	2826	8	FastMath.java	atan	idx	int	UNKNOWN_AS	0	1	NO_USE	0
228	2826	8	FastMath.java	atan	xa	double	PARAM_AS	1	4	PARAM_USE	1
228	2826	8	FastMath.java	atan	xb	double	PARAM_AS	1	0	NO_USE	0
228	2826	8	FastMath.java	atan	leftPlane	boolean	PARAM_AS	1	1	OTHER_USE	0
228	2826	8	FastMath.java	atan	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
229	2830	8	FastMath.java	atan	negate	boolean	LITERAL	0	1	NO_USE	0
229	2830	8	FastMath.java	atan	idx	int	UNKNOWN_AS	0	1	NO_USE	0
229	2830	8	FastMath.java	atan	xa	double	PARAM_AS	1	4	-x	1
229	2830	8	FastMath.java	atan	xb	double	PARAM_AS	1	0	-x	0
229	2830	8	FastMath.java	atan	leftPlane	boolean	PARAM_AS	1	1	NO_USE	0
229	2830	8	FastMath.java	atan	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
230	2837	8	FastMath.java	atan	negate	boolean	LITERAL	0	1	^	0
230	2837	8	FastMath.java	atan	idx	int	UNKNOWN_AS	0	1	NO_USE	0
230	2837	8	FastMath.java	atan	xa	double	PREFIX_EXPR	1	4	NO_USE	1
230	2837	8	FastMath.java	atan	xb	double	PREFIX_EXPR	1	0	NO_USE	0
230	2837	8	FastMath.java	atan	leftPlane	boolean	PARAM_AS	1	1	^	0
230	2837	8	FastMath.java	atan	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
231	2842	8	FastMath.java	atan	negate	boolean	LITERAL	0	1	NO_USE	0
231	2842	8	FastMath.java	atan	idx	int	UNKNOWN_AS	0	1	NO_USE	0
231	2842	8	FastMath.java	atan	xa	double	PREFIX_EXPR	1	4	*	1
231	2842	8	FastMath.java	atan	xb	double	PREFIX_EXPR	1	0	NO_USE	0
231	2842	8	FastMath.java	atan	leftPlane	boolean	PARAM_AS	1	1	NO_USE	0
231	2842	8	FastMath.java	atan	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
232	2864	8	FastMath.java	atan	negate	boolean	LITERAL	0	1	NO_USE	0
232	2864	8	FastMath.java	atan	idx	int	CAST	0	1	ARRIDX_USE	1
232	2864	8	FastMath.java	atan	epsA	double	NAME	0	0	*	0
232	2864	8	FastMath.java	atan	epsB	double	PREFIX_EXPR	0	0	*	0
232	2864	8	FastMath.java	atan	temp	double	*	0	0	-	0
232	2864	8	FastMath.java	atan	ya	double	-	0	0	*	0
232	2864	8	FastMath.java	atan	yb	double	-	0	0	NO_USE	0
232	2864	8	FastMath.java	atan	xa	double	NAME	1	4	+	0
232	2864	8	FastMath.java	atan	xb	double	NAME	1	0	+	0
232	2864	8	FastMath.java	atan	leftPlane	boolean	PARAM_AS	1	1	NO_USE	0
232	2864	8	FastMath.java	atan	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
233	2945	8	FastMath.java	atan	negate	boolean	LITERAL	0	1	NO_USE	0
233	2945	8	FastMath.java	atan	idx	int	CAST	0	1	NO_USE	0
233	2945	8	FastMath.java	atan	epsA	double	NAME	0	0	NO_USE	0
233	2945	8	FastMath.java	atan	epsB	double	NAME	0	0	NO_USE	0
233	2945	8	FastMath.java	atan	temp	double	+	0	0	NO_USE	0
233	2945	8	FastMath.java	atan	ya	double	NAME	0	0	NO_USE	0
233	2945	8	FastMath.java	atan	yb	double	/	0	0	NO_USE	0
233	2945	8	FastMath.java	atan	epsA2	double	*	0	0	NO_USE	0
233	2945	8	FastMath.java	atan	result	double	+	0	0	-	0
233	2945	8	FastMath.java	atan	resultb	double	PREFIX_EXPR	0	0	-	0
233	2945	8	FastMath.java	atan	za	double	NAME	0	0	-	0
233	2945	8	FastMath.java	atan	zb	double	PREFIX_EXPR	0	0	+	0
233	2945	8	FastMath.java	atan	xa	double	NAME	1	4	NO_USE	0
233	2945	8	FastMath.java	atan	xb	double	NAME	1	0	NO_USE	0
233	2945	8	FastMath.java	atan	leftPlane	boolean	PARAM_AS	1	1	NO_USE	1
233	2945	8	FastMath.java	atan	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
234	2959	8	FastMath.java	atan	negate	boolean	LITERAL	0	1	NO_USE	1
234	2959	8	FastMath.java	atan	idx	int	CAST	0	1	NO_USE	0
234	2959	8	FastMath.java	atan	epsA	double	NAME	0	0	NO_USE	0
234	2959	8	FastMath.java	atan	epsB	double	NAME	0	0	NO_USE	0
234	2959	8	FastMath.java	atan	temp	double	+	0	0	NO_USE	0
234	2959	8	FastMath.java	atan	ya	double	NAME	0	0	NO_USE	0
234	2959	8	FastMath.java	atan	yb	double	/	0	0	NO_USE	0
234	2959	8	FastMath.java	atan	epsA2	double	*	0	0	NO_USE	0
234	2959	8	FastMath.java	atan	result	double	+	0	0	-x	0
234	2959	8	FastMath.java	atan	resultb	double	PREFIX_EXPR	0	0	NO_USE	0
234	2959	8	FastMath.java	atan	za	double	-	0	0	NO_USE	0
234	2959	8	FastMath.java	atan	zb	double	-	0	0	NO_USE	0
234	2959	8	FastMath.java	atan	xa	double	NAME	1	4	NO_USE	0
234	2959	8	FastMath.java	atan	xb	double	NAME	1	0	NO_USE	0
234	2959	8	FastMath.java	atan	leftPlane	boolean	PARAM_AS	1	1	NO_USE	1
234	2959	8	FastMath.java	atan	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
235	2973	8	FastMath.java	atan2	y	double	PARAM_AS	1	18	NO_USE	1
235	2973	8	FastMath.java	atan2	x	double	PARAM_AS	1	11	NO_USE	1
235	2973	8	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
236	2977	8	FastMath.java	atan2	y	double	PARAM_AS	1	18	*	1
236	2977	8	FastMath.java	atan2	x	double	PARAM_AS	1	11	*	0
236	2977	8	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
237	2982	12	FastMath.java	atan2	result	double	*	0	0	NO_USE	0
237	2982	12	FastMath.java	atan2	invx	double	/	0	2	NO_USE	1
237	2982	12	FastMath.java	atan2	invy	double	/	0	1	NO_USE	0
237	2982	12	FastMath.java	atan2	y	double	PARAM_AS	1	18	RET_USE	0
237	2982	12	FastMath.java	atan2	x	double	PARAM_AS	1	11	>	0
237	2982	12	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
238	2983	16	FastMath.java	atan2	result	double	*	0	0	NO_USE	0
238	2983	16	FastMath.java	atan2	invx	double	/	0	2	NO_USE	0
238	2983	16	FastMath.java	atan2	invy	double	/	0	1	NO_USE	0
238	2983	16	FastMath.java	atan2	y	double	PARAM_AS	1	18	RET_USE	0
238	2983	16	FastMath.java	atan2	x	double	PARAM_AS	1	11	NO_USE	1
238	2983	16	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
239	2990	12	FastMath.java	atan2	result	double	*	0	0	RET_USE	0
239	2990	12	FastMath.java	atan2	invx	double	/	0	2	NO_USE	1
239	2990	12	FastMath.java	atan2	invy	double	/	0	1	<	0
239	2990	12	FastMath.java	atan2	y	double	PARAM_AS	1	18	<	0
239	2990	12	FastMath.java	atan2	x	double	PARAM_AS	1	11	NO_USE	1
239	2990	12	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
240	2991	16	FastMath.java	atan2	result	double	*	0	0	NO_USE	0
240	2991	16	FastMath.java	atan2	invx	double	/	0	2	NO_USE	0
240	2991	16	FastMath.java	atan2	invy	double	/	0	1	NO_USE	1
240	2991	16	FastMath.java	atan2	y	double	PARAM_AS	1	18	NO_USE	1
240	2991	16	FastMath.java	atan2	x	double	PARAM_AS	1	11	NO_USE	0
240	2991	16	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
241	3003	8	FastMath.java	atan2	y	double	PARAM_AS	1	18	NO_USE	1
241	3003	8	FastMath.java	atan2	x	double	PARAM_AS	1	11	==	0
241	3003	8	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
242	3004	12	FastMath.java	atan2	y	double	PARAM_AS	1	18	NO_USE	0
242	3004	12	FastMath.java	atan2	x	double	PARAM_AS	1	11	NO_USE	1
242	3004	12	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
243	3008	12	FastMath.java	atan2	y	double	PARAM_AS	1	18	NO_USE	0
243	3008	12	FastMath.java	atan2	x	double	PARAM_AS	1	11	NO_USE	1
243	3008	12	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
244	3015	8	FastMath.java	atan2	y	double	PARAM_AS	1	18	NO_USE	1
244	3015	8	FastMath.java	atan2	x	double	PARAM_AS	1	11	==	0
244	3015	8	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
245	3016	12	FastMath.java	atan2	y	double	PARAM_AS	1	18	NO_USE	0
245	3016	12	FastMath.java	atan2	x	double	PARAM_AS	1	11	NO_USE	1
245	3016	12	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
246	3020	12	FastMath.java	atan2	y	double	PARAM_AS	1	18	NO_USE	0
246	3020	12	FastMath.java	atan2	x	double	PARAM_AS	1	11	NO_USE	1
246	3020	12	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
247	3027	8	FastMath.java	atan2	y	double	PARAM_AS	1	18	>	0
247	3027	8	FastMath.java	atan2	x	double	PARAM_AS	1	11	NO_USE	1
247	3027	8	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
248	3028	12	FastMath.java	atan2	y	double	PARAM_AS	1	18	NO_USE	1
248	3028	12	FastMath.java	atan2	x	double	PARAM_AS	1	11	NO_USE	0
248	3028	12	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
249	3032	12	FastMath.java	atan2	y	double	PARAM_AS	1	18	NO_USE	1
249	3032	12	FastMath.java	atan2	x	double	PARAM_AS	1	11	NO_USE	0
249	3032	12	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
250	3037	8	FastMath.java	atan2	y	double	PARAM_AS	1	18	>	0
250	3037	8	FastMath.java	atan2	x	double	PARAM_AS	1	11	NO_USE	1
250	3037	8	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
251	3039	12	FastMath.java	atan2	y	double	PARAM_AS	1	18	NO_USE	1
251	3039	12	FastMath.java	atan2	x	double	PARAM_AS	1	11	NO_USE	0
251	3039	12	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
252	3043	12	FastMath.java	atan2	y	double	PARAM_AS	1	18	NO_USE	1
252	3043	12	FastMath.java	atan2	x	double	PARAM_AS	1	11	NO_USE	0
252	3043	12	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
253	3050	8	FastMath.java	atan2	y	double	PARAM_AS	1	18	>	0
253	3050	8	FastMath.java	atan2	x	double	PARAM_AS	1	11	NO_USE	1
253	3050	8	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
254	3051	12	FastMath.java	atan2	y	double	PARAM_AS	1	18	NO_USE	1
254	3051	12	FastMath.java	atan2	x	double	PARAM_AS	1	11	NO_USE	0
254	3051	12	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
255	3055	12	FastMath.java	atan2	y	double	PARAM_AS	1	18	NO_USE	1
255	3055	12	FastMath.java	atan2	x	double	PARAM_AS	1	11	NO_USE	0
255	3055	12	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
256	3062	8	FastMath.java	atan2	r	double	/	0	1	PARAM_USE	1
256	3062	8	FastMath.java	atan2	y	double	PARAM_AS	1	18	NO_USE	0
256	3062	8	FastMath.java	atan2	x	double	PARAM_AS	1	11	<	0
256	3062	8	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
257	3079	8	FastMath.java	atan2	r	double	/	0	1	NO_USE	0
257	3079	8	FastMath.java	atan2	ra	double	NAME	0	1	NO_USE	1
257	3079	8	FastMath.java	atan2	rb	double	PREFIX_EXPR	0	0	NO_USE	0
257	3079	8	FastMath.java	atan2	xa	double	doubleHighPart()	0	0	NO_USE	0
257	3079	8	FastMath.java	atan2	xb	double	-	0	0	NO_USE	0
257	3079	8	FastMath.java	atan2	temp	double	+	0	0	NO_USE	0
257	3079	8	FastMath.java	atan2	y	double	PARAM_AS	1	18	PARAM_USE	0
257	3079	8	FastMath.java	atan2	x	double	PARAM_AS	1	11	NO_USE	0
257	3079	8	FastMath.java	atan2	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
258	3094	6	FastMath.java	asin	x	double	PARAM_AS	1	7	NO_USE	1
258	3094	6	FastMath.java	asin	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
259	3098	6	FastMath.java	asin	x	double	PARAM_AS	1	7	NO_USE	1
259	3098	6	FastMath.java	asin	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
260	3102	6	FastMath.java	asin	x	double	PARAM_AS	1	7	NO_USE	1
260	3102	6	FastMath.java	asin	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
261	3106	6	FastMath.java	asin	x	double	PARAM_AS	1	7	NO_USE	1
261	3106	6	FastMath.java	asin	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
262	3110	6	FastMath.java	asin	x	double	PARAM_AS	1	7	RET_USE	1
262	3110	6	FastMath.java	asin	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
263	3170	6	FastMath.java	acos	x	double	PARAM_AS	1	7	NO_USE	1
263	3170	6	FastMath.java	acos	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
264	3174	6	FastMath.java	acos	x	double	PARAM_AS	1	7	NO_USE	1
264	3174	6	FastMath.java	acos	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
265	3178	6	FastMath.java	acos	x	double	PARAM_AS	1	7	NO_USE	1
265	3178	6	FastMath.java	acos	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
266	3182	6	FastMath.java	acos	x	double	PARAM_AS	1	7	NO_USE	1
266	3182	6	FastMath.java	acos	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
267	3186	6	FastMath.java	acos	x	double	PARAM_AS	1	7	NO_USE	1
267	3186	6	FastMath.java	acos	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
268	3230	6	FastMath.java	acos	temp	double	*	0	0	NO_USE	0
268	3230	6	FastMath.java	acos	xa	double	-	0	0	NO_USE	0
268	3230	6	FastMath.java	acos	xb	double	-	0	0	NO_USE	0
268	3230	6	FastMath.java	acos	ya	double	-	0	0	NO_USE	0
268	3230	6	FastMath.java	acos	yb	double	PREFIX_EXPR	0	0	NO_USE	0
268	3230	6	FastMath.java	acos	za	double	NAME	0	0	NO_USE	0
268	3230	6	FastMath.java	acos	zb	double	PREFIX_EXPR	0	0	NO_USE	0
268	3230	6	FastMath.java	acos	y	double	+	0	0	NO_USE	0
268	3230	6	FastMath.java	acos	r	double	/	0	1	NO_USE	1
268	3230	6	FastMath.java	acos	x	double	PARAM_AS	1	7	NO_USE	0
268	3230	6	FastMath.java	acos	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
269	3257	6	FastMath.java	cbrt	inbits	long	doubleToLongBits()	0	0	>>	0
269	3257	6	FastMath.java	cbrt	exponent	int	-	0	2	NO_USE	1
269	3257	6	FastMath.java	cbrt	subnormal	boolean	LITERAL	0	0	NO_USE	0
269	3257	6	FastMath.java	cbrt	x	double	PARAM_AS	1	1	==	0
269	3257	6	FastMath.java	cbrt	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
270	3258	10	FastMath.java	cbrt	inbits	long	doubleToLongBits()	0	0	NO_USE	0
270	3258	10	FastMath.java	cbrt	exponent	int	-	0	2	NO_USE	0
270	3258	10	FastMath.java	cbrt	subnormal	boolean	LITERAL	0	0	NO_USE	0
270	3258	10	FastMath.java	cbrt	x	double	PARAM_AS	1	1	RET_USE	1
270	3258	10	FastMath.java	cbrt	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
271	3269	6	FastMath.java	cbrt	inbits	long	doubleToLongBits()	0	0	NO_USE	0
271	3269	6	FastMath.java	cbrt	exponent	int	-	0	2	NO_USE	1
271	3269	6	FastMath.java	cbrt	subnormal	boolean	LITERAL	0	0	NO_USE	0
271	3269	6	FastMath.java	cbrt	x	double	1.8014398509481984E16	1	1	RET_USE	0
271	3269	6	FastMath.java	cbrt	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
272	3324	6	FastMath.java	cbrt	inbits	long	doubleToLongBits()	0	0	NO_USE	0
272	3324	6	FastMath.java	cbrt	exponent	int	-	0	2	NO_USE	0
272	3324	6	FastMath.java	cbrt	subnormal	boolean	LITERAL	0	0	NO_USE	1
272	3324	6	FastMath.java	cbrt	exp3	int	/	0	0	NO_USE	0
272	3324	6	FastMath.java	cbrt	p2	double	longBitsToDouble()	0	0	NO_USE	0
272	3324	6	FastMath.java	cbrt	mant	double	longBitsToDouble()	0	0	NO_USE	0
272	3324	6	FastMath.java	cbrt	est	double	NAME	0	0	NO_USE	0
272	3324	6	FastMath.java	cbrt	xs	double	/	0	0	NO_USE	0
272	3324	6	FastMath.java	cbrt	temp	double	*	0	0	NO_USE	0
272	3324	6	FastMath.java	cbrt	ya	double	-	0	0	NO_USE	0
272	3324	6	FastMath.java	cbrt	yb	double	-	0	0	NO_USE	0
272	3324	6	FastMath.java	cbrt	za	double	*	0	0	NO_USE	0
272	3324	6	FastMath.java	cbrt	zb	double	+	0	0	NO_USE	0
272	3324	6	FastMath.java	cbrt	temp2	double	-	0	0	NO_USE	0
272	3324	6	FastMath.java	cbrt	na	double	-	0	0	NO_USE	0
272	3324	6	FastMath.java	cbrt	nb	double	NAME	0	0	NO_USE	0
272	3324	6	FastMath.java	cbrt	x	double	1.8014398509481984E16	1	1	NO_USE	0
272	3324	6	FastMath.java	cbrt	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
273	3338	8	FastMath.java	toRadians	x	double	PARAM_AS	1	2	RET_USE	1
273	3338	8	FastMath.java	toRadians	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
274	3350	8	FastMath.java	toRadians	facta	double	0.01745329052209854	0	0	NO_USE	0
274	3350	8	FastMath.java	toRadians	factb	double	1.997844754509471E-9	0	0	NO_USE	0
274	3350	8	FastMath.java	toRadians	xa	double	doubleHighPart()	0	0	NO_USE	0
274	3350	8	FastMath.java	toRadians	xb	double	-	0	0	NO_USE	0
274	3350	8	FastMath.java	toRadians	result	double	+	0	1	*	1
274	3350	8	FastMath.java	toRadians	x	double	PARAM_AS	1	2	*	0
274	3350	8	FastMath.java	toRadians	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
275	3363	8	FastMath.java	toDegrees	x	double	PARAM_AS	1	2	RET_USE	1
275	3363	8	FastMath.java	toDegrees	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
276	3419	8	FastMath.java	ulp	x	double	PARAM_AS	1	1	NO_USE	1
276	3419	8	FastMath.java	ulp	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
277	3431	8	FastMath.java	ulp	x	float	PARAM_AS	1	1	NO_USE	1
277	3431	8	FastMath.java	ulp	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
278	3446	8	FastMath.java	scalb	d	double	PARAM_AS	1	3	*	0
278	3446	8	FastMath.java	scalb	n	int	PARAM_AS	1	5	+	1
278	3446	8	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
279	3451	8	FastMath.java	scalb	d	double	PARAM_AS	1	3	RET_USE	1
279	3451	8	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	0
279	3451	8	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
280	3454	8	FastMath.java	scalb	d	double	PARAM_AS	1	3	>	0
280	3454	8	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	1
280	3454	8	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
281	3457	8	FastMath.java	scalb	d	double	PARAM_AS	1	3	>	0
281	3457	8	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	1
281	3457	8	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
282	3470	8	FastMath.java	scalb	bits	long	doubleToLongBits()	0	0	NO_USE	0
282	3470	8	FastMath.java	scalb	sign	long	&	0	0	|	0
282	3470	8	FastMath.java	scalb	exponent	int	&	0	1	==	0
282	3470	8	FastMath.java	scalb	mantissa	long	&	0	0	OTHER_USE	0
282	3470	8	FastMath.java	scalb	scaledExponent	int	+	0	4	>	0
282	3470	8	FastMath.java	scalb	d	double	PARAM_AS	1	3	NO_USE	0
282	3470	8	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	1
282	3470	8	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
283	3472	12	FastMath.java	scalb	bits	long	doubleToLongBits()	0	0	NO_USE	0
283	3472	12	FastMath.java	scalb	sign	long	&	0	0	|	0
283	3472	12	FastMath.java	scalb	exponent	int	&	0	1	NO_USE	0
283	3472	12	FastMath.java	scalb	mantissa	long	&	0	0	OTHER_USE	0
283	3472	12	FastMath.java	scalb	scaledExponent	int	+	0	4	OTHER_USE	1
283	3472	12	FastMath.java	scalb	d	double	PARAM_AS	1	3	NO_USE	0
283	3472	12	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	0
283	3472	12	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
284	3475	19	FastMath.java	scalb	bits	long	doubleToLongBits()	0	0	NO_USE	0
284	3475	19	FastMath.java	scalb	sign	long	&	0	0	|	0
284	3475	19	FastMath.java	scalb	exponent	int	&	0	1	NO_USE	0
284	3475	19	FastMath.java	scalb	mantissa	long	&	0	0	|	0
284	3475	19	FastMath.java	scalb	scaledExponent	int	+	0	4	-x	1
284	3475	19	FastMath.java	scalb	d	double	PARAM_AS	1	3	NO_USE	0
284	3475	19	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	0
284	3475	19	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
285	3484	16	FastMath.java	scalb	mostSignificantLostBit	long	&	0	1	NO_USE	1
285	3484	16	FastMath.java	scalb	bits	long	doubleToLongBits()	0	0	NO_USE	0
285	3484	16	FastMath.java	scalb	sign	long	&	0	0	NO_USE	0
285	3484	16	FastMath.java	scalb	exponent	int	&	0	1	NO_USE	0
285	3484	16	FastMath.java	scalb	mantissa	long	>>>	0	0	x++	0
285	3484	16	FastMath.java	scalb	scaledExponent	int	+	0	4	NO_USE	0
285	3484	16	FastMath.java	scalb	d	double	PARAM_AS	1	3	NO_USE	0
285	3484	16	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	0
285	3484	16	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
286	3496	12	FastMath.java	scalb	bits	long	doubleToLongBits()	0	0	NO_USE	0
286	3496	12	FastMath.java	scalb	sign	long	&	0	0	|	0
286	3496	12	FastMath.java	scalb	exponent	int	&	0	1	NO_USE	1
286	3496	12	FastMath.java	scalb	mantissa	long	>>>	0	0	>>>	0
286	3496	12	FastMath.java	scalb	scaledExponent	int	+	0	4	--x	0
286	3496	12	FastMath.java	scalb	d	double	PARAM_AS	1	3	NO_USE	0
286	3496	12	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	0
286	3496	12	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
287	3506	16	FastMath.java	scalb	bits	long	doubleToLongBits()	0	0	NO_USE	0
287	3506	16	FastMath.java	scalb	sign	long	&	0	0	|	0
287	3506	16	FastMath.java	scalb	exponent	int	&	0	1	NO_USE	0
287	3506	16	FastMath.java	scalb	mantissa	long	&	0	0	OTHER_USE	0
287	3506	16	FastMath.java	scalb	scaledExponent	int	+	0	4	OTHER_USE	1
287	3506	16	FastMath.java	scalb	d	double	PARAM_AS	1	3	NO_USE	0
287	3506	16	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	0
287	3506	16	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
288	3512	19	FastMath.java	scalb	bits	long	doubleToLongBits()	0	0	NO_USE	0
288	3512	19	FastMath.java	scalb	sign	long	&	0	0	|	0
288	3512	19	FastMath.java	scalb	exponent	int	&	0	1	NO_USE	0
288	3512	19	FastMath.java	scalb	mantissa	long	&	0	0	OTHER_USE	0
288	3512	19	FastMath.java	scalb	scaledExponent	int	+	0	4	OTHER_USE	1
288	3512	19	FastMath.java	scalb	d	double	PARAM_AS	1	3	NO_USE	0
288	3512	19	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	0
288	3512	19	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
289	3530	8	FastMath.java	scalb	f	float	PARAM_AS	1	3	*	0
289	3530	8	FastMath.java	scalb	n	int	PARAM_AS	1	5	+	1
289	3530	8	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
290	3535	8	FastMath.java	scalb	f	float	PARAM_AS	1	3	RET_USE	1
290	3535	8	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	0
290	3535	8	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
291	3538	8	FastMath.java	scalb	f	float	PARAM_AS	1	3	>	0
291	3538	8	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	1
291	3538	8	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
292	3541	8	FastMath.java	scalb	f	float	PARAM_AS	1	3	>	0
292	3541	8	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	1
292	3541	8	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
293	3554	8	FastMath.java	scalb	bits	int	floatToIntBits()	0	0	NO_USE	0
293	3554	8	FastMath.java	scalb	sign	int	&	0	0	|	0
293	3554	8	FastMath.java	scalb	exponent	int	&	0	1	==	0
293	3554	8	FastMath.java	scalb	mantissa	int	&	0	0	OTHER_USE	0
293	3554	8	FastMath.java	scalb	scaledExponent	int	+	0	4	>	0
293	3554	8	FastMath.java	scalb	f	float	PARAM_AS	1	3	NO_USE	0
293	3554	8	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	1
293	3554	8	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
294	3556	12	FastMath.java	scalb	bits	int	floatToIntBits()	0	0	NO_USE	0
294	3556	12	FastMath.java	scalb	sign	int	&	0	0	|	0
294	3556	12	FastMath.java	scalb	exponent	int	&	0	1	NO_USE	0
294	3556	12	FastMath.java	scalb	mantissa	int	&	0	0	OTHER_USE	0
294	3556	12	FastMath.java	scalb	scaledExponent	int	+	0	4	<<	1
294	3556	12	FastMath.java	scalb	f	float	PARAM_AS	1	3	NO_USE	0
294	3556	12	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	0
294	3556	12	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
295	3559	19	FastMath.java	scalb	bits	int	floatToIntBits()	0	0	NO_USE	0
295	3559	19	FastMath.java	scalb	sign	int	&	0	0	|	0
295	3559	19	FastMath.java	scalb	exponent	int	&	0	1	NO_USE	0
295	3559	19	FastMath.java	scalb	mantissa	int	&	0	0	|	0
295	3559	19	FastMath.java	scalb	scaledExponent	int	+	0	4	-x	1
295	3559	19	FastMath.java	scalb	f	float	PARAM_AS	1	3	NO_USE	0
295	3559	19	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	0
295	3559	19	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
296	3568	16	FastMath.java	scalb	mostSignificantLostBit	int	&	0	1	NO_USE	1
296	3568	16	FastMath.java	scalb	bits	int	floatToIntBits()	0	0	NO_USE	0
296	3568	16	FastMath.java	scalb	sign	int	&	0	0	NO_USE	0
296	3568	16	FastMath.java	scalb	exponent	int	&	0	1	NO_USE	0
296	3568	16	FastMath.java	scalb	mantissa	int	>>>	0	0	x++	0
296	3568	16	FastMath.java	scalb	scaledExponent	int	+	0	4	NO_USE	0
296	3568	16	FastMath.java	scalb	f	float	PARAM_AS	1	3	NO_USE	0
296	3568	16	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	0
296	3568	16	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
297	3580	12	FastMath.java	scalb	bits	int	floatToIntBits()	0	0	NO_USE	0
297	3580	12	FastMath.java	scalb	sign	int	&	0	0	|	0
297	3580	12	FastMath.java	scalb	exponent	int	&	0	1	NO_USE	1
297	3580	12	FastMath.java	scalb	mantissa	int	>>>	0	0	>>>	0
297	3580	12	FastMath.java	scalb	scaledExponent	int	+	0	4	--x	0
297	3580	12	FastMath.java	scalb	f	float	PARAM_AS	1	3	NO_USE	0
297	3580	12	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	0
297	3580	12	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
298	3590	16	FastMath.java	scalb	bits	int	floatToIntBits()	0	0	NO_USE	0
298	3590	16	FastMath.java	scalb	sign	int	&	0	0	|	0
298	3590	16	FastMath.java	scalb	exponent	int	&	0	1	NO_USE	0
298	3590	16	FastMath.java	scalb	mantissa	int	&	0	0	OTHER_USE	0
298	3590	16	FastMath.java	scalb	scaledExponent	int	+	0	4	<<	1
298	3590	16	FastMath.java	scalb	f	float	PARAM_AS	1	3	NO_USE	0
298	3590	16	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	0
298	3590	16	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
299	3596	19	FastMath.java	scalb	bits	int	floatToIntBits()	0	0	NO_USE	0
299	3596	19	FastMath.java	scalb	sign	int	&	0	0	|	0
299	3596	19	FastMath.java	scalb	exponent	int	&	0	1	NO_USE	0
299	3596	19	FastMath.java	scalb	mantissa	int	&	0	0	OTHER_USE	0
299	3596	19	FastMath.java	scalb	scaledExponent	int	+	0	4	<<	1
299	3596	19	FastMath.java	scalb	f	float	PARAM_AS	1	3	NO_USE	0
299	3596	19	FastMath.java	scalb	n	int	PARAM_AS	1	5	NO_USE	0
299	3596	19	FastMath.java	scalb	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
300	3639	8	FastMath.java	nextAfter	d	double	PARAM_AS	1	5	==	1
300	3639	8	FastMath.java	nextAfter	direction	double	PARAM_AS	1	3	==	1
300	3639	8	FastMath.java	nextAfter	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
301	3641	15	FastMath.java	nextAfter	d	double	PARAM_AS	1	5	PARAM_USE	1
301	3641	15	FastMath.java	nextAfter	direction	double	PARAM_AS	1	3	RET_USE	1
301	3641	15	FastMath.java	nextAfter	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
302	3643	15	FastMath.java	nextAfter	d	double	PARAM_AS	1	5	<	1
302	3643	15	FastMath.java	nextAfter	direction	double	PARAM_AS	1	3	<	0
302	3643	15	FastMath.java	nextAfter	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
303	3645	15	FastMath.java	nextAfter	d	double	PARAM_AS	1	5	NO_USE	1
303	3645	15	FastMath.java	nextAfter	direction	double	PARAM_AS	1	3	<	0
303	3645	15	FastMath.java	nextAfter	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
304	3653	8	FastMath.java	nextAfter	bits	long	doubleToLongBits()	0	0	&	0
304	3653	8	FastMath.java	nextAfter	sign	long	&	0	1	|	1
304	3653	8	FastMath.java	nextAfter	d	double	PARAM_AS	1	5	NO_USE	1
304	3653	8	FastMath.java	nextAfter	direction	double	PARAM_AS	1	3	NO_USE	1
304	3653	8	FastMath.java	nextAfter	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
305	3695	8	FastMath.java	nextAfter	f	float	PARAM_AS	1	5	==	1
305	3695	8	FastMath.java	nextAfter	direction	double	PARAM_AS	1	3	==	1
305	3695	8	FastMath.java	nextAfter	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
306	3697	15	FastMath.java	nextAfter	f	float	PARAM_AS	1	5	PARAM_USE	1
306	3697	15	FastMath.java	nextAfter	direction	double	PARAM_AS	1	3	OTHER_USE	1
306	3697	15	FastMath.java	nextAfter	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
307	3699	15	FastMath.java	nextAfter	f	float	PARAM_AS	1	5	<	1
307	3699	15	FastMath.java	nextAfter	direction	double	PARAM_AS	1	3	<	0
307	3699	15	FastMath.java	nextAfter	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
308	3701	15	FastMath.java	nextAfter	f	float	PARAM_AS	1	5	NO_USE	1
308	3701	15	FastMath.java	nextAfter	direction	double	PARAM_AS	1	3	<	0
308	3701	15	FastMath.java	nextAfter	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
309	3709	8	FastMath.java	nextAfter	bits	int	floatToIntBits()	0	0	&	0
309	3709	8	FastMath.java	nextAfter	sign	int	&	0	1	|	1
309	3709	8	FastMath.java	nextAfter	f	float	PARAM_AS	1	5	NO_USE	1
309	3709	8	FastMath.java	nextAfter	direction	double	PARAM_AS	1	3	NO_USE	1
309	3709	8	FastMath.java	nextAfter	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
310	3724	8	FastMath.java	floor	y	long	UNKNOWN_AS	0	2	NO_USE	0
310	3724	8	FastMath.java	floor	x	double	PARAM_AS	1	6	RET_USE	1
310	3724	8	FastMath.java	floor	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
311	3728	8	FastMath.java	floor	y	long	UNKNOWN_AS	0	2	NO_USE	0
311	3728	8	FastMath.java	floor	x	double	PARAM_AS	1	6	RET_USE	1
311	3728	8	FastMath.java	floor	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	1
312	3733	8	FastMath.java	floor	y	long	CAST	0	2	x--	1
312	3733	8	FastMath.java	floor	x	double	PARAM_AS	1	6	NO_USE	1
312	3733	8	FastMath.java	floor	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
313	3737	8	FastMath.java	floor	y	long	CAST	0	2	*	1
313	3737	8	FastMath.java	floor	x	double	PARAM_AS	1	6	*	0
313	3737	8	FastMath.java	floor	THIS	FastMath	UNKNOWN_AS	0	2	NO_USE	0
314	3751	8	FastMath.java	ceil	y	double	UNKNOWN_AS	0	2	NO_USE	0
314	3751	8	FastMath.java	ceil	x	double	PARAM_AS	1	3	RET_USE	1
314	3751	8	FastMath.java	ceil	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
315	3756	8	FastMath.java	ceil	y	double	floor()	0	2	RET_USE	1
315	3756	8	FastMath.java	ceil	x	double	PARAM_AS	1	3	NO_USE	1
315	3756	8	FastMath.java	ceil	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
316	3762	8	FastMath.java	ceil	y	double	1.0	0	2	*	1
316	3762	8	FastMath.java	ceil	x	double	PARAM_AS	1	3	*	0
316	3762	8	FastMath.java	ceil	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
317	3777	8	FastMath.java	rint	y	double	floor()	0	1	==	0
317	3777	8	FastMath.java	rint	d	double	-	0	2	NO_USE	1
317	3777	8	FastMath.java	rint	x	double	PARAM_AS	1	0	NO_USE	0
317	3777	8	FastMath.java	rint	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
318	3778	12	FastMath.java	rint	y	double	floor()	0	1	NO_USE	1
318	3778	12	FastMath.java	rint	d	double	-	0	2	NO_USE	0
318	3778	12	FastMath.java	rint	x	double	PARAM_AS	1	0	NO_USE	0
318	3778	12	FastMath.java	rint	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
319	3783	8	FastMath.java	rint	y	double	floor()	0	1	RET_USE	0
319	3783	8	FastMath.java	rint	d	double	-	0	2	NO_USE	1
319	3783	8	FastMath.java	rint	x	double	PARAM_AS	1	0	NO_USE	0
319	3783	8	FastMath.java	rint	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
320	3832	8	FastMath.java	min	a	float	PARAM_AS	1	3	NO_USE	1
320	3832	8	FastMath.java	min	b	float	PARAM_AS	1	3	RET_USE	1
320	3832	8	FastMath.java	min	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
321	3835	8	FastMath.java	min	a	float	PARAM_AS	1	3	RET_USE	1
321	3835	8	FastMath.java	min	b	float	PARAM_AS	1	3	NO_USE	1
321	3835	8	FastMath.java	min	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
322	3839	8	FastMath.java	min	a	float	PARAM_AS	1	3	NO_USE	1
322	3839	8	FastMath.java	min	b	float	PARAM_AS	1	3	NO_USE	1
322	3839	8	FastMath.java	min	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
323	3845	8	FastMath.java	min	bits	int	floatToRawIntBits()	0	1	NO_USE	1
323	3845	8	FastMath.java	min	a	float	PARAM_AS	1	3	RET_USE	0
323	3845	8	FastMath.java	min	b	float	PARAM_AS	1	3	NO_USE	0
323	3845	8	FastMath.java	min	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
324	3857	8	FastMath.java	min	a	double	PARAM_AS	1	3	NO_USE	1
324	3857	8	FastMath.java	min	b	double	PARAM_AS	1	3	RET_USE	1
324	3857	8	FastMath.java	min	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
325	3860	8	FastMath.java	min	a	double	PARAM_AS	1	3	RET_USE	1
325	3860	8	FastMath.java	min	b	double	PARAM_AS	1	3	NO_USE	1
325	3860	8	FastMath.java	min	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
326	3864	8	FastMath.java	min	a	double	PARAM_AS	1	3	NO_USE	1
326	3864	8	FastMath.java	min	b	double	PARAM_AS	1	3	NO_USE	1
326	3864	8	FastMath.java	min	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
327	3870	8	FastMath.java	min	bits	long	doubleToRawLongBits()	0	1	NO_USE	1
327	3870	8	FastMath.java	min	a	double	PARAM_AS	1	3	RET_USE	0
327	3870	8	FastMath.java	min	b	double	PARAM_AS	1	3	NO_USE	0
327	3870	8	FastMath.java	min	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
328	3900	8	FastMath.java	max	a	float	PARAM_AS	1	3	RET_USE	1
328	3900	8	FastMath.java	max	b	float	PARAM_AS	1	3	NO_USE	1
328	3900	8	FastMath.java	max	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
329	3903	8	FastMath.java	max	a	float	PARAM_AS	1	3	NO_USE	1
329	3903	8	FastMath.java	max	b	float	PARAM_AS	1	3	RET_USE	1
329	3903	8	FastMath.java	max	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
330	3907	8	FastMath.java	max	a	float	PARAM_AS	1	3	NO_USE	1
330	3907	8	FastMath.java	max	b	float	PARAM_AS	1	3	NO_USE	1
330	3907	8	FastMath.java	max	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
331	3913	8	FastMath.java	max	bits	int	floatToRawIntBits()	0	1	NO_USE	1
331	3913	8	FastMath.java	max	a	float	PARAM_AS	1	3	NO_USE	0
331	3913	8	FastMath.java	max	b	float	PARAM_AS	1	3	RET_USE	0
331	3913	8	FastMath.java	max	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
332	3925	8	FastMath.java	max	a	double	PARAM_AS	1	3	RET_USE	1
332	3925	8	FastMath.java	max	b	double	PARAM_AS	1	3	NO_USE	1
332	3925	8	FastMath.java	max	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
333	3928	8	FastMath.java	max	a	double	PARAM_AS	1	3	NO_USE	1
333	3928	8	FastMath.java	max	b	double	PARAM_AS	1	3	RET_USE	1
333	3928	8	FastMath.java	max	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
334	3932	8	FastMath.java	max	a	double	PARAM_AS	1	3	NO_USE	1
334	3932	8	FastMath.java	max	b	double	PARAM_AS	1	3	NO_USE	1
334	3932	8	FastMath.java	max	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
335	3938	8	FastMath.java	max	bits	long	doubleToRawLongBits()	0	1	NO_USE	1
335	3938	8	FastMath.java	max	a	double	PARAM_AS	1	3	NO_USE	0
335	3938	8	FastMath.java	max	b	double	PARAM_AS	1	3	RET_USE	0
335	3938	8	FastMath.java	max	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
336	3959	8	FastMath.java	hypot	x	double	PARAM_AS	1	2	PARAM_USE	1
336	3959	8	FastMath.java	hypot	y	double	PARAM_AS	1	2	PARAM_USE	1
336	3959	8	FastMath.java	hypot	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
337	3961	15	FastMath.java	hypot	x	double	PARAM_AS	1	2	PARAM_USE	1
337	3961	15	FastMath.java	hypot	y	double	PARAM_AS	1	2	PARAM_USE	1
337	3961	15	FastMath.java	hypot	THIS	FastMath	UNKNOWN_AS	0	0	FIELD_USE	0
338	3967	12	FastMath.java	hypot	expX	int	getExponent()	0	2	+	1
338	3967	12	FastMath.java	hypot	expY	int	getExponent()	0	2	>	1
338	3967	12	FastMath.java	hypot	x	double	PARAM_AS	1	2	PARAM_USE	0
338	3967	12	FastMath.java	hypot	y	double	PARAM_AS	1	2	PARAM_USE	0
338	3967	12	FastMath.java	hypot	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
339	3970	19	FastMath.java	hypot	expX	int	getExponent()	0	2	+	1
339	3970	19	FastMath.java	hypot	expY	int	getExponent()	0	2	+	1
339	3970	19	FastMath.java	hypot	x	double	PARAM_AS	1	2	PARAM_USE	0
339	3970	19	FastMath.java	hypot	y	double	PARAM_AS	1	2	PARAM_USE	0
339	3970	19	FastMath.java	hypot	THIS	FastMath	UNKNOWN_AS	0	0	CLALLER_USE	0
340	4028	8	FastMath.java	copySign	m	long	doubleToLongBits()	0	2	NO_USE	1
340	4028	8	FastMath.java	copySign	s	long	doubleToLongBits()	0	2	NO_USE	1
340	4028	8	FastMath.java	copySign	magnitude	double	PARAM_AS	1	0	RET_USE	0
340	4028	8	FastMath.java	copySign	sign	double	PARAM_AS	1	0	NO_USE	0
340	4028	8	FastMath.java	copySign	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
341	4045	8	FastMath.java	copySign	m	int	floatToIntBits()	0	2	NO_USE	1
341	4045	8	FastMath.java	copySign	s	int	floatToIntBits()	0	2	NO_USE	1
341	4045	8	FastMath.java	copySign	magnitude	float	PARAM_AS	1	0	RET_USE	0
341	4045	8	FastMath.java	copySign	sign	float	PARAM_AS	1	0	NO_USE	0
341	4045	8	FastMath.java	copySign	THIS	FastMath	UNKNOWN_AS	0	0	NO_USE	0
342	85	9	CompositeFormat.java	parseNextCharacter	index	int	getIndex()	0	2	x++	1
342	85	9	CompositeFormat.java	parseNextCharacter	n	int	length()	0	2	<	1
342	85	9	CompositeFormat.java	parseNextCharacter	ret	char	0	0	0	NO_USE	0
342	85	9	CompositeFormat.java	parseNextCharacter	source	String	PARAM_AS	1	0	CLALLER_USE	0
342	85	9	CompositeFormat.java	parseNextCharacter	pos	ParsePosition	PARAM_AS	1	0	CLALLER_USE	0
342	85	9	CompositeFormat.java	parseNextCharacter	THIS	CompositeFormat	UNKNOWN_AS	0	0	NO_USE	0
343	92	13	CompositeFormat.java	parseNextCharacter	c	char	charAt()	0	0	OTHER_USE	0
343	92	13	CompositeFormat.java	parseNextCharacter	index	int	getIndex()	0	2	NO_USE	1
343	92	13	CompositeFormat.java	parseNextCharacter	n	int	length()	0	2	NO_USE	1
343	92	13	CompositeFormat.java	parseNextCharacter	ret	char	0	0	0	NO_USE	0
343	92	13	CompositeFormat.java	parseNextCharacter	source	String	PARAM_AS	1	0	NO_USE	0
343	92	13	CompositeFormat.java	parseNextCharacter	pos	ParsePosition	PARAM_AS	1	0	NO_USE	0
343	92	13	CompositeFormat.java	parseNextCharacter	THIS	CompositeFormat	UNKNOWN_AS	0	0	NO_USE	0
344	121	8	CompositeFormat.java	parseNumber	ret	Number	NULL	0	0	NO_USE	0
344	121	8	CompositeFormat.java	parseNumber	sb	StringBuilder	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	0
344	121	8	CompositeFormat.java	parseNumber	n	int	length()	0	0	NO_USE	0
344	121	8	CompositeFormat.java	parseNumber	startIndex	int	getIndex()	0	1	PARAM_USE	0
344	121	8	CompositeFormat.java	parseNumber	endIndex	int	+	0	2	PARAM_USE	1
344	121	8	CompositeFormat.java	parseNumber	source	String	PARAM_AS	1	2	CLALLER_USE	1
344	121	8	CompositeFormat.java	parseNumber	value	double	PARAM_AS	1	0	PARAM_USE	0
344	121	8	CompositeFormat.java	parseNumber	pos	ParsePosition	PARAM_AS	1	0	CLALLER_USE	0
344	121	8	CompositeFormat.java	parseNumber	THIS	CompositeFormat	UNKNOWN_AS	0	0	NO_USE	0
345	122	12	CompositeFormat.java	parseNumber	ret	Number	NULL	0	0	NO_USE	0
345	122	12	CompositeFormat.java	parseNumber	sb	StringBuilder	CLASS_INSTANCE_CREATION	0	1	NO_USE	1
345	122	12	CompositeFormat.java	parseNumber	n	int	length()	0	0	NO_USE	0
345	122	12	CompositeFormat.java	parseNumber	startIndex	int	getIndex()	0	1	NO_USE	1
345	122	12	CompositeFormat.java	parseNumber	endIndex	int	+	0	2	PARAM_USE	1
345	122	12	CompositeFormat.java	parseNumber	source	String	PARAM_AS	1	2	NO_USE	1
345	122	12	CompositeFormat.java	parseNumber	value	double	PARAM_AS	1	0	PARAM_USE	0
345	122	12	CompositeFormat.java	parseNumber	pos	ParsePosition	PARAM_AS	1	0	CLALLER_USE	0
345	122	12	CompositeFormat.java	parseNumber	THIS	CompositeFormat	UNKNOWN_AS	0	0	NO_USE	0
346	148	8	CompositeFormat.java	parseNumber	startIndex	int	getIndex()	0	1	NO_USE	1
346	148	8	CompositeFormat.java	parseNumber	number	Number	parse()	0	1	!=	0
346	148	8	CompositeFormat.java	parseNumber	endIndex	int	getIndex()	0	1	NO_USE	1
346	148	8	CompositeFormat.java	parseNumber	source	String	PARAM_AS	1	0	PARAM_USE	0
346	148	8	CompositeFormat.java	parseNumber	format	NumberFormat	PARAM_AS	1	0	NO_USE	0
346	148	8	CompositeFormat.java	parseNumber	pos	ParsePosition	PARAM_AS	1	0	PARAM_USE	0
346	148	8	CompositeFormat.java	parseNumber	THIS	CompositeFormat	UNKNOWN_AS	0	0	FIELD_USE	0
347	155	16	CompositeFormat.java	parseNumber	i	int	0	0	0	NO_USE	0
347	155	16	CompositeFormat.java	parseNumber	special	double[]	OTHERS	0	0	NO_USE	0
347	155	16	CompositeFormat.java	parseNumber	startIndex	int	getIndex()	0	1	NO_USE	0
347	155	16	CompositeFormat.java	parseNumber	number	Number	parseNumber()	0	1	NO_USE	1
347	155	16	CompositeFormat.java	parseNumber	endIndex	int	getIndex()	0	1	NO_USE	0
347	155	16	CompositeFormat.java	parseNumber	source	String	PARAM_AS	1	0	NO_USE	0
347	155	16	CompositeFormat.java	parseNumber	format	NumberFormat	PARAM_AS	1	0	NO_USE	0
347	155	16	CompositeFormat.java	parseNumber	pos	ParsePosition	PARAM_AS	1	0	NO_USE	0
347	155	16	CompositeFormat.java	parseNumber	THIS	CompositeFormat	UNKNOWN_AS	0	0	NO_USE	0
348	177	8	CompositeFormat.java	parseFixedstring	startIndex	int	getIndex()	0	2	PARAM_USE	1
348	177	8	CompositeFormat.java	parseFixedstring	endIndex	int	+	0	2	NO_USE	1
348	177	8	CompositeFormat.java	parseFixedstring	source	String	PARAM_AS	1	3	NO_USE	1
348	177	8	CompositeFormat.java	parseFixedstring	expected	String	PARAM_AS	1	1	NO_USE	1
348	177	8	CompositeFormat.java	parseFixedstring	pos	ParsePosition	PARAM_AS	1	0	CLALLER_USE	0
348	177	8	CompositeFormat.java	parseFixedstring	THIS	CompositeFormat	UNKNOWN_AS	0	0	NO_USE	0
349	211	8	CompositeFormat.java	formatDouble	value	double	PARAM_AS	1	2	PARAM_USE	1
349	211	8	CompositeFormat.java	formatDouble	format	NumberFormat	PARAM_AS	1	0	CLALLER_USE	0
349	211	8	CompositeFormat.java	formatDouble	toAppendTo	StringBuffer	PARAM_AS	1	0	CLALLER_USE	0
349	211	8	CompositeFormat.java	formatDouble	pos	FieldPosition	PARAM_AS	1	0	PARAM_USE	0
349	211	8	CompositeFormat.java	formatDouble	THIS	CompositeFormat	UNKNOWN_AS	0	0	NO_USE	0
350	113	8	MathUtils.java	addAndCheck	s	long	+	0	2	NO_USE	1
350	113	8	MathUtils.java	addAndCheck	x	int	PARAM_AS	1	0	OTHER_USE	0
350	113	8	MathUtils.java	addAndCheck	y	int	PARAM_AS	1	0	OTHER_USE	0
350	113	8	MathUtils.java	addAndCheck	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
351	146	8	MathUtils.java	addAndCheck	ret	long	UNKNOWN_AS	0	0	NO_USE	0
351	146	8	MathUtils.java	addAndCheck	a	long	PARAM_AS	1	4	PARAM_USE	1
351	146	8	MathUtils.java	addAndCheck	b	long	PARAM_AS	1	4	PARAM_USE	1
351	146	8	MathUtils.java	addAndCheck	pattern	Localizable	PARAM_AS	1	0	PARAM_USE	0
351	146	8	MathUtils.java	addAndCheck	THIS	MathUtils	UNKNOWN_AS	0	0	CLALLER_USE	0
352	152	12	MathUtils.java	addAndCheck	ret	long	addAndCheck()	0	0	NO_USE	0
352	152	12	MathUtils.java	addAndCheck	a	long	PARAM_AS	1	4	<=	1
352	152	12	MathUtils.java	addAndCheck	b	long	PARAM_AS	1	4	<	0
352	152	12	MathUtils.java	addAndCheck	pattern	Localizable	PARAM_AS	1	0	OTHER_USE	0
352	152	12	MathUtils.java	addAndCheck	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
353	153	16	MathUtils.java	addAndCheck	ret	long	addAndCheck()	0	0	NO_USE	0
353	153	16	MathUtils.java	addAndCheck	a	long	PARAM_AS	1	4	<=	0
353	153	16	MathUtils.java	addAndCheck	b	long	PARAM_AS	1	4	-	1
353	153	16	MathUtils.java	addAndCheck	pattern	Localizable	PARAM_AS	1	0	OTHER_USE	0
353	153	16	MathUtils.java	addAndCheck	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
354	155	20	MathUtils.java	addAndCheck	ret	long	addAndCheck()	0	0	NO_USE	0
354	155	20	MathUtils.java	addAndCheck	a	long	PARAM_AS	1	4	+	1
354	155	20	MathUtils.java	addAndCheck	b	long	PARAM_AS	1	4	+	1
354	155	20	MathUtils.java	addAndCheck	pattern	Localizable	PARAM_AS	1	0	OTHER_USE	0
354	155	20	MathUtils.java	addAndCheck	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
355	169	16	MathUtils.java	addAndCheck	ret	long	+	0	0	NO_USE	0
355	169	16	MathUtils.java	addAndCheck	a	long	PARAM_AS	1	4	+	1
355	169	16	MathUtils.java	addAndCheck	b	long	PARAM_AS	1	4	+	1
355	169	16	MathUtils.java	addAndCheck	pattern	Localizable	PARAM_AS	1	0	OTHER_USE	0
355	169	16	MathUtils.java	addAndCheck	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
356	206	8	MathUtils.java	binomialCoefficient	n	int	PARAM_AS	1	5	NO_USE	1
356	206	8	MathUtils.java	binomialCoefficient	k	int	PARAM_AS	1	5	NO_USE	1
356	206	8	MathUtils.java	binomialCoefficient	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
357	209	8	MathUtils.java	binomialCoefficient	n	int	PARAM_AS	1	5	RET_USE	1
357	209	8	MathUtils.java	binomialCoefficient	k	int	PARAM_AS	1	5	NO_USE	1
357	209	8	MathUtils.java	binomialCoefficient	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
358	213	8	MathUtils.java	binomialCoefficient	n	int	PARAM_AS	1	5	PARAM_USE	1
358	213	8	MathUtils.java	binomialCoefficient	k	int	PARAM_AS	1	5	-	1
358	213	8	MathUtils.java	binomialCoefficient	THIS	MathUtils	UNKNOWN_AS	0	0	CLALLER_USE	0
359	223	8	MathUtils.java	binomialCoefficient	result	long	1	0	0	*	0
359	223	8	MathUtils.java	binomialCoefficient	n	int	PARAM_AS	1	5	-	1
359	223	8	MathUtils.java	binomialCoefficient	k	int	PARAM_AS	1	5	-	0
359	223	8	MathUtils.java	binomialCoefficient	THIS	MathUtils	UNKNOWN_AS	0	0	CLALLER_USE	0
360	230	15	MathUtils.java	binomialCoefficient	result	long	/	0	0	/	0
360	230	15	MathUtils.java	binomialCoefficient	n	int	PARAM_AS	1	5	-	1
360	230	15	MathUtils.java	binomialCoefficient	k	int	PARAM_AS	1	5	-	0
360	230	15	MathUtils.java	binomialCoefficient	THIS	MathUtils	UNKNOWN_AS	0	0	CLALLER_USE	0
361	283	8	MathUtils.java	binomialCoefficientDouble	n	int	PARAM_AS	1	4	NO_USE	1
361	283	8	MathUtils.java	binomialCoefficientDouble	k	int	PARAM_AS	1	5	NO_USE	1
361	283	8	MathUtils.java	binomialCoefficientDouble	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
362	286	8	MathUtils.java	binomialCoefficientDouble	n	int	PARAM_AS	1	4	RET_USE	1
362	286	8	MathUtils.java	binomialCoefficientDouble	k	int	PARAM_AS	1	5	NO_USE	1
362	286	8	MathUtils.java	binomialCoefficientDouble	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
363	289	8	MathUtils.java	binomialCoefficientDouble	n	int	PARAM_AS	1	4	PARAM_USE	1
363	289	8	MathUtils.java	binomialCoefficientDouble	k	int	PARAM_AS	1	5	-	1
363	289	8	MathUtils.java	binomialCoefficientDouble	THIS	MathUtils	UNKNOWN_AS	0	0	CLALLER_USE	0
364	292	8	MathUtils.java	binomialCoefficientDouble	n	int	PARAM_AS	1	4	PARAM_USE	1
364	292	8	MathUtils.java	binomialCoefficientDouble	k	int	PARAM_AS	1	5	PARAM_USE	0
364	292	8	MathUtils.java	binomialCoefficientDouble	THIS	MathUtils	UNKNOWN_AS	0	0	CLALLER_USE	0
365	324	8	MathUtils.java	binomialCoefficientLog	n	int	PARAM_AS	1	5	NO_USE	1
365	324	8	MathUtils.java	binomialCoefficientLog	k	int	PARAM_AS	1	5	NO_USE	1
365	324	8	MathUtils.java	binomialCoefficientLog	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
366	327	8	MathUtils.java	binomialCoefficientLog	n	int	PARAM_AS	1	5	PARAM_USE	1
366	327	8	MathUtils.java	binomialCoefficientLog	k	int	PARAM_AS	1	5	NO_USE	1
366	327	8	MathUtils.java	binomialCoefficientLog	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
367	335	8	MathUtils.java	binomialCoefficientLog	n	int	PARAM_AS	1	5	PARAM_USE	1
367	335	8	MathUtils.java	binomialCoefficientLog	k	int	PARAM_AS	1	5	PARAM_USE	0
367	335	8	MathUtils.java	binomialCoefficientLog	THIS	MathUtils	UNKNOWN_AS	0	0	CLALLER_USE	0
368	343	8	MathUtils.java	binomialCoefficientLog	n	int	PARAM_AS	1	5	PARAM_USE	1
368	343	8	MathUtils.java	binomialCoefficientLog	k	int	PARAM_AS	1	5	PARAM_USE	0
368	343	8	MathUtils.java	binomialCoefficientLog	THIS	MathUtils	UNKNOWN_AS	0	0	CLALLER_USE	0
369	347	8	MathUtils.java	binomialCoefficientLog	n	int	PARAM_AS	1	5	PARAM_USE	1
369	347	8	MathUtils.java	binomialCoefficientLog	k	int	PARAM_AS	1	5	-	1
369	347	8	MathUtils.java	binomialCoefficientLog	THIS	MathUtils	UNKNOWN_AS	0	0	CLALLER_USE	0
370	378	8	MathUtils.java	checkBinomial	n	int	PARAM_AS	1	2	OTHER_USE	1
370	378	8	MathUtils.java	checkBinomial	k	int	PARAM_AS	1	1	OTHER_USE	1
370	378	8	MathUtils.java	checkBinomial	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
371	382	8	MathUtils.java	checkBinomial	n	int	PARAM_AS	1	2	OTHER_USE	1
371	382	8	MathUtils.java	checkBinomial	k	int	PARAM_AS	1	1	NO_USE	0
371	382	8	MathUtils.java	checkBinomial	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
372	398	8	MathUtils.java	compareTo	x	double	PARAM_AS	1	2	<	1
372	398	8	MathUtils.java	compareTo	y	double	PARAM_AS	1	2	<	1
372	398	8	MathUtils.java	compareTo	eps	double	PARAM_AS	1	1	NO_USE	1
372	398	8	MathUtils.java	compareTo	THIS	MathUtils	UNKNOWN_AS	0	1	NO_USE	1
373	400	15	MathUtils.java	compareTo	x	double	PARAM_AS	1	2	NO_USE	1
373	400	15	MathUtils.java	compareTo	y	double	PARAM_AS	1	2	NO_USE	1
373	400	15	MathUtils.java	compareTo	eps	double	PARAM_AS	1	1	NO_USE	0
373	400	15	MathUtils.java	compareTo	THIS	MathUtils	UNKNOWN_AS	0	1	NO_USE	0
374	424	8	MathUtils.java	compareTo	x	double	PARAM_AS	1	2	<	1
374	424	8	MathUtils.java	compareTo	y	double	PARAM_AS	1	2	<	1
374	424	8	MathUtils.java	compareTo	maxUlps	int	PARAM_AS	1	1	NO_USE	1
374	424	8	MathUtils.java	compareTo	THIS	MathUtils	UNKNOWN_AS	0	1	NO_USE	1
375	426	15	MathUtils.java	compareTo	x	double	PARAM_AS	1	2	NO_USE	1
375	426	15	MathUtils.java	compareTo	y	double	PARAM_AS	1	2	NO_USE	1
375	426	15	MathUtils.java	compareTo	maxUlps	int	PARAM_AS	1	1	NO_USE	0
375	426	15	MathUtils.java	compareTo	THIS	MathUtils	UNKNOWN_AS	0	1	NO_USE	0
376	520	8	MathUtils.java	equals	xInt	int	floatToIntBits()	0	1	-	1
376	520	8	MathUtils.java	equals	yInt	int	floatToIntBits()	0	1	NO_USE	0
376	520	8	MathUtils.java	equals	x	float	PARAM_AS	1	0	NO_USE	0
376	520	8	MathUtils.java	equals	y	float	PARAM_AS	1	0	NO_USE	0
376	520	8	MathUtils.java	equals	maxUlps	int	PARAM_AS	1	0	NO_USE	0
376	520	8	MathUtils.java	equals	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
377	523	8	MathUtils.java	equals	xInt	int	-	0	1	NO_USE	0
377	523	8	MathUtils.java	equals	yInt	int	floatToIntBits()	0	1	-	1
377	523	8	MathUtils.java	equals	x	float	PARAM_AS	1	0	NO_USE	0
377	523	8	MathUtils.java	equals	y	float	PARAM_AS	1	0	NO_USE	0
377	523	8	MathUtils.java	equals	maxUlps	int	PARAM_AS	1	0	NO_USE	0
377	523	8	MathUtils.java	equals	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
378	559	8	MathUtils.java	equals	x	float[]	PARAM_AS	1	3	==	1
378	559	8	MathUtils.java	equals	y	float[]	PARAM_AS	1	3	==	1
378	559	8	MathUtils.java	equals	THIS	MathUtils	UNKNOWN_AS	0	3	NO_USE	0
379	562	8	MathUtils.java	equals	x	float[]	PARAM_AS	1	3	NO_USE	1
379	562	8	MathUtils.java	equals	y	float[]	PARAM_AS	1	3	NO_USE	1
379	562	8	MathUtils.java	equals	THIS	MathUtils	UNKNOWN_AS	0	3	NO_USE	1
380	566	12	MathUtils.java	equals	i	int	0	0	2	NO_USE	1
380	566	12	MathUtils.java	equals	x	float[]	PARAM_AS	1	3	NO_USE	1
380	566	12	MathUtils.java	equals	y	float[]	PARAM_AS	1	3	NO_USE	1
380	566	12	MathUtils.java	equals	THIS	MathUtils	UNKNOWN_AS	0	3	NO_USE	1
381	585	8	MathUtils.java	equalsIncludingNaN	x	float[]	PARAM_AS	1	3	==	1
381	585	8	MathUtils.java	equalsIncludingNaN	y	float[]	PARAM_AS	1	3	==	1
381	585	8	MathUtils.java	equalsIncludingNaN	THIS	MathUtils	UNKNOWN_AS	0	3	NO_USE	0
382	588	8	MathUtils.java	equalsIncludingNaN	x	float[]	PARAM_AS	1	3	NO_USE	1
382	588	8	MathUtils.java	equalsIncludingNaN	y	float[]	PARAM_AS	1	3	NO_USE	1
382	588	8	MathUtils.java	equalsIncludingNaN	THIS	MathUtils	UNKNOWN_AS	0	3	NO_USE	1
383	592	12	MathUtils.java	equalsIncludingNaN	i	int	0	0	2	NO_USE	1
383	592	12	MathUtils.java	equalsIncludingNaN	x	float[]	PARAM_AS	1	3	NO_USE	1
383	592	12	MathUtils.java	equalsIncludingNaN	y	float[]	PARAM_AS	1	3	NO_USE	1
383	592	12	MathUtils.java	equalsIncludingNaN	THIS	MathUtils	UNKNOWN_AS	0	3	NO_USE	1
384	676	8	MathUtils.java	equals	xInt	long	doubleToLongBits()	0	1	-	1
384	676	8	MathUtils.java	equals	yInt	long	doubleToLongBits()	0	1	NO_USE	0
384	676	8	MathUtils.java	equals	x	double	PARAM_AS	1	0	NO_USE	0
384	676	8	MathUtils.java	equals	y	double	PARAM_AS	1	0	NO_USE	0
384	676	8	MathUtils.java	equals	maxUlps	int	PARAM_AS	1	0	NO_USE	0
384	676	8	MathUtils.java	equals	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
385	679	8	MathUtils.java	equals	xInt	long	-	0	1	NO_USE	0
385	679	8	MathUtils.java	equals	yInt	long	doubleToLongBits()	0	1	-	1
385	679	8	MathUtils.java	equals	x	double	PARAM_AS	1	0	NO_USE	0
385	679	8	MathUtils.java	equals	y	double	PARAM_AS	1	0	NO_USE	0
385	679	8	MathUtils.java	equals	maxUlps	int	PARAM_AS	1	0	NO_USE	0
385	679	8	MathUtils.java	equals	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
386	715	8	MathUtils.java	equals	x	double[]	PARAM_AS	1	3	==	1
386	715	8	MathUtils.java	equals	y	double[]	PARAM_AS	1	3	==	1
386	715	8	MathUtils.java	equals	THIS	MathUtils	UNKNOWN_AS	0	3	NO_USE	0
387	718	8	MathUtils.java	equals	x	double[]	PARAM_AS	1	3	NO_USE	1
387	718	8	MathUtils.java	equals	y	double[]	PARAM_AS	1	3	NO_USE	1
387	718	8	MathUtils.java	equals	THIS	MathUtils	UNKNOWN_AS	0	3	NO_USE	1
388	722	12	MathUtils.java	equals	i	int	0	0	2	NO_USE	1
388	722	12	MathUtils.java	equals	x	double[]	PARAM_AS	1	3	NO_USE	1
388	722	12	MathUtils.java	equals	y	double[]	PARAM_AS	1	3	NO_USE	1
388	722	12	MathUtils.java	equals	THIS	MathUtils	UNKNOWN_AS	0	3	NO_USE	1
389	741	8	MathUtils.java	equalsIncludingNaN	x	double[]	PARAM_AS	1	3	==	1
389	741	8	MathUtils.java	equalsIncludingNaN	y	double[]	PARAM_AS	1	3	==	1
389	741	8	MathUtils.java	equalsIncludingNaN	THIS	MathUtils	UNKNOWN_AS	0	3	NO_USE	0
390	744	8	MathUtils.java	equalsIncludingNaN	x	double[]	PARAM_AS	1	3	NO_USE	1
390	744	8	MathUtils.java	equalsIncludingNaN	y	double[]	PARAM_AS	1	3	NO_USE	1
390	744	8	MathUtils.java	equalsIncludingNaN	THIS	MathUtils	UNKNOWN_AS	0	3	NO_USE	1
391	748	12	MathUtils.java	equalsIncludingNaN	i	int	0	0	2	NO_USE	1
391	748	12	MathUtils.java	equalsIncludingNaN	x	double[]	PARAM_AS	1	3	NO_USE	1
391	748	12	MathUtils.java	equalsIncludingNaN	y	double[]	PARAM_AS	1	3	NO_USE	1
391	748	12	MathUtils.java	equalsIncludingNaN	THIS	MathUtils	UNKNOWN_AS	0	3	NO_USE	1
392	780	8	MathUtils.java	factorial	n	int	PARAM_AS	1	2	OTHER_USE	1
392	780	8	MathUtils.java	factorial	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
393	784	8	MathUtils.java	factorial	n	int	PARAM_AS	1	2	NO_USE	1
393	784	8	MathUtils.java	factorial	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
394	804	8	MathUtils.java	factorialDouble	n	int	PARAM_AS	1	2	OTHER_USE	1
394	804	8	MathUtils.java	factorialDouble	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
395	808	8	MathUtils.java	factorialDouble	n	int	PARAM_AS	1	2	PARAM_USE	1
395	808	8	MathUtils.java	factorialDouble	THIS	MathUtils	UNKNOWN_AS	0	0	CLALLER_USE	0
396	822	8	MathUtils.java	factorialLog	n	int	PARAM_AS	1	2	OTHER_USE	1
396	822	8	MathUtils.java	factorialLog	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
397	826	8	MathUtils.java	factorialLog	n	int	PARAM_AS	1	2	PARAM_USE	1
397	826	8	MathUtils.java	factorialLog	THIS	MathUtils	UNKNOWN_AS	0	0	CLALLER_USE	0
398	868	8	MathUtils.java	gcd	u	int	NAME	0	3	==	1
398	868	8	MathUtils.java	gcd	v	int	NAME	0	3	==	1
398	868	8	MathUtils.java	gcd	p	int	PARAM_AS	1	0	OTHER_USE	0
398	868	8	MathUtils.java	gcd	q	int	PARAM_AS	1	0	OTHER_USE	0
398	868	8	MathUtils.java	gcd	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
399	869	12	MathUtils.java	gcd	u	int	NAME	0	3	NO_USE	1
399	869	12	MathUtils.java	gcd	v	int	NAME	0	3	NO_USE	1
399	869	12	MathUtils.java	gcd	p	int	PARAM_AS	1	0	OTHER_USE	0
399	869	12	MathUtils.java	gcd	q	int	PARAM_AS	1	0	OTHER_USE	0
399	869	12	MathUtils.java	gcd	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
400	880	8	MathUtils.java	gcd	u	int	NAME	0	3	-x	1
400	880	8	MathUtils.java	gcd	v	int	NAME	0	3	NO_USE	0
400	880	8	MathUtils.java	gcd	p	int	PARAM_AS	1	0	NO_USE	0
400	880	8	MathUtils.java	gcd	q	int	PARAM_AS	1	0	NO_USE	0
400	880	8	MathUtils.java	gcd	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
401	883	8	MathUtils.java	gcd	u	int	PREFIX_EXPR	0	3	NO_USE	0
401	883	8	MathUtils.java	gcd	v	int	NAME	0	3	-x	1
401	883	8	MathUtils.java	gcd	p	int	PARAM_AS	1	0	NO_USE	0
401	883	8	MathUtils.java	gcd	q	int	PARAM_AS	1	0	NO_USE	0
401	883	8	MathUtils.java	gcd	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
402	894	8	MathUtils.java	gcd	u	int	2	0	3	NO_USE	0
402	894	8	MathUtils.java	gcd	v	int	2	0	3	NO_USE	0
402	894	8	MathUtils.java	gcd	k	int	0	0	1	NO_USE	1
402	894	8	MathUtils.java	gcd	p	int	PARAM_AS	1	0	OTHER_USE	0
402	894	8	MathUtils.java	gcd	q	int	PARAM_AS	1	0	OTHER_USE	0
402	894	8	MathUtils.java	gcd	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
403	910	12	MathUtils.java	gcd	u	int	2	0	3	NO_USE	0
403	910	12	MathUtils.java	gcd	v	int	2	0	3	NO_USE	0
403	910	12	MathUtils.java	gcd	k	int	0	0	1	NO_USE	0
403	910	12	MathUtils.java	gcd	t	int	2	0	1	-x	1
403	910	12	MathUtils.java	gcd	p	int	PARAM_AS	1	0	NO_USE	0
403	910	12	MathUtils.java	gcd	q	int	PARAM_AS	1	0	NO_USE	0
403	910	12	MathUtils.java	gcd	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
404	955	8	MathUtils.java	gcd	u	long	NAME	0	3	==	1
404	955	8	MathUtils.java	gcd	v	long	NAME	0	3	==	1
404	955	8	MathUtils.java	gcd	p	long	PARAM_AS	1	0	OTHER_USE	0
404	955	8	MathUtils.java	gcd	q	long	PARAM_AS	1	0	OTHER_USE	0
404	955	8	MathUtils.java	gcd	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
405	956	12	MathUtils.java	gcd	u	long	NAME	0	3	NO_USE	1
405	956	12	MathUtils.java	gcd	v	long	NAME	0	3	NO_USE	1
405	956	12	MathUtils.java	gcd	p	long	PARAM_AS	1	0	OTHER_USE	0
405	956	12	MathUtils.java	gcd	q	long	PARAM_AS	1	0	OTHER_USE	0
405	956	12	MathUtils.java	gcd	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
406	967	8	MathUtils.java	gcd	u	long	NAME	0	3	-x	1
406	967	8	MathUtils.java	gcd	v	long	NAME	0	3	NO_USE	0
406	967	8	MathUtils.java	gcd	p	long	PARAM_AS	1	0	NO_USE	0
406	967	8	MathUtils.java	gcd	q	long	PARAM_AS	1	0	NO_USE	0
406	967	8	MathUtils.java	gcd	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
407	970	8	MathUtils.java	gcd	u	long	PREFIX_EXPR	0	3	NO_USE	0
407	970	8	MathUtils.java	gcd	v	long	NAME	0	3	-x	1
407	970	8	MathUtils.java	gcd	p	long	PARAM_AS	1	0	NO_USE	0
407	970	8	MathUtils.java	gcd	q	long	PARAM_AS	1	0	NO_USE	0
407	970	8	MathUtils.java	gcd	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
408	981	8	MathUtils.java	gcd	u	long	2	0	3	NO_USE	0
408	981	8	MathUtils.java	gcd	v	long	2	0	3	NO_USE	0
408	981	8	MathUtils.java	gcd	k	int	0	0	1	NO_USE	1
408	981	8	MathUtils.java	gcd	p	long	PARAM_AS	1	0	OTHER_USE	0
408	981	8	MathUtils.java	gcd	q	long	PARAM_AS	1	0	OTHER_USE	0
408	981	8	MathUtils.java	gcd	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
409	997	12	MathUtils.java	gcd	u	long	2	0	3	NO_USE	0
409	997	12	MathUtils.java	gcd	v	long	2	0	3	NO_USE	0
409	997	12	MathUtils.java	gcd	k	int	0	0	1	NO_USE	0
409	997	12	MathUtils.java	gcd	t	long	2	0	1	-x	1
409	997	12	MathUtils.java	gcd	p	long	PARAM_AS	1	0	NO_USE	0
409	997	12	MathUtils.java	gcd	q	long	PARAM_AS	1	0	NO_USE	0
409	997	12	MathUtils.java	gcd	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
410	1051	8	MathUtils.java	indicator	x	double	PARAM_AS	1	1	NO_USE	1
410	1051	8	MathUtils.java	indicator	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
411	1065	8	MathUtils.java	indicator	x	float	PARAM_AS	1	1	NO_USE	1
411	1065	8	MathUtils.java	indicator	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
412	1125	8	MathUtils.java	lcm	a	int	PARAM_AS	1	1	NO_USE	1
412	1125	8	MathUtils.java	lcm	b	int	PARAM_AS	1	1	NO_USE	1
412	1125	8	MathUtils.java	lcm	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
413	1129	8	MathUtils.java	lcm	lcm	int	abs()	0	1	NO_USE	1
413	1129	8	MathUtils.java	lcm	a	int	PARAM_AS	1	1	OTHER_USE	0
413	1129	8	MathUtils.java	lcm	b	int	PARAM_AS	1	1	OTHER_USE	0
413	1129	8	MathUtils.java	lcm	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
414	1159	8	MathUtils.java	lcm	a	long	PARAM_AS	1	1	NO_USE	1
414	1159	8	MathUtils.java	lcm	b	long	PARAM_AS	1	1	NO_USE	1
414	1159	8	MathUtils.java	lcm	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
415	1163	8	MathUtils.java	lcm	lcm	long	abs()	0	1	NO_USE	1
415	1163	8	MathUtils.java	lcm	a	long	PARAM_AS	1	1	OTHER_USE	0
415	1163	8	MathUtils.java	lcm	b	long	PARAM_AS	1	1	OTHER_USE	0
415	1163	8	MathUtils.java	lcm	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
416	1202	8	MathUtils.java	mulAndCheck	m	long	*	0	2	NO_USE	1
416	1202	8	MathUtils.java	mulAndCheck	x	int	PARAM_AS	1	0	NO_USE	0
416	1202	8	MathUtils.java	mulAndCheck	y	int	PARAM_AS	1	0	NO_USE	0
416	1202	8	MathUtils.java	mulAndCheck	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
417	1220	8	MathUtils.java	mulAndCheck	ret	long	UNKNOWN_AS	0	0	NO_USE	0
417	1220	8	MathUtils.java	mulAndCheck	a	long	PARAM_AS	1	6	PARAM_USE	1
417	1220	8	MathUtils.java	mulAndCheck	b	long	PARAM_AS	1	6	PARAM_USE	1
417	1220	8	MathUtils.java	mulAndCheck	THIS	MathUtils	UNKNOWN_AS	0	0	CLALLER_USE	0
418	1224	12	MathUtils.java	mulAndCheck	ret	long	mulAndCheck()	0	0	NO_USE	0
418	1224	12	MathUtils.java	mulAndCheck	a	long	PARAM_AS	1	6	>=	1
418	1224	12	MathUtils.java	mulAndCheck	b	long	PARAM_AS	1	6	<	0
418	1224	12	MathUtils.java	mulAndCheck	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
419	1225	16	MathUtils.java	mulAndCheck	ret	long	mulAndCheck()	0	0	NO_USE	0
419	1225	16	MathUtils.java	mulAndCheck	a	long	PARAM_AS	1	6	>=	0
419	1225	16	MathUtils.java	mulAndCheck	b	long	PARAM_AS	1	6	/	1
419	1225	16	MathUtils.java	mulAndCheck	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
420	1227	20	MathUtils.java	mulAndCheck	ret	long	mulAndCheck()	0	0	NO_USE	0
420	1227	20	MathUtils.java	mulAndCheck	a	long	PARAM_AS	1	6	*	1
420	1227	20	MathUtils.java	mulAndCheck	b	long	PARAM_AS	1	6	*	1
420	1227	20	MathUtils.java	mulAndCheck	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
421	1232	23	MathUtils.java	mulAndCheck	ret	long	*	0	0	NO_USE	0
421	1232	23	MathUtils.java	mulAndCheck	a	long	PARAM_AS	1	6	<=	0
421	1232	23	MathUtils.java	mulAndCheck	b	long	PARAM_AS	1	6	/	1
421	1232	23	MathUtils.java	mulAndCheck	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
422	1234	20	MathUtils.java	mulAndCheck	ret	long	*	0	0	NO_USE	0
422	1234	20	MathUtils.java	mulAndCheck	a	long	PARAM_AS	1	6	*	1
422	1234	20	MathUtils.java	mulAndCheck	b	long	PARAM_AS	1	6	*	1
422	1234	20	MathUtils.java	mulAndCheck	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
423	1244	19	MathUtils.java	mulAndCheck	ret	long	0	0	0	NO_USE	0
423	1244	19	MathUtils.java	mulAndCheck	a	long	PARAM_AS	1	6	<=	1
423	1244	19	MathUtils.java	mulAndCheck	b	long	PARAM_AS	1	6	/	0
423	1244	19	MathUtils.java	mulAndCheck	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
424	1249	16	MathUtils.java	mulAndCheck	ret	long	0	0	0	NO_USE	0
424	1249	16	MathUtils.java	mulAndCheck	a	long	PARAM_AS	1	6	*	1
424	1249	16	MathUtils.java	mulAndCheck	b	long	PARAM_AS	1	6	*	1
424	1249	16	MathUtils.java	mulAndCheck	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
425	1330	9	MathUtils.java	normalizeArray	values	double[]	PARAM_AS	1	3	NO_USE	0
425	1330	9	MathUtils.java	normalizeArray	normalizedSum	double	PARAM_AS	1	2	NO_USE	1
425	1330	9	MathUtils.java	normalizeArray	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
426	1333	9	MathUtils.java	normalizeArray	values	double[]	PARAM_AS	1	3	NO_USE	0
426	1333	9	MathUtils.java	normalizeArray	normalizedSum	double	PARAM_AS	1	2	NO_USE	1
426	1333	9	MathUtils.java	normalizeArray	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
427	1340	13	MathUtils.java	normalizeArray	i	int	0	0	2	ARRIDX_USE	1
427	1340	13	MathUtils.java	normalizeArray	sum	double	0d	0	1	NO_USE	0
427	1340	13	MathUtils.java	normalizeArray	len	int	NAME	0	0	NO_USE	0
427	1340	13	MathUtils.java	normalizeArray	out	double[]	ARRAY_CREATION	0	0	NO_USE	0
427	1340	13	MathUtils.java	normalizeArray	values	double[]	PARAM_AS	1	3	ARR_USE	1
427	1340	13	MathUtils.java	normalizeArray	normalizedSum	double	PARAM_AS	1	2	NO_USE	0
427	1340	13	MathUtils.java	normalizeArray	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
428	1343	13	MathUtils.java	normalizeArray	i	int	0	0	2	ARRIDX_USE	1
428	1343	13	MathUtils.java	normalizeArray	sum	double	0d	0	1	NO_USE	0
428	1343	13	MathUtils.java	normalizeArray	len	int	NAME	0	0	NO_USE	0
428	1343	13	MathUtils.java	normalizeArray	out	double[]	ARRAY_CREATION	0	0	NO_USE	0
428	1343	13	MathUtils.java	normalizeArray	values	double[]	PARAM_AS	1	3	ARR_USE	1
428	1343	13	MathUtils.java	normalizeArray	normalizedSum	double	PARAM_AS	1	2	NO_USE	0
428	1343	13	MathUtils.java	normalizeArray	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
429	1347	9	MathUtils.java	normalizeArray	sum	double	ARRAY_ACCESS	0	1	NO_USE	1
429	1347	9	MathUtils.java	normalizeArray	len	int	NAME	0	0	NO_USE	0
429	1347	9	MathUtils.java	normalizeArray	out	double[]	ARRAY_CREATION	0	0	NO_USE	0
429	1347	9	MathUtils.java	normalizeArray	values	double[]	PARAM_AS	1	3	NO_USE	0
429	1347	9	MathUtils.java	normalizeArray	normalizedSum	double	PARAM_AS	1	2	NO_USE	0
429	1347	9	MathUtils.java	normalizeArray	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
430	1351	13	MathUtils.java	normalizeArray	i	int	0	0	1	ARRIDX_USE	1
430	1351	13	MathUtils.java	normalizeArray	sum	double	ARRAY_ACCESS	0	1	/	0
430	1351	13	MathUtils.java	normalizeArray	len	int	NAME	0	0	NO_USE	0
430	1351	13	MathUtils.java	normalizeArray	out	double[]	ARRAY_CREATION	0	0	ARR_USE	0
430	1351	13	MathUtils.java	normalizeArray	values	double[]	PARAM_AS	1	3	ARR_USE	1
430	1351	13	MathUtils.java	normalizeArray	normalizedSum	double	PARAM_AS	1	2	*	0
430	1351	13	MathUtils.java	normalizeArray	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
431	1399	12	MathUtils.java	round	x	double	PARAM_AS	1	1	RET_USE	1
431	1399	12	MathUtils.java	round	scale	int	PARAM_AS	1	0	NO_USE	0
431	1399	12	MathUtils.java	round	roundingMethod	int	PARAM_AS	1	0	NO_USE	0
431	1399	12	MathUtils.java	round	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
432	1455	12	MathUtils.java	roundUnscaled	unscaled	double	PARAM_AS	1	4	PARAM_USE	0
432	1455	12	MathUtils.java	roundUnscaled	sign	double	PARAM_AS	1	2	NO_USE	1
432	1455	12	MathUtils.java	roundUnscaled	roundingMethod	int	PARAM_AS	1	0	NO_USE	0
432	1455	12	MathUtils.java	roundUnscaled	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
433	1465	12	MathUtils.java	roundUnscaled	unscaled	double	floor()	1	4	PARAM_USE	0
433	1465	12	MathUtils.java	roundUnscaled	sign	double	PARAM_AS	1	2	NO_USE	1
433	1465	12	MathUtils.java	roundUnscaled	roundingMethod	int	PARAM_AS	1	0	NO_USE	0
433	1465	12	MathUtils.java	roundUnscaled	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
434	1474	12	MathUtils.java	roundUnscaled	fraction	double	-	0	1	NO_USE	1
434	1474	12	MathUtils.java	roundUnscaled	unscaled	double	nextAfter()	1	4	PARAM_USE	0
434	1474	12	MathUtils.java	roundUnscaled	sign	double	PARAM_AS	1	2	NO_USE	0
434	1474	12	MathUtils.java	roundUnscaled	roundingMethod	int	PARAM_AS	1	0	NO_USE	0
434	1474	12	MathUtils.java	roundUnscaled	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
435	1483	12	MathUtils.java	roundUnscaled	fraction	double	-	0	2	<	1
435	1483	12	MathUtils.java	roundUnscaled	unscaled	double	floor()	1	4	PARAM_USE	0
435	1483	12	MathUtils.java	roundUnscaled	sign	double	PARAM_AS	1	2	NO_USE	0
435	1483	12	MathUtils.java	roundUnscaled	roundingMethod	int	PARAM_AS	1	0	NO_USE	0
435	1483	12	MathUtils.java	roundUnscaled	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
436	1485	19	MathUtils.java	roundUnscaled	fraction	double	-	0	2	NO_USE	1
436	1485	19	MathUtils.java	roundUnscaled	unscaled	double	ceil()	1	4	PARAM_USE	0
436	1485	19	MathUtils.java	roundUnscaled	sign	double	PARAM_AS	1	2	NO_USE	0
436	1485	19	MathUtils.java	roundUnscaled	roundingMethod	int	PARAM_AS	1	0	NO_USE	0
436	1485	19	MathUtils.java	roundUnscaled	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
437	1489	16	MathUtils.java	roundUnscaled	fraction	double	-	0	2	NO_USE	0
437	1489	16	MathUtils.java	roundUnscaled	unscaled	double	floor()	1	4	PARAM_USE	1
437	1489	16	MathUtils.java	roundUnscaled	sign	double	PARAM_AS	1	2	NO_USE	0
437	1489	16	MathUtils.java	roundUnscaled	roundingMethod	int	PARAM_AS	1	0	NO_USE	0
437	1489	16	MathUtils.java	roundUnscaled	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
438	1501	12	MathUtils.java	roundUnscaled	fraction	double	-	0	1	NO_USE	1
438	1501	12	MathUtils.java	roundUnscaled	unscaled	double	nextAfter()	1	4	PARAM_USE	0
438	1501	12	MathUtils.java	roundUnscaled	sign	double	PARAM_AS	1	2	NO_USE	0
438	1501	12	MathUtils.java	roundUnscaled	roundingMethod	int	PARAM_AS	1	0	NO_USE	0
438	1501	12	MathUtils.java	roundUnscaled	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
439	1509	12	MathUtils.java	roundUnscaled	unscaled	double	floor()	1	4	NO_USE	1
439	1509	12	MathUtils.java	roundUnscaled	sign	double	PARAM_AS	1	2	NO_USE	0
439	1509	12	MathUtils.java	roundUnscaled	roundingMethod	int	PARAM_AS	1	0	NO_USE	0
439	1509	12	MathUtils.java	roundUnscaled	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
440	1558	8	MathUtils.java	sign	x	double	PARAM_AS	1	1	NO_USE	1
440	1558	8	MathUtils.java	sign	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
441	1576	8	MathUtils.java	sign	x	float	PARAM_AS	1	1	NO_USE	1
441	1576	8	MathUtils.java	sign	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
442	1644	8	MathUtils.java	subAndCheck	s	long	-	0	2	NO_USE	1
442	1644	8	MathUtils.java	subAndCheck	x	int	PARAM_AS	1	0	OTHER_USE	0
442	1644	8	MathUtils.java	subAndCheck	y	int	PARAM_AS	1	0	OTHER_USE	0
442	1644	8	MathUtils.java	subAndCheck	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
443	1662	8	MathUtils.java	subAndCheck	ret	long	UNKNOWN_AS	0	0	NO_USE	0
443	1662	8	MathUtils.java	subAndCheck	a	long	PARAM_AS	1	1	<	0
443	1662	8	MathUtils.java	subAndCheck	b	long	PARAM_AS	1	1	-	1
443	1662	8	MathUtils.java	subAndCheck	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
444	1663	12	MathUtils.java	subAndCheck	ret	long	UNKNOWN_AS	0	0	NO_USE	0
444	1663	12	MathUtils.java	subAndCheck	a	long	PARAM_AS	1	1	-	1
444	1663	12	MathUtils.java	subAndCheck	b	long	PARAM_AS	1	1	-	0
444	1663	12	MathUtils.java	subAndCheck	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
445	1684	8	MathUtils.java	pow	k	int	PARAM_AS	1	0	NO_USE	0
445	1684	8	MathUtils.java	pow	e	int	PARAM_AS	1	2	OTHER_USE	1
445	1684	8	MathUtils.java	pow	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
446	1691	12	MathUtils.java	pow	result	int	1	0	0	NO_USE	0
446	1691	12	MathUtils.java	pow	k2p	int	NAME	0	0	OTHER_USE	0
446	1691	12	MathUtils.java	pow	k	int	PARAM_AS	1	0	NO_USE	0
446	1691	12	MathUtils.java	pow	e	int	PARAM_AS	1	2	NO_USE	1
446	1691	12	MathUtils.java	pow	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
447	1710	8	MathUtils.java	pow	k	int	PARAM_AS	1	0	NO_USE	0
447	1710	8	MathUtils.java	pow	e	long	PARAM_AS	1	2	OTHER_USE	1
447	1710	8	MathUtils.java	pow	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
448	1717	12	MathUtils.java	pow	result	int	1	0	0	NO_USE	0
448	1717	12	MathUtils.java	pow	k2p	int	NAME	0	0	OTHER_USE	0
448	1717	12	MathUtils.java	pow	k	int	PARAM_AS	1	0	NO_USE	0
448	1717	12	MathUtils.java	pow	e	long	PARAM_AS	1	2	NO_USE	1
448	1717	12	MathUtils.java	pow	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
449	1736	8	MathUtils.java	pow	k	long	PARAM_AS	1	0	NO_USE	0
449	1736	8	MathUtils.java	pow	e	int	PARAM_AS	1	2	OTHER_USE	1
449	1736	8	MathUtils.java	pow	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
450	1743	12	MathUtils.java	pow	result	long	1l	0	0	NO_USE	0
450	1743	12	MathUtils.java	pow	k2p	long	NAME	0	0	OTHER_USE	0
450	1743	12	MathUtils.java	pow	k	long	PARAM_AS	1	0	NO_USE	0
450	1743	12	MathUtils.java	pow	e	int	PARAM_AS	1	2	NO_USE	1
450	1743	12	MathUtils.java	pow	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
451	1762	8	MathUtils.java	pow	k	long	PARAM_AS	1	0	NO_USE	0
451	1762	8	MathUtils.java	pow	e	long	PARAM_AS	1	2	OTHER_USE	1
451	1762	8	MathUtils.java	pow	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
452	1769	12	MathUtils.java	pow	result	long	1l	0	0	NO_USE	0
452	1769	12	MathUtils.java	pow	k2p	long	NAME	0	0	OTHER_USE	0
452	1769	12	MathUtils.java	pow	k	long	PARAM_AS	1	0	NO_USE	0
452	1769	12	MathUtils.java	pow	e	long	PARAM_AS	1	2	NO_USE	1
452	1769	12	MathUtils.java	pow	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
453	1788	8	MathUtils.java	pow	k	BigInteger	PARAM_AS	1	0	NO_USE	0
453	1788	8	MathUtils.java	pow	e	int	PARAM_AS	1	1	OTHER_USE	1
453	1788	8	MathUtils.java	pow	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
454	1804	8	MathUtils.java	pow	k	BigInteger	PARAM_AS	1	0	NO_USE	0
454	1804	8	MathUtils.java	pow	e	long	PARAM_AS	1	2	OTHER_USE	1
454	1804	8	MathUtils.java	pow	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
455	1811	12	MathUtils.java	pow	result	BigInteger	NAME	0	0	CLALLER_USE	0
455	1811	12	MathUtils.java	pow	k2p	BigInteger	NAME	0	0	PARAM_USE	0
455	1811	12	MathUtils.java	pow	k	BigInteger	PARAM_AS	1	0	NO_USE	0
455	1811	12	MathUtils.java	pow	e	long	PARAM_AS	1	2	NO_USE	1
455	1811	12	MathUtils.java	pow	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
456	1831	8	MathUtils.java	pow	k	BigInteger	PARAM_AS	1	0	NO_USE	0
456	1831	8	MathUtils.java	pow	e	BigInteger	PARAM_AS	1	2	OTHER_USE	1
456	1831	8	MathUtils.java	pow	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
457	1838	12	MathUtils.java	pow	result	BigInteger	NAME	0	0	CLALLER_USE	0
457	1838	12	MathUtils.java	pow	k2p	BigInteger	NAME	0	0	PARAM_USE	0
457	1838	12	MathUtils.java	pow	k	BigInteger	PARAM_AS	1	0	NO_USE	0
457	1838	12	MathUtils.java	pow	e	BigInteger	PARAM_AS	1	2	NO_USE	1
457	1838	12	MathUtils.java	pow	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
458	1970	16	MathUtils.java	checkOrder	i	int	1	0	4	ARRIDX_USE	0
458	1970	16	MathUtils.java	checkOrder	previous	double	ARRAY_ACCESS	0	4	<=	0
458	1970	16	MathUtils.java	checkOrder	ok	boolean	LITERAL	0	1	NO_USE	0
458	1970	16	MathUtils.java	checkOrder	max	int	NAME	0	0	NO_USE	0
458	1970	16	MathUtils.java	checkOrder	val	double[]	PARAM_AS	1	4	ARR_USE	0
458	1970	16	MathUtils.java	checkOrder	dir	OrderDirection	PARAM_AS	1	0	NO_USE	0
458	1970	16	MathUtils.java	checkOrder	strict	boolean	PARAM_AS	1	0	NO_USE	1
458	1970	16	MathUtils.java	checkOrder	abort	boolean	PARAM_AS	1	1	NO_USE	0
458	1970	16	MathUtils.java	checkOrder	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
459	1971	20	MathUtils.java	checkOrder	i	int	1	0	4	NO_USE	1
459	1971	20	MathUtils.java	checkOrder	previous	double	ARRAY_ACCESS	0	4	NO_USE	1
459	1971	20	MathUtils.java	checkOrder	ok	boolean	LITERAL	0	1	NO_USE	0
459	1971	20	MathUtils.java	checkOrder	max	int	NAME	0	0	NO_USE	0
459	1971	20	MathUtils.java	checkOrder	val	double[]	PARAM_AS	1	4	NO_USE	1
459	1971	20	MathUtils.java	checkOrder	dir	OrderDirection	PARAM_AS	1	0	NO_USE	0
459	1971	20	MathUtils.java	checkOrder	strict	boolean	PARAM_AS	1	0	NO_USE	0
459	1971	20	MathUtils.java	checkOrder	abort	boolean	PARAM_AS	1	1	NO_USE	0
459	1971	20	MathUtils.java	checkOrder	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
460	1975	20	MathUtils.java	checkOrder	i	int	1	0	4	NO_USE	1
460	1975	20	MathUtils.java	checkOrder	previous	double	ARRAY_ACCESS	0	4	NO_USE	1
460	1975	20	MathUtils.java	checkOrder	ok	boolean	LITERAL	0	1	NO_USE	0
460	1975	20	MathUtils.java	checkOrder	max	int	NAME	0	0	NO_USE	0
460	1975	20	MathUtils.java	checkOrder	val	double[]	PARAM_AS	1	4	NO_USE	1
460	1975	20	MathUtils.java	checkOrder	dir	OrderDirection	PARAM_AS	1	0	NO_USE	0
460	1975	20	MathUtils.java	checkOrder	strict	boolean	PARAM_AS	1	0	NO_USE	0
460	1975	20	MathUtils.java	checkOrder	abort	boolean	PARAM_AS	1	1	NO_USE	0
460	1975	20	MathUtils.java	checkOrder	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
461	1981	16	MathUtils.java	checkOrder	i	int	1	0	4	ARRIDX_USE	0
461	1981	16	MathUtils.java	checkOrder	previous	double	ARRAY_ACCESS	0	4	>=	0
461	1981	16	MathUtils.java	checkOrder	ok	boolean	LITERAL	0	1	NO_USE	0
461	1981	16	MathUtils.java	checkOrder	max	int	NAME	0	0	NO_USE	0
461	1981	16	MathUtils.java	checkOrder	val	double[]	PARAM_AS	1	4	ARR_USE	0
461	1981	16	MathUtils.java	checkOrder	dir	OrderDirection	PARAM_AS	1	0	NO_USE	0
461	1981	16	MathUtils.java	checkOrder	strict	boolean	PARAM_AS	1	0	NO_USE	1
461	1981	16	MathUtils.java	checkOrder	abort	boolean	PARAM_AS	1	1	NO_USE	0
461	1981	16	MathUtils.java	checkOrder	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
462	1982	20	MathUtils.java	checkOrder	i	int	1	0	4	NO_USE	1
462	1982	20	MathUtils.java	checkOrder	previous	double	ARRAY_ACCESS	0	4	NO_USE	1
462	1982	20	MathUtils.java	checkOrder	ok	boolean	LITERAL	0	1	NO_USE	0
462	1982	20	MathUtils.java	checkOrder	max	int	NAME	0	0	NO_USE	0
462	1982	20	MathUtils.java	checkOrder	val	double[]	PARAM_AS	1	4	NO_USE	1
462	1982	20	MathUtils.java	checkOrder	dir	OrderDirection	PARAM_AS	1	0	NO_USE	0
462	1982	20	MathUtils.java	checkOrder	strict	boolean	PARAM_AS	1	0	NO_USE	0
462	1982	20	MathUtils.java	checkOrder	abort	boolean	PARAM_AS	1	1	NO_USE	0
462	1982	20	MathUtils.java	checkOrder	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
463	1986	20	MathUtils.java	checkOrder	i	int	1	0	4	NO_USE	1
463	1986	20	MathUtils.java	checkOrder	previous	double	ARRAY_ACCESS	0	4	NO_USE	1
463	1986	20	MathUtils.java	checkOrder	ok	boolean	LITERAL	0	1	NO_USE	0
463	1986	20	MathUtils.java	checkOrder	max	int	NAME	0	0	NO_USE	0
463	1986	20	MathUtils.java	checkOrder	val	double[]	PARAM_AS	1	4	NO_USE	1
463	1986	20	MathUtils.java	checkOrder	dir	OrderDirection	PARAM_AS	1	0	NO_USE	0
463	1986	20	MathUtils.java	checkOrder	strict	boolean	PARAM_AS	1	0	NO_USE	0
463	1986	20	MathUtils.java	checkOrder	abort	boolean	PARAM_AS	1	1	NO_USE	0
463	1986	20	MathUtils.java	checkOrder	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
464	1996	12	MathUtils.java	checkOrder	i	int	1	0	4	ARRIDX_USE	0
464	1996	12	MathUtils.java	checkOrder	previous	double	ARRAY_ACCESS	0	4	OTHER_USE	0
464	1996	12	MathUtils.java	checkOrder	ok	boolean	LITERAL	0	1	NO_USE	1
464	1996	12	MathUtils.java	checkOrder	max	int	NAME	0	0	NO_USE	0
464	1996	12	MathUtils.java	checkOrder	val	double[]	PARAM_AS	1	4	ARR_USE	0
464	1996	12	MathUtils.java	checkOrder	dir	OrderDirection	PARAM_AS	1	0	OTHER_USE	0
464	1996	12	MathUtils.java	checkOrder	strict	boolean	PARAM_AS	1	0	OTHER_USE	0
464	1996	12	MathUtils.java	checkOrder	abort	boolean	PARAM_AS	1	1	NO_USE	1
464	1996	12	MathUtils.java	checkOrder	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
465	2039	8	MathUtils.java	checkFinite	x	double	PARAM_AS	1	2	OTHER_USE	1
465	2039	8	MathUtils.java	checkFinite	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
466	2054	12	MathUtils.java	checkFinite	x	double	ARRAY_ACCESS	0	2	OTHER_USE	1
466	2054	12	MathUtils.java	checkFinite	i	int	0	0	0	OTHER_USE	0
466	2054	12	MathUtils.java	checkFinite	val	double[]	PARAM_AS	1	0	NO_USE	0
466	2054	12	MathUtils.java	checkFinite	THIS	MathUtils	UNKNOWN_AS	0	0	FIELD_USE	0
467	2132	12	MathUtils.java	safeNorm	xabs	double	abs()	0	6	>	1
467	2132	12	MathUtils.java	safeNorm	i	int	0	0	0	NO_USE	0
467	2132	12	MathUtils.java	safeNorm	rdwarf	double	3.834e-20	0	2	>	1
467	2132	12	MathUtils.java	safeNorm	rgiant	double	1.304e+19	0	0	NO_USE	0
467	2132	12	MathUtils.java	safeNorm	s1	double	0	0	1	*	0
467	2132	12	MathUtils.java	safeNorm	s2	double	0	0	2	NO_USE	0
467	2132	12	MathUtils.java	safeNorm	s3	double	0	0	0	*	0
467	2132	12	MathUtils.java	safeNorm	x1max	double	0	0	1	>	0
467	2132	12	MathUtils.java	safeNorm	x3max	double	0	0	2	>	0
467	2132	12	MathUtils.java	safeNorm	floatn	double	CAST	0	0	NO_USE	0
467	2132	12	MathUtils.java	safeNorm	agiant	double	/	0	1	NO_USE	1
467	2132	12	MathUtils.java	safeNorm	v	double[]	PARAM_AS	1	0	NO_USE	0
467	2132	12	MathUtils.java	safeNorm	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
468	2133	16	MathUtils.java	safeNorm	xabs	double	abs()	0	6	>	1
468	2133	16	MathUtils.java	safeNorm	i	int	0	0	0	NO_USE	0
468	2133	16	MathUtils.java	safeNorm	rdwarf	double	3.834e-20	0	2	NO_USE	1
468	2133	16	MathUtils.java	safeNorm	rgiant	double	1.304e+19	0	0	NO_USE	0
468	2133	16	MathUtils.java	safeNorm	s1	double	0	0	1	*	0
468	2133	16	MathUtils.java	safeNorm	s2	double	0	0	2	NO_USE	0
468	2133	16	MathUtils.java	safeNorm	s3	double	0	0	0	*	0
468	2133	16	MathUtils.java	safeNorm	x1max	double	0	0	1	>	0
468	2133	16	MathUtils.java	safeNorm	x3max	double	0	0	2	>	0
468	2133	16	MathUtils.java	safeNorm	floatn	double	CAST	0	0	NO_USE	0
468	2133	16	MathUtils.java	safeNorm	agiant	double	/	0	1	NO_USE	0
468	2133	16	MathUtils.java	safeNorm	v	double[]	PARAM_AS	1	0	NO_USE	0
468	2133	16	MathUtils.java	safeNorm	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
469	2134	20	MathUtils.java	safeNorm	xabs	double	abs()	0	6	/	1
469	2134	20	MathUtils.java	safeNorm	i	int	0	0	0	NO_USE	0
469	2134	20	MathUtils.java	safeNorm	rdwarf	double	3.834e-20	0	2	NO_USE	0
469	2134	20	MathUtils.java	safeNorm	rgiant	double	1.304e+19	0	0	NO_USE	0
469	2134	20	MathUtils.java	safeNorm	s1	double	0	0	1	*	0
469	2134	20	MathUtils.java	safeNorm	s2	double	0	0	2	NO_USE	0
469	2134	20	MathUtils.java	safeNorm	s3	double	0	0	0	NO_USE	0
469	2134	20	MathUtils.java	safeNorm	x1max	double	0	0	1	/	1
469	2134	20	MathUtils.java	safeNorm	x3max	double	0	0	2	NO_USE	0
469	2134	20	MathUtils.java	safeNorm	floatn	double	CAST	0	0	NO_USE	0
469	2134	20	MathUtils.java	safeNorm	agiant	double	/	0	1	NO_USE	0
469	2134	20	MathUtils.java	safeNorm	v	double[]	PARAM_AS	1	0	NO_USE	0
469	2134	20	MathUtils.java	safeNorm	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
470	2143	20	MathUtils.java	safeNorm	xabs	double	abs()	0	6	/	1
470	2143	20	MathUtils.java	safeNorm	i	int	0	0	0	NO_USE	0
470	2143	20	MathUtils.java	safeNorm	rdwarf	double	3.834e-20	0	2	NO_USE	0
470	2143	20	MathUtils.java	safeNorm	rgiant	double	1.304e+19	0	0	NO_USE	0
470	2143	20	MathUtils.java	safeNorm	s1	double	*	0	1	NO_USE	0
470	2143	20	MathUtils.java	safeNorm	s2	double	0	0	2	NO_USE	0
470	2143	20	MathUtils.java	safeNorm	s3	double	0	0	0	*	0
470	2143	20	MathUtils.java	safeNorm	x1max	double	NAME	0	1	NO_USE	0
470	2143	20	MathUtils.java	safeNorm	x3max	double	0	0	2	/	1
470	2143	20	MathUtils.java	safeNorm	floatn	double	CAST	0	0	NO_USE	0
470	2143	20	MathUtils.java	safeNorm	agiant	double	/	0	1	NO_USE	0
470	2143	20	MathUtils.java	safeNorm	v	double[]	PARAM_AS	1	0	NO_USE	0
470	2143	20	MathUtils.java	safeNorm	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
471	2148	24	MathUtils.java	safeNorm	xabs	double	abs()	0	6	/	1
471	2148	24	MathUtils.java	safeNorm	i	int	0	0	0	NO_USE	0
471	2148	24	MathUtils.java	safeNorm	rdwarf	double	3.834e-20	0	2	NO_USE	0
471	2148	24	MathUtils.java	safeNorm	rgiant	double	1.304e+19	0	0	NO_USE	0
471	2148	24	MathUtils.java	safeNorm	s1	double	*	0	1	NO_USE	0
471	2148	24	MathUtils.java	safeNorm	s2	double	0	0	2	NO_USE	0
471	2148	24	MathUtils.java	safeNorm	s3	double	+	0	0	NO_USE	0
471	2148	24	MathUtils.java	safeNorm	x1max	double	NAME	0	1	NO_USE	0
471	2148	24	MathUtils.java	safeNorm	x3max	double	NAME	0	2	/	0
471	2148	24	MathUtils.java	safeNorm	floatn	double	CAST	0	0	NO_USE	0
471	2148	24	MathUtils.java	safeNorm	agiant	double	/	0	1	NO_USE	0
471	2148	24	MathUtils.java	safeNorm	v	double[]	PARAM_AS	1	0	NO_USE	0
471	2148	24	MathUtils.java	safeNorm	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
472	2159	8	MathUtils.java	safeNorm	rdwarf	double	3.834e-20	0	2	NO_USE	0
472	2159	8	MathUtils.java	safeNorm	rgiant	double	1.304e+19	0	0	NO_USE	0
472	2159	8	MathUtils.java	safeNorm	s1	double	*	0	1	+	1
472	2159	8	MathUtils.java	safeNorm	s2	double	*	0	2	/	0
472	2159	8	MathUtils.java	safeNorm	s3	double	*	0	0	PARAM_USE	0
472	2159	8	MathUtils.java	safeNorm	x1max	double	NAME	0	1	*	0
472	2159	8	MathUtils.java	safeNorm	x3max	double	NAME	0	2	*	0
472	2159	8	MathUtils.java	safeNorm	floatn	double	CAST	0	0	NO_USE	0
472	2159	8	MathUtils.java	safeNorm	agiant	double	/	0	1	NO_USE	0
472	2159	8	MathUtils.java	safeNorm	norm	double	UNKNOWN_AS	0	0	NO_USE	0
472	2159	8	MathUtils.java	safeNorm	v	double[]	PARAM_AS	1	0	NO_USE	0
472	2159	8	MathUtils.java	safeNorm	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
473	2162	12	MathUtils.java	safeNorm	rdwarf	double	3.834e-20	0	2	NO_USE	0
473	2162	12	MathUtils.java	safeNorm	rgiant	double	1.304e+19	0	0	NO_USE	0
473	2162	12	MathUtils.java	safeNorm	s1	double	*	0	1	NO_USE	0
473	2162	12	MathUtils.java	safeNorm	s2	double	*	0	2	>=	1
473	2162	12	MathUtils.java	safeNorm	s3	double	*	0	0	PARAM_USE	0
473	2162	12	MathUtils.java	safeNorm	x1max	double	NAME	0	1	NO_USE	0
473	2162	12	MathUtils.java	safeNorm	x3max	double	NAME	0	2	*	0
473	2162	12	MathUtils.java	safeNorm	floatn	double	CAST	0	0	NO_USE	0
473	2162	12	MathUtils.java	safeNorm	agiant	double	/	0	1	NO_USE	0
473	2162	12	MathUtils.java	safeNorm	norm	double	*	0	0	NO_USE	0
473	2162	12	MathUtils.java	safeNorm	v	double[]	PARAM_AS	1	0	NO_USE	0
473	2162	12	MathUtils.java	safeNorm	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
474	2165	16	MathUtils.java	safeNorm	rdwarf	double	3.834e-20	0	2	NO_USE	0
474	2165	16	MathUtils.java	safeNorm	rgiant	double	1.304e+19	0	0	NO_USE	0
474	2165	16	MathUtils.java	safeNorm	s1	double	*	0	1	NO_USE	0
474	2165	16	MathUtils.java	safeNorm	s2	double	*	0	2	*	1
474	2165	16	MathUtils.java	safeNorm	s3	double	*	0	0	*	0
474	2165	16	MathUtils.java	safeNorm	x1max	double	NAME	0	1	NO_USE	0
474	2165	16	MathUtils.java	safeNorm	x3max	double	NAME	0	2	/	1
474	2165	16	MathUtils.java	safeNorm	floatn	double	CAST	0	0	NO_USE	0
474	2165	16	MathUtils.java	safeNorm	agiant	double	/	0	1	NO_USE	0
474	2165	16	MathUtils.java	safeNorm	norm	double	*	0	0	NO_USE	0
474	2165	16	MathUtils.java	safeNorm	v	double[]	PARAM_AS	1	0	NO_USE	0
474	2165	16	MathUtils.java	safeNorm	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
475	2203	8	MathUtils.java	sortInPlace	x	double[]	PARAM_AS	1	1	NO_USE	1
475	2203	8	MathUtils.java	sortInPlace	dir	OrderDirection	PARAM_AS	1	0	NO_USE	0
475	2203	8	MathUtils.java	sortInPlace	yList	double[]	PARAM_AS	1	1	NO_USE	1
475	2203	8	MathUtils.java	sortInPlace	THIS	MathUtils	UNKNOWN_AS	0	1	NO_USE	0
476	2217	16	MathUtils.java	sortInPlace	y	double[]	ARRAY_ACCESS	0	1	OTHER_USE	1
476	2217	16	MathUtils.java	sortInPlace	j	int	0	0	0	NO_USE	0
476	2217	16	MathUtils.java	sortInPlace	yValues	double[]	ARRAY_CREATION	0	0	NO_USE	0
476	2217	16	MathUtils.java	sortInPlace	i	int	0	0	0	NO_USE	0
476	2217	16	MathUtils.java	sortInPlace	len	int	NAME	0	1	OTHER_USE	1
476	2217	16	MathUtils.java	sortInPlace	list	List<Pair<Double,double[]>>	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
476	2217	16	MathUtils.java	sortInPlace	yListLen	int	NAME	0	0	NO_USE	0
476	2217	16	MathUtils.java	sortInPlace	x	double[]	PARAM_AS	1	1	NO_USE	0
476	2217	16	MathUtils.java	sortInPlace	dir	OrderDirection	PARAM_AS	1	0	NO_USE	0
476	2217	16	MathUtils.java	sortInPlace	yList	double[]	PARAM_AS	1	1	NO_USE	0
476	2217	16	MathUtils.java	sortInPlace	THIS	MathUtils	UNKNOWN_AS	0	1	FIELD_USE	1
477	2318	8	MathUtils.java	checkNotNull	o	Object	PARAM_AS	1	1	NO_USE	1
477	2318	8	MathUtils.java	checkNotNull	pattern	Localizable	PARAM_AS	1	0	OTHER_USE	0
477	2318	8	MathUtils.java	checkNotNull	args	Object	PARAM_AS	1	0	OTHER_USE	0
477	2318	8	MathUtils.java	checkNotNull	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
478	2331	8	MathUtils.java	checkNotNull	o	Object	PARAM_AS	1	1	NO_USE	1
478	2331	8	MathUtils.java	checkNotNull	THIS	MathUtils	UNKNOWN_AS	0	0	NO_USE	0
479	47	8	DefaultTransformer.java	transform	o	Object	PARAM_AS	1	2	NO_USE	1
479	47	8	DefaultTransformer.java	transform	THIS	DefaultTransformer	UNKNOWN_AS	0	0	FIELD_USE	0
480	51	8	DefaultTransformer.java	transform	o	Object	PARAM_AS	1	2	OTHER_USE	1
480	51	8	DefaultTransformer.java	transform	THIS	DefaultTransformer	UNKNOWN_AS	0	0	NO_USE	0
481	66	8	DefaultTransformer.java	equals	other	Object	PARAM_AS	1	2	NO_USE	1
481	66	8	DefaultTransformer.java	equals	THIS	DefaultTransformer	UNKNOWN_AS	0	1	NO_USE	1
482	69	8	DefaultTransformer.java	equals	other	Object	PARAM_AS	1	2	NO_USE	1
482	69	8	DefaultTransformer.java	equals	THIS	DefaultTransformer	UNKNOWN_AS	0	1	NO_USE	0
483	165	8	OpenIntToFieldHashMap.java	computeCapacity	expectedSize	int	PARAM_AS	1	1	NO_USE	1
483	165	8	OpenIntToFieldHashMap.java	computeCapacity	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	0	NO_USE	0
484	170	8	OpenIntToFieldHashMap.java	computeCapacity	capacity	int	CAST	0	1	RET_USE	1
484	170	8	OpenIntToFieldHashMap.java	computeCapacity	powerOfTwo	int	highestOneBit()	0	1	NO_USE	1
484	170	8	OpenIntToFieldHashMap.java	computeCapacity	expectedSize	int	PARAM_AS	1	1	NO_USE	0
484	170	8	OpenIntToFieldHashMap.java	computeCapacity	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	0	NO_USE	0
485	194	8	OpenIntToFieldHashMap.java	get	hash	int	hashOf()	0	0	NO_USE	0
485	194	8	OpenIntToFieldHashMap.java	get	index	int	&	0	3	ARRIDX_USE	1
485	194	8	OpenIntToFieldHashMap.java	get	key	int	PARAM_AS	1	2	NO_USE	1
485	194	8	OpenIntToFieldHashMap.java	get	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	3	FIELD_USE	1
486	198	8	OpenIntToFieldHashMap.java	get	hash	int	hashOf()	0	0	NO_USE	0
486	198	8	OpenIntToFieldHashMap.java	get	index	int	&	0	3	NO_USE	1
486	198	8	OpenIntToFieldHashMap.java	get	key	int	PARAM_AS	1	2	NO_USE	0
486	198	8	OpenIntToFieldHashMap.java	get	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	3	FIELD_USE	1
487	206	12	OpenIntToFieldHashMap.java	get	perturb	int	NAME	0	0	NO_USE	0
487	206	12	OpenIntToFieldHashMap.java	get	hash	int	hashOf()	0	0	NO_USE	0
487	206	12	OpenIntToFieldHashMap.java	get	index	int	&	0	3	ARRIDX_USE	1
487	206	12	OpenIntToFieldHashMap.java	get	j	int	probe()	0	0	NO_USE	0
487	206	12	OpenIntToFieldHashMap.java	get	key	int	PARAM_AS	1	2	NO_USE	1
487	206	12	OpenIntToFieldHashMap.java	get	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	3	FIELD_USE	1
488	224	8	OpenIntToFieldHashMap.java	containsKey	hash	int	hashOf()	0	0	NO_USE	0
488	224	8	OpenIntToFieldHashMap.java	containsKey	index	int	&	0	3	NO_USE	1
488	224	8	OpenIntToFieldHashMap.java	containsKey	key	int	PARAM_AS	1	2	NO_USE	1
488	224	8	OpenIntToFieldHashMap.java	containsKey	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	3	NO_USE	1
489	228	8	OpenIntToFieldHashMap.java	containsKey	hash	int	hashOf()	0	0	NO_USE	0
489	228	8	OpenIntToFieldHashMap.java	containsKey	index	int	&	0	3	NO_USE	1
489	228	8	OpenIntToFieldHashMap.java	containsKey	key	int	PARAM_AS	1	2	NO_USE	0
489	228	8	OpenIntToFieldHashMap.java	containsKey	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	3	NO_USE	1
490	236	12	OpenIntToFieldHashMap.java	containsKey	perturb	int	NAME	0	0	NO_USE	0
490	236	12	OpenIntToFieldHashMap.java	containsKey	hash	int	hashOf()	0	0	NO_USE	0
490	236	12	OpenIntToFieldHashMap.java	containsKey	index	int	&	0	3	NO_USE	1
490	236	12	OpenIntToFieldHashMap.java	containsKey	j	int	probe()	0	0	NO_USE	0
490	236	12	OpenIntToFieldHashMap.java	containsKey	key	int	PARAM_AS	1	2	NO_USE	1
490	236	12	OpenIntToFieldHashMap.java	containsKey	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	3	NO_USE	1
491	286	8	OpenIntToFieldHashMap.java	findInsertionIndex	hash	int	hashOf()	0	0	NO_USE	0
491	286	8	OpenIntToFieldHashMap.java	findInsertionIndex	index	int	&	0	11	RET_USE	1
491	286	8	OpenIntToFieldHashMap.java	findInsertionIndex	keys	int[]	PARAM_AS	1	3	ARR_USE	0
491	286	8	OpenIntToFieldHashMap.java	findInsertionIndex	states	byte[]	PARAM_AS	1	8	ARR_USE	1
491	286	8	OpenIntToFieldHashMap.java	findInsertionIndex	key	int	PARAM_AS	1	3	==	0
491	286	8	OpenIntToFieldHashMap.java	findInsertionIndex	mask	int	PARAM_AS	1	0	NO_USE	0
491	286	8	OpenIntToFieldHashMap.java	findInsertionIndex	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	0	CLALLER_USE	0
492	288	15	OpenIntToFieldHashMap.java	findInsertionIndex	hash	int	hashOf()	0	0	NO_USE	0
492	288	15	OpenIntToFieldHashMap.java	findInsertionIndex	index	int	&	0	11	PARAM_USE	1
492	288	15	OpenIntToFieldHashMap.java	findInsertionIndex	keys	int[]	PARAM_AS	1	3	NO_USE	1
492	288	15	OpenIntToFieldHashMap.java	findInsertionIndex	states	byte[]	PARAM_AS	1	8	NO_USE	1
492	288	15	OpenIntToFieldHashMap.java	findInsertionIndex	key	int	PARAM_AS	1	3	NO_USE	1
492	288	15	OpenIntToFieldHashMap.java	findInsertionIndex	mask	int	PARAM_AS	1	0	NO_USE	0
492	288	15	OpenIntToFieldHashMap.java	findInsertionIndex	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	0	CLALLER_USE	0
493	294	8	OpenIntToFieldHashMap.java	findInsertionIndex	hash	int	hashOf()	0	0	NO_USE	0
493	294	8	OpenIntToFieldHashMap.java	findInsertionIndex	index	int	&	0	11	ARRIDX_USE	1
493	294	8	OpenIntToFieldHashMap.java	findInsertionIndex	perturb	int	perturb()	0	0	PARAM_USE	0
493	294	8	OpenIntToFieldHashMap.java	findInsertionIndex	j	int	NAME	0	0	PARAM_USE	0
493	294	8	OpenIntToFieldHashMap.java	findInsertionIndex	keys	int[]	PARAM_AS	1	3	ARR_USE	0
493	294	8	OpenIntToFieldHashMap.java	findInsertionIndex	states	byte[]	PARAM_AS	1	8	ARR_USE	1
493	294	8	OpenIntToFieldHashMap.java	findInsertionIndex	key	int	PARAM_AS	1	3	==	0
493	294	8	OpenIntToFieldHashMap.java	findInsertionIndex	mask	int	PARAM_AS	1	0	&	0
493	294	8	OpenIntToFieldHashMap.java	findInsertionIndex	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	0	CLALLER_USE	0
494	300	16	OpenIntToFieldHashMap.java	findInsertionIndex	hash	int	hashOf()	0	0	NO_USE	0
494	300	16	OpenIntToFieldHashMap.java	findInsertionIndex	index	int	&	0	11	NO_USE	1
494	300	16	OpenIntToFieldHashMap.java	findInsertionIndex	perturb	int	NAME	0	0	NO_USE	0
494	300	16	OpenIntToFieldHashMap.java	findInsertionIndex	j	int	probe()	0	0	NO_USE	0
494	300	16	OpenIntToFieldHashMap.java	findInsertionIndex	keys	int[]	PARAM_AS	1	3	NO_USE	1
494	300	16	OpenIntToFieldHashMap.java	findInsertionIndex	states	byte[]	PARAM_AS	1	8	NO_USE	1
494	300	16	OpenIntToFieldHashMap.java	findInsertionIndex	key	int	PARAM_AS	1	3	NO_USE	1
494	300	16	OpenIntToFieldHashMap.java	findInsertionIndex	mask	int	PARAM_AS	1	0	NO_USE	0
494	300	16	OpenIntToFieldHashMap.java	findInsertionIndex	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	0	NO_USE	0
495	306	8	OpenIntToFieldHashMap.java	findInsertionIndex	hash	int	hashOf()	0	0	NO_USE	0
495	306	8	OpenIntToFieldHashMap.java	findInsertionIndex	index	int	&	0	11	RET_USE	1
495	306	8	OpenIntToFieldHashMap.java	findInsertionIndex	perturb	int	NAME	0	0	NO_USE	0
495	306	8	OpenIntToFieldHashMap.java	findInsertionIndex	j	int	probe()	0	0	NO_USE	0
495	306	8	OpenIntToFieldHashMap.java	findInsertionIndex	keys	int[]	PARAM_AS	1	3	NO_USE	0
495	306	8	OpenIntToFieldHashMap.java	findInsertionIndex	states	byte[]	PARAM_AS	1	8	ARR_USE	1
495	306	8	OpenIntToFieldHashMap.java	findInsertionIndex	key	int	PARAM_AS	1	3	NO_USE	0
495	306	8	OpenIntToFieldHashMap.java	findInsertionIndex	mask	int	PARAM_AS	1	0	NO_USE	0
495	306	8	OpenIntToFieldHashMap.java	findInsertionIndex	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	0	CLALLER_USE	0
496	308	15	OpenIntToFieldHashMap.java	findInsertionIndex	hash	int	hashOf()	0	0	NO_USE	0
496	308	15	OpenIntToFieldHashMap.java	findInsertionIndex	index	int	&	0	11	PARAM_USE	1
496	308	15	OpenIntToFieldHashMap.java	findInsertionIndex	perturb	int	NAME	0	0	NO_USE	0
496	308	15	OpenIntToFieldHashMap.java	findInsertionIndex	j	int	probe()	0	0	NO_USE	0
496	308	15	OpenIntToFieldHashMap.java	findInsertionIndex	keys	int[]	PARAM_AS	1	3	NO_USE	0
496	308	15	OpenIntToFieldHashMap.java	findInsertionIndex	states	byte[]	PARAM_AS	1	8	NO_USE	1
496	308	15	OpenIntToFieldHashMap.java	findInsertionIndex	key	int	PARAM_AS	1	3	NO_USE	0
496	308	15	OpenIntToFieldHashMap.java	findInsertionIndex	mask	int	PARAM_AS	1	0	NO_USE	0
496	308	15	OpenIntToFieldHashMap.java	findInsertionIndex	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	0	CLALLER_USE	0
497	319	12	OpenIntToFieldHashMap.java	findInsertionIndex	hash	int	hashOf()	0	0	NO_USE	0
497	319	12	OpenIntToFieldHashMap.java	findInsertionIndex	index	int	&	0	11	ARRIDX_USE	1
497	319	12	OpenIntToFieldHashMap.java	findInsertionIndex	perturb	int	NAME	0	0	NO_USE	0
497	319	12	OpenIntToFieldHashMap.java	findInsertionIndex	j	int	probe()	0	0	NO_USE	0
497	319	12	OpenIntToFieldHashMap.java	findInsertionIndex	firstRemoved	int	NAME	0	0	RET_USE	0
497	319	12	OpenIntToFieldHashMap.java	findInsertionIndex	keys	int[]	PARAM_AS	1	3	ARR_USE	0
497	319	12	OpenIntToFieldHashMap.java	findInsertionIndex	states	byte[]	PARAM_AS	1	8	ARR_USE	1
497	319	12	OpenIntToFieldHashMap.java	findInsertionIndex	key	int	PARAM_AS	1	3	==	0
497	319	12	OpenIntToFieldHashMap.java	findInsertionIndex	mask	int	PARAM_AS	1	0	NO_USE	0
497	319	12	OpenIntToFieldHashMap.java	findInsertionIndex	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	0	CLALLER_USE	0
498	321	19	OpenIntToFieldHashMap.java	findInsertionIndex	hash	int	hashOf()	0	0	NO_USE	0
498	321	19	OpenIntToFieldHashMap.java	findInsertionIndex	index	int	&	0	11	PARAM_USE	1
498	321	19	OpenIntToFieldHashMap.java	findInsertionIndex	perturb	int	NAME	0	0	NO_USE	0
498	321	19	OpenIntToFieldHashMap.java	findInsertionIndex	j	int	probe()	0	0	NO_USE	0
498	321	19	OpenIntToFieldHashMap.java	findInsertionIndex	firstRemoved	int	NAME	0	0	NO_USE	0
498	321	19	OpenIntToFieldHashMap.java	findInsertionIndex	keys	int[]	PARAM_AS	1	3	NO_USE	1
498	321	19	OpenIntToFieldHashMap.java	findInsertionIndex	states	byte[]	PARAM_AS	1	8	NO_USE	1
498	321	19	OpenIntToFieldHashMap.java	findInsertionIndex	key	int	PARAM_AS	1	3	NO_USE	1
498	321	19	OpenIntToFieldHashMap.java	findInsertionIndex	mask	int	PARAM_AS	1	0	NO_USE	0
498	321	19	OpenIntToFieldHashMap.java	findInsertionIndex	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	0	CLALLER_USE	0
499	368	8	OpenIntToFieldHashMap.java	remove	hash	int	hashOf()	0	0	NO_USE	0
499	368	8	OpenIntToFieldHashMap.java	remove	index	int	&	0	3	PARAM_USE	1
499	368	8	OpenIntToFieldHashMap.java	remove	key	int	PARAM_AS	1	2	NO_USE	1
499	368	8	OpenIntToFieldHashMap.java	remove	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	3	CLALLER_USE	1
500	372	8	OpenIntToFieldHashMap.java	remove	hash	int	hashOf()	0	0	NO_USE	0
500	372	8	OpenIntToFieldHashMap.java	remove	index	int	&	0	3	NO_USE	1
500	372	8	OpenIntToFieldHashMap.java	remove	key	int	PARAM_AS	1	2	NO_USE	0
500	372	8	OpenIntToFieldHashMap.java	remove	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	3	FIELD_USE	1
501	380	12	OpenIntToFieldHashMap.java	remove	perturb	int	NAME	0	0	NO_USE	0
501	380	12	OpenIntToFieldHashMap.java	remove	hash	int	hashOf()	0	0	NO_USE	0
501	380	12	OpenIntToFieldHashMap.java	remove	index	int	&	0	3	PARAM_USE	1
501	380	12	OpenIntToFieldHashMap.java	remove	j	int	probe()	0	0	NO_USE	0
501	380	12	OpenIntToFieldHashMap.java	remove	key	int	PARAM_AS	1	2	NO_USE	1
501	380	12	OpenIntToFieldHashMap.java	remove	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	3	CLALLER_USE	1
502	425	8	OpenIntToFieldHashMap.java	put	index	int	findInsertionIndex()	0	1	PARAM_USE	1
502	425	8	OpenIntToFieldHashMap.java	put	previous	T	NAME	0	0	NO_USE	0
502	425	8	OpenIntToFieldHashMap.java	put	newMapping	boolean	LITERAL	0	0	NO_USE	0
502	425	8	OpenIntToFieldHashMap.java	put	key	int	PARAM_AS	1	0	NO_USE	0
502	425	8	OpenIntToFieldHashMap.java	put	value	T	PARAM_AS	1	0	NO_USE	0
502	425	8	OpenIntToFieldHashMap.java	put	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	1	CLALLER_USE	0
503	433	8	OpenIntToFieldHashMap.java	put	index	int	NAME	0	1	NO_USE	0
503	433	8	OpenIntToFieldHashMap.java	put	previous	T	ARRAY_ACCESS	0	0	NO_USE	0
503	433	8	OpenIntToFieldHashMap.java	put	newMapping	boolean	LITERAL	0	0	NO_USE	1
503	433	8	OpenIntToFieldHashMap.java	put	key	int	PARAM_AS	1	0	NO_USE	0
503	433	8	OpenIntToFieldHashMap.java	put	value	T	PARAM_AS	1	0	NO_USE	0
503	433	8	OpenIntToFieldHashMap.java	put	THIS	OpenIntToFieldHashMap	NAME	0	1	FIELD_USE	0
504	435	12	OpenIntToFieldHashMap.java	put	index	int	NAME	0	1	NO_USE	0
504	435	12	OpenIntToFieldHashMap.java	put	previous	T	ARRAY_ACCESS	0	0	NO_USE	0
504	435	12	OpenIntToFieldHashMap.java	put	newMapping	boolean	LITERAL	0	0	NO_USE	0
504	435	12	OpenIntToFieldHashMap.java	put	key	int	PARAM_AS	1	0	NO_USE	0
504	435	12	OpenIntToFieldHashMap.java	put	value	T	PARAM_AS	1	0	NO_USE	0
504	435	12	OpenIntToFieldHashMap.java	put	THIS	OpenIntToFieldHashMap	NAME	0	1	CLALLER_USE	1
505	460	12	OpenIntToFieldHashMap.java	growTable	i	int	0	0	1	ARRIDX_USE	1
505	460	12	OpenIntToFieldHashMap.java	growTable	oldLength	int	NAME	0	0	NO_USE	0
505	460	12	OpenIntToFieldHashMap.java	growTable	oldKeys	int[]	NAME	0	0	ARR_USE	0
505	460	12	OpenIntToFieldHashMap.java	growTable	oldValues	T[]	NAME	0	0	ARR_USE	0
505	460	12	OpenIntToFieldHashMap.java	growTable	oldStates	byte[]	NAME	0	1	NO_USE	1
505	460	12	OpenIntToFieldHashMap.java	growTable	newLength	int	*	0	0	NO_USE	0
505	460	12	OpenIntToFieldHashMap.java	growTable	newKeys	int[]	ARRAY_CREATION	0	0	PARAM_USE	0
505	460	12	OpenIntToFieldHashMap.java	growTable	newValues	T[]	buildArray()	0	0	ARR_USE	0
505	460	12	OpenIntToFieldHashMap.java	growTable	newStates	byte[]	ARRAY_CREATION	0	0	PARAM_USE	0
505	460	12	OpenIntToFieldHashMap.java	growTable	newMask	int	-	0	0	PARAM_USE	0
505	460	12	OpenIntToFieldHashMap.java	growTable	THIS	OpenIntToFieldHashMap	UNKNOWN_AS	0	0	CLALLER_USE	0
506	75	8	Characterization.java	add	sub	SubHyperplane<S>	PARAM_AS	1	0	OTHER_USE	0
506	75	8	Characterization.java	add	inside	boolean	PARAM_AS	1	0	NO_USE	1
506	75	8	Characterization.java	add	THIS	Characterization	UNKNOWN_AS	0	2	FIELD_USE	0
507	76	12	Characterization.java	add	sub	SubHyperplane<S>	PARAM_AS	1	0	OTHER_USE	0
507	76	12	Characterization.java	add	inside	boolean	PARAM_AS	1	0	NO_USE	0
507	76	12	Characterization.java	add	THIS	Characterization	UNKNOWN_AS	0	2	FIELD_USE	1
508	82	12	Characterization.java	add	sub	SubHyperplane<S>	PARAM_AS	1	0	OTHER_USE	0
508	82	12	Characterization.java	add	inside	boolean	PARAM_AS	1	0	NO_USE	0
508	82	12	Characterization.java	add	THIS	Characterization	reunite()	0	2	FIELD_USE	1
509	62	8	AVLTree.java	insert	element	T	PARAM_AS	1	1	OTHER_USE	1
509	62	8	AVLTree.java	insert	THIS	AVLTree	UNKNOWN_AS	0	1	FIELD_USE	0
510	63	12	AVLTree.java	insert	element	T	PARAM_AS	1	1	OTHER_USE	0
510	63	12	AVLTree.java	insert	THIS	AVLTree	UNKNOWN_AS	0	1	FIELD_USE	1
511	82	8	AVLTree.java	delete	element	T	PARAM_AS	1	3	PARAM_USE	1
511	82	8	AVLTree.java	delete	THIS	AVLTree	UNKNOWN_AS	0	2	CLALLER_USE	0
512	86	16	AVLTree.java	delete	node	Node	getNext()	0	2	CLALLER_USE	1
512	86	16	AVLTree.java	delete	element	T	PARAM_AS	1	3	PARAM_USE	1
512	86	16	AVLTree.java	delete	THIS	AVLTree	UNKNOWN_AS	0	2	FIELD_USE	1
513	89	23	AVLTree.java	delete	node	Node	getNext()	0	2	NO_USE	1
513	89	23	AVLTree.java	delete	element	T	PARAM_AS	1	3	NO_USE	1
513	89	23	AVLTree.java	delete	THIS	AVLTree	UNKNOWN_AS	0	2	NO_USE	1
514	154	12	AVLTree.java	getNotSmaller	node	Node	NAME	0	3	OTHER_USE	1
514	154	12	AVLTree.java	getNotSmaller	candidate	Node	NULL	0	0	RET_USE	0
514	154	12	AVLTree.java	getNotSmaller	reference	T	PARAM_AS	1	1	NO_USE	1
514	154	12	AVLTree.java	getNotSmaller	THIS	AVLTree	UNKNOWN_AS	0	3	FIELD_USE	1
515	155	16	AVLTree.java	getNotSmaller	node	Node	NAME	0	3	NO_USE	1
515	155	16	AVLTree.java	getNotSmaller	candidate	Node	NULL	0	0	RET_USE	0
515	155	16	AVLTree.java	getNotSmaller	reference	T	PARAM_AS	1	1	NO_USE	0
515	155	16	AVLTree.java	getNotSmaller	THIS	AVLTree	UNKNOWN_AS	0	3	NO_USE	1
516	161	16	AVLTree.java	getNotSmaller	node	Node	NAME	0	3	NO_USE	1
516	161	16	AVLTree.java	getNotSmaller	candidate	Node	NAME	0	0	RET_USE	0
516	161	16	AVLTree.java	getNotSmaller	reference	T	PARAM_AS	1	1	NO_USE	0
516	161	16	AVLTree.java	getNotSmaller	THIS	AVLTree	UNKNOWN_AS	0	3	NO_USE	1
517	185	12	AVLTree.java	getNotLarger	node	Node	NAME	0	3	OTHER_USE	1
517	185	12	AVLTree.java	getNotLarger	candidate	Node	NULL	0	0	RET_USE	0
517	185	12	AVLTree.java	getNotLarger	reference	T	PARAM_AS	1	1	NO_USE	1
517	185	12	AVLTree.java	getNotLarger	THIS	AVLTree	UNKNOWN_AS	0	3	FIELD_USE	1
518	186	16	AVLTree.java	getNotLarger	node	Node	NAME	0	3	NO_USE	1
518	186	16	AVLTree.java	getNotLarger	candidate	Node	NULL	0	0	RET_USE	0
518	186	16	AVLTree.java	getNotLarger	reference	T	PARAM_AS	1	1	NO_USE	0
518	186	16	AVLTree.java	getNotLarger	THIS	AVLTree	UNKNOWN_AS	0	3	NO_USE	1
519	192	16	AVLTree.java	getNotLarger	node	Node	NAME	0	3	NO_USE	1
519	192	16	AVLTree.java	getNotLarger	candidate	Node	NAME	0	0	RET_USE	0
519	192	16	AVLTree.java	getNotLarger	reference	T	PARAM_AS	1	1	NO_USE	0
519	192	16	AVLTree.java	getNotLarger	THIS	AVLTree	UNKNOWN_AS	0	3	NO_USE	1
520	140	12	OrderedTuple.java	OrderedTuple	i	int	0	0	3	ARRIDX_USE	1
520	140	12	OrderedTuple.java	OrderedTuple	msb	int	NAME	0	1	PARAM_USE	0
520	140	12	OrderedTuple.java	OrderedTuple	components	double	PARAM_AS	1	3	ARR_USE	1
520	140	12	OrderedTuple.java	OrderedTuple	THIS	OrderedTuple	LITERAL	0	3	CLALLER_USE	0
521	141	16	OrderedTuple.java	OrderedTuple	i	int	0	0	3	NO_USE	1
521	141	16	OrderedTuple.java	OrderedTuple	msb	int	NAME	0	1	NO_USE	0
521	141	16	OrderedTuple.java	OrderedTuple	components	double	PARAM_AS	1	3	NO_USE	1
521	141	16	OrderedTuple.java	OrderedTuple	THIS	OrderedTuple	LITERAL	0	3	NO_USE	0
522	146	19	OrderedTuple.java	OrderedTuple	i	int	0	0	3	ARRIDX_USE	1
522	146	19	OrderedTuple.java	OrderedTuple	msb	int	NAME	0	1	PARAM_USE	0
522	146	19	OrderedTuple.java	OrderedTuple	components	double	PARAM_AS	1	3	ARR_USE	1
522	146	19	OrderedTuple.java	OrderedTuple	THIS	OrderedTuple	LITERAL	0	3	CLALLER_USE	0
523	151	16	OrderedTuple.java	OrderedTuple	b	long	doubleToLongBits()	0	0	PARAM_USE	0
523	151	16	OrderedTuple.java	OrderedTuple	m	long	mantissa()	0	1	PARAM_USE	1
523	151	16	OrderedTuple.java	OrderedTuple	i	int	0	0	3	NO_USE	0
523	151	16	OrderedTuple.java	OrderedTuple	msb	int	NAME	0	1	PARAM_USE	0
523	151	16	OrderedTuple.java	OrderedTuple	components	double	PARAM_AS	1	3	NO_USE	0
523	151	16	OrderedTuple.java	OrderedTuple	THIS	OrderedTuple	LITERAL	0	3	CLALLER_USE	0
524	159	8	OrderedTuple.java	OrderedTuple	msb	int	max()	0	1	NO_USE	0
524	159	8	OrderedTuple.java	OrderedTuple	components	double	PARAM_AS	1	3	NO_USE	0
524	159	8	OrderedTuple.java	OrderedTuple	THIS	OrderedTuple	min()	0	3	NO_USE	1
525	166	8	OrderedTuple.java	OrderedTuple	msb	int	max()	0	1	+	1
525	166	8	OrderedTuple.java	OrderedTuple	components	double	PARAM_AS	1	3	NO_USE	0
525	166	8	OrderedTuple.java	OrderedTuple	THIS	OrderedTuple	LITERAL	0	3	CLALLER_USE	1
526	187	8	OrderedTuple.java	encode	minOffset	int	PARAM_AS	1	0	NO_USE	0
526	187	8	OrderedTuple.java	encode	THIS	OrderedTuple	%	0	5	NO_USE	1
527	204	16	OrderedTuple.java	encode	vIndex	int	0	0	1	NO_USE	1
527	204	16	OrderedTuple.java	encode	k	int	NAME	0	1	NO_USE	1
527	204	16	OrderedTuple.java	encode	neededBits	int	-	0	0	NO_USE	0
527	204	16	OrderedTuple.java	encode	neededLongs	int	/	0	0	NO_USE	0
527	204	16	OrderedTuple.java	encode	eIndex	int	0	0	0	NO_USE	0
527	204	16	OrderedTuple.java	encode	shift	int	62	0	1	<<	0
527	204	16	OrderedTuple.java	encode	word	long	0x0L	0	0	NO_USE	0
527	204	16	OrderedTuple.java	encode	minOffset	int	PARAM_AS	1	0	NO_USE	0
527	204	16	OrderedTuple.java	encode	THIS	OrderedTuple	ARRAY_CREATION	0	5	NO_USE	1
528	207	16	OrderedTuple.java	encode	vIndex	int	0	0	1	NO_USE	0
528	207	16	OrderedTuple.java	encode	k	int	NAME	0	1	NO_USE	0
528	207	16	OrderedTuple.java	encode	neededBits	int	-	0	0	NO_USE	0
528	207	16	OrderedTuple.java	encode	neededLongs	int	/	0	0	NO_USE	0
528	207	16	OrderedTuple.java	encode	eIndex	int	0	0	0	x++	0
528	207	16	OrderedTuple.java	encode	shift	int	62	0	1	NO_USE	1
528	207	16	OrderedTuple.java	encode	word	long	<<	0	0	OTHER_USE	0
528	207	16	OrderedTuple.java	encode	minOffset	int	PARAM_AS	1	0	NO_USE	0
528	207	16	OrderedTuple.java	encode	THIS	OrderedTuple	ARRAY_CREATION	0	5	FIELD_USE	0
529	248	8	OrderedTuple.java	compareTo	ot	OrderedTuple	PARAM_AS	1	10	OTHER_USE	1
529	248	8	OrderedTuple.java	compareTo	THIS	OrderedTuple	UNKNOWN_AS	0	25	FIELD_USE	1
530	249	12	OrderedTuple.java	compareTo	ot	OrderedTuple	PARAM_AS	1	10	OTHER_USE	0
530	249	12	OrderedTuple.java	compareTo	THIS	OrderedTuple	UNKNOWN_AS	0	25	FIELD_USE	1
531	251	19	OrderedTuple.java	compareTo	ot	OrderedTuple	PARAM_AS	1	10	OTHER_USE	1
531	251	19	OrderedTuple.java	compareTo	THIS	OrderedTuple	UNKNOWN_AS	0	25	FIELD_USE	1
532	253	19	OrderedTuple.java	compareTo	ot	OrderedTuple	PARAM_AS	1	10	OTHER_USE	1
532	253	19	OrderedTuple.java	compareTo	THIS	OrderedTuple	UNKNOWN_AS	0	25	FIELD_USE	1
533	255	19	OrderedTuple.java	compareTo	ot	OrderedTuple	PARAM_AS	1	10	OTHER_USE	1
533	255	19	OrderedTuple.java	compareTo	THIS	OrderedTuple	UNKNOWN_AS	0	25	FIELD_USE	1
534	259	16	OrderedTuple.java	compareTo	ot	OrderedTuple	PARAM_AS	1	10	OTHER_USE	1
534	259	16	OrderedTuple.java	compareTo	THIS	OrderedTuple	UNKNOWN_AS	0	25	CLALLER_USE	1
535	261	23	OrderedTuple.java	compareTo	ot	OrderedTuple	PARAM_AS	1	10	CLALLER_USE	1
535	261	23	OrderedTuple.java	compareTo	THIS	OrderedTuple	UNKNOWN_AS	0	25	FIELD_USE	1
536	267	20	OrderedTuple.java	compareTo	i	int	0	0	4	ARRIDX_USE	1
536	267	20	OrderedTuple.java	compareTo	limit	int	min()	0	0	NO_USE	0
536	267	20	OrderedTuple.java	compareTo	ot	OrderedTuple	PARAM_AS	1	10	OTHER_USE	1
536	267	20	OrderedTuple.java	compareTo	THIS	OrderedTuple	UNKNOWN_AS	0	25	FIELD_USE	1
537	269	27	OrderedTuple.java	compareTo	i	int	0	0	4	NO_USE	1
537	269	27	OrderedTuple.java	compareTo	limit	int	min()	0	0	NO_USE	0
537	269	27	OrderedTuple.java	compareTo	ot	OrderedTuple	PARAM_AS	1	10	NO_USE	1
537	269	27	OrderedTuple.java	compareTo	THIS	OrderedTuple	UNKNOWN_AS	0	25	NO_USE	1
538	274	16	OrderedTuple.java	compareTo	limit	int	min()	0	0	NO_USE	0
538	274	16	OrderedTuple.java	compareTo	ot	OrderedTuple	PARAM_AS	1	10	OTHER_USE	1
538	274	16	OrderedTuple.java	compareTo	THIS	OrderedTuple	UNKNOWN_AS	0	25	FIELD_USE	1
539	276	23	OrderedTuple.java	compareTo	limit	int	min()	0	0	NO_USE	0
539	276	23	OrderedTuple.java	compareTo	ot	OrderedTuple	PARAM_AS	1	10	NO_USE	1
539	276	23	OrderedTuple.java	compareTo	THIS	OrderedTuple	UNKNOWN_AS	0	25	NO_USE	1
540	292	8	OrderedTuple.java	equals	other	Object	PARAM_AS	1	2	OTHER_USE	1
540	292	8	OrderedTuple.java	equals	THIS	OrderedTuple	UNKNOWN_AS	0	1	CLALLER_USE	1
541	294	15	OrderedTuple.java	equals	other	Object	PARAM_AS	1	2	OTHER_USE	1
541	294	15	OrderedTuple.java	equals	THIS	OrderedTuple	UNKNOWN_AS	0	1	CLALLER_USE	0
542	359	12	OrderedTuple.java	computeMSB	ll	long	NAME	0	2	>>	1
542	359	12	OrderedTuple.java	computeMSB	mask	long	0xffffffffL	0	1	NO_USE	1
542	359	12	OrderedTuple.java	computeMSB	scale	int	32	0	0	OTHER_USE	0
542	359	12	OrderedTuple.java	computeMSB	msb	int	0	0	0	NO_USE	0
542	359	12	OrderedTuple.java	computeMSB	l	long	PARAM_AS	1	0	NO_USE	0
542	359	12	OrderedTuple.java	computeMSB	THIS	OrderedTuple	UNKNOWN_AS	0	0	NO_USE	0
543	385	12	OrderedTuple.java	computeLSB	ll	long	NAME	0	2	>>	1
543	385	12	OrderedTuple.java	computeLSB	mask	long	0xffffffff00000000L	0	1	NO_USE	1
543	385	12	OrderedTuple.java	computeLSB	scale	int	32	0	0	OTHER_USE	0
543	385	12	OrderedTuple.java	computeLSB	lsb	int	0	0	0	NO_USE	0
543	385	12	OrderedTuple.java	computeLSB	l	long	PARAM_AS	1	0	NO_USE	0
543	385	12	OrderedTuple.java	computeLSB	THIS	OrderedTuple	UNKNOWN_AS	0	0	NO_USE	0
544	406	8	OrderedTuple.java	getBit	bits	long	doubleToLongBits()	0	0	PARAM_USE	0
544	406	8	OrderedTuple.java	getBit	e	int	exponent()	0	2	+	1
544	406	8	OrderedTuple.java	getBit	i	int	PARAM_AS	1	0	NO_USE	0
544	406	8	OrderedTuple.java	getBit	k	int	PARAM_AS	1	4	==	1
544	406	8	OrderedTuple.java	getBit	THIS	OrderedTuple	UNKNOWN_AS	0	2	FIELD_USE	1
545	408	15	OrderedTuple.java	getBit	bits	long	doubleToLongBits()	0	0	PARAM_USE	0
545	408	15	OrderedTuple.java	getBit	e	int	exponent()	0	2	+	0
545	408	15	OrderedTuple.java	getBit	i	int	PARAM_AS	1	0	NO_USE	0
545	408	15	OrderedTuple.java	getBit	k	int	PARAM_AS	1	4	>	1
545	408	15	OrderedTuple.java	getBit	THIS	OrderedTuple	UNKNOWN_AS	0	2	CLALLER_USE	1
546	410	15	OrderedTuple.java	getBit	bits	long	doubleToLongBits()	0	0	PARAM_USE	0
546	410	15	OrderedTuple.java	getBit	e	int	exponent()	0	2	-	1
546	410	15	OrderedTuple.java	getBit	i	int	PARAM_AS	1	0	NO_USE	0
546	410	15	OrderedTuple.java	getBit	k	int	PARAM_AS	1	4	-	1
546	410	15	OrderedTuple.java	getBit	THIS	OrderedTuple	UNKNOWN_AS	0	2	CLALLER_USE	0
547	90	8	AbstractRegion.java	AbstractRegion	boundary	Collection<SubHyperplane<S>>	PARAM_AS	1	1	PARAM_USE	1
547	90	8	AbstractRegion.java	AbstractRegion	THIS	AbstractRegion	UNKNOWN_AS	0	0	CLALLER_USE	0
548	141	8	AbstractRegion.java	AbstractRegion	hyperplanes	Hyperplane<S>[]	PARAM_AS	1	2	ARR_USE	1
548	141	8	AbstractRegion.java	AbstractRegion	THIS	AbstractRegion	UNKNOWN_AS	0	1	FIELD_USE	1
549	152	16	AbstractRegion.java	AbstractRegion	node	BSPTree<S>	NAME	0	1	CLALLER_USE	1
549	152	16	AbstractRegion.java	AbstractRegion	hyperplanes	Hyperplane<S>[]	PARAM_AS	1	2	NO_USE	0
549	152	16	AbstractRegion.java	AbstractRegion	THIS	AbstractRegion	getTree()	0	1	NO_USE	1
550	181	12	AbstractRegion.java	insertCuts	iterator	Iterator<SubHyperplane<S>>	iterator()	0	1	NO_USE	0
550	181	12	AbstractRegion.java	insertCuts	inserted	Hyperplane<S>	getHyperplane()	0	1	NO_USE	1
550	181	12	AbstractRegion.java	insertCuts	node	BSPTree<S>	PARAM_AS	1	1	NO_USE	1
550	181	12	AbstractRegion.java	insertCuts	boundary	Collection<SubHyperplane<S>>	PARAM_AS	1	0	NO_USE	0
550	181	12	AbstractRegion.java	insertCuts	THIS	AbstractRegion	UNKNOWN_AS	0	0	NO_USE	0
551	186	8	AbstractRegion.java	insertCuts	iterator	Iterator<SubHyperplane<S>>	iterator()	0	1	NO_USE	1
551	186	8	AbstractRegion.java	insertCuts	inserted	Hyperplane<S>	NULL	0	1	NO_USE	0
551	186	8	AbstractRegion.java	insertCuts	node	BSPTree<S>	PARAM_AS	1	1	NO_USE	0
551	186	8	AbstractRegion.java	insertCuts	boundary	Collection<SubHyperplane<S>>	PARAM_AS	1	0	NO_USE	0
551	186	8	AbstractRegion.java	insertCuts	THIS	AbstractRegion	UNKNOWN_AS	0	0	NO_USE	0
552	235	8	AbstractRegion.java	isEmpty	node	BSPTree<S>	PARAM_AS	1	1	CLALLER_USE	1
552	235	8	AbstractRegion.java	isEmpty	THIS	AbstractRegion	UNKNOWN_AS	0	0	NO_USE	0
553	264	8	AbstractRegion.java	checkPoint	cell	BSPTree<S>	getCell()	0	1	CLALLER_USE	1
553	264	8	AbstractRegion.java	checkPoint	node	BSPTree<S>	PARAM_AS	1	0	NO_USE	0
553	264	8	AbstractRegion.java	checkPoint	point	Vector<S>	PARAM_AS	1	0	NO_USE	0
553	264	8	AbstractRegion.java	checkPoint	THIS	AbstractRegion	UNKNOWN_AS	0	0	FIELD_USE	0
554	278	8	AbstractRegion.java	getTree	includeBoundaryAttributes	boolean	PARAM_AS	1	1	NO_USE	1
554	278	8	AbstractRegion.java	getTree	THIS	AbstractRegion	UNKNOWN_AS	0	2	CLALLER_USE	1
555	289	8	AbstractRegion.java	recurseBuildBoundary	node	BSPTree<S>	PARAM_AS	1	1	CLALLER_USE	1
555	289	8	AbstractRegion.java	recurseBuildBoundary	THIS	AbstractRegion	UNKNOWN_AS	0	0	CLALLER_USE	0
556	299	12	AbstractRegion.java	recurseBuildBoundary	plusOutside	SubHyperplane<S>	NULL	0	0	NO_USE	0
556	299	12	AbstractRegion.java	recurseBuildBoundary	plusInside	SubHyperplane<S>	NULL	0	0	NO_USE	0
556	299	12	AbstractRegion.java	recurseBuildBoundary	plusChar	Characterization<S>	CLASS_INSTANCE_CREATION	0	2	CLALLER_USE	1
556	299	12	AbstractRegion.java	recurseBuildBoundary	node	BSPTree<S>	PARAM_AS	1	1	CLALLER_USE	0
556	299	12	AbstractRegion.java	recurseBuildBoundary	THIS	AbstractRegion	UNKNOWN_AS	0	0	CLALLER_USE	0
557	306	16	AbstractRegion.java	recurseBuildBoundary	minusChar	Characterization<S>	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	1
557	306	16	AbstractRegion.java	recurseBuildBoundary	plusOutside	SubHyperplane<S>	NULL	0	0	NO_USE	0
557	306	16	AbstractRegion.java	recurseBuildBoundary	plusInside	SubHyperplane<S>	NULL	0	0	NO_USE	0
557	306	16	AbstractRegion.java	recurseBuildBoundary	plusChar	Characterization<S>	CLASS_INSTANCE_CREATION	0	2	NO_USE	0
557	306	16	AbstractRegion.java	recurseBuildBoundary	node	BSPTree<S>	PARAM_AS	1	1	NO_USE	0
557	306	16	AbstractRegion.java	recurseBuildBoundary	THIS	AbstractRegion	UNKNOWN_AS	0	0	NO_USE	0
558	311	12	AbstractRegion.java	recurseBuildBoundary	plusOutside	SubHyperplane<S>	getIn()	0	0	NO_USE	0
558	311	12	AbstractRegion.java	recurseBuildBoundary	plusInside	SubHyperplane<S>	NULL	0	0	NO_USE	0
558	311	12	AbstractRegion.java	recurseBuildBoundary	plusChar	Characterization<S>	CLASS_INSTANCE_CREATION	0	2	CLALLER_USE	1
558	311	12	AbstractRegion.java	recurseBuildBoundary	node	BSPTree<S>	PARAM_AS	1	1	CLALLER_USE	0
558	311	12	AbstractRegion.java	recurseBuildBoundary	THIS	AbstractRegion	UNKNOWN_AS	0	0	CLALLER_USE	0
559	318	16	AbstractRegion.java	recurseBuildBoundary	minusChar	Characterization<S>	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	1
559	318	16	AbstractRegion.java	recurseBuildBoundary	plusOutside	SubHyperplane<S>	getIn()	0	0	NO_USE	0
559	318	16	AbstractRegion.java	recurseBuildBoundary	plusInside	SubHyperplane<S>	NULL	0	0	NO_USE	0
559	318	16	AbstractRegion.java	recurseBuildBoundary	plusChar	Characterization<S>	CLASS_INSTANCE_CREATION	0	2	NO_USE	0
559	318	16	AbstractRegion.java	recurseBuildBoundary	node	BSPTree<S>	PARAM_AS	1	1	NO_USE	0
559	318	16	AbstractRegion.java	recurseBuildBoundary	THIS	AbstractRegion	UNKNOWN_AS	0	0	NO_USE	0
560	345	8	AbstractRegion.java	characterize	node	BSPTree<S>	PARAM_AS	1	1	CLALLER_USE	1
560	345	8	AbstractRegion.java	characterize	sub	SubHyperplane<S>	PARAM_AS	1	0	PARAM_USE	0
560	345	8	AbstractRegion.java	characterize	characterization	Characterization<S>	PARAM_AS	1	0	CLALLER_USE	0
560	345	8	AbstractRegion.java	characterize	THIS	AbstractRegion	UNKNOWN_AS	0	0	CLALLER_USE	0
561	379	8	AbstractRegion.java	getSize	THIS	AbstractRegion	UNKNOWN_AS	0	1	CLALLER_USE	1
562	394	8	AbstractRegion.java	getBarycenter	THIS	AbstractRegion	UNKNOWN_AS	0	1	CLALLER_USE	1
563	438	8	AbstractRegion.java	recurseSides	node	BSPTree<S>	PARAM_AS	1	17	CLALLER_USE	1
563	438	8	AbstractRegion.java	recurseSides	sub	SubHyperplane<S>	PARAM_AS	1	3	NO_USE	0
563	438	8	AbstractRegion.java	recurseSides	sides	Sides	PARAM_AS	1	6	CLALLER_USE	0
563	438	8	AbstractRegion.java	recurseSides	THIS	AbstractRegion	UNKNOWN_AS	0	6	NO_USE	0
564	439	12	AbstractRegion.java	recurseSides	node	BSPTree<S>	PARAM_AS	1	17	NO_USE	1
564	439	12	AbstractRegion.java	recurseSides	sub	SubHyperplane<S>	PARAM_AS	1	3	NO_USE	0
564	439	12	AbstractRegion.java	recurseSides	sides	Sides	PARAM_AS	1	6	CLALLER_USE	0
564	439	12	AbstractRegion.java	recurseSides	THIS	AbstractRegion	UNKNOWN_AS	0	6	NO_USE	0
565	451	12	AbstractRegion.java	recurseSides	hyperplane	Hyperplane<S>	getHyperplane()	0	0	NO_USE	0
565	451	12	AbstractRegion.java	recurseSides	node	BSPTree<S>	PARAM_AS	1	17	CLALLER_USE	1
565	451	12	AbstractRegion.java	recurseSides	sub	SubHyperplane<S>	PARAM_AS	1	3	NO_USE	1
565	451	12	AbstractRegion.java	recurseSides	sides	Sides	PARAM_AS	1	6	CLALLER_USE	0
565	451	12	AbstractRegion.java	recurseSides	THIS	AbstractRegion	UNKNOWN_AS	0	6	CLALLER_USE	1
566	452	16	AbstractRegion.java	recurseSides	hyperplane	Hyperplane<S>	getHyperplane()	0	0	NO_USE	0
566	452	16	AbstractRegion.java	recurseSides	node	BSPTree<S>	PARAM_AS	1	17	NO_USE	1
566	452	16	AbstractRegion.java	recurseSides	sub	SubHyperplane<S>	PARAM_AS	1	3	NO_USE	0
566	452	16	AbstractRegion.java	recurseSides	sides	Sides	PARAM_AS	1	6	CLALLER_USE	0
566	452	16	AbstractRegion.java	recurseSides	THIS	AbstractRegion	UNKNOWN_AS	0	6	NO_USE	1
567	456	16	AbstractRegion.java	recurseSides	hyperplane	Hyperplane<S>	getHyperplane()	0	0	NO_USE	0
567	456	16	AbstractRegion.java	recurseSides	node	BSPTree<S>	PARAM_AS	1	17	NO_USE	1
567	456	16	AbstractRegion.java	recurseSides	sub	SubHyperplane<S>	PARAM_AS	1	3	NO_USE	0
567	456	16	AbstractRegion.java	recurseSides	sides	Sides	PARAM_AS	1	6	CLALLER_USE	0
567	456	16	AbstractRegion.java	recurseSides	THIS	AbstractRegion	UNKNOWN_AS	0	6	NO_USE	1
568	460	12	AbstractRegion.java	recurseSides	hyperplane	Hyperplane<S>	getHyperplane()	0	0	NO_USE	0
568	460	12	AbstractRegion.java	recurseSides	node	BSPTree<S>	PARAM_AS	1	17	CLALLER_USE	0
568	460	12	AbstractRegion.java	recurseSides	sub	SubHyperplane<S>	PARAM_AS	1	3	PARAM_USE	0
568	460	12	AbstractRegion.java	recurseSides	sides	Sides	PARAM_AS	1	6	PARAM_USE	1
568	460	12	AbstractRegion.java	recurseSides	THIS	AbstractRegion	UNKNOWN_AS	0	6	CLALLER_USE	0
569	466	12	AbstractRegion.java	recurseSides	hyperplane	Hyperplane<S>	getHyperplane()	0	0	NO_USE	0
569	466	12	AbstractRegion.java	recurseSides	node	BSPTree<S>	PARAM_AS	1	17	CLALLER_USE	1
569	466	12	AbstractRegion.java	recurseSides	sub	SubHyperplane<S>	PARAM_AS	1	3	NO_USE	1
569	466	12	AbstractRegion.java	recurseSides	sides	Sides	PARAM_AS	1	6	CLALLER_USE	0
569	466	12	AbstractRegion.java	recurseSides	THIS	AbstractRegion	UNKNOWN_AS	0	6	CLALLER_USE	1
570	467	16	AbstractRegion.java	recurseSides	hyperplane	Hyperplane<S>	getHyperplane()	0	0	NO_USE	0
570	467	16	AbstractRegion.java	recurseSides	node	BSPTree<S>	PARAM_AS	1	17	NO_USE	1
570	467	16	AbstractRegion.java	recurseSides	sub	SubHyperplane<S>	PARAM_AS	1	3	NO_USE	0
570	467	16	AbstractRegion.java	recurseSides	sides	Sides	PARAM_AS	1	6	CLALLER_USE	0
570	467	16	AbstractRegion.java	recurseSides	THIS	AbstractRegion	UNKNOWN_AS	0	6	NO_USE	1
571	471	16	AbstractRegion.java	recurseSides	hyperplane	Hyperplane<S>	getHyperplane()	0	0	NO_USE	0
571	471	16	AbstractRegion.java	recurseSides	node	BSPTree<S>	PARAM_AS	1	17	NO_USE	1
571	471	16	AbstractRegion.java	recurseSides	sub	SubHyperplane<S>	PARAM_AS	1	3	NO_USE	0
571	471	16	AbstractRegion.java	recurseSides	sides	Sides	PARAM_AS	1	6	CLALLER_USE	0
571	471	16	AbstractRegion.java	recurseSides	THIS	AbstractRegion	UNKNOWN_AS	0	6	NO_USE	1
572	475	12	AbstractRegion.java	recurseSides	hyperplane	Hyperplane<S>	getHyperplane()	0	0	NO_USE	0
572	475	12	AbstractRegion.java	recurseSides	node	BSPTree<S>	PARAM_AS	1	17	CLALLER_USE	0
572	475	12	AbstractRegion.java	recurseSides	sub	SubHyperplane<S>	PARAM_AS	1	3	PARAM_USE	0
572	475	12	AbstractRegion.java	recurseSides	sides	Sides	PARAM_AS	1	6	PARAM_USE	1
572	475	12	AbstractRegion.java	recurseSides	THIS	AbstractRegion	UNKNOWN_AS	0	6	CLALLER_USE	0
573	487	12	AbstractRegion.java	recurseSides	split	SplitSubHyperplane<S>	split()	0	0	CLALLER_USE	0
573	487	12	AbstractRegion.java	recurseSides	hyperplane	Hyperplane<S>	getHyperplane()	0	0	NO_USE	0
573	487	12	AbstractRegion.java	recurseSides	node	BSPTree<S>	PARAM_AS	1	17	CLALLER_USE	0
573	487	12	AbstractRegion.java	recurseSides	sub	SubHyperplane<S>	PARAM_AS	1	3	NO_USE	0
573	487	12	AbstractRegion.java	recurseSides	sides	Sides	PARAM_AS	1	6	PARAM_USE	1
573	487	12	AbstractRegion.java	recurseSides	THIS	AbstractRegion	UNKNOWN_AS	0	6	CLALLER_USE	0
574	493	12	AbstractRegion.java	recurseSides	split	SplitSubHyperplane<S>	split()	0	0	NO_USE	0
574	493	12	AbstractRegion.java	recurseSides	hyperplane	Hyperplane<S>	getHyperplane()	0	0	NO_USE	0
574	493	12	AbstractRegion.java	recurseSides	node	BSPTree<S>	PARAM_AS	1	17	CLALLER_USE	1
574	493	12	AbstractRegion.java	recurseSides	sub	SubHyperplane<S>	PARAM_AS	1	3	NO_USE	1
574	493	12	AbstractRegion.java	recurseSides	sides	Sides	PARAM_AS	1	6	CLALLER_USE	0
574	493	12	AbstractRegion.java	recurseSides	THIS	AbstractRegion	UNKNOWN_AS	0	6	NO_USE	0
575	494	16	AbstractRegion.java	recurseSides	split	SplitSubHyperplane<S>	split()	0	0	NO_USE	0
575	494	16	AbstractRegion.java	recurseSides	hyperplane	Hyperplane<S>	getHyperplane()	0	0	NO_USE	0
575	494	16	AbstractRegion.java	recurseSides	node	BSPTree<S>	PARAM_AS	1	17	NO_USE	1
575	494	16	AbstractRegion.java	recurseSides	sub	SubHyperplane<S>	PARAM_AS	1	3	NO_USE	0
575	494	16	AbstractRegion.java	recurseSides	sides	Sides	PARAM_AS	1	6	CLALLER_USE	0
575	494	16	AbstractRegion.java	recurseSides	THIS	AbstractRegion	UNKNOWN_AS	0	6	NO_USE	0
576	497	16	AbstractRegion.java	recurseSides	split	SplitSubHyperplane<S>	split()	0	0	NO_USE	0
576	497	16	AbstractRegion.java	recurseSides	hyperplane	Hyperplane<S>	getHyperplane()	0	0	NO_USE	0
576	497	16	AbstractRegion.java	recurseSides	node	BSPTree<S>	PARAM_AS	1	17	NO_USE	1
576	497	16	AbstractRegion.java	recurseSides	sub	SubHyperplane<S>	PARAM_AS	1	3	NO_USE	0
576	497	16	AbstractRegion.java	recurseSides	sides	Sides	PARAM_AS	1	6	CLALLER_USE	0
576	497	16	AbstractRegion.java	recurseSides	THIS	AbstractRegion	UNKNOWN_AS	0	6	NO_USE	0
577	501	16	AbstractRegion.java	recurseSides	split	SplitSubHyperplane<S>	split()	0	0	NO_USE	0
577	501	16	AbstractRegion.java	recurseSides	hyperplane	Hyperplane<S>	getHyperplane()	0	0	NO_USE	0
577	501	16	AbstractRegion.java	recurseSides	node	BSPTree<S>	PARAM_AS	1	17	NO_USE	1
577	501	16	AbstractRegion.java	recurseSides	sub	SubHyperplane<S>	PARAM_AS	1	3	NO_USE	0
577	501	16	AbstractRegion.java	recurseSides	sides	Sides	PARAM_AS	1	6	CLALLER_USE	0
577	501	16	AbstractRegion.java	recurseSides	THIS	AbstractRegion	UNKNOWN_AS	0	6	NO_USE	0
578	504	16	AbstractRegion.java	recurseSides	split	SplitSubHyperplane<S>	split()	0	0	NO_USE	0
578	504	16	AbstractRegion.java	recurseSides	hyperplane	Hyperplane<S>	getHyperplane()	0	0	NO_USE	0
578	504	16	AbstractRegion.java	recurseSides	node	BSPTree<S>	PARAM_AS	1	17	NO_USE	1
578	504	16	AbstractRegion.java	recurseSides	sub	SubHyperplane<S>	PARAM_AS	1	3	NO_USE	0
578	504	16	AbstractRegion.java	recurseSides	sides	Sides	PARAM_AS	1	6	CLALLER_USE	0
578	504	16	AbstractRegion.java	recurseSides	THIS	AbstractRegion	UNKNOWN_AS	0	6	NO_USE	0
579	569	8	AbstractRegion.java	recurseIntersection	node	BSPTree<S>	PARAM_AS	1	1	CLALLER_USE	1
579	569	8	AbstractRegion.java	recurseIntersection	sub	SubHyperplane<S>	PARAM_AS	1	0	CLALLER_USE	0
579	569	8	AbstractRegion.java	recurseIntersection	THIS	AbstractRegion	UNKNOWN_AS	0	0	NO_USE	0
580	583	12	AbstractRegion.java	recurseIntersection	split	SplitSubHyperplane<S>	split()	0	0	NO_USE	0
580	583	12	AbstractRegion.java	recurseIntersection	plus	SubHyperplane<S>	recurseIntersection()	0	1	RET_USE	1
580	583	12	AbstractRegion.java	recurseIntersection	minus	SubHyperplane<S>	recurseIntersection()	0	1	RET_USE	0
580	583	12	AbstractRegion.java	recurseIntersection	hyperplane	Hyperplane<S>	getHyperplane()	0	0	NO_USE	0
580	583	12	AbstractRegion.java	recurseIntersection	node	BSPTree<S>	PARAM_AS	1	1	NO_USE	0
580	583	12	AbstractRegion.java	recurseIntersection	sub	SubHyperplane<S>	PARAM_AS	1	0	NO_USE	0
580	583	12	AbstractRegion.java	recurseIntersection	THIS	AbstractRegion	UNKNOWN_AS	0	0	NO_USE	0
581	585	19	AbstractRegion.java	recurseIntersection	split	SplitSubHyperplane<S>	split()	0	0	NO_USE	0
581	585	19	AbstractRegion.java	recurseIntersection	plus	SubHyperplane<S>	recurseIntersection()	0	1	RET_USE	0
581	585	19	AbstractRegion.java	recurseIntersection	minus	SubHyperplane<S>	recurseIntersection()	0	1	PARAM_USE	1
581	585	19	AbstractRegion.java	recurseIntersection	hyperplane	Hyperplane<S>	getHyperplane()	0	0	NO_USE	0
581	585	19	AbstractRegion.java	recurseIntersection	node	BSPTree<S>	PARAM_AS	1	1	NO_USE	0
581	585	19	AbstractRegion.java	recurseIntersection	sub	SubHyperplane<S>	PARAM_AS	1	0	NO_USE	0
581	585	19	AbstractRegion.java	recurseIntersection	THIS	AbstractRegion	UNKNOWN_AS	0	0	NO_USE	0
582	619	8	AbstractRegion.java	recurseTransform	node	BSPTree<S>	PARAM_AS	1	1	CLALLER_USE	1
582	619	8	AbstractRegion.java	recurseTransform	transform	Transform<S,T>	PARAM_AS	1	0	NO_USE	0
582	619	8	AbstractRegion.java	recurseTransform	THIS	AbstractRegion	UNKNOWN_AS	0	0	NO_USE	0
583	626	8	AbstractRegion.java	recurseTransform	sub	SubHyperplane<S>	getCut()	0	0	NO_USE	0
583	626	8	AbstractRegion.java	recurseTransform	tSub	SubHyperplane<S>	applyTransform()	0	0	NO_USE	0
583	626	8	AbstractRegion.java	recurseTransform	attribute	BoundaryAttribute<S>	CAST	0	1	CLALLER_USE	1
583	626	8	AbstractRegion.java	recurseTransform	node	BSPTree<S>	PARAM_AS	1	1	NO_USE	0
583	626	8	AbstractRegion.java	recurseTransform	transform	Transform<S,T>	PARAM_AS	1	0	PARAM_USE	0
583	626	8	AbstractRegion.java	recurseTransform	THIS	AbstractRegion	UNKNOWN_AS	0	0	NO_USE	0
584	47	8	BoundarySizeVisitor.java	visitInternalNode	attribute	BoundaryAttribute<S>	CAST	0	2	CLALLER_USE	1
584	47	8	BoundarySizeVisitor.java	visitInternalNode	node	BSPTree<S>	PARAM_AS	1	0	NO_USE	0
584	47	8	BoundarySizeVisitor.java	visitInternalNode	THIS	BoundarySizeVisitor	UNKNOWN_AS	0	0	NO_USE	0
585	50	8	BoundarySizeVisitor.java	visitInternalNode	attribute	BoundaryAttribute<S>	CAST	0	2	CLALLER_USE	1
585	50	8	BoundarySizeVisitor.java	visitInternalNode	node	BSPTree<S>	PARAM_AS	1	0	NO_USE	0
585	50	8	BoundarySizeVisitor.java	visitInternalNode	THIS	BoundarySizeVisitor	getSize()	0	0	NO_USE	0
586	149	8	BSPTree.java	insertCut	hyperplane	Hyperplane<S>	PARAM_AS	1	0	NO_USE	0
586	149	8	BSPTree.java	insertCut	THIS	BSPTree	UNKNOWN_AS	0	1	FIELD_USE	1
587	155	8	BSPTree.java	insertCut	chopped	SubHyperplane<S>	fitToCell()	0	1	NO_USE	1
587	155	8	BSPTree.java	insertCut	hyperplane	Hyperplane<S>	PARAM_AS	1	0	NO_USE	0
587	155	8	BSPTree.java	insertCut	THIS	BSPTree	NULL	0	1	NO_USE	0
588	180	8	BSPTree.java	copySelf	THIS	BSPTree	UNKNOWN_AS	0	1	FIELD_USE	1
589	241	8	BSPTree.java	visit	visitor	BSPTreeVisitor<S>	PARAM_AS	1	0	CLALLER_USE	0
589	241	8	BSPTree.java	visit	THIS	BSPTree	UNKNOWN_AS	0	1	FIELD_USE	1
590	293	12	BSPTree.java	fitToCell	tree	BSPTree<S>	NAME	0	2	OTHER_USE	1
590	293	12	BSPTree.java	fitToCell	s	SubHyperplane<S>	NAME	0	0	CLALLER_USE	0
590	293	12	BSPTree.java	fitToCell	sub	SubHyperplane<S>	PARAM_AS	1	0	NO_USE	0
590	293	12	BSPTree.java	fitToCell	THIS	BSPTree	UNKNOWN_AS	0	2	FIELD_USE	1
591	311	8	BSPTree.java	getCell	point	Vector<S>	PARAM_AS	1	0	NO_USE	0
591	311	8	BSPTree.java	getCell	THIS	BSPTree	UNKNOWN_AS	0	1	NO_USE	1
592	318	8	BSPTree.java	getCell	offset	double	getOffset()	0	2	<=	1
592	318	8	BSPTree.java	getCell	point	Vector<S>	PARAM_AS	1	0	PARAM_USE	0
592	318	8	BSPTree.java	getCell	THIS	BSPTree	UNKNOWN_AS	0	1	FIELD_USE	0
593	320	15	BSPTree.java	getCell	offset	double	getOffset()	0	2	NO_USE	1
593	320	15	BSPTree.java	getCell	point	Vector<S>	PARAM_AS	1	0	PARAM_USE	0
593	320	15	BSPTree.java	getCell	THIS	BSPTree	UNKNOWN_AS	0	1	FIELD_USE	0
594	335	8	BSPTree.java	condense	THIS	BSPTree	UNKNOWN_AS	0	15	FIELD_USE	1
595	384	8	BSPTree.java	merge	tree	BSPTree<S>	PARAM_AS	1	1	PARAM_USE	0
595	384	8	BSPTree.java	merge	leafMerger	LeafMerger<S>	PARAM_AS	1	0	CLALLER_USE	0
595	384	8	BSPTree.java	merge	parentTree	BSPTree<S>	PARAM_AS	1	1	PARAM_USE	0
595	384	8	BSPTree.java	merge	isPlusChild	boolean	PARAM_AS	1	0	PARAM_USE	0
595	384	8	BSPTree.java	merge	THIS	BSPTree	UNKNOWN_AS	0	3	FIELD_USE	1
596	387	15	BSPTree.java	merge	tree	BSPTree<S>	PARAM_AS	1	1	PARAM_USE	1
596	387	15	BSPTree.java	merge	leafMerger	LeafMerger<S>	PARAM_AS	1	0	CLALLER_USE	0
596	387	15	BSPTree.java	merge	parentTree	BSPTree<S>	PARAM_AS	1	1	PARAM_USE	0
596	387	15	BSPTree.java	merge	isPlusChild	boolean	PARAM_AS	1	0	PARAM_USE	0
596	387	15	BSPTree.java	merge	THIS	BSPTree	UNKNOWN_AS	0	3	FIELD_USE	1
597	393	12	BSPTree.java	merge	merged	BSPTree<S>	split()	0	1	OTHER_USE	0
597	393	12	BSPTree.java	merge	tree	BSPTree<S>	PARAM_AS	1	1	NO_USE	0
597	393	12	BSPTree.java	merge	leafMerger	LeafMerger<S>	PARAM_AS	1	0	NO_USE	0
597	393	12	BSPTree.java	merge	parentTree	BSPTree<S>	PARAM_AS	1	1	OTHER_USE	1
597	393	12	BSPTree.java	merge	isPlusChild	boolean	PARAM_AS	1	0	OTHER_USE	0
597	393	12	BSPTree.java	merge	THIS	BSPTree	UNKNOWN_AS	0	3	FIELD_USE	0
598	395	16	BSPTree.java	merge	merged	BSPTree<S>	NAME	0	1	OTHER_USE	0
598	395	16	BSPTree.java	merge	tree	BSPTree<S>	PARAM_AS	1	1	NO_USE	0
598	395	16	BSPTree.java	merge	leafMerger	LeafMerger<S>	PARAM_AS	1	0	NO_USE	0
598	395	16	BSPTree.java	merge	parentTree	BSPTree<S>	PARAM_AS	1	1	OTHER_USE	0
598	395	16	BSPTree.java	merge	isPlusChild	boolean	PARAM_AS	1	0	NO_USE	1
598	395	16	BSPTree.java	merge	THIS	BSPTree	NAME	0	3	FIELD_USE	0
599	406	12	BSPTree.java	merge	merged	BSPTree<S>	NAME	0	1	OTHER_USE	1
599	406	12	BSPTree.java	merge	tree	BSPTree<S>	PARAM_AS	1	1	NO_USE	0
599	406	12	BSPTree.java	merge	leafMerger	LeafMerger<S>	PARAM_AS	1	0	NO_USE	0
599	406	12	BSPTree.java	merge	parentTree	BSPTree<S>	NAME	1	1	NO_USE	0
599	406	12	BSPTree.java	merge	isPlusChild	boolean	PARAM_AS	1	0	NO_USE	0
599	406	12	BSPTree.java	merge	THIS	BSPTree	NAME	0	3	FIELD_USE	1
600	488	8	BSPTree.java	split	sub	SubHyperplane<S>	PARAM_AS	1	0	OTHER_USE	0
600	488	8	BSPTree.java	split	THIS	BSPTree	UNKNOWN_AS	0	5	CLALLER_USE	1
601	499	12	BSPTree.java	split	split	BSPTree<S>	split()	0	0	OTHER_USE	0
601	499	12	BSPTree.java	split	cHyperplane	Hyperplane<S>	getHyperplane()	0	0	NO_USE	0
601	499	12	BSPTree.java	split	sHyperplane	Hyperplane<S>	getHyperplane()	0	2	NO_USE	1
601	499	12	BSPTree.java	split	sub	SubHyperplane<S>	PARAM_AS	1	0	NO_USE	0
601	499	12	BSPTree.java	split	THIS	BSPTree	UNKNOWN_AS	0	5	FIELD_USE	1
602	515	12	BSPTree.java	split	split	BSPTree<S>	split()	0	0	OTHER_USE	0
602	515	12	BSPTree.java	split	cHyperplane	Hyperplane<S>	getHyperplane()	0	0	NO_USE	0
602	515	12	BSPTree.java	split	sHyperplane	Hyperplane<S>	getHyperplane()	0	2	NO_USE	1
602	515	12	BSPTree.java	split	sub	SubHyperplane<S>	PARAM_AS	1	0	NO_USE	0
602	515	12	BSPTree.java	split	THIS	BSPTree	NAME	0	5	FIELD_USE	1
603	567	8	BSPTree.java	insertInTree	parentTree	BSPTree<S>	PARAM_AS	1	1	OTHER_USE	1
603	567	8	BSPTree.java	insertInTree	isPlusChild	boolean	PARAM_AS	1	0	OTHER_USE	0
603	567	8	BSPTree.java	insertInTree	THIS	BSPTree	NAME	0	3	FIELD_USE	0
604	568	12	BSPTree.java	insertInTree	parentTree	BSPTree<S>	PARAM_AS	1	1	OTHER_USE	0
604	568	12	BSPTree.java	insertInTree	isPlusChild	boolean	PARAM_AS	1	0	NO_USE	1
604	568	12	BSPTree.java	insertInTree	THIS	BSPTree	NAME	0	3	FIELD_USE	0
605	576	8	BSPTree.java	insertInTree	parentTree	BSPTree<S>	OTHERS	1	1	NO_USE	0
605	576	8	BSPTree.java	insertInTree	isPlusChild	boolean	PARAM_AS	1	0	NO_USE	0
605	576	8	BSPTree.java	insertInTree	THIS	BSPTree	OTHERS	0	3	FIELD_USE	1
606	586	16	BSPTree.java	insertInTree	hyperplane	Hyperplane<S>	getHyperplane()	0	0	PARAM_USE	0
606	586	16	BSPTree.java	insertInTree	tree	BSPTree<S>	NAME	0	2	NO_USE	1
606	586	16	BSPTree.java	insertInTree	parentTree	BSPTree<S>	OTHERS	1	1	NO_USE	0
606	586	16	BSPTree.java	insertInTree	isPlusChild	boolean	PARAM_AS	1	0	NO_USE	0
606	586	16	BSPTree.java	insertInTree	THIS	BSPTree	OTHERS	0	3	FIELD_USE	1
607	613	8	BSPTree.java	chopOffMinus	hyperplane	Hyperplane<S>	PARAM_AS	1	0	PARAM_USE	0
607	613	8	BSPTree.java	chopOffMinus	THIS	BSPTree	UNKNOWN_AS	0	1	FIELD_USE	1
608	627	8	BSPTree.java	chopOffPlus	hyperplane	Hyperplane<S>	PARAM_AS	1	0	PARAM_USE	0
608	627	8	BSPTree.java	chopOffPlus	THIS	BSPTree	UNKNOWN_AS	0	1	FIELD_USE	1
609	126	8	AbstractSubHyperplane.java	recurseTransform	node	BSPTree<T>	PARAM_AS	1	1	CLALLER_USE	1
609	126	8	AbstractSubHyperplane.java	recurseTransform	transformed	Hyperplane<S>	PARAM_AS	1	0	NO_USE	0
609	126	8	AbstractSubHyperplane.java	recurseTransform	transform	Transform<S,T>	PARAM_AS	1	0	NO_USE	0
609	126	8	AbstractSubHyperplane.java	recurseTransform	THIS	AbstractSubHyperplane	UNKNOWN_AS	0	0	NO_USE	0
610	133	8	AbstractSubHyperplane.java	recurseTransform	attribute	BoundaryAttribute<T>	CAST	0	1	CLALLER_USE	1
610	133	8	AbstractSubHyperplane.java	recurseTransform	node	BSPTree<T>	PARAM_AS	1	1	NO_USE	0
610	133	8	AbstractSubHyperplane.java	recurseTransform	transformed	Hyperplane<S>	PARAM_AS	1	0	PARAM_USE	0
610	133	8	AbstractSubHyperplane.java	recurseTransform	transform	Transform<S,T>	PARAM_AS	1	0	CLALLER_USE	0
610	133	8	AbstractSubHyperplane.java	recurseTransform	THIS	AbstractSubHyperplane	UNKNOWN_AS	0	0	FIELD_USE	0
611	44	8	RegionFactory.java	buildConvex	hyperplanes	Hyperplane<S>	PARAM_AS	1	2	NO_USE	1
611	44	8	RegionFactory.java	buildConvex	THIS	RegionFactory	UNKNOWN_AS	0	1	NO_USE	1
612	55	12	RegionFactory.java	buildConvex	region	Region<S>	wholeSpace()	0	0	NO_USE	0
612	55	12	RegionFactory.java	buildConvex	node	BSPTree<S>	getTree()	0	1	CLALLER_USE	1
612	55	12	RegionFactory.java	buildConvex	hyperplanes	Hyperplane<S>	PARAM_AS	1	2	NO_USE	0
612	55	12	RegionFactory.java	buildConvex	THIS	RegionFactory	UNKNOWN_AS	0	1	NO_USE	1
613	137	8	RegionFactory.java	recurseComplement	node	BSPTree<S>	PARAM_AS	1	1	CLALLER_USE	1
613	137	8	RegionFactory.java	recurseComplement	THIS	RegionFactory	UNKNOWN_AS	0	0	NO_USE	0
614	143	8	RegionFactory.java	recurseComplement	attribute	BoundaryAttribute<S>	CAST	0	1	CLALLER_USE	1
614	143	8	RegionFactory.java	recurseComplement	node	BSPTree<S>	PARAM_AS	1	1	NO_USE	0
614	143	8	RegionFactory.java	recurseComplement	THIS	RegionFactory	UNKNOWN_AS	0	0	NO_USE	0
615	203	12	VectorFormat.java	format	i	int	0	0	1	NO_USE	1
615	203	12	VectorFormat.java	format	toAppendTo	StringBuffer	PARAM_AS	1	0	CLALLER_USE	0
615	203	12	VectorFormat.java	format	pos	FieldPosition	PARAM_AS	1	0	NO_USE	0
615	203	12	VectorFormat.java	format	coordinates	double	PARAM_AS	1	0	NO_USE	0
615	203	12	VectorFormat.java	format	THIS	VectorFormat	UNKNOWN_AS	0	0	FIELD_USE	0
616	247	8	VectorFormat.java	parseCoordinates	initialIndex	int	getIndex()	0	0	NO_USE	0
616	247	8	VectorFormat.java	parseCoordinates	coordinates	double[]	ARRAY_CREATION	0	0	NO_USE	0
616	247	8	VectorFormat.java	parseCoordinates	dimension	int	PARAM_AS	1	0	NO_USE	0
616	247	8	VectorFormat.java	parseCoordinates	source	String	PARAM_AS	1	3	NO_USE	1
616	247	8	VectorFormat.java	parseCoordinates	pos	ParsePosition	PARAM_AS	1	3	NO_USE	1
616	247	8	VectorFormat.java	parseCoordinates	THIS	VectorFormat	UNKNOWN_AS	0	3	NO_USE	1
617	257	12	VectorFormat.java	parseCoordinates	i	int	0	0	1	NO_USE	1
617	257	12	VectorFormat.java	parseCoordinates	initialIndex	int	getIndex()	0	0	NO_USE	0
617	257	12	VectorFormat.java	parseCoordinates	coordinates	double[]	ARRAY_CREATION	0	0	NO_USE	0
617	257	12	VectorFormat.java	parseCoordinates	dimension	int	PARAM_AS	1	0	NO_USE	0
617	257	12	VectorFormat.java	parseCoordinates	source	String	PARAM_AS	1	3	PARAM_USE	0
617	257	12	VectorFormat.java	parseCoordinates	pos	ParsePosition	PARAM_AS	1	3	PARAM_USE	0
617	257	12	VectorFormat.java	parseCoordinates	THIS	VectorFormat	UNKNOWN_AS	0	3	FIELD_USE	0
618	258	16	VectorFormat.java	parseCoordinates	i	int	0	0	1	NO_USE	0
618	258	16	VectorFormat.java	parseCoordinates	initialIndex	int	getIndex()	0	0	NO_USE	0
618	258	16	VectorFormat.java	parseCoordinates	coordinates	double[]	ARRAY_CREATION	0	0	NO_USE	0
618	258	16	VectorFormat.java	parseCoordinates	dimension	int	PARAM_AS	1	0	NO_USE	0
618	258	16	VectorFormat.java	parseCoordinates	source	String	PARAM_AS	1	3	NO_USE	1
618	258	16	VectorFormat.java	parseCoordinates	pos	ParsePosition	PARAM_AS	1	3	NO_USE	1
618	258	16	VectorFormat.java	parseCoordinates	THIS	VectorFormat	UNKNOWN_AS	0	3	NO_USE	1
619	268	12	VectorFormat.java	parseCoordinates	c	Number	parseNumber()	0	1	NO_USE	1
619	268	12	VectorFormat.java	parseCoordinates	i	int	0	0	1	NO_USE	0
619	268	12	VectorFormat.java	parseCoordinates	initialIndex	int	getIndex()	0	0	PARAM_USE	0
619	268	12	VectorFormat.java	parseCoordinates	coordinates	double[]	ARRAY_CREATION	0	0	NO_USE	0
619	268	12	VectorFormat.java	parseCoordinates	dimension	int	PARAM_AS	1	0	NO_USE	0
619	268	12	VectorFormat.java	parseCoordinates	source	String	PARAM_AS	1	3	NO_USE	0
619	268	12	VectorFormat.java	parseCoordinates	pos	ParsePosition	PARAM_AS	1	3	CLALLER_USE	0
619	268	12	VectorFormat.java	parseCoordinates	THIS	VectorFormat	UNKNOWN_AS	0	3	NO_USE	0
620	282	8	VectorFormat.java	parseCoordinates	initialIndex	int	getIndex()	0	0	NO_USE	0
620	282	8	VectorFormat.java	parseCoordinates	coordinates	double[]	doubleValue()	0	0	NO_USE	0
620	282	8	VectorFormat.java	parseCoordinates	dimension	int	PARAM_AS	1	0	NO_USE	0
620	282	8	VectorFormat.java	parseCoordinates	source	String	PARAM_AS	1	3	NO_USE	1
620	282	8	VectorFormat.java	parseCoordinates	pos	ParsePosition	PARAM_AS	1	3	NO_USE	1
620	282	8	VectorFormat.java	parseCoordinates	THIS	VectorFormat	UNKNOWN_AS	0	3	NO_USE	1
621	58	8	SubPlane.java	side	otherPlane	Plane	CAST	0	1	CLALLER_USE	0
621	58	8	SubPlane.java	side	thisPlane	Plane	CAST	0	0	PARAM_USE	0
621	58	8	SubPlane.java	side	inter	Line	CAST	0	1	NO_USE	1
621	58	8	SubPlane.java	side	hyperplane	Hyperplane<Euclidean3D>	PARAM_AS	1	0	NO_USE	0
621	58	8	SubPlane.java	side	THIS	SubPlane	UNKNOWN_AS	0	0	FIELD_USE	0
622	75	8	SubPlane.java	side	otherPlane	Plane	CAST	0	1	NO_USE	1
622	75	8	SubPlane.java	side	thisPlane	Plane	CAST	0	0	NO_USE	0
622	75	8	SubPlane.java	side	inter	Line	CAST	0	1	NO_USE	0
622	75	8	SubPlane.java	side	p	Vector2D	toSubSpace()	0	0	OTHER_USE	0
622	75	8	SubPlane.java	side	q	Vector2D	toSubSpace()	0	0	OTHER_USE	0
622	75	8	SubPlane.java	side	crossP	Vector3D	crossProduct()	0	1	NO_USE	1
622	75	8	SubPlane.java	side	hyperplane	Hyperplane<Euclidean3D>	PARAM_AS	1	0	NO_USE	0
622	75	8	SubPlane.java	side	THIS	SubPlane	UNKNOWN_AS	0	0	NO_USE	0
623	100	8	SubPlane.java	split	otherPlane	Plane	CAST	0	1	CLALLER_USE	0
623	100	8	SubPlane.java	split	thisPlane	Plane	CAST	0	0	PARAM_USE	0
623	100	8	SubPlane.java	split	inter	Line	CAST	0	1	NO_USE	1
623	100	8	SubPlane.java	split	hyperplane	Hyperplane<Euclidean3D>	PARAM_AS	1	0	NO_USE	0
623	100	8	SubPlane.java	split	THIS	SubPlane	UNKNOWN_AS	0	0	NO_USE	0
624	112	8	SubPlane.java	split	otherPlane	Plane	CAST	0	1	NO_USE	1
624	112	8	SubPlane.java	split	thisPlane	Plane	CAST	0	0	NO_USE	0
624	112	8	SubPlane.java	split	inter	Line	CAST	0	1	NO_USE	0
624	112	8	SubPlane.java	split	p	Vector2D	toSubSpace()	0	0	OTHER_USE	0
624	112	8	SubPlane.java	split	q	Vector2D	toSubSpace()	0	0	OTHER_USE	0
624	112	8	SubPlane.java	split	crossP	Vector3D	crossProduct()	0	1	NO_USE	1
624	112	8	SubPlane.java	split	hyperplane	Hyperplane<Euclidean3D>	PARAM_AS	1	0	NO_USE	0
624	112	8	SubPlane.java	split	THIS	SubPlane	UNKNOWN_AS	0	0	NO_USE	0
625	128	8	Vector3DFormat.java	parse	parsePosition	ParsePosition	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	1
625	128	8	Vector3DFormat.java	parse	result	Vector3D	parse()	0	0	NO_USE	0
625	128	8	Vector3DFormat.java	parse	source	String	PARAM_AS	1	0	OTHER_USE	0
625	128	8	Vector3DFormat.java	parse	THIS	Vector3DFormat	UNKNOWN_AS	0	0	NO_USE	0
626	144	8	Vector3DFormat.java	parse	coordinates	double[]	parseCoordinates()	0	1	NO_USE	1
626	144	8	Vector3DFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
626	144	8	Vector3DFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	NO_USE	0
626	144	8	Vector3DFormat.java	parse	THIS	Vector3DFormat	UNKNOWN_AS	0	0	NO_USE	0
627	136	8	Plane.java	setNormal	norm	double	getNorm()	0	1	NO_USE	1
627	136	8	Plane.java	setNormal	normal	Vector3D	PARAM_AS	1	0	NO_USE	0
627	136	8	Plane.java	setNormal	THIS	Plane	UNKNOWN_AS	0	0	NO_USE	0
628	308	8	Plane.java	intersection	direction	Vector3D	getDirection()	0	0	NO_USE	0
628	308	8	Plane.java	intersection	dot	double	dotProduct()	0	1	NO_USE	1
628	308	8	Plane.java	intersection	line	Line	PARAM_AS	1	0	NO_USE	0
628	308	8	Plane.java	intersection	THIS	Plane	UNKNOWN_AS	0	0	NO_USE	0
629	323	8	Plane.java	intersection	direction	Vector3D	crossProduct()	0	1	NO_USE	1
629	323	8	Plane.java	intersection	other	Plane	PARAM_AS	1	0	NO_USE	0
629	323	8	Plane.java	intersection	THIS	Plane	UNKNOWN_AS	0	0	NO_USE	0
630	360	8	Plane.java	intersection	a1	double	getX()	0	0	NO_USE	0
630	360	8	Plane.java	intersection	b1	double	getY()	0	0	NO_USE	0
630	360	8	Plane.java	intersection	c1	double	getZ()	0	0	NO_USE	0
630	360	8	Plane.java	intersection	d1	double	NAME	0	0	NO_USE	0
630	360	8	Plane.java	intersection	a2	double	getX()	0	0	NO_USE	0
630	360	8	Plane.java	intersection	b2	double	getY()	0	0	NO_USE	0
630	360	8	Plane.java	intersection	c2	double	getZ()	0	0	NO_USE	0
630	360	8	Plane.java	intersection	d2	double	NAME	0	0	NO_USE	0
630	360	8	Plane.java	intersection	a3	double	getX()	0	0	NO_USE	0
630	360	8	Plane.java	intersection	b3	double	getY()	0	0	NO_USE	0
630	360	8	Plane.java	intersection	c3	double	getZ()	0	0	NO_USE	0
630	360	8	Plane.java	intersection	d3	double	NAME	0	0	NO_USE	0
630	360	8	Plane.java	intersection	a23	double	-	0	0	NO_USE	0
630	360	8	Plane.java	intersection	b23	double	-	0	0	NO_USE	0
630	360	8	Plane.java	intersection	c23	double	-	0	0	NO_USE	0
630	360	8	Plane.java	intersection	determinant	double	+	0	1	NO_USE	1
630	360	8	Plane.java	intersection	plane1	Plane	PARAM_AS	1	0	NO_USE	0
630	360	8	Plane.java	intersection	plane2	Plane	PARAM_AS	1	0	NO_USE	0
630	360	8	Plane.java	intersection	plane3	Plane	PARAM_AS	1	0	NO_USE	0
630	360	8	Plane.java	intersection	THIS	Plane	UNKNOWN_AS	0	0	NO_USE	0
631	61	8	Line.java	reset	norm	double	getNorm()	0	1	NO_USE	1
631	61	8	Line.java	reset	p	Vector3D	PARAM_AS	1	0	NO_USE	0
631	61	8	Line.java	reset	dir	Vector3D	PARAM_AS	1	0	NO_USE	0
631	61	8	Line.java	reset	THIS	Line	UNKNOWN_AS	0	0	NO_USE	0
632	151	8	Line.java	distance	normal	Vector3D	crossProduct()	0	1	NO_USE	1
632	151	8	Line.java	distance	line	Line	PARAM_AS	1	0	OTHER_USE	0
632	151	8	Line.java	distance	THIS	Line	UNKNOWN_AS	0	0	CLALLER_USE	0
633	136	4	Rotation.java	Rotation	q0	double	PARAM_AS	1	0	*	0
633	136	4	Rotation.java	Rotation	q1	double	PARAM_AS	1	0	*	0
633	136	4	Rotation.java	Rotation	q2	double	PARAM_AS	1	0	*	0
633	136	4	Rotation.java	Rotation	q3	double	PARAM_AS	1	0	*	0
633	136	4	Rotation.java	Rotation	needsNormalization	boolean	PARAM_AS	1	0	NO_USE	1
633	136	4	Rotation.java	Rotation	THIS	Rotation	UNKNOWN_AS	0	0	NO_USE	0
634	176	4	Rotation.java	Rotation	norm	double	getNorm()	0	1	NO_USE	1
634	176	4	Rotation.java	Rotation	axis	Vector3D	PARAM_AS	1	0	NO_USE	0
634	176	4	Rotation.java	Rotation	angle	double	PARAM_AS	1	0	NO_USE	0
634	176	4	Rotation.java	Rotation	THIS	Rotation	UNKNOWN_AS	0	0	FIELD_USE	0
635	224	4	Rotation.java	Rotation	m	double[][]	PARAM_AS	1	4	OTHER_USE	1
635	224	4	Rotation.java	Rotation	threshold	double	PARAM_AS	1	0	NO_USE	0
635	224	4	Rotation.java	Rotation	THIS	Rotation	UNKNOWN_AS	0	4	FIELD_USE	1
636	238	4	Rotation.java	Rotation	ort	double[][]	orthogonalizeMatrix()	0	0	NO_USE	0
636	238	4	Rotation.java	Rotation	det	double	+	0	1	OTHER_USE	1
636	238	4	Rotation.java	Rotation	m	double[][]	PARAM_AS	1	4	NO_USE	0
636	238	4	Rotation.java	Rotation	threshold	double	PARAM_AS	1	0	NO_USE	0
636	238	4	Rotation.java	Rotation	THIS	Rotation	UNKNOWN_AS	0	4	FIELD_USE	0
637	256	4	Rotation.java	Rotation	ort	double[][]	orthogonalizeMatrix()	0	0	ARR_USE	0
637	256	4	Rotation.java	Rotation	det	double	+	0	1	NO_USE	0
637	256	4	Rotation.java	Rotation	s	double	+	0	3	+	1
637	256	4	Rotation.java	Rotation	m	double[][]	PARAM_AS	1	4	NO_USE	0
637	256	4	Rotation.java	Rotation	threshold	double	PARAM_AS	1	0	NO_USE	0
637	256	4	Rotation.java	Rotation	THIS	Rotation	UNKNOWN_AS	0	4	FIELD_USE	0
638	265	6	Rotation.java	Rotation	ort	double[][]	orthogonalizeMatrix()	0	0	ARR_USE	0
638	265	6	Rotation.java	Rotation	det	double	+	0	1	NO_USE	0
638	265	6	Rotation.java	Rotation	s	double	-	0	3	+	1
638	265	6	Rotation.java	Rotation	m	double[][]	PARAM_AS	1	4	NO_USE	0
638	265	6	Rotation.java	Rotation	threshold	double	PARAM_AS	1	0	NO_USE	0
638	265	6	Rotation.java	Rotation	THIS	Rotation	*	0	4	FIELD_USE	0
639	274	8	Rotation.java	Rotation	ort	double[][]	orthogonalizeMatrix()	0	0	ARR_USE	0
639	274	8	Rotation.java	Rotation	det	double	+	0	1	NO_USE	0
639	274	8	Rotation.java	Rotation	s	double	-	0	3	+	1
639	274	8	Rotation.java	Rotation	m	double[][]	PARAM_AS	1	4	NO_USE	0
639	274	8	Rotation.java	Rotation	threshold	double	PARAM_AS	1	0	NO_USE	0
639	274	8	Rotation.java	Rotation	THIS	Rotation	*	0	4	FIELD_USE	0
640	320	2	Rotation.java	Rotation	u1u1	double	dotProduct()	0	1	NO_USE	1
640	320	2	Rotation.java	Rotation	u2u2	double	dotProduct()	0	1	NO_USE	1
640	320	2	Rotation.java	Rotation	v1v1	double	dotProduct()	0	1	NO_USE	1
640	320	2	Rotation.java	Rotation	v2v2	double	dotProduct()	0	1	NO_USE	1
640	320	2	Rotation.java	Rotation	u1	Vector3D	PARAM_AS	1	0	NO_USE	0
640	320	2	Rotation.java	Rotation	u2	Vector3D	PARAM_AS	1	0	NO_USE	0
640	320	2	Rotation.java	Rotation	v1	Vector3D	PARAM_AS	1	0	NO_USE	0
640	320	2	Rotation.java	Rotation	v2	Vector3D	PARAM_AS	1	0	NO_USE	0
640	320	2	Rotation.java	Rotation	THIS	Rotation	UNKNOWN_AS	0	0	FIELD_USE	0
641	369	2	Rotation.java	Rotation	u1u1	double	dotProduct()	0	1	NO_USE	0
641	369	2	Rotation.java	Rotation	u2u2	double	dotProduct()	0	1	NO_USE	0
641	369	2	Rotation.java	Rotation	v1v1	double	dotProduct()	0	1	NO_USE	0
641	369	2	Rotation.java	Rotation	v2v2	double	dotProduct()	0	1	NO_USE	0
641	369	2	Rotation.java	Rotation	u1x	double	getX()	0	0	*	0
641	369	2	Rotation.java	Rotation	u1y	double	getY()	0	0	*	0
641	369	2	Rotation.java	Rotation	u1z	double	getZ()	0	0	*	0
641	369	2	Rotation.java	Rotation	u2x	double	getX()	0	0	*	0
641	369	2	Rotation.java	Rotation	u2y	double	getY()	0	0	*	0
641	369	2	Rotation.java	Rotation	u2z	double	getZ()	0	0	*	0
641	369	2	Rotation.java	Rotation	coeff	double	sqrt()	0	0	NO_USE	0
641	369	2	Rotation.java	Rotation	v1x	double	*	0	0	NO_USE	0
641	369	2	Rotation.java	Rotation	v1y	double	*	0	0	NO_USE	0
641	369	2	Rotation.java	Rotation	v1z	double	*	0	0	NO_USE	0
641	369	2	Rotation.java	Rotation	u1u2	double	dotProduct()	0	0	NO_USE	0
641	369	2	Rotation.java	Rotation	v1v2	double	dotProduct()	0	0	NO_USE	0
641	369	2	Rotation.java	Rotation	coeffU	double	/	0	0	NO_USE	0
641	369	2	Rotation.java	Rotation	coeffV	double	/	0	0	NO_USE	0
641	369	2	Rotation.java	Rotation	beta	double	sqrt()	0	0	NO_USE	0
641	369	2	Rotation.java	Rotation	alpha	double	-	0	0	NO_USE	0
641	369	2	Rotation.java	Rotation	v2x	double	+	0	0	NO_USE	0
641	369	2	Rotation.java	Rotation	v2y	double	+	0	0	NO_USE	0
641	369	2	Rotation.java	Rotation	v2z	double	+	0	0	NO_USE	0
641	369	2	Rotation.java	Rotation	uRef	Vector3D	NAME	0	0	NO_USE	0
641	369	2	Rotation.java	Rotation	vRef	Vector3D	NAME	0	0	NO_USE	0
641	369	2	Rotation.java	Rotation	dx1	double	-	0	0	*	0
641	369	2	Rotation.java	Rotation	dy1	double	-	0	0	*	0
641	369	2	Rotation.java	Rotation	dz1	double	-	0	0	*	0
641	369	2	Rotation.java	Rotation	dx2	double	-	0	0	*	0
641	369	2	Rotation.java	Rotation	dy2	double	-	0	0	*	0
641	369	2	Rotation.java	Rotation	dz2	double	-	0	0	*	0
641	369	2	Rotation.java	Rotation	k	Vector3D	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
641	369	2	Rotation.java	Rotation	c	double	+	0	3	==	1
641	369	2	Rotation.java	Rotation	u1	Vector3D	PARAM_AS	1	0	PARAM_USE	0
641	369	2	Rotation.java	Rotation	u2	Vector3D	PARAM_AS	1	0	PARAM_USE	0
641	369	2	Rotation.java	Rotation	v1	Vector3D	CLASS_INSTANCE_CREATION	1	0	PARAM_USE	0
641	369	2	Rotation.java	Rotation	v2	Vector3D	CLASS_INSTANCE_CREATION	1	0	PARAM_USE	0
641	369	2	Rotation.java	Rotation	THIS	Rotation	UNKNOWN_AS	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	u3	Vector3D	crossProduct()	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	v3	Vector3D	crossProduct()	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	u3x	double	getX()	0	0	*	0
642	391	4	Rotation.java	Rotation	u3y	double	getY()	0	0	*	0
642	391	4	Rotation.java	Rotation	u3z	double	getZ()	0	0	*	0
642	391	4	Rotation.java	Rotation	v3x	double	getX()	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	v3y	double	getY()	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	v3z	double	getZ()	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	dx3	double	-	0	0	*	0
642	391	4	Rotation.java	Rotation	dy3	double	-	0	0	*	0
642	391	4	Rotation.java	Rotation	dz3	double	-	0	0	*	0
642	391	4	Rotation.java	Rotation	u1u1	double	dotProduct()	0	1	NO_USE	0
642	391	4	Rotation.java	Rotation	u2u2	double	dotProduct()	0	1	NO_USE	0
642	391	4	Rotation.java	Rotation	v1v1	double	dotProduct()	0	1	NO_USE	0
642	391	4	Rotation.java	Rotation	v2v2	double	dotProduct()	0	1	NO_USE	0
642	391	4	Rotation.java	Rotation	u1x	double	getX()	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	u1y	double	getY()	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	u1z	double	getZ()	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	u2x	double	getX()	0	0	*	0
642	391	4	Rotation.java	Rotation	u2y	double	getY()	0	0	*	0
642	391	4	Rotation.java	Rotation	u2z	double	getZ()	0	0	*	0
642	391	4	Rotation.java	Rotation	coeff	double	sqrt()	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	v1x	double	*	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	v1y	double	*	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	v1z	double	*	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	u1u2	double	dotProduct()	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	v1v2	double	dotProduct()	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	coeffU	double	/	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	coeffV	double	/	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	beta	double	sqrt()	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	alpha	double	-	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	v2x	double	+	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	v2y	double	+	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	v2z	double	+	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	uRef	Vector3D	NAME	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	vRef	Vector3D	NAME	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	dx1	double	-	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	dy1	double	-	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	dz1	double	-	0	0	NO_USE	0
642	391	4	Rotation.java	Rotation	dx2	double	-	0	0	*	0
642	391	4	Rotation.java	Rotation	dy2	double	-	0	0	*	0
642	391	4	Rotation.java	Rotation	dz2	double	-	0	0	*	0
642	391	4	Rotation.java	Rotation	k	Vector3D	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
642	391	4	Rotation.java	Rotation	c	double	+	0	3	==	1
642	391	4	Rotation.java	Rotation	u1	Vector3D	PARAM_AS	1	0	NO_USE	0
642	391	4	Rotation.java	Rotation	u2	Vector3D	PARAM_AS	1	0	OTHER_USE	0
642	391	4	Rotation.java	Rotation	v1	Vector3D	CLASS_INSTANCE_CREATION	1	0	NO_USE	0
642	391	4	Rotation.java	Rotation	v2	Vector3D	CLASS_INSTANCE_CREATION	1	0	OTHER_USE	0
642	391	4	Rotation.java	Rotation	THIS	Rotation	UNKNOWN_AS	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	u3	Vector3D	crossProduct()	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	v3	Vector3D	crossProduct()	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	u3x	double	getX()	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	u3y	double	getY()	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	u3z	double	getZ()	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	v3x	double	getX()	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	v3y	double	getY()	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	v3z	double	getZ()	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	dx3	double	-	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	dy3	double	-	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	dz3	double	-	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	u1u1	double	dotProduct()	0	1	NO_USE	0
643	401	6	Rotation.java	Rotation	u2u2	double	dotProduct()	0	1	NO_USE	0
643	401	6	Rotation.java	Rotation	v1v1	double	dotProduct()	0	1	NO_USE	0
643	401	6	Rotation.java	Rotation	v2v2	double	dotProduct()	0	1	NO_USE	0
643	401	6	Rotation.java	Rotation	u1x	double	getX()	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	u1y	double	getY()	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	u1z	double	getZ()	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	u2x	double	getX()	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	u2y	double	getY()	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	u2z	double	getZ()	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	coeff	double	sqrt()	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	v1x	double	*	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	v1y	double	*	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	v1z	double	*	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	u1u2	double	dotProduct()	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	v1v2	double	dotProduct()	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	coeffU	double	/	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	coeffV	double	/	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	beta	double	sqrt()	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	alpha	double	-	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	v2x	double	+	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	v2y	double	+	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	v2z	double	+	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	uRef	Vector3D	NAME	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	vRef	Vector3D	NAME	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	dx1	double	-	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	dy1	double	-	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	dz1	double	-	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	dx2	double	-	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	dy2	double	-	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	dz2	double	-	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	k	Vector3D	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
643	401	6	Rotation.java	Rotation	c	double	+	0	3	NO_USE	1
643	401	6	Rotation.java	Rotation	u1	Vector3D	PARAM_AS	1	0	NO_USE	0
643	401	6	Rotation.java	Rotation	u2	Vector3D	PARAM_AS	1	0	NO_USE	0
643	401	6	Rotation.java	Rotation	v1	Vector3D	CLASS_INSTANCE_CREATION	1	0	NO_USE	0
643	401	6	Rotation.java	Rotation	v2	Vector3D	CLASS_INSTANCE_CREATION	1	0	NO_USE	0
643	401	6	Rotation.java	Rotation	THIS	Rotation	UNKNOWN_AS	0	0	NO_USE	0
644	451	4	Rotation.java	Rotation	normProduct	double	*	0	2	NO_USE	1
644	451	4	Rotation.java	Rotation	u	Vector3D	PARAM_AS	1	0	NO_USE	0
644	451	4	Rotation.java	Rotation	v	Vector3D	PARAM_AS	1	0	NO_USE	0
644	451	4	Rotation.java	Rotation	THIS	Rotation	UNKNOWN_AS	0	0	FIELD_USE	0
645	457	4	Rotation.java	Rotation	normProduct	double	*	0	2	/	1
645	457	4	Rotation.java	Rotation	dot	double	dotProduct()	0	1	/	1
645	457	4	Rotation.java	Rotation	u	Vector3D	PARAM_AS	1	0	CLALLER_USE	0
645	457	4	Rotation.java	Rotation	v	Vector3D	PARAM_AS	1	0	CLALLER_USE	0
645	457	4	Rotation.java	Rotation	THIS	Rotation	UNKNOWN_AS	0	0	FIELD_USE	0
646	553	4	Rotation.java	getAxis	squaredSine	double	+	0	1	PARAM_USE	1
646	553	4	Rotation.java	getAxis	THIS	Rotation	UNKNOWN_AS	0	1	FIELD_USE	0
647	555	11	Rotation.java	getAxis	squaredSine	double	+	0	1	PARAM_USE	0
647	555	11	Rotation.java	getAxis	THIS	Rotation	UNKNOWN_AS	0	1	FIELD_USE	1
648	568	4	Rotation.java	getAngle	THIS	Rotation	UNKNOWN_AS	0	3	FIELD_USE	1
649	570	11	Rotation.java	getAngle	THIS	Rotation	UNKNOWN_AS	0	3	FIELD_USE	1
650	614	4	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	==	1
650	614	4	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	CLALLER_USE	0
651	623	6	Rotation.java	getAngles	v1	Vector3D	applyTo()	0	0	NO_USE	0
651	623	6	Rotation.java	getAngles	v2	Vector3D	applyInverseTo()	0	2	NO_USE	1
651	623	6	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	NO_USE	0
651	623	6	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	NO_USE	0
652	632	11	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	==	1
652	632	11	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	CLALLER_USE	0
653	641	6	Rotation.java	getAngles	v1	Vector3D	applyTo()	0	0	NO_USE	0
653	641	6	Rotation.java	getAngles	v2	Vector3D	applyInverseTo()	0	2	NO_USE	1
653	641	6	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	NO_USE	0
653	641	6	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	NO_USE	0
654	650	11	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	==	1
654	650	11	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	CLALLER_USE	0
655	659	6	Rotation.java	getAngles	v1	Vector3D	applyTo()	0	0	NO_USE	0
655	659	6	Rotation.java	getAngles	v2	Vector3D	applyInverseTo()	0	2	NO_USE	1
655	659	6	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	NO_USE	0
655	659	6	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	NO_USE	0
656	668	11	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	==	1
656	668	11	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	CLALLER_USE	0
657	677	6	Rotation.java	getAngles	v1	Vector3D	applyTo()	0	0	NO_USE	0
657	677	6	Rotation.java	getAngles	v2	Vector3D	applyInverseTo()	0	2	NO_USE	1
657	677	6	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	NO_USE	0
657	677	6	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	NO_USE	0
658	686	11	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	==	1
658	686	11	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	CLALLER_USE	0
659	695	6	Rotation.java	getAngles	v1	Vector3D	applyTo()	0	0	NO_USE	0
659	695	6	Rotation.java	getAngles	v2	Vector3D	applyInverseTo()	0	2	NO_USE	1
659	695	6	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	NO_USE	0
659	695	6	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	NO_USE	0
660	704	11	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	==	1
660	704	11	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	CLALLER_USE	0
661	713	6	Rotation.java	getAngles	v1	Vector3D	applyTo()	0	0	NO_USE	0
661	713	6	Rotation.java	getAngles	v2	Vector3D	applyInverseTo()	0	2	NO_USE	1
661	713	6	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	NO_USE	0
661	713	6	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	NO_USE	0
662	722	11	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	==	1
662	722	11	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	CLALLER_USE	0
663	731	6	Rotation.java	getAngles	v1	Vector3D	applyTo()	0	0	NO_USE	0
663	731	6	Rotation.java	getAngles	v2	Vector3D	applyInverseTo()	0	2	NO_USE	1
663	731	6	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	NO_USE	0
663	731	6	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	NO_USE	0
664	740	11	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	==	1
664	740	11	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	CLALLER_USE	0
665	749	6	Rotation.java	getAngles	v1	Vector3D	applyTo()	0	0	NO_USE	0
665	749	6	Rotation.java	getAngles	v2	Vector3D	applyInverseTo()	0	2	NO_USE	1
665	749	6	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	NO_USE	0
665	749	6	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	NO_USE	0
666	758	11	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	==	1
666	758	11	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	CLALLER_USE	0
667	767	6	Rotation.java	getAngles	v1	Vector3D	applyTo()	0	0	NO_USE	0
667	767	6	Rotation.java	getAngles	v2	Vector3D	applyInverseTo()	0	2	NO_USE	1
667	767	6	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	NO_USE	0
667	767	6	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	NO_USE	0
668	776	11	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	==	1
668	776	11	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	CLALLER_USE	0
669	785	6	Rotation.java	getAngles	v1	Vector3D	applyTo()	0	0	NO_USE	0
669	785	6	Rotation.java	getAngles	v2	Vector3D	applyInverseTo()	0	2	NO_USE	1
669	785	6	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	NO_USE	0
669	785	6	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	NO_USE	0
670	794	11	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	NO_USE	1
670	794	11	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	CLALLER_USE	0
671	803	6	Rotation.java	getAngles	v1	Vector3D	applyTo()	0	0	NO_USE	0
671	803	6	Rotation.java	getAngles	v2	Vector3D	applyInverseTo()	0	2	NO_USE	1
671	803	6	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	NO_USE	0
671	803	6	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	NO_USE	0
672	821	6	Rotation.java	getAngles	v1	Vector3D	applyTo()	0	0	NO_USE	0
672	821	6	Rotation.java	getAngles	v2	Vector3D	applyInverseTo()	0	2	NO_USE	1
672	821	6	Rotation.java	getAngles	order	RotationOrder	PARAM_AS	1	11	NO_USE	0
672	821	6	Rotation.java	getAngles	THIS	Rotation	UNKNOWN_AS	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	mx00	double	+	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	mx10	double	+	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	mx20	double	+	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	mx01	double	+	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	mx11	double	+	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	mx21	double	+	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	mx02	double	+	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	mx12	double	+	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	mx22	double	+	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	corr00	double	-	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	corr01	double	-	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	corr02	double	-	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	corr10	double	-	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	corr11	double	-	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	corr12	double	-	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	corr20	double	-	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	corr21	double	-	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	corr22	double	-	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	m0	double[]	ARRAY_ACCESS	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	m1	double[]	ARRAY_ACCESS	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	m2	double[]	ARRAY_ACCESS	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	x00	double	ARRAY_ACCESS	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	x01	double	ARRAY_ACCESS	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	x02	double	ARRAY_ACCESS	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	x10	double	ARRAY_ACCESS	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	x11	double	ARRAY_ACCESS	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	x12	double	ARRAY_ACCESS	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	x20	double	ARRAY_ACCESS	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	x21	double	ARRAY_ACCESS	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	x22	double	ARRAY_ACCESS	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	fn	double	0	0	1	NO_USE	1
673	1021	6	Rotation.java	orthogonalizeMatrix	fn1	double	+	0	1	NO_USE	1
673	1021	6	Rotation.java	orthogonalizeMatrix	o	double[][]	ARRAY_CREATION	0	0	RET_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	o0	double[]	-	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	o1	double[]	-	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	o2	double[]	-	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	i	int	0	0	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	m	double[][]	PARAM_AS	1	0	NO_USE	0
673	1021	6	Rotation.java	orthogonalizeMatrix	threshold	double	PARAM_AS	1	1	NO_USE	1
673	1021	6	Rotation.java	orthogonalizeMatrix	THIS	Rotation	UNKNOWN_AS	0	0	NO_USE	0
674	273	8	Vector3D.java	normalize	s	double	getNorm()	0	1	NO_USE	1
674	273	8	Vector3D.java	normalize	THIS	Vector3D	UNKNOWN_AS	0	0	FIELD_USE	0
675	297	8	Vector3D.java	orthogonal	threshold	double	*	0	5	NO_USE	1
675	297	8	Vector3D.java	orthogonal	THIS	Vector3D	UNKNOWN_AS	0	4	FIELD_USE	0
676	301	8	Vector3D.java	orthogonal	threshold	double	*	0	5	-x	1
676	301	8	Vector3D.java	orthogonal	THIS	Vector3D	UNKNOWN_AS	0	4	FIELD_USE	1
677	304	15	Vector3D.java	orthogonal	threshold	double	*	0	5	NO_USE	1
677	304	15	Vector3D.java	orthogonal	THIS	Vector3D	UNKNOWN_AS	0	4	FIELD_USE	1
678	327	8	Vector3D.java	angle	normProduct	double	*	0	1	NO_USE	1
678	327	8	Vector3D.java	angle	v1	Vector3D	PARAM_AS	1	0	NO_USE	0
678	327	8	Vector3D.java	angle	v2	Vector3D	PARAM_AS	1	0	NO_USE	0
678	327	8	Vector3D.java	angle	THIS	Vector3D	UNKNOWN_AS	0	0	FIELD_USE	0
679	333	8	Vector3D.java	angle	normProduct	double	*	0	1	/	0
679	333	8	Vector3D.java	angle	dot	double	dotProduct()	0	3	>=	1
679	333	8	Vector3D.java	angle	threshold	double	*	0	2	NO_USE	1
679	333	8	Vector3D.java	angle	v1	Vector3D	PARAM_AS	1	0	PARAM_USE	0
679	333	8	Vector3D.java	angle	v2	Vector3D	PARAM_AS	1	0	PARAM_USE	0
679	333	8	Vector3D.java	angle	THIS	Vector3D	UNKNOWN_AS	0	0	CLALLER_USE	0
680	336	12	Vector3D.java	angle	v3	Vector3D	crossProduct()	0	0	CLALLER_USE	0
680	336	12	Vector3D.java	angle	normProduct	double	*	0	1	/	0
680	336	12	Vector3D.java	angle	dot	double	dotProduct()	0	3	NO_USE	1
680	336	12	Vector3D.java	angle	threshold	double	*	0	2	NO_USE	0
680	336	12	Vector3D.java	angle	v1	Vector3D	PARAM_AS	1	0	NO_USE	0
680	336	12	Vector3D.java	angle	v2	Vector3D	PARAM_AS	1	0	NO_USE	0
680	336	12	Vector3D.java	angle	THIS	Vector3D	UNKNOWN_AS	0	0	NO_USE	0
681	389	8	Vector3D.java	equals	other	Object	PARAM_AS	1	2	NO_USE	1
681	389	8	Vector3D.java	equals	THIS	Vector3D	UNKNOWN_AS	0	1	NO_USE	1
682	393	8	Vector3D.java	equals	other	Object	PARAM_AS	1	2	OTHER_USE	1
682	393	8	Vector3D.java	equals	THIS	Vector3D	UNKNOWN_AS	0	1	CLALLER_USE	0
683	395	12	Vector3D.java	equals	rhs	Vector3D	CAST	0	1	NO_USE	1
683	395	12	Vector3D.java	equals	other	Object	PARAM_AS	1	2	NO_USE	0
683	395	12	Vector3D.java	equals	THIS	Vector3D	UNKNOWN_AS	0	1	CLALLER_USE	0
684	413	8	Vector3D.java	hashCode	THIS	Vector3D	UNKNOWN_AS	0	1	NO_USE	1
685	434	8	Vector3D.java	crossProduct	v3	Vector3D	CAST	0	0	NO_USE	0
685	434	8	Vector3D.java	crossProduct	n1	double	getNormSq()	0	1	NO_USE	1
685	434	8	Vector3D.java	crossProduct	n2	double	getNormSq()	0	1	NO_USE	1
685	434	8	Vector3D.java	crossProduct	v	Vector<Euclidean3D>	PARAM_AS	1	0	NO_USE	0
685	434	8	Vector3D.java	crossProduct	THIS	Vector3D	UNKNOWN_AS	0	0	NO_USE	0
686	77	16	OutlineExtractor.java	getOutline	rawLoop	Vector2D[]	ARRAY_ACCESS	0	2	ARR_USE	1
686	77	16	OutlineExtractor.java	getOutline	end	int	NAME	0	2	-	1
686	77	16	OutlineExtractor.java	getOutline	j	int	0	0	1	OTHER_USE	1
686	77	16	OutlineExtractor.java	getOutline	i	int	0	0	0	NO_USE	0
686	77	16	OutlineExtractor.java	getOutline	projector	BoundaryProjector	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
686	77	16	OutlineExtractor.java	getOutline	projected	PolygonsSet	getProjected()	0	0	NO_USE	0
686	77	16	OutlineExtractor.java	getOutline	outline	Vector2D[][]	getVertices()	0	0	NO_USE	0
686	77	16	OutlineExtractor.java	getOutline	polyhedronsSet	PolyhedronsSet	PARAM_AS	1	0	NO_USE	0
686	77	16	OutlineExtractor.java	getOutline	THIS	OutlineExtractor	UNKNOWN_AS	0	2	NO_USE	1
687	88	12	OutlineExtractor.java	getOutline	rawLoop	Vector2D[]	ARRAY_ACCESS	0	2	PARAM_USE	1
687	88	12	OutlineExtractor.java	getOutline	end	int	NAME	0	2	OTHER_USE	1
687	88	12	OutlineExtractor.java	getOutline	j	int	0	0	1	NO_USE	0
687	88	12	OutlineExtractor.java	getOutline	i	int	0	0	0	ARRIDX_USE	0
687	88	12	OutlineExtractor.java	getOutline	projector	BoundaryProjector	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
687	88	12	OutlineExtractor.java	getOutline	projected	PolygonsSet	getProjected()	0	0	NO_USE	0
687	88	12	OutlineExtractor.java	getOutline	outline	Vector2D[][]	getVertices()	0	0	ARR_USE	0
687	88	12	OutlineExtractor.java	getOutline	polyhedronsSet	PolyhedronsSet	PARAM_AS	1	0	NO_USE	0
687	88	12	OutlineExtractor.java	getOutline	THIS	OutlineExtractor	UNKNOWN_AS	0	2	NO_USE	1
688	118	8	PolyhedronsSet.java	computeGeometricalProperties	THIS	PolyhedronsSet	UNKNOWN_AS	0	1	CLALLER_USE	1
689	216	8	PolyhedronsSet.java	recurseFirstIntersection	cut	SubHyperplane<Euclidean3D>	getCut()	0	1	NO_USE	1
689	216	8	PolyhedronsSet.java	recurseFirstIntersection	node	BSPTree<Euclidean3D>	PARAM_AS	1	0	NO_USE	0
689	216	8	PolyhedronsSet.java	recurseFirstIntersection	point	Vector3D	PARAM_AS	1	0	NO_USE	0
689	216	8	PolyhedronsSet.java	recurseFirstIntersection	line	Line	PARAM_AS	1	0	NO_USE	0
689	216	8	PolyhedronsSet.java	recurseFirstIntersection	THIS	PolyhedronsSet	UNKNOWN_AS	0	0	NO_USE	0
690	228	8	PolyhedronsSet.java	recurseFirstIntersection	cut	SubHyperplane<Euclidean3D>	getCut()	0	1	NO_USE	0
690	228	8	PolyhedronsSet.java	recurseFirstIntersection	minus	BSPTree<Euclidean3D>	getMinus()	0	0	OTHER_USE	0
690	228	8	PolyhedronsSet.java	recurseFirstIntersection	plus	BSPTree<Euclidean3D>	getPlus()	0	0	OTHER_USE	0
690	228	8	PolyhedronsSet.java	recurseFirstIntersection	plane	Plane	CAST	0	0	NO_USE	0
690	228	8	PolyhedronsSet.java	recurseFirstIntersection	offset	double	getOffset()	0	1	NO_USE	1
690	228	8	PolyhedronsSet.java	recurseFirstIntersection	in	boolean	<	0	1	NO_USE	0
690	228	8	PolyhedronsSet.java	recurseFirstIntersection	near	BSPTree<Euclidean3D>	UNKNOWN_AS	0	0	NO_USE	0
690	228	8	PolyhedronsSet.java	recurseFirstIntersection	far	BSPTree<Euclidean3D>	UNKNOWN_AS	0	0	NO_USE	0
690	228	8	PolyhedronsSet.java	recurseFirstIntersection	node	BSPTree<Euclidean3D>	PARAM_AS	1	0	NO_USE	0
690	228	8	PolyhedronsSet.java	recurseFirstIntersection	point	Vector3D	PARAM_AS	1	0	NO_USE	0
690	228	8	PolyhedronsSet.java	recurseFirstIntersection	line	Line	PARAM_AS	1	0	NO_USE	0
690	228	8	PolyhedronsSet.java	recurseFirstIntersection	THIS	PolyhedronsSet	UNKNOWN_AS	0	0	NO_USE	0
691	236	8	PolyhedronsSet.java	recurseFirstIntersection	cut	SubHyperplane<Euclidean3D>	getCut()	0	1	NO_USE	0
691	236	8	PolyhedronsSet.java	recurseFirstIntersection	minus	BSPTree<Euclidean3D>	getMinus()	0	0	NO_USE	0
691	236	8	PolyhedronsSet.java	recurseFirstIntersection	plus	BSPTree<Euclidean3D>	getPlus()	0	0	NO_USE	0
691	236	8	PolyhedronsSet.java	recurseFirstIntersection	plane	Plane	CAST	0	0	NO_USE	0
691	236	8	PolyhedronsSet.java	recurseFirstIntersection	offset	double	getOffset()	0	1	NO_USE	0
691	236	8	PolyhedronsSet.java	recurseFirstIntersection	in	boolean	<	0	1	NO_USE	1
691	236	8	PolyhedronsSet.java	recurseFirstIntersection	near	BSPTree<Euclidean3D>	NAME	0	0	NO_USE	0
691	236	8	PolyhedronsSet.java	recurseFirstIntersection	far	BSPTree<Euclidean3D>	NAME	0	0	NO_USE	0
691	236	8	PolyhedronsSet.java	recurseFirstIntersection	node	BSPTree<Euclidean3D>	PARAM_AS	1	0	PARAM_USE	0
691	236	8	PolyhedronsSet.java	recurseFirstIntersection	point	Vector3D	PARAM_AS	1	0	PARAM_USE	0
691	236	8	PolyhedronsSet.java	recurseFirstIntersection	line	Line	PARAM_AS	1	0	NO_USE	0
691	236	8	PolyhedronsSet.java	recurseFirstIntersection	THIS	PolyhedronsSet	UNKNOWN_AS	0	0	CLALLER_USE	0
692	239	12	PolyhedronsSet.java	recurseFirstIntersection	facet	SubHyperplane<Euclidean3D>	boundaryFacet()	0	1	RET_USE	1
692	239	12	PolyhedronsSet.java	recurseFirstIntersection	cut	SubHyperplane<Euclidean3D>	getCut()	0	1	NO_USE	0
692	239	12	PolyhedronsSet.java	recurseFirstIntersection	minus	BSPTree<Euclidean3D>	getMinus()	0	0	NO_USE	0
692	239	12	PolyhedronsSet.java	recurseFirstIntersection	plus	BSPTree<Euclidean3D>	getPlus()	0	0	NO_USE	0
692	239	12	PolyhedronsSet.java	recurseFirstIntersection	plane	Plane	CAST	0	0	NO_USE	0
692	239	12	PolyhedronsSet.java	recurseFirstIntersection	offset	double	getOffset()	0	1	NO_USE	0
692	239	12	PolyhedronsSet.java	recurseFirstIntersection	in	boolean	<	0	1	NO_USE	0
692	239	12	PolyhedronsSet.java	recurseFirstIntersection	near	BSPTree<Euclidean3D>	NAME	0	0	NO_USE	0
692	239	12	PolyhedronsSet.java	recurseFirstIntersection	far	BSPTree<Euclidean3D>	NAME	0	0	NO_USE	0
692	239	12	PolyhedronsSet.java	recurseFirstIntersection	node	BSPTree<Euclidean3D>	PARAM_AS	1	0	NO_USE	0
692	239	12	PolyhedronsSet.java	recurseFirstIntersection	point	Vector3D	PARAM_AS	1	0	NO_USE	0
692	239	12	PolyhedronsSet.java	recurseFirstIntersection	line	Line	PARAM_AS	1	0	NO_USE	0
692	239	12	PolyhedronsSet.java	recurseFirstIntersection	THIS	PolyhedronsSet	UNKNOWN_AS	0	0	NO_USE	0
693	246	8	PolyhedronsSet.java	recurseFirstIntersection	cut	SubHyperplane<Euclidean3D>	getCut()	0	1	NO_USE	0
693	246	8	PolyhedronsSet.java	recurseFirstIntersection	minus	BSPTree<Euclidean3D>	getMinus()	0	0	NO_USE	0
693	246	8	PolyhedronsSet.java	recurseFirstIntersection	plus	BSPTree<Euclidean3D>	getPlus()	0	0	NO_USE	0
693	246	8	PolyhedronsSet.java	recurseFirstIntersection	plane	Plane	CAST	0	0	NO_USE	0
693	246	8	PolyhedronsSet.java	recurseFirstIntersection	offset	double	getOffset()	0	1	NO_USE	0
693	246	8	PolyhedronsSet.java	recurseFirstIntersection	in	boolean	<	0	1	NO_USE	0
693	246	8	PolyhedronsSet.java	recurseFirstIntersection	near	BSPTree<Euclidean3D>	NAME	0	0	NO_USE	0
693	246	8	PolyhedronsSet.java	recurseFirstIntersection	far	BSPTree<Euclidean3D>	NAME	0	0	NO_USE	0
693	246	8	PolyhedronsSet.java	recurseFirstIntersection	crossed	SubHyperplane<Euclidean3D>	recurseFirstIntersection()	0	1	RET_USE	1
693	246	8	PolyhedronsSet.java	recurseFirstIntersection	node	BSPTree<Euclidean3D>	PARAM_AS	1	0	NO_USE	0
693	246	8	PolyhedronsSet.java	recurseFirstIntersection	point	Vector3D	PARAM_AS	1	0	NO_USE	0
693	246	8	PolyhedronsSet.java	recurseFirstIntersection	line	Line	PARAM_AS	1	0	NO_USE	0
693	246	8	PolyhedronsSet.java	recurseFirstIntersection	THIS	PolyhedronsSet	UNKNOWN_AS	0	0	NO_USE	0
694	250	8	PolyhedronsSet.java	recurseFirstIntersection	cut	SubHyperplane<Euclidean3D>	getCut()	0	1	NO_USE	0
694	250	8	PolyhedronsSet.java	recurseFirstIntersection	minus	BSPTree<Euclidean3D>	getMinus()	0	0	NO_USE	0
694	250	8	PolyhedronsSet.java	recurseFirstIntersection	plus	BSPTree<Euclidean3D>	getPlus()	0	0	NO_USE	0
694	250	8	PolyhedronsSet.java	recurseFirstIntersection	plane	Plane	CAST	0	0	CLALLER_USE	0
694	250	8	PolyhedronsSet.java	recurseFirstIntersection	offset	double	getOffset()	0	1	NO_USE	0
694	250	8	PolyhedronsSet.java	recurseFirstIntersection	in	boolean	<	0	1	NO_USE	1
694	250	8	PolyhedronsSet.java	recurseFirstIntersection	near	BSPTree<Euclidean3D>	NAME	0	0	NO_USE	0
694	250	8	PolyhedronsSet.java	recurseFirstIntersection	far	BSPTree<Euclidean3D>	NAME	0	0	NO_USE	0
694	250	8	PolyhedronsSet.java	recurseFirstIntersection	crossed	SubHyperplane<Euclidean3D>	recurseFirstIntersection()	0	1	NO_USE	0
694	250	8	PolyhedronsSet.java	recurseFirstIntersection	node	BSPTree<Euclidean3D>	PARAM_AS	1	0	PARAM_USE	0
694	250	8	PolyhedronsSet.java	recurseFirstIntersection	point	Vector3D	PARAM_AS	1	0	NO_USE	0
694	250	8	PolyhedronsSet.java	recurseFirstIntersection	line	Line	PARAM_AS	1	0	PARAM_USE	0
694	250	8	PolyhedronsSet.java	recurseFirstIntersection	THIS	PolyhedronsSet	UNKNOWN_AS	0	0	CLALLER_USE	0
695	253	12	PolyhedronsSet.java	recurseFirstIntersection	hit3D	Vector3D	intersection()	0	1	PARAM_USE	1
695	253	12	PolyhedronsSet.java	recurseFirstIntersection	cut	SubHyperplane<Euclidean3D>	getCut()	0	1	NO_USE	0
695	253	12	PolyhedronsSet.java	recurseFirstIntersection	minus	BSPTree<Euclidean3D>	getMinus()	0	0	NO_USE	0
695	253	12	PolyhedronsSet.java	recurseFirstIntersection	plus	BSPTree<Euclidean3D>	getPlus()	0	0	NO_USE	0
695	253	12	PolyhedronsSet.java	recurseFirstIntersection	plane	Plane	CAST	0	0	NO_USE	0
695	253	12	PolyhedronsSet.java	recurseFirstIntersection	offset	double	getOffset()	0	1	NO_USE	0
695	253	12	PolyhedronsSet.java	recurseFirstIntersection	in	boolean	<	0	1	NO_USE	0
695	253	12	PolyhedronsSet.java	recurseFirstIntersection	near	BSPTree<Euclidean3D>	NAME	0	0	NO_USE	0
695	253	12	PolyhedronsSet.java	recurseFirstIntersection	far	BSPTree<Euclidean3D>	NAME	0	0	NO_USE	0
695	253	12	PolyhedronsSet.java	recurseFirstIntersection	crossed	SubHyperplane<Euclidean3D>	recurseFirstIntersection()	0	1	NO_USE	0
695	253	12	PolyhedronsSet.java	recurseFirstIntersection	node	BSPTree<Euclidean3D>	PARAM_AS	1	0	PARAM_USE	0
695	253	12	PolyhedronsSet.java	recurseFirstIntersection	point	Vector3D	PARAM_AS	1	0	NO_USE	0
695	253	12	PolyhedronsSet.java	recurseFirstIntersection	line	Line	PARAM_AS	1	0	NO_USE	0
695	253	12	PolyhedronsSet.java	recurseFirstIntersection	THIS	PolyhedronsSet	UNKNOWN_AS	0	0	CLALLER_USE	0
696	255	16	PolyhedronsSet.java	recurseFirstIntersection	facet	SubHyperplane<Euclidean3D>	boundaryFacet()	0	1	RET_USE	1
696	255	16	PolyhedronsSet.java	recurseFirstIntersection	hit3D	Vector3D	intersection()	0	1	NO_USE	0
696	255	16	PolyhedronsSet.java	recurseFirstIntersection	cut	SubHyperplane<Euclidean3D>	getCut()	0	1	NO_USE	0
696	255	16	PolyhedronsSet.java	recurseFirstIntersection	minus	BSPTree<Euclidean3D>	getMinus()	0	0	NO_USE	0
696	255	16	PolyhedronsSet.java	recurseFirstIntersection	plus	BSPTree<Euclidean3D>	getPlus()	0	0	NO_USE	0
696	255	16	PolyhedronsSet.java	recurseFirstIntersection	plane	Plane	CAST	0	0	NO_USE	0
696	255	16	PolyhedronsSet.java	recurseFirstIntersection	offset	double	getOffset()	0	1	NO_USE	0
696	255	16	PolyhedronsSet.java	recurseFirstIntersection	in	boolean	<	0	1	NO_USE	0
696	255	16	PolyhedronsSet.java	recurseFirstIntersection	near	BSPTree<Euclidean3D>	NAME	0	0	NO_USE	0
696	255	16	PolyhedronsSet.java	recurseFirstIntersection	far	BSPTree<Euclidean3D>	NAME	0	0	NO_USE	0
696	255	16	PolyhedronsSet.java	recurseFirstIntersection	crossed	SubHyperplane<Euclidean3D>	recurseFirstIntersection()	0	1	NO_USE	0
696	255	16	PolyhedronsSet.java	recurseFirstIntersection	node	BSPTree<Euclidean3D>	PARAM_AS	1	0	NO_USE	0
696	255	16	PolyhedronsSet.java	recurseFirstIntersection	point	Vector3D	PARAM_AS	1	0	NO_USE	0
696	255	16	PolyhedronsSet.java	recurseFirstIntersection	line	Line	PARAM_AS	1	0	NO_USE	0
696	255	16	PolyhedronsSet.java	recurseFirstIntersection	THIS	PolyhedronsSet	UNKNOWN_AS	0	0	NO_USE	0
697	278	8	PolyhedronsSet.java	boundaryFacet	point2D	Vector2D	toSubSpace()	0	2	NO_USE	1
697	278	8	PolyhedronsSet.java	boundaryFacet	attribute	BoundaryAttribute<Euclidean3D>	CAST	0	4	CLALLER_USE	1
697	278	8	PolyhedronsSet.java	boundaryFacet	point	Vector3D	PARAM_AS	1	0	NO_USE	0
697	278	8	PolyhedronsSet.java	boundaryFacet	node	BSPTree<Euclidean3D>	PARAM_AS	1	0	NO_USE	0
697	278	8	PolyhedronsSet.java	boundaryFacet	THIS	PolyhedronsSet	UNKNOWN_AS	0	2	NO_USE	1
698	282	8	PolyhedronsSet.java	boundaryFacet	point2D	Vector2D	toSubSpace()	0	2	NO_USE	1
698	282	8	PolyhedronsSet.java	boundaryFacet	attribute	BoundaryAttribute<Euclidean3D>	CAST	0	4	CLALLER_USE	1
698	282	8	PolyhedronsSet.java	boundaryFacet	point	Vector3D	PARAM_AS	1	0	NO_USE	0
698	282	8	PolyhedronsSet.java	boundaryFacet	node	BSPTree<Euclidean3D>	PARAM_AS	1	0	NO_USE	0
698	282	8	PolyhedronsSet.java	boundaryFacet	THIS	PolyhedronsSet	UNKNOWN_AS	0	2	NO_USE	1
699	113	8	Vector1DFormat.java	parse	parsePosition	ParsePosition	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	1
699	113	8	Vector1DFormat.java	parse	result	Vector1D	parse()	0	0	NO_USE	0
699	113	8	Vector1DFormat.java	parse	source	String	PARAM_AS	1	0	OTHER_USE	0
699	113	8	Vector1DFormat.java	parse	THIS	Vector1DFormat	UNKNOWN_AS	0	0	NO_USE	0
700	124	8	Vector1DFormat.java	parse	coordinates	double[]	parseCoordinates()	0	1	NO_USE	1
700	124	8	Vector1DFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
700	124	8	Vector1DFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	NO_USE	0
700	124	8	Vector1DFormat.java	parse	THIS	Vector1DFormat	UNKNOWN_AS	0	0	NO_USE	0
701	188	8	Vector1D.java	normalize	s	double	getNorm()	0	1	NO_USE	1
701	188	8	Vector1D.java	normalize	THIS	Vector1D	UNKNOWN_AS	0	0	FIELD_USE	0
702	305	8	Vector1D.java	equals	other	Object	PARAM_AS	1	2	NO_USE	1
702	305	8	Vector1D.java	equals	THIS	Vector1D	UNKNOWN_AS	0	1	NO_USE	1
703	309	8	Vector1D.java	equals	other	Object	PARAM_AS	1	2	OTHER_USE	1
703	309	8	Vector1D.java	equals	THIS	Vector1D	UNKNOWN_AS	0	1	CLALLER_USE	0
704	311	12	Vector1D.java	equals	rhs	Vector1D	CAST	0	1	NO_USE	1
704	311	12	Vector1D.java	equals	other	Object	PARAM_AS	1	2	NO_USE	0
704	311	12	Vector1D.java	equals	THIS	Vector1D	UNKNOWN_AS	0	1	CLALLER_USE	0
705	329	8	Vector1D.java	hashCode	THIS	Vector1D	UNKNOWN_AS	0	1	NO_USE	1
706	93	8	IntervalsSet.java	buildTree	lower	double	PARAM_AS	1	2	NO_USE	1
706	93	8	IntervalsSet.java	buildTree	upper	double	PARAM_AS	1	4	PARAM_USE	0
706	93	8	IntervalsSet.java	buildTree	THIS	IntervalsSet	UNKNOWN_AS	0	0	NO_USE	0
707	94	12	IntervalsSet.java	buildTree	lower	double	PARAM_AS	1	2	NO_USE	0
707	94	12	IntervalsSet.java	buildTree	upper	double	PARAM_AS	1	4	NO_USE	1
707	94	12	IntervalsSet.java	buildTree	THIS	IntervalsSet	UNKNOWN_AS	0	0	NO_USE	0
708	108	8	IntervalsSet.java	buildTree	lowerCut	SubHyperplane<Euclidean1D>	wholeHyperplane()	0	0	OTHER_USE	0
708	108	8	IntervalsSet.java	buildTree	lower	double	PARAM_AS	1	2	NO_USE	0
708	108	8	IntervalsSet.java	buildTree	upper	double	PARAM_AS	1	4	NO_USE	1
708	108	8	IntervalsSet.java	buildTree	THIS	IntervalsSet	UNKNOWN_AS	0	0	NO_USE	0
709	136	8	IntervalsSet.java	computeGeometricalProperties	THIS	IntervalsSet	UNKNOWN_AS	0	1	CLALLER_USE	1
710	215	8	IntervalsSet.java	recurseList	node	BSPTree<Euclidean1D>	PARAM_AS	1	2	CLALLER_USE	1
710	215	8	IntervalsSet.java	recurseList	list	List<Interval>	PARAM_AS	1	0	CLALLER_USE	0
710	215	8	IntervalsSet.java	recurseList	lower	double	PARAM_AS	1	0	OTHER_USE	0
710	215	8	IntervalsSet.java	recurseList	upper	double	PARAM_AS	1	0	OTHER_USE	0
710	215	8	IntervalsSet.java	recurseList	THIS	IntervalsSet	UNKNOWN_AS	0	4	CLALLER_USE	0
711	216	12	IntervalsSet.java	recurseList	node	BSPTree<Euclidean1D>	PARAM_AS	1	2	NO_USE	1
711	216	12	IntervalsSet.java	recurseList	list	List<Interval>	PARAM_AS	1	0	CLALLER_USE	0
711	216	12	IntervalsSet.java	recurseList	lower	double	PARAM_AS	1	0	OTHER_USE	0
711	216	12	IntervalsSet.java	recurseList	upper	double	PARAM_AS	1	0	OTHER_USE	0
711	216	12	IntervalsSet.java	recurseList	THIS	IntervalsSet	UNKNOWN_AS	0	4	NO_USE	0
712	232	12	IntervalsSet.java	recurseList	op	OrientedPoint	CAST	0	0	NO_USE	0
712	232	12	IntervalsSet.java	recurseList	loc	Vector1D	getLocation()	0	2	NO_USE	1
712	232	12	IntervalsSet.java	recurseList	x	double	getX()	0	0	NO_USE	0
712	232	12	IntervalsSet.java	recurseList	low	BSPTree<Euclidean1D>	OTHERS	0	1	NO_USE	1
712	232	12	IntervalsSet.java	recurseList	high	BSPTree<Euclidean1D>	OTHERS	0	1	NO_USE	1
712	232	12	IntervalsSet.java	recurseList	node	BSPTree<Euclidean1D>	PARAM_AS	1	2	NO_USE	0
712	232	12	IntervalsSet.java	recurseList	list	List<Interval>	PARAM_AS	1	0	CLALLER_USE	0
712	232	12	IntervalsSet.java	recurseList	lower	double	PARAM_AS	1	0	NO_USE	0
712	232	12	IntervalsSet.java	recurseList	upper	double	PARAM_AS	1	0	NO_USE	0
712	232	12	IntervalsSet.java	recurseList	THIS	IntervalsSet	UNKNOWN_AS	0	4	NO_USE	1
713	116	8	Vector2DFormat.java	parse	parsePosition	ParsePosition	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	1
713	116	8	Vector2DFormat.java	parse	result	Vector2D	parse()	0	0	NO_USE	0
713	116	8	Vector2DFormat.java	parse	source	String	PARAM_AS	1	0	OTHER_USE	0
713	116	8	Vector2DFormat.java	parse	THIS	Vector2DFormat	UNKNOWN_AS	0	0	NO_USE	0
714	127	8	Vector2DFormat.java	parse	coordinates	double[]	parseCoordinates()	0	1	NO_USE	1
714	127	8	Vector2DFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
714	127	8	Vector2DFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	NO_USE	0
714	127	8	Vector2DFormat.java	parse	THIS	Vector2DFormat	UNKNOWN_AS	0	0	NO_USE	0
715	132	8	Line.java	reset	dx	double	-	0	0	-x	0
715	132	8	Line.java	reset	dy	double	-	0	0	-x	0
715	132	8	Line.java	reset	d	double	hypot()	0	1	/	1
715	132	8	Line.java	reset	p1	Vector2D	PARAM_AS	1	0	CLALLER_USE	0
715	132	8	Line.java	reset	p2	Vector2D	PARAM_AS	1	0	CLALLER_USE	0
715	132	8	Line.java	reset	THIS	Line	UNKNOWN_AS	0	0	FIELD_USE	0
716	159	8	Line.java	revertSelf	THIS	Line	UNKNOWN_AS	0	1	NO_USE	1
717	200	8	Line.java	intersection	otherL	Line	CAST	0	0	NO_USE	0
717	200	8	Line.java	intersection	d	double	-	0	1	NO_USE	1
717	200	8	Line.java	intersection	other	Hyperplane<Euclidean2D>	PARAM_AS	1	0	NO_USE	0
717	200	8	Line.java	intersection	THIS	Line	UNKNOWN_AS	0	0	NO_USE	0
718	125	8	SubLine.java	intersection	line1	Line	CAST	0	0	NO_USE	0
718	125	8	SubLine.java	intersection	line2	Line	CAST	0	0	NO_USE	0
718	125	8	SubLine.java	intersection	v2D	Vector2D	intersection()	0	0	OTHER_USE	0
718	125	8	SubLine.java	intersection	loc1	Location	checkPoint()	0	0	!=	0
718	125	8	SubLine.java	intersection	loc2	Location	checkPoint()	0	0	!=	0
718	125	8	SubLine.java	intersection	subLine	SubLine	PARAM_AS	1	0	NO_USE	0
718	125	8	SubLine.java	intersection	includeEndPoints	boolean	PARAM_AS	1	0	NO_USE	1
718	125	8	SubLine.java	intersection	THIS	SubLine	UNKNOWN_AS	0	0	FIELD_USE	0
719	157	8	SubLine.java	side	thisLine	Line	CAST	0	0	PARAM_USE	0
719	157	8	SubLine.java	side	otherLine	Line	CAST	0	0	CLALLER_USE	0
719	157	8	SubLine.java	side	crossing	Vector2D	intersection()	0	1	NO_USE	1
719	157	8	SubLine.java	side	hyperplane	Hyperplane<Euclidean2D>	PARAM_AS	1	0	NO_USE	0
719	157	8	SubLine.java	side	THIS	SubLine	UNKNOWN_AS	0	0	FIELD_USE	0
720	177	8	SubLine.java	split	thisLine	Line	CAST	0	0	PARAM_USE	0
720	177	8	SubLine.java	split	otherLine	Line	CAST	0	0	CLALLER_USE	0
720	177	8	SubLine.java	split	crossing	Vector2D	intersection()	0	1	NO_USE	1
720	177	8	SubLine.java	split	hyperplane	Hyperplane<Euclidean2D>	PARAM_AS	1	0	NO_USE	0
720	177	8	SubLine.java	split	THIS	SubLine	UNKNOWN_AS	0	0	NO_USE	0
721	132	8	PolygonsSet.java	computeGeometricalProperties	v	Vector2D[][]	getVertices()	0	2	ARR_USE	1
721	132	8	PolygonsSet.java	computeGeometricalProperties	THIS	PolygonsSet	UNKNOWN_AS	0	2	CLALLER_USE	1
722	133	12	PolygonsSet.java	computeGeometricalProperties	v	Vector2D[][]	getVertices()	0	2	NO_USE	0
722	133	12	PolygonsSet.java	computeGeometricalProperties	THIS	PolygonsSet	UNKNOWN_AS	0	2	CLALLER_USE	1
723	140	15	PolygonsSet.java	computeGeometricalProperties	v	Vector2D[][]	getVertices()	0	2	OTHER_USE	1
723	140	15	PolygonsSet.java	computeGeometricalProperties	THIS	PolygonsSet	UNKNOWN_AS	0	2	CLALLER_USE	0
724	166	12	PolygonsSet.java	computeGeometricalProperties	sum	double	NAME	0	1	/	1
724	166	12	PolygonsSet.java	computeGeometricalProperties	sumX	double	*	0	0	/	0
724	166	12	PolygonsSet.java	computeGeometricalProperties	sumY	double	*	0	0	/	0
724	166	12	PolygonsSet.java	computeGeometricalProperties	v	Vector2D[][]	getVertices()	0	2	NO_USE	0
724	166	12	PolygonsSet.java	computeGeometricalProperties	THIS	PolygonsSet	UNKNOWN_AS	0	2	CLALLER_USE	0
725	203	8	PolygonsSet.java	getVertices	THIS	PolygonsSet	UNKNOWN_AS	0	4	CLALLER_USE	1
726	204	12	PolygonsSet.java	getVertices	THIS	PolygonsSet	UNKNOWN_AS	0	4	CLALLER_USE	1
727	219	20	PolygonsSet.java	getVertices	node	Node	getSmallest()	0	0	NO_USE	0
727	219	20	PolygonsSet.java	getVertices	loop	List<ComparableSegment>	followLoop()	0	1	PARAM_USE	1
727	219	20	PolygonsSet.java	getVertices	visitor	SegmentsBuilder	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
727	219	20	PolygonsSet.java	getVertices	sorted	AVLTree<ComparableSegment>	getSorted()	0	0	NO_USE	0
727	219	20	PolygonsSet.java	getVertices	loops	ArrayList<List<ComparableSegment>>	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
727	219	20	PolygonsSet.java	getVertices	THIS	PolygonsSet	ARRAY_CREATION	0	4	NO_USE	0
728	229	20	PolygonsSet.java	getVertices	visitor	SegmentsBuilder	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
728	229	20	PolygonsSet.java	getVertices	sorted	AVLTree<ComparableSegment>	getSorted()	0	0	NO_USE	0
728	229	20	PolygonsSet.java	getVertices	loops	ArrayList<List<ComparableSegment>>	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
728	229	20	PolygonsSet.java	getVertices	i	int	0	0	0	x++	0
728	229	20	PolygonsSet.java	getVertices	THIS	PolygonsSet	ARRAY_CREATION	0	4	FIELD_USE	1
729	237	27	PolygonsSet.java	getVertices	visitor	SegmentsBuilder	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
729	237	27	PolygonsSet.java	getVertices	sorted	AVLTree<ComparableSegment>	getSorted()	0	0	NO_USE	0
729	237	27	PolygonsSet.java	getVertices	loops	ArrayList<List<ComparableSegment>>	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
729	237	27	PolygonsSet.java	getVertices	i	int	ARRAY_CREATION	0	0	x++	0
729	237	27	PolygonsSet.java	getVertices	THIS	PolygonsSet	ARRAY_CREATION	0	4	FIELD_USE	1
730	243	28	PolygonsSet.java	getVertices	array	Vector2D[]	ARRAY_CREATION	0	2	ARR_USE	0
730	243	28	PolygonsSet.java	getVertices	j	int	0	0	3	x++	1
730	243	28	PolygonsSet.java	getVertices	visitor	SegmentsBuilder	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
730	243	28	PolygonsSet.java	getVertices	sorted	AVLTree<ComparableSegment>	getSorted()	0	0	NO_USE	0
730	243	28	PolygonsSet.java	getVertices	loops	ArrayList<List<ComparableSegment>>	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
730	243	28	PolygonsSet.java	getVertices	i	int	ARRAY_CREATION	0	0	NO_USE	0
730	243	28	PolygonsSet.java	getVertices	THIS	PolygonsSet	ARRAY_CREATION	0	4	NO_USE	0
731	251	28	PolygonsSet.java	getVertices	array	Vector2D[]	toSpace()	0	2	ARR_USE	1
731	251	28	PolygonsSet.java	getVertices	j	int	toSpace()	0	3	x++	1
731	251	28	PolygonsSet.java	getVertices	visitor	SegmentsBuilder	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
731	251	28	PolygonsSet.java	getVertices	sorted	AVLTree<ComparableSegment>	getSorted()	0	0	NO_USE	0
731	251	28	PolygonsSet.java	getVertices	loops	ArrayList<List<ComparableSegment>>	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
731	251	28	PolygonsSet.java	getVertices	i	int	ARRAY_CREATION	0	0	NO_USE	0
731	251	28	PolygonsSet.java	getVertices	THIS	PolygonsSet	ARRAY_CREATION	0	4	NO_USE	1
732	256	28	PolygonsSet.java	getVertices	array	Vector2D[]	getEnd()	0	2	ARR_USE	1
732	256	28	PolygonsSet.java	getVertices	j	int	getEnd()	0	3	x++	1
732	256	28	PolygonsSet.java	getVertices	visitor	SegmentsBuilder	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
732	256	28	PolygonsSet.java	getVertices	sorted	AVLTree<ComparableSegment>	getSorted()	0	0	NO_USE	0
732	256	28	PolygonsSet.java	getVertices	loops	ArrayList<List<ComparableSegment>>	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
732	256	28	PolygonsSet.java	getVertices	i	int	ARRAY_CREATION	0	0	NO_USE	0
732	256	28	PolygonsSet.java	getVertices	THIS	PolygonsSet	ARRAY_CREATION	0	4	NO_USE	1
733	315	16	PolygonsSet.java	followLoop	distance	double	distance()	0	1	OTHER_USE	1
733	315	16	PolygonsSet.java	followLoop	n	Node	getNext()	0	0	OTHER_USE	0
733	315	16	PolygonsSet.java	followLoop	selectedNode	Node	NULL	0	0	NO_USE	0
733	315	16	PolygonsSet.java	followLoop	selectedSegment	ComparableSegment	NULL	0	0	NO_USE	0
733	315	16	PolygonsSet.java	followLoop	selectedDistance	double	NAME	0	2	NO_USE	1
733	315	16	PolygonsSet.java	followLoop	lowerLeft	ComparableSegment	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
733	315	16	PolygonsSet.java	followLoop	upperRight	ComparableSegment	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
733	315	16	PolygonsSet.java	followLoop	loop	ArrayList<ComparableSegment>	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
733	315	16	PolygonsSet.java	followLoop	segment	ComparableSegment	getElement()	0	0	OTHER_USE	0
733	315	16	PolygonsSet.java	followLoop	globalStart	Vector2D	getStart()	0	0	NO_USE	0
733	315	16	PolygonsSet.java	followLoop	end	Vector2D	getEnd()	0	1	NO_USE	0
733	315	16	PolygonsSet.java	followLoop	open	boolean	==	0	2	NO_USE	0
733	315	16	PolygonsSet.java	followLoop	node	AVLTree<ComparableSegment>.Node	PARAM_AS	1	0	NO_USE	0
733	315	16	PolygonsSet.java	followLoop	sorted	AVLTree<ComparableSegment>	PARAM_AS	1	0	NO_USE	0
733	315	16	PolygonsSet.java	followLoop	THIS	PolygonsSet	UNKNOWN_AS	0	0	NO_USE	0
734	322	12	PolygonsSet.java	followLoop	selectedNode	Node	NAME	0	0	NO_USE	0
734	322	12	PolygonsSet.java	followLoop	selectedSegment	ComparableSegment	NAME	0	0	NO_USE	0
734	322	12	PolygonsSet.java	followLoop	selectedDistance	double	NAME	0	2	NO_USE	1
734	322	12	PolygonsSet.java	followLoop	lowerLeft	ComparableSegment	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
734	322	12	PolygonsSet.java	followLoop	upperRight	ComparableSegment	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
734	322	12	PolygonsSet.java	followLoop	loop	ArrayList<ComparableSegment>	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
734	322	12	PolygonsSet.java	followLoop	segment	ComparableSegment	getElement()	0	0	NO_USE	0
734	322	12	PolygonsSet.java	followLoop	globalStart	Vector2D	getStart()	0	0	NO_USE	0
734	322	12	PolygonsSet.java	followLoop	end	Vector2D	getEnd()	0	1	NO_USE	0
734	322	12	PolygonsSet.java	followLoop	open	boolean	==	0	2	NO_USE	0
734	322	12	PolygonsSet.java	followLoop	node	AVLTree<ComparableSegment>.Node	PARAM_AS	1	0	NO_USE	0
734	322	12	PolygonsSet.java	followLoop	sorted	AVLTree<ComparableSegment>	PARAM_AS	1	0	NO_USE	0
734	322	12	PolygonsSet.java	followLoop	THIS	PolygonsSet	UNKNOWN_AS	0	0	NO_USE	0
735	335	8	PolygonsSet.java	followLoop	loop	ArrayList<ComparableSegment>	CLASS_INSTANCE_CREATION	0	1	NO_USE	1
735	335	8	PolygonsSet.java	followLoop	segment	ComparableSegment	getElement()	0	0	NO_USE	0
735	335	8	PolygonsSet.java	followLoop	globalStart	Vector2D	getStart()	0	0	NO_USE	0
735	335	8	PolygonsSet.java	followLoop	end	Vector2D	getEnd()	0	1	NO_USE	0
735	335	8	PolygonsSet.java	followLoop	open	boolean	==	0	2	NO_USE	1
735	335	8	PolygonsSet.java	followLoop	node	AVLTree<ComparableSegment>.Node	PARAM_AS	1	0	NO_USE	0
735	335	8	PolygonsSet.java	followLoop	sorted	AVLTree<ComparableSegment>	PARAM_AS	1	0	NO_USE	0
735	335	8	PolygonsSet.java	followLoop	THIS	PolygonsSet	UNKNOWN_AS	0	0	NO_USE	0
736	340	8	PolygonsSet.java	followLoop	loop	ArrayList<ComparableSegment>	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
736	340	8	PolygonsSet.java	followLoop	segment	ComparableSegment	getElement()	0	0	NO_USE	0
736	340	8	PolygonsSet.java	followLoop	globalStart	Vector2D	getStart()	0	0	NO_USE	0
736	340	8	PolygonsSet.java	followLoop	end	Vector2D	getEnd()	0	1	NO_USE	1
736	340	8	PolygonsSet.java	followLoop	open	boolean	==	0	2	NO_USE	1
736	340	8	PolygonsSet.java	followLoop	node	AVLTree<ComparableSegment>.Node	PARAM_AS	1	0	NO_USE	0
736	340	8	PolygonsSet.java	followLoop	sorted	AVLTree<ComparableSegment>	PARAM_AS	1	0	NO_USE	0
736	340	8	PolygonsSet.java	followLoop	THIS	PolygonsSet	UNKNOWN_AS	0	0	NO_USE	0
737	78	8	NestedLoops.java	NestedLoops	loop	Vector2D[]	PARAM_AS	1	1	NO_USE	1
737	78	8	NestedLoops.java	NestedLoops	THIS	NestedLoops	UNKNOWN_AS	0	1	FIELD_USE	0
738	99	8	NestedLoops.java	NestedLoops	edges	ArrayList<SubHyperplane<Euclidean2D>>	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
738	99	8	NestedLoops.java	NestedLoops	current	Vector2D	ARRAY_ACCESS	0	0	NO_USE	0
738	99	8	NestedLoops.java	NestedLoops	loop	Vector2D[]	PARAM_AS	1	1	NO_USE	0
738	99	8	NestedLoops.java	NestedLoops	THIS	NestedLoops	CLASS_INSTANCE_CREATION	0	1	FIELD_USE	1
739	126	12	NestedLoops.java	add	node	NestedLoops	PARAM_AS	1	3	PARAM_USE	1
739	126	12	NestedLoops.java	add	THIS	NestedLoops	UNKNOWN_AS	0	6	NO_USE	1
740	135	12	NestedLoops.java	add	child	NestedLoops	next()	0	1	PARAM_USE	1
740	135	12	NestedLoops.java	add	iterator	Iterator<NestedLoops>	iterator()	0	0	CLALLER_USE	0
740	135	12	NestedLoops.java	add	node	NestedLoops	PARAM_AS	1	3	OTHER_USE	1
740	135	12	NestedLoops.java	add	THIS	NestedLoops	UNKNOWN_AS	0	6	FIELD_USE	1
741	144	12	NestedLoops.java	add	factory	RegionFactory<Euclidean2D>	CLASS_INSTANCE_CREATION	0	1	NO_USE	1
741	144	12	NestedLoops.java	add	node	NestedLoops	PARAM_AS	1	3	NO_USE	1
741	144	12	NestedLoops.java	add	THIS	NestedLoops	UNKNOWN_AS	0	6	FIELD_USE	1
742	170	8	NestedLoops.java	setClockWise	clockwise	boolean	PARAM_AS	1	1	NO_USE	1
742	170	8	NestedLoops.java	setClockWise	THIS	NestedLoops	UNKNOWN_AS	0	1	FIELD_USE	1
743	203	8	Vector2D.java	normalize	s	double	getNorm()	0	1	NO_USE	1
743	203	8	Vector2D.java	normalize	THIS	Vector2D	UNKNOWN_AS	0	0	FIELD_USE	0
744	324	8	Vector2D.java	equals	other	Object	PARAM_AS	1	2	NO_USE	1
744	324	8	Vector2D.java	equals	THIS	Vector2D	UNKNOWN_AS	0	1	NO_USE	1
745	328	8	Vector2D.java	equals	other	Object	PARAM_AS	1	2	OTHER_USE	1
745	328	8	Vector2D.java	equals	THIS	Vector2D	UNKNOWN_AS	0	1	CLALLER_USE	0
746	330	12	Vector2D.java	equals	rhs	Vector2D	CAST	0	1	NO_USE	1
746	330	12	Vector2D.java	equals	other	Object	PARAM_AS	1	2	NO_USE	0
746	330	12	Vector2D.java	equals	THIS	Vector2D	UNKNOWN_AS	0	1	CLALLER_USE	0
747	348	8	Vector2D.java	hashCode	THIS	Vector2D	UNKNOWN_AS	0	1	NO_USE	1
748	65	8	ComplexUtils.java	polar2Complex	r	double	PARAM_AS	1	1	PARAM_USE	1
748	65	8	ComplexUtils.java	polar2Complex	theta	double	PARAM_AS	1	0	NO_USE	0
748	65	8	ComplexUtils.java	polar2Complex	THIS	ComplexUtils	UNKNOWN_AS	0	0	FIELD_USE	0
749	114	8	ComplexFormat.java	ComplexFormat	imaginaryCharacter	String	PARAM_AS	1	2	NO_USE	1
749	114	8	ComplexFormat.java	ComplexFormat	realFormat	NumberFormat	PARAM_AS	1	1	NO_USE	0
749	114	8	ComplexFormat.java	ComplexFormat	imaginaryFormat	NumberFormat	PARAM_AS	1	1	NO_USE	0
749	114	8	ComplexFormat.java	ComplexFormat	THIS	ComplexFormat	UNKNOWN_AS	0	0	NO_USE	0
750	117	8	ComplexFormat.java	ComplexFormat	imaginaryCharacter	String	PARAM_AS	1	2	NO_USE	1
750	117	8	ComplexFormat.java	ComplexFormat	realFormat	NumberFormat	PARAM_AS	1	1	NO_USE	0
750	117	8	ComplexFormat.java	ComplexFormat	imaginaryFormat	NumberFormat	PARAM_AS	1	1	NO_USE	0
750	117	8	ComplexFormat.java	ComplexFormat	THIS	ComplexFormat	UNKNOWN_AS	0	0	NO_USE	0
751	120	8	ComplexFormat.java	ComplexFormat	imaginaryCharacter	String	PARAM_AS	1	2	NO_USE	0
751	120	8	ComplexFormat.java	ComplexFormat	realFormat	NumberFormat	PARAM_AS	1	1	NO_USE	0
751	120	8	ComplexFormat.java	ComplexFormat	imaginaryFormat	NumberFormat	PARAM_AS	1	1	NO_USE	1
751	120	8	ComplexFormat.java	ComplexFormat	THIS	ComplexFormat	UNKNOWN_AS	0	0	FIELD_USE	0
752	123	8	ComplexFormat.java	ComplexFormat	imaginaryCharacter	String	PARAM_AS	1	2	NO_USE	0
752	123	8	ComplexFormat.java	ComplexFormat	realFormat	NumberFormat	PARAM_AS	1	1	NO_USE	1
752	123	8	ComplexFormat.java	ComplexFormat	imaginaryFormat	NumberFormat	PARAM_AS	1	1	NO_USE	0
752	123	8	ComplexFormat.java	ComplexFormat	THIS	ComplexFormat	UNKNOWN_AS	0	0	FIELD_USE	0
753	181	8	ComplexFormat.java	format	re	double	getReal()	0	0	NO_USE	0
753	181	8	ComplexFormat.java	format	im	double	getImaginary()	0	3	-x	1
753	181	8	ComplexFormat.java	format	complex	Complex	PARAM_AS	1	0	NO_USE	0
753	181	8	ComplexFormat.java	format	toAppendTo	StringBuffer	PARAM_AS	1	0	CLALLER_USE	0
753	181	8	ComplexFormat.java	format	pos	FieldPosition	PARAM_AS	1	0	PARAM_USE	0
753	181	8	ComplexFormat.java	format	THIS	ComplexFormat	UNKNOWN_AS	0	0	CLALLER_USE	0
754	185	15	ComplexFormat.java	format	re	double	getReal()	0	0	NO_USE	0
754	185	15	ComplexFormat.java	format	im	double	getImaginary()	0	3	PARAM_USE	1
754	185	15	ComplexFormat.java	format	complex	Complex	PARAM_AS	1	0	NO_USE	0
754	185	15	ComplexFormat.java	format	toAppendTo	StringBuffer	PARAM_AS	1	0	CLALLER_USE	0
754	185	15	ComplexFormat.java	format	pos	FieldPosition	PARAM_AS	1	0	PARAM_USE	0
754	185	15	ComplexFormat.java	format	THIS	ComplexFormat	UNKNOWN_AS	0	0	CLALLER_USE	0
755	212	8	ComplexFormat.java	format	ret	StringBuffer	NULL	0	0	NO_USE	0
755	212	8	ComplexFormat.java	format	obj	Object	PARAM_AS	1	2	OTHER_USE	1
755	212	8	ComplexFormat.java	format	toAppendTo	StringBuffer	PARAM_AS	1	0	PARAM_USE	0
755	212	8	ComplexFormat.java	format	pos	FieldPosition	PARAM_AS	1	0	PARAM_USE	0
755	212	8	ComplexFormat.java	format	THIS	ComplexFormat	UNKNOWN_AS	0	0	CLALLER_USE	0
756	214	15	ComplexFormat.java	format	ret	StringBuffer	format()	0	0	NO_USE	0
756	214	15	ComplexFormat.java	format	obj	Object	PARAM_AS	1	2	OTHER_USE	1
756	214	15	ComplexFormat.java	format	toAppendTo	StringBuffer	PARAM_AS	1	0	PARAM_USE	0
756	214	15	ComplexFormat.java	format	pos	FieldPosition	PARAM_AS	1	0	PARAM_USE	0
756	214	15	ComplexFormat.java	format	THIS	ComplexFormat	UNKNOWN_AS	0	0	CLALLER_USE	0
757	290	8	ComplexFormat.java	parse	parsePosition	ParsePosition	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	1
757	290	8	ComplexFormat.java	parse	result	Complex	parse()	0	0	NO_USE	0
757	290	8	ComplexFormat.java	parse	source	String	PARAM_AS	1	0	OTHER_USE	0
757	290	8	ComplexFormat.java	parse	THIS	ComplexFormat	UNKNOWN_AS	0	0	NO_USE	0
758	313	8	ComplexFormat.java	parse	initialIndex	int	getIndex()	0	0	PARAM_USE	0
758	313	8	ComplexFormat.java	parse	re	Number	parseNumber()	0	1	NO_USE	1
758	313	8	ComplexFormat.java	parse	source	String	PARAM_AS	1	1	NO_USE	0
758	313	8	ComplexFormat.java	parse	pos	ParsePosition	PARAM_AS	1	1	CLALLER_USE	0
758	313	8	ComplexFormat.java	parse	THIS	ComplexFormat	UNKNOWN_AS	0	1	NO_USE	0
759	349	8	ComplexFormat.java	parse	initialIndex	int	getIndex()	0	0	PARAM_USE	0
759	349	8	ComplexFormat.java	parse	re	Number	parseNumber()	0	1	NO_USE	0
759	349	8	ComplexFormat.java	parse	startIndex	int	getIndex()	0	0	NO_USE	0
759	349	8	ComplexFormat.java	parse	c	char	parseNextCharacter()	0	0	NO_USE	0
759	349	8	ComplexFormat.java	parse	sign	int	1	0	0	NO_USE	0
759	349	8	ComplexFormat.java	parse	im	Number	parseNumber()	0	1	NO_USE	1
759	349	8	ComplexFormat.java	parse	source	String	PARAM_AS	1	1	NO_USE	0
759	349	8	ComplexFormat.java	parse	pos	ParsePosition	PARAM_AS	1	1	CLALLER_USE	0
759	349	8	ComplexFormat.java	parse	THIS	ComplexFormat	UNKNOWN_AS	0	1	NO_USE	0
760	357	8	ComplexFormat.java	parse	initialIndex	int	getIndex()	0	0	NO_USE	0
760	357	8	ComplexFormat.java	parse	re	Number	parseNumber()	0	1	NO_USE	0
760	357	8	ComplexFormat.java	parse	startIndex	int	getIndex()	0	0	NO_USE	0
760	357	8	ComplexFormat.java	parse	c	char	parseNextCharacter()	0	0	NO_USE	0
760	357	8	ComplexFormat.java	parse	sign	int	1	0	0	NO_USE	0
760	357	8	ComplexFormat.java	parse	im	Number	parseNumber()	0	1	NO_USE	0
760	357	8	ComplexFormat.java	parse	source	String	PARAM_AS	1	1	NO_USE	1
760	357	8	ComplexFormat.java	parse	pos	ParsePosition	PARAM_AS	1	1	NO_USE	1
760	357	8	ComplexFormat.java	parse	THIS	ComplexFormat	UNKNOWN_AS	0	1	NO_USE	1
761	110	8	Complex.java	abs	THIS	Complex	UNKNOWN_AS	0	5	FIELD_USE	1
762	114	8	Complex.java	abs	THIS	Complex	UNKNOWN_AS	0	5	NO_USE	1
763	118	8	Complex.java	abs	THIS	Complex	UNKNOWN_AS	0	5	FIELD_USE	1
764	119	12	Complex.java	abs	THIS	Complex	UNKNOWN_AS	0	5	FIELD_USE	1
765	125	12	Complex.java	abs	THIS	Complex	UNKNOWN_AS	0	5	FIELD_USE	1
766	172	8	Complex.java	conjugate	THIS	Complex	UNKNOWN_AS	0	0	FIELD_USE	1
767	216	8	Complex.java	divide	rhs	Complex	PARAM_AS	1	2	NO_USE	1
767	216	8	Complex.java	divide	THIS	Complex	UNKNOWN_AS	0	3	FIELD_USE	1
768	222	8	Complex.java	divide	c	double	getReal()	0	2	NO_USE	1
768	222	8	Complex.java	divide	d	double	getImaginary()	0	2	NO_USE	1
768	222	8	Complex.java	divide	rhs	Complex	PARAM_AS	1	2	NO_USE	0
768	222	8	Complex.java	divide	THIS	Complex	UNKNOWN_AS	0	3	FIELD_USE	0
769	226	8	Complex.java	divide	c	double	getReal()	0	2	NO_USE	0
769	226	8	Complex.java	divide	d	double	getImaginary()	0	2	NO_USE	0
769	226	8	Complex.java	divide	rhs	Complex	PARAM_AS	1	2	NO_USE	1
769	226	8	Complex.java	divide	THIS	Complex	UNKNOWN_AS	0	3	NO_USE	1
770	230	8	Complex.java	divide	c	double	getReal()	0	2	/	1
770	230	8	Complex.java	divide	d	double	getImaginary()	0	2	/	1
770	230	8	Complex.java	divide	rhs	Complex	PARAM_AS	1	2	NO_USE	0
770	230	8	Complex.java	divide	THIS	Complex	UNKNOWN_AS	0	3	CLALLER_USE	0
771	263	8	Complex.java	equals	other	Object	PARAM_AS	1	2	NO_USE	1
771	263	8	Complex.java	equals	THIS	Complex	UNKNOWN_AS	0	2	NO_USE	1
772	266	8	Complex.java	equals	other	Object	PARAM_AS	1	2	OTHER_USE	1
772	266	8	Complex.java	equals	THIS	Complex	UNKNOWN_AS	0	2	FIELD_USE	0
773	268	12	Complex.java	equals	rhs	Complex	CAST	0	1	OTHER_USE	1
773	268	12	Complex.java	equals	other	Object	PARAM_AS	1	2	NO_USE	0
773	268	12	Complex.java	equals	THIS	Complex	UNKNOWN_AS	0	2	FIELD_USE	1
774	286	8	Complex.java	hashCode	THIS	Complex	UNKNOWN_AS	0	0	NO_USE	1
775	365	8	Complex.java	multiply	rhs	Complex	PARAM_AS	1	3	NO_USE	1
775	365	8	Complex.java	multiply	THIS	Complex	UNKNOWN_AS	0	6	FIELD_USE	1
776	368	8	Complex.java	multiply	rhs	Complex	PARAM_AS	1	3	NO_USE	1
776	368	8	Complex.java	multiply	THIS	Complex	UNKNOWN_AS	0	6	NO_USE	1
777	404	8	Complex.java	multiply	rhs	double	PARAM_AS	1	2	NO_USE	1
777	404	8	Complex.java	multiply	THIS	Complex	UNKNOWN_AS	0	3	FIELD_USE	1
778	407	8	Complex.java	multiply	rhs	double	PARAM_AS	1	2	NO_USE	1
778	407	8	Complex.java	multiply	THIS	Complex	UNKNOWN_AS	0	3	NO_USE	1
779	424	8	Complex.java	negate	THIS	Complex	UNKNOWN_AS	0	0	FIELD_USE	1
780	452	8	Complex.java	subtract	rhs	Complex	PARAM_AS	1	1	NO_USE	1
780	452	8	Complex.java	subtract	THIS	Complex	UNKNOWN_AS	0	2	FIELD_USE	1
781	475	8	Complex.java	acos	THIS	Complex	UNKNOWN_AS	0	0	FIELD_USE	1
782	498	8	Complex.java	asin	THIS	Complex	UNKNOWN_AS	0	0	FIELD_USE	1
783	521	8	Complex.java	atan	THIS	Complex	UNKNOWN_AS	0	0	FIELD_USE	1
784	556	8	Complex.java	cos	THIS	Complex	UNKNOWN_AS	0	0	FIELD_USE	1
785	590	8	Complex.java	cosh	THIS	Complex	UNKNOWN_AS	0	0	FIELD_USE	1
786	625	8	Complex.java	exp	THIS	Complex	UNKNOWN_AS	0	0	FIELD_USE	1
787	663	8	Complex.java	log	THIS	Complex	UNKNOWN_AS	0	0	FIELD_USE	1
788	721	8	Complex.java	sin	THIS	Complex	UNKNOWN_AS	0	0	FIELD_USE	1
789	755	8	Complex.java	sinh	THIS	Complex	UNKNOWN_AS	0	0	FIELD_USE	1
790	797	8	Complex.java	sqrt	THIS	Complex	UNKNOWN_AS	0	3	FIELD_USE	1
791	801	8	Complex.java	sqrt	THIS	Complex	UNKNOWN_AS	0	3	CLALLER_USE	1
792	806	8	Complex.java	sqrt	t	double	sqrt()	0	0	PARAM_USE	0
792	806	8	Complex.java	sqrt	THIS	Complex	UNKNOWN_AS	0	3	CLALLER_USE	1
793	863	8	Complex.java	tan	THIS	Complex	UNKNOWN_AS	0	0	FIELD_USE	1
794	901	8	Complex.java	tanh	THIS	Complex	UNKNOWN_AS	0	0	FIELD_USE	1
795	952	8	Complex.java	nthRoot	n	int	PARAM_AS	1	1	PARAM_USE	1
795	952	8	Complex.java	nthRoot	THIS	Complex	UNKNOWN_AS	0	1	FIELD_USE	0
796	960	8	Complex.java	nthRoot	result	List<Complex>	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
796	960	8	Complex.java	nthRoot	n	int	PARAM_AS	1	1	NO_USE	0
796	960	8	Complex.java	nthRoot	THIS	Complex	UNKNOWN_AS	0	1	FIELD_USE	1
797	965	8	Complex.java	nthRoot	result	List<Complex>	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
797	965	8	Complex.java	nthRoot	n	int	PARAM_AS	1	1	NO_USE	0
797	965	8	Complex.java	nthRoot	THIS	Complex	UNKNOWN_AS	0	1	NO_USE	1
798	118	8	BigFraction.java	BigFraction	num	BigInteger	PARAM_AS	1	2	NO_USE	1
798	118	8	BigFraction.java	BigFraction	den	BigInteger	PARAM_AS	1	3	NO_USE	0
798	118	8	BigFraction.java	BigFraction	THIS	BigFraction	UNKNOWN_AS	0	0	FIELD_USE	0
799	121	8	BigFraction.java	BigFraction	num	BigInteger	PARAM_AS	1	2	NO_USE	0
799	121	8	BigFraction.java	BigFraction	den	BigInteger	PARAM_AS	1	3	NO_USE	1
799	121	8	BigFraction.java	BigFraction	THIS	BigFraction	UNKNOWN_AS	0	0	FIELD_USE	0
800	124	8	BigFraction.java	BigFraction	num	BigInteger	PARAM_AS	1	2	NO_USE	0
800	124	8	BigFraction.java	BigFraction	den	BigInteger	PARAM_AS	1	3	NO_USE	1
800	124	8	BigFraction.java	BigFraction	THIS	BigFraction	UNKNOWN_AS	0	0	FIELD_USE	0
801	127	8	BigFraction.java	BigFraction	num	BigInteger	PARAM_AS	1	2	CLALLER_USE	1
801	127	8	BigFraction.java	BigFraction	den	BigInteger	PARAM_AS	1	3	PARAM_USE	0
801	127	8	BigFraction.java	BigFraction	THIS	BigFraction	UNKNOWN_AS	0	0	NO_USE	0
802	134	12	BigFraction.java	BigFraction	gcd	BigInteger	gcd()	0	1	PARAM_USE	1
802	134	12	BigFraction.java	BigFraction	num	BigInteger	PARAM_AS	1	2	CLALLER_USE	0
802	134	12	BigFraction.java	BigFraction	den	BigInteger	PARAM_AS	1	3	CLALLER_USE	0
802	134	12	BigFraction.java	BigFraction	THIS	BigFraction	NAME	0	0	NO_USE	0
803	140	12	BigFraction.java	BigFraction	gcd	BigInteger	gcd()	0	1	NO_USE	0
803	140	12	BigFraction.java	BigFraction	num	BigInteger	divide()	1	2	CLALLER_USE	0
803	140	12	BigFraction.java	BigFraction	den	BigInteger	divide()	1	3	CLALLER_USE	1
803	140	12	BigFraction.java	BigFraction	THIS	BigFraction	NAME	0	0	NO_USE	0
804	174	8	BigFraction.java	BigFraction	value	double	PARAM_AS	1	2	NO_USE	1
804	174	8	BigFraction.java	BigFraction	THIS	BigFraction	UNKNOWN_AS	0	0	FIELD_USE	0
805	177	8	BigFraction.java	BigFraction	value	double	PARAM_AS	1	2	NO_USE	1
805	177	8	BigFraction.java	BigFraction	THIS	BigFraction	UNKNOWN_AS	0	0	FIELD_USE	0
806	186	8	BigFraction.java	BigFraction	bits	long	doubleToLongBits()	0	0	NO_USE	0
806	186	8	BigFraction.java	BigFraction	sign	long	&	0	1	NO_USE	0
806	186	8	BigFraction.java	BigFraction	exponent	long	&	0	1	NO_USE	1
806	186	8	BigFraction.java	BigFraction	m	long	&	0	0	NO_USE	0
806	186	8	BigFraction.java	BigFraction	value	double	PARAM_AS	1	2	NO_USE	0
806	186	8	BigFraction.java	BigFraction	THIS	BigFraction	UNKNOWN_AS	0	0	NO_USE	0
807	190	8	BigFraction.java	BigFraction	bits	long	doubleToLongBits()	0	0	NO_USE	0
807	190	8	BigFraction.java	BigFraction	sign	long	&	0	1	NO_USE	1
807	190	8	BigFraction.java	BigFraction	exponent	long	&	0	1	NO_USE	0
807	190	8	BigFraction.java	BigFraction	m	long	0x0010000000000000L	0	0	-x	0
807	190	8	BigFraction.java	BigFraction	value	double	PARAM_AS	1	2	NO_USE	0
807	190	8	BigFraction.java	BigFraction	THIS	BigFraction	UNKNOWN_AS	0	0	NO_USE	0
808	199	8	BigFraction.java	BigFraction	bits	long	doubleToLongBits()	0	0	NO_USE	0
808	199	8	BigFraction.java	BigFraction	sign	long	&	0	1	NO_USE	0
808	199	8	BigFraction.java	BigFraction	exponent	long	&	0	1	NO_USE	0
808	199	8	BigFraction.java	BigFraction	m	long	>>	0	0	PARAM_USE	0
808	199	8	BigFraction.java	BigFraction	k	int	-	0	1	-x	1
808	199	8	BigFraction.java	BigFraction	value	double	PARAM_AS	1	2	NO_USE	0
808	199	8	BigFraction.java	BigFraction	THIS	BigFraction	UNKNOWN_AS	0	0	NO_USE	0
809	276	8	BigFraction.java	BigFraction	overflow	long	NAME	0	3	NO_USE	1
809	276	8	BigFraction.java	BigFraction	r0	double	NAME	0	0	NO_USE	0
809	276	8	BigFraction.java	BigFraction	a0	long	CAST	0	2	OTHER_USE	1
809	276	8	BigFraction.java	BigFraction	value	double	PARAM_AS	1	2	OTHER_USE	0
809	276	8	BigFraction.java	BigFraction	epsilon	double	PARAM_AS	1	2	NO_USE	0
809	276	8	BigFraction.java	BigFraction	maxDenominator	int	PARAM_AS	1	2	NO_USE	0
809	276	8	BigFraction.java	BigFraction	maxIterations	int	PARAM_AS	1	2	NO_USE	0
809	276	8	BigFraction.java	BigFraction	THIS	BigFraction	UNKNOWN_AS	0	0	NO_USE	0
810	282	8	BigFraction.java	BigFraction	overflow	long	NAME	0	3	NO_USE	0
810	282	8	BigFraction.java	BigFraction	r0	double	NAME	0	0	NO_USE	0
810	282	8	BigFraction.java	BigFraction	a0	long	CAST	0	2	PARAM_USE	1
810	282	8	BigFraction.java	BigFraction	value	double	PARAM_AS	1	2	NO_USE	1
810	282	8	BigFraction.java	BigFraction	epsilon	double	PARAM_AS	1	2	NO_USE	1
810	282	8	BigFraction.java	BigFraction	maxDenominator	int	PARAM_AS	1	2	NO_USE	0
810	282	8	BigFraction.java	BigFraction	maxIterations	int	PARAM_AS	1	2	NO_USE	0
810	282	8	BigFraction.java	BigFraction	THIS	BigFraction	UNKNOWN_AS	0	0	NO_USE	0
811	304	12	BigFraction.java	BigFraction	r1	double	/	0	0	NO_USE	0
811	304	12	BigFraction.java	BigFraction	a1	long	CAST	0	0	NO_USE	0
811	304	12	BigFraction.java	BigFraction	overflow	long	NAME	0	3	NO_USE	1
811	304	12	BigFraction.java	BigFraction	r0	double	NAME	0	0	NO_USE	0
811	304	12	BigFraction.java	BigFraction	a0	long	CAST	0	2	NO_USE	0
811	304	12	BigFraction.java	BigFraction	p0	long	1	0	0	NO_USE	0
811	304	12	BigFraction.java	BigFraction	q0	long	0	0	0	NO_USE	0
811	304	12	BigFraction.java	BigFraction	p1	long	NAME	0	0	NO_USE	0
811	304	12	BigFraction.java	BigFraction	q1	long	1	0	0	NO_USE	0
811	304	12	BigFraction.java	BigFraction	p2	long	+	0	1	OTHER_USE	1
811	304	12	BigFraction.java	BigFraction	q2	long	+	0	3	OTHER_USE	1
811	304	12	BigFraction.java	BigFraction	n	int	0	0	2	NO_USE	0
811	304	12	BigFraction.java	BigFraction	stop	boolean	LITERAL	0	0	NO_USE	0
811	304	12	BigFraction.java	BigFraction	value	double	PARAM_AS	1	2	OTHER_USE	0
811	304	12	BigFraction.java	BigFraction	epsilon	double	PARAM_AS	1	2	NO_USE	0
811	304	12	BigFraction.java	BigFraction	maxDenominator	int	PARAM_AS	1	2	NO_USE	0
811	304	12	BigFraction.java	BigFraction	maxIterations	int	PARAM_AS	1	2	NO_USE	0
811	304	12	BigFraction.java	BigFraction	THIS	BigFraction	NAME	0	0	NO_USE	0
812	309	12	BigFraction.java	BigFraction	r1	double	/	0	0	OTHER_USE	0
812	309	12	BigFraction.java	BigFraction	a1	long	CAST	0	0	OTHER_USE	0
812	309	12	BigFraction.java	BigFraction	convergent	double	/	0	1	NO_USE	1
812	309	12	BigFraction.java	BigFraction	overflow	long	NAME	0	3	NO_USE	0
812	309	12	BigFraction.java	BigFraction	r0	double	NAME	0	0	NO_USE	0
812	309	12	BigFraction.java	BigFraction	a0	long	CAST	0	2	NO_USE	0
812	309	12	BigFraction.java	BigFraction	p0	long	1	0	0	NO_USE	0
812	309	12	BigFraction.java	BigFraction	q0	long	0	0	0	NO_USE	0
812	309	12	BigFraction.java	BigFraction	p1	long	NAME	0	0	OTHER_USE	0
812	309	12	BigFraction.java	BigFraction	q1	long	1	0	0	OTHER_USE	0
812	309	12	BigFraction.java	BigFraction	p2	long	+	0	1	OTHER_USE	0
812	309	12	BigFraction.java	BigFraction	q2	long	+	0	3	OTHER_USE	1
812	309	12	BigFraction.java	BigFraction	n	int	0	0	2	NO_USE	1
812	309	12	BigFraction.java	BigFraction	stop	boolean	LITERAL	0	0	NO_USE	0
812	309	12	BigFraction.java	BigFraction	value	double	PARAM_AS	1	2	NO_USE	1
812	309	12	BigFraction.java	BigFraction	epsilon	double	PARAM_AS	1	2	NO_USE	1
812	309	12	BigFraction.java	BigFraction	maxDenominator	int	PARAM_AS	1	2	NO_USE	1
812	309	12	BigFraction.java	BigFraction	maxIterations	int	PARAM_AS	1	2	NO_USE	1
812	309	12	BigFraction.java	BigFraction	THIS	BigFraction	NAME	0	0	NO_USE	0
813	323	8	BigFraction.java	BigFraction	overflow	long	NAME	0	3	NO_USE	0
813	323	8	BigFraction.java	BigFraction	r0	double	NAME	0	0	NO_USE	0
813	323	8	BigFraction.java	BigFraction	a0	long	NAME	0	2	NO_USE	0
813	323	8	BigFraction.java	BigFraction	p0	long	NAME	0	0	NO_USE	0
813	323	8	BigFraction.java	BigFraction	q0	long	NAME	0	0	NO_USE	0
813	323	8	BigFraction.java	BigFraction	p1	long	NAME	0	0	NO_USE	0
813	323	8	BigFraction.java	BigFraction	q1	long	NAME	0	0	NO_USE	0
813	323	8	BigFraction.java	BigFraction	p2	long	+	0	1	NO_USE	0
813	323	8	BigFraction.java	BigFraction	q2	long	+	0	3	NO_USE	0
813	323	8	BigFraction.java	BigFraction	n	int	0	0	2	NO_USE	1
813	323	8	BigFraction.java	BigFraction	stop	boolean	LITERAL	0	0	NO_USE	0
813	323	8	BigFraction.java	BigFraction	value	double	PARAM_AS	1	2	OTHER_USE	0
813	323	8	BigFraction.java	BigFraction	epsilon	double	PARAM_AS	1	2	NO_USE	0
813	323	8	BigFraction.java	BigFraction	maxDenominator	int	PARAM_AS	1	2	NO_USE	0
813	323	8	BigFraction.java	BigFraction	maxIterations	int	PARAM_AS	1	2	OTHER_USE	1
813	323	8	BigFraction.java	BigFraction	THIS	BigFraction	NAME	0	0	NO_USE	0
814	327	8	BigFraction.java	BigFraction	overflow	long	NAME	0	3	NO_USE	0
814	327	8	BigFraction.java	BigFraction	r0	double	NAME	0	0	NO_USE	0
814	327	8	BigFraction.java	BigFraction	a0	long	NAME	0	2	NO_USE	0
814	327	8	BigFraction.java	BigFraction	p0	long	NAME	0	0	NO_USE	0
814	327	8	BigFraction.java	BigFraction	q0	long	NAME	0	0	NO_USE	0
814	327	8	BigFraction.java	BigFraction	p1	long	NAME	0	0	PARAM_USE	0
814	327	8	BigFraction.java	BigFraction	q1	long	NAME	0	0	PARAM_USE	0
814	327	8	BigFraction.java	BigFraction	p2	long	+	0	1	PARAM_USE	0
814	327	8	BigFraction.java	BigFraction	q2	long	+	0	3	PARAM_USE	1
814	327	8	BigFraction.java	BigFraction	n	int	0	0	2	NO_USE	0
814	327	8	BigFraction.java	BigFraction	stop	boolean	LITERAL	0	0	NO_USE	0
814	327	8	BigFraction.java	BigFraction	value	double	PARAM_AS	1	2	NO_USE	0
814	327	8	BigFraction.java	BigFraction	epsilon	double	PARAM_AS	1	2	NO_USE	0
814	327	8	BigFraction.java	BigFraction	maxDenominator	int	PARAM_AS	1	2	NO_USE	1
814	327	8	BigFraction.java	BigFraction	maxIterations	int	PARAM_AS	1	2	NO_USE	0
814	327	8	BigFraction.java	BigFraction	THIS	BigFraction	NAME	0	0	NO_USE	0
815	434	8	BigFraction.java	getReducedFraction	numerator	int	PARAM_AS	1	1	NO_USE	1
815	434	8	BigFraction.java	getReducedFraction	denominator	int	PARAM_AS	1	0	NO_USE	0
815	434	8	BigFraction.java	getReducedFraction	THIS	BigFraction	UNKNOWN_AS	0	0	NO_USE	0
816	509	8	BigFraction.java	add	fraction	BigFraction	PARAM_AS	1	3	NO_USE	1
816	509	8	BigFraction.java	add	THIS	BigFraction	UNKNOWN_AS	0	2	FIELD_USE	0
817	512	8	BigFraction.java	add	fraction	BigFraction	PARAM_AS	1	3	NO_USE	1
817	512	8	BigFraction.java	add	THIS	BigFraction	UNKNOWN_AS	0	2	NO_USE	0
818	519	8	BigFraction.java	add	num	BigInteger	NULL	0	0	NO_USE	0
818	519	8	BigFraction.java	add	den	BigInteger	NULL	0	0	NO_USE	0
818	519	8	BigFraction.java	add	fraction	BigFraction	PARAM_AS	1	3	OTHER_USE	1
818	519	8	BigFraction.java	add	THIS	BigFraction	UNKNOWN_AS	0	2	FIELD_USE	1
819	616	8	BigFraction.java	divide	bg	BigInteger	PARAM_AS	1	1	NO_USE	1
819	616	8	BigFraction.java	divide	THIS	BigFraction	UNKNOWN_AS	0	0	FIELD_USE	0
820	666	8	BigFraction.java	divide	fraction	BigFraction	PARAM_AS	1	2	NO_USE	1
820	666	8	BigFraction.java	divide	THIS	BigFraction	UNKNOWN_AS	0	1	FIELD_USE	0
821	669	8	BigFraction.java	divide	fraction	BigFraction	PARAM_AS	1	2	NO_USE	1
821	669	8	BigFraction.java	divide	THIS	BigFraction	UNKNOWN_AS	0	1	FIELD_USE	1
822	709	8	BigFraction.java	equals	ret	boolean	LITERAL	0	0	NO_USE	0
822	709	8	BigFraction.java	equals	other	Object	PARAM_AS	1	2	OTHER_USE	1
822	709	8	BigFraction.java	equals	THIS	BigFraction	UNKNOWN_AS	0	1	CLALLER_USE	1
823	711	15	BigFraction.java	equals	ret	boolean	LITERAL	0	0	NO_USE	0
823	711	15	BigFraction.java	equals	other	Object	PARAM_AS	1	2	OTHER_USE	1
823	711	15	BigFraction.java	equals	THIS	BigFraction	UNKNOWN_AS	0	1	CLALLER_USE	0
824	852	8	BigFraction.java	multiply	bg	BigInteger	PARAM_AS	1	1	NO_USE	1
824	852	8	BigFraction.java	multiply	THIS	BigFraction	UNKNOWN_AS	0	0	NO_USE	0
825	897	8	BigFraction.java	multiply	fraction	BigFraction	PARAM_AS	1	2	NO_USE	1
825	897	8	BigFraction.java	multiply	THIS	BigFraction	UNKNOWN_AS	0	2	FIELD_USE	0
826	900	8	BigFraction.java	multiply	fraction	BigFraction	PARAM_AS	1	2	NO_USE	1
826	900	8	BigFraction.java	multiply	THIS	BigFraction	UNKNOWN_AS	0	2	NO_USE	1
827	944	8	BigFraction.java	pow	exponent	int	PARAM_AS	1	1	-x	1
827	944	8	BigFraction.java	pow	THIS	BigFraction	UNKNOWN_AS	0	0	FIELD_USE	0
828	961	8	BigFraction.java	pow	exponent	long	PARAM_AS	1	1	-x	1
828	961	8	BigFraction.java	pow	THIS	BigFraction	UNKNOWN_AS	0	0	FIELD_USE	0
829	980	8	BigFraction.java	pow	exponent	BigInteger	PARAM_AS	1	1	CLALLER_USE	1
829	980	8	BigFraction.java	pow	THIS	BigFraction	UNKNOWN_AS	0	0	FIELD_USE	0
830	1039	8	BigFraction.java	subtract	bg	BigInteger	PARAM_AS	1	1	NO_USE	1
830	1039	8	BigFraction.java	subtract	THIS	BigFraction	UNKNOWN_AS	0	0	NO_USE	0
831	1082	8	BigFraction.java	subtract	fraction	BigFraction	PARAM_AS	1	3	NO_USE	1
831	1082	8	BigFraction.java	subtract	THIS	BigFraction	UNKNOWN_AS	0	2	FIELD_USE	0
832	1085	8	BigFraction.java	subtract	fraction	BigFraction	PARAM_AS	1	3	NO_USE	1
832	1085	8	BigFraction.java	subtract	THIS	BigFraction	UNKNOWN_AS	0	2	NO_USE	0
833	1091	8	BigFraction.java	subtract	num	BigInteger	NULL	0	0	NO_USE	0
833	1091	8	BigFraction.java	subtract	den	BigInteger	NULL	0	0	NO_USE	0
833	1091	8	BigFraction.java	subtract	fraction	BigFraction	PARAM_AS	1	3	OTHER_USE	1
833	1091	8	BigFraction.java	subtract	THIS	BigFraction	UNKNOWN_AS	0	2	FIELD_USE	1
834	1114	8	BigFraction.java	toString	str	String	NULL	0	0	NO_USE	0
834	1114	8	BigFraction.java	toString	THIS	BigFraction	UNKNOWN_AS	0	2	FIELD_USE	1
835	1116	15	BigFraction.java	toString	str	String	toString()	0	0	NO_USE	0
835	1116	15	BigFraction.java	toString	THIS	BigFraction	UNKNOWN_AS	0	2	FIELD_USE	1
836	169	8	BigFractionFormat.java	format	ret	StringBuffer	UNKNOWN_AS	0	0	NO_USE	0
836	169	8	BigFractionFormat.java	format	obj	Object	PARAM_AS	1	3	OTHER_USE	1
836	169	8	BigFractionFormat.java	format	toAppendTo	StringBuffer	PARAM_AS	1	0	PARAM_USE	0
836	169	8	BigFractionFormat.java	format	pos	FieldPosition	PARAM_AS	1	0	PARAM_USE	0
836	169	8	BigFractionFormat.java	format	THIS	BigFractionFormat	UNKNOWN_AS	0	0	CLALLER_USE	0
837	171	15	BigFractionFormat.java	format	ret	StringBuffer	format()	0	0	NO_USE	0
837	171	15	BigFractionFormat.java	format	obj	Object	PARAM_AS	1	3	OTHER_USE	1
837	171	15	BigFractionFormat.java	format	toAppendTo	StringBuffer	PARAM_AS	1	0	PARAM_USE	0
837	171	15	BigFractionFormat.java	format	pos	FieldPosition	PARAM_AS	1	0	PARAM_USE	0
837	171	15	BigFractionFormat.java	format	THIS	BigFractionFormat	UNKNOWN_AS	0	0	CLALLER_USE	0
838	173	15	BigFractionFormat.java	format	ret	StringBuffer	format()	0	0	NO_USE	0
838	173	15	BigFractionFormat.java	format	obj	Object	PARAM_AS	1	3	OTHER_USE	1
838	173	15	BigFractionFormat.java	format	toAppendTo	StringBuffer	PARAM_AS	1	0	PARAM_USE	0
838	173	15	BigFractionFormat.java	format	pos	FieldPosition	PARAM_AS	1	0	PARAM_USE	0
838	173	15	BigFractionFormat.java	format	THIS	BigFractionFormat	UNKNOWN_AS	0	0	CLALLER_USE	0
839	195	8	BigFractionFormat.java	parse	parsePosition	ParsePosition	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	1
839	195	8	BigFractionFormat.java	parse	result	BigFraction	parse()	0	0	NO_USE	0
839	195	8	BigFractionFormat.java	parse	source	String	PARAM_AS	1	0	PARAM_USE	0
839	195	8	BigFractionFormat.java	parse	THIS	BigFractionFormat	UNKNOWN_AS	0	0	FIELD_USE	0
840	219	8	BigFractionFormat.java	parse	initialIndex	int	getIndex()	0	0	PARAM_USE	0
840	219	8	BigFractionFormat.java	parse	num	BigInteger	parseNextBigInteger()	0	1	NO_USE	1
840	219	8	BigFractionFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
840	219	8	BigFractionFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	CLALLER_USE	0
840	219	8	BigFractionFormat.java	parse	THIS	BigFractionFormat	UNKNOWN_AS	0	0	NO_USE	0
841	252	8	BigFractionFormat.java	parse	initialIndex	int	getIndex()	0	0	PARAM_USE	0
841	252	8	BigFractionFormat.java	parse	num	BigInteger	parseNextBigInteger()	0	1	NO_USE	0
841	252	8	BigFractionFormat.java	parse	startIndex	int	getIndex()	0	0	NO_USE	0
841	252	8	BigFractionFormat.java	parse	c	char	parseNextCharacter()	0	0	NO_USE	0
841	252	8	BigFractionFormat.java	parse	den	BigInteger	parseNextBigInteger()	0	1	NO_USE	1
841	252	8	BigFractionFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
841	252	8	BigFractionFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	CLALLER_USE	0
841	252	8	BigFractionFormat.java	parse	THIS	BigFractionFormat	UNKNOWN_AS	0	0	NO_USE	0
842	101	8	ProperFractionFormat.java	format	num	int	%	0	0	PARAM_USE	0
842	101	8	ProperFractionFormat.java	format	den	int	getDenominator()	0	0	NO_USE	0
842	101	8	ProperFractionFormat.java	format	whole	int	/	0	1	PARAM_USE	1
842	101	8	ProperFractionFormat.java	format	fraction	Fraction	PARAM_AS	1	0	NO_USE	0
842	101	8	ProperFractionFormat.java	format	toAppendTo	StringBuffer	PARAM_AS	1	0	PARAM_USE	0
842	101	8	ProperFractionFormat.java	format	pos	FieldPosition	PARAM_AS	1	0	PARAM_USE	0
842	101	8	ProperFractionFormat.java	format	THIS	ProperFractionFormat	UNKNOWN_AS	0	0	CLALLER_USE	0
843	138	8	ProperFractionFormat.java	parse	ret	Fraction	OTHERS	0	1	RET_USE	1
843	138	8	ProperFractionFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
843	138	8	ProperFractionFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	NO_USE	0
843	138	8	ProperFractionFormat.java	parse	THIS	ProperFractionFormat	UNKNOWN_AS	0	0	NO_USE	0
844	149	8	ProperFractionFormat.java	parse	ret	Fraction	OTHERS	0	1	NO_USE	0
844	149	8	ProperFractionFormat.java	parse	initialIndex	int	getIndex()	0	0	PARAM_USE	0
844	149	8	ProperFractionFormat.java	parse	whole	Number	parse()	0	1	NO_USE	1
844	149	8	ProperFractionFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
844	149	8	ProperFractionFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	CLALLER_USE	0
844	149	8	ProperFractionFormat.java	parse	THIS	ProperFractionFormat	UNKNOWN_AS	0	0	NO_USE	0
845	162	8	ProperFractionFormat.java	parse	ret	Fraction	OTHERS	0	1	NO_USE	0
845	162	8	ProperFractionFormat.java	parse	initialIndex	int	getIndex()	0	0	PARAM_USE	0
845	162	8	ProperFractionFormat.java	parse	whole	Number	parse()	0	1	NO_USE	0
845	162	8	ProperFractionFormat.java	parse	num	Number	parse()	0	2	NO_USE	1
845	162	8	ProperFractionFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
845	162	8	ProperFractionFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	CLALLER_USE	0
845	162	8	ProperFractionFormat.java	parse	THIS	ProperFractionFormat	UNKNOWN_AS	0	0	NO_USE	0
846	170	8	ProperFractionFormat.java	parse	ret	Fraction	OTHERS	0	1	NO_USE	0
846	170	8	ProperFractionFormat.java	parse	initialIndex	int	getIndex()	0	0	PARAM_USE	0
846	170	8	ProperFractionFormat.java	parse	whole	Number	parse()	0	1	NO_USE	0
846	170	8	ProperFractionFormat.java	parse	num	Number	parse()	0	2	NO_USE	1
846	170	8	ProperFractionFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
846	170	8	ProperFractionFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	CLALLER_USE	0
846	170	8	ProperFractionFormat.java	parse	THIS	ProperFractionFormat	UNKNOWN_AS	0	0	NO_USE	0
847	201	8	ProperFractionFormat.java	parse	ret	Fraction	OTHERS	0	1	NO_USE	0
847	201	8	ProperFractionFormat.java	parse	initialIndex	int	getIndex()	0	0	PARAM_USE	0
847	201	8	ProperFractionFormat.java	parse	whole	Number	parse()	0	1	NO_USE	0
847	201	8	ProperFractionFormat.java	parse	num	Number	parse()	0	2	NO_USE	0
847	201	8	ProperFractionFormat.java	parse	startIndex	int	getIndex()	0	0	NO_USE	0
847	201	8	ProperFractionFormat.java	parse	c	char	parseNextCharacter()	0	0	NO_USE	0
847	201	8	ProperFractionFormat.java	parse	den	Number	parse()	0	2	NO_USE	1
847	201	8	ProperFractionFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
847	201	8	ProperFractionFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	CLALLER_USE	0
847	201	8	ProperFractionFormat.java	parse	THIS	ProperFractionFormat	UNKNOWN_AS	0	0	NO_USE	0
848	209	8	ProperFractionFormat.java	parse	ret	Fraction	OTHERS	0	1	NO_USE	0
848	209	8	ProperFractionFormat.java	parse	initialIndex	int	getIndex()	0	0	PARAM_USE	0
848	209	8	ProperFractionFormat.java	parse	whole	Number	parse()	0	1	NO_USE	0
848	209	8	ProperFractionFormat.java	parse	num	Number	parse()	0	2	NO_USE	0
848	209	8	ProperFractionFormat.java	parse	startIndex	int	getIndex()	0	0	NO_USE	0
848	209	8	ProperFractionFormat.java	parse	c	char	parseNextCharacter()	0	0	NO_USE	0
848	209	8	ProperFractionFormat.java	parse	den	Number	parse()	0	2	NO_USE	1
848	209	8	ProperFractionFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
848	209	8	ProperFractionFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	CLALLER_USE	0
848	209	8	ProperFractionFormat.java	parse	THIS	ProperFractionFormat	UNKNOWN_AS	0	0	NO_USE	0
849	227	8	ProperFractionFormat.java	setWholeFormat	format	NumberFormat	PARAM_AS	1	1	NO_USE	1
849	227	8	ProperFractionFormat.java	setWholeFormat	THIS	ProperFractionFormat	UNKNOWN_AS	0	0	FIELD_USE	0
850	120	8	AbstractFormat.java	setDenominatorFormat	format	NumberFormat	PARAM_AS	1	1	NO_USE	1
850	120	8	AbstractFormat.java	setDenominatorFormat	THIS	AbstractFormat	UNKNOWN_AS	0	0	FIELD_USE	0
851	132	8	AbstractFormat.java	setNumeratorFormat	format	NumberFormat	PARAM_AS	1	1	NO_USE	1
851	132	8	AbstractFormat.java	setNumeratorFormat	THIS	AbstractFormat	UNKNOWN_AS	0	0	FIELD_USE	0
852	162	9	AbstractFormat.java	parseNextCharacter	index	int	getIndex()	0	2	x++	1
852	162	9	AbstractFormat.java	parseNextCharacter	n	int	length()	0	2	<	1
852	162	9	AbstractFormat.java	parseNextCharacter	ret	char	0	0	0	NO_USE	0
852	162	9	AbstractFormat.java	parseNextCharacter	source	String	PARAM_AS	1	0	CLALLER_USE	0
852	162	9	AbstractFormat.java	parseNextCharacter	pos	ParsePosition	PARAM_AS	1	0	CLALLER_USE	0
852	162	9	AbstractFormat.java	parseNextCharacter	THIS	AbstractFormat	UNKNOWN_AS	0	0	NO_USE	0
853	169	13	AbstractFormat.java	parseNextCharacter	c	char	charAt()	0	0	OTHER_USE	0
853	169	13	AbstractFormat.java	parseNextCharacter	index	int	getIndex()	0	2	NO_USE	1
853	169	13	AbstractFormat.java	parseNextCharacter	n	int	length()	0	2	NO_USE	1
853	169	13	AbstractFormat.java	parseNextCharacter	ret	char	0	0	0	NO_USE	0
853	169	13	AbstractFormat.java	parseNextCharacter	source	String	PARAM_AS	1	0	NO_USE	0
853	169	13	AbstractFormat.java	parseNextCharacter	pos	ParsePosition	PARAM_AS	1	0	NO_USE	0
853	169	13	AbstractFormat.java	parseNextCharacter	THIS	AbstractFormat	UNKNOWN_AS	0	0	NO_USE	0
854	176	8	FractionFormat.java	format	ret	StringBuffer	NULL	0	0	NO_USE	0
854	176	8	FractionFormat.java	format	obj	Object	PARAM_AS	1	2	OTHER_USE	1
854	176	8	FractionFormat.java	format	toAppendTo	StringBuffer	PARAM_AS	1	0	PARAM_USE	0
854	176	8	FractionFormat.java	format	pos	FieldPosition	PARAM_AS	1	0	PARAM_USE	0
854	176	8	FractionFormat.java	format	THIS	FractionFormat	UNKNOWN_AS	0	0	CLALLER_USE	0
855	178	15	FractionFormat.java	format	ret	StringBuffer	format()	0	0	NO_USE	0
855	178	15	FractionFormat.java	format	obj	Object	PARAM_AS	1	2	OTHER_USE	1
855	178	15	FractionFormat.java	format	toAppendTo	StringBuffer	PARAM_AS	1	0	PARAM_USE	0
855	178	15	FractionFormat.java	format	pos	FieldPosition	PARAM_AS	1	0	PARAM_USE	0
855	178	15	FractionFormat.java	format	THIS	FractionFormat	UNKNOWN_AS	0	0	CLALLER_USE	0
856	206	8	FractionFormat.java	parse	parsePosition	ParsePosition	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	1
856	206	8	FractionFormat.java	parse	result	Fraction	parse()	0	0	NO_USE	0
856	206	8	FractionFormat.java	parse	source	String	PARAM_AS	1	0	PARAM_USE	0
856	206	8	FractionFormat.java	parse	THIS	FractionFormat	UNKNOWN_AS	0	0	FIELD_USE	0
857	230	8	FractionFormat.java	parse	initialIndex	int	getIndex()	0	0	PARAM_USE	0
857	230	8	FractionFormat.java	parse	num	Number	parse()	0	1	NO_USE	1
857	230	8	FractionFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
857	230	8	FractionFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	CLALLER_USE	0
857	230	8	FractionFormat.java	parse	THIS	FractionFormat	UNKNOWN_AS	0	0	NO_USE	0
858	263	8	FractionFormat.java	parse	initialIndex	int	getIndex()	0	0	PARAM_USE	0
858	263	8	FractionFormat.java	parse	num	Number	parse()	0	1	NO_USE	0
858	263	8	FractionFormat.java	parse	startIndex	int	getIndex()	0	0	NO_USE	0
858	263	8	FractionFormat.java	parse	c	char	parseNextCharacter()	0	0	NO_USE	0
858	263	8	FractionFormat.java	parse	den	Number	parse()	0	1	NO_USE	1
858	263	8	FractionFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
858	263	8	FractionFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	CLALLER_USE	0
858	263	8	FractionFormat.java	parse	THIS	FractionFormat	UNKNOWN_AS	0	0	NO_USE	0
859	100	8	ProperBigFractionFormat.java	format	num	BigInteger	remainder()	0	1	CLALLER_USE	0
859	100	8	ProperBigFractionFormat.java	format	den	BigInteger	getDenominator()	0	0	NO_USE	0
859	100	8	ProperBigFractionFormat.java	format	whole	BigInteger	divide()	0	1	PARAM_USE	1
859	100	8	ProperBigFractionFormat.java	format	fraction	BigFraction	PARAM_AS	1	0	NO_USE	0
859	100	8	ProperBigFractionFormat.java	format	toAppendTo	StringBuffer	PARAM_AS	1	0	PARAM_USE	0
859	100	8	ProperBigFractionFormat.java	format	pos	FieldPosition	PARAM_AS	1	0	PARAM_USE	0
859	100	8	ProperBigFractionFormat.java	format	THIS	ProperBigFractionFormat	UNKNOWN_AS	0	0	CLALLER_USE	0
860	103	12	ProperBigFractionFormat.java	format	num	BigInteger	remainder()	0	1	CLALLER_USE	1
860	103	12	ProperBigFractionFormat.java	format	den	BigInteger	getDenominator()	0	0	NO_USE	0
860	103	12	ProperBigFractionFormat.java	format	whole	BigInteger	divide()	0	1	NO_USE	0
860	103	12	ProperBigFractionFormat.java	format	fraction	BigFraction	PARAM_AS	1	0	NO_USE	0
860	103	12	ProperBigFractionFormat.java	format	toAppendTo	StringBuffer	PARAM_AS	1	0	NO_USE	0
860	103	12	ProperBigFractionFormat.java	format	pos	FieldPosition	PARAM_AS	1	0	NO_USE	0
860	103	12	ProperBigFractionFormat.java	format	THIS	ProperBigFractionFormat	UNKNOWN_AS	0	0	NO_USE	0
861	138	8	ProperBigFractionFormat.java	parse	ret	BigFraction	OTHERS	0	1	RET_USE	1
861	138	8	ProperBigFractionFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
861	138	8	ProperBigFractionFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	NO_USE	0
861	138	8	ProperBigFractionFormat.java	parse	THIS	ProperBigFractionFormat	UNKNOWN_AS	0	0	NO_USE	0
862	149	8	ProperBigFractionFormat.java	parse	ret	BigFraction	OTHERS	0	1	NO_USE	0
862	149	8	ProperBigFractionFormat.java	parse	initialIndex	int	getIndex()	0	0	PARAM_USE	0
862	149	8	ProperBigFractionFormat.java	parse	whole	BigInteger	parseNextBigInteger()	0	1	NO_USE	1
862	149	8	ProperBigFractionFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
862	149	8	ProperBigFractionFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	CLALLER_USE	0
862	149	8	ProperBigFractionFormat.java	parse	THIS	ProperBigFractionFormat	UNKNOWN_AS	0	0	NO_USE	0
863	162	8	ProperBigFractionFormat.java	parse	ret	BigFraction	OTHERS	0	1	NO_USE	0
863	162	8	ProperBigFractionFormat.java	parse	initialIndex	int	getIndex()	0	0	PARAM_USE	0
863	162	8	ProperBigFractionFormat.java	parse	whole	BigInteger	parseNextBigInteger()	0	1	NO_USE	0
863	162	8	ProperBigFractionFormat.java	parse	num	BigInteger	parseNextBigInteger()	0	2	NO_USE	1
863	162	8	ProperBigFractionFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
863	162	8	ProperBigFractionFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	CLALLER_USE	0
863	162	8	ProperBigFractionFormat.java	parse	THIS	ProperBigFractionFormat	UNKNOWN_AS	0	0	NO_USE	0
864	170	8	ProperBigFractionFormat.java	parse	ret	BigFraction	OTHERS	0	1	NO_USE	0
864	170	8	ProperBigFractionFormat.java	parse	initialIndex	int	getIndex()	0	0	PARAM_USE	0
864	170	8	ProperBigFractionFormat.java	parse	whole	BigInteger	parseNextBigInteger()	0	1	NO_USE	0
864	170	8	ProperBigFractionFormat.java	parse	num	BigInteger	parseNextBigInteger()	0	2	NO_USE	1
864	170	8	ProperBigFractionFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
864	170	8	ProperBigFractionFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	CLALLER_USE	0
864	170	8	ProperBigFractionFormat.java	parse	THIS	ProperBigFractionFormat	UNKNOWN_AS	0	0	NO_USE	0
865	201	8	ProperBigFractionFormat.java	parse	ret	BigFraction	OTHERS	0	1	NO_USE	0
865	201	8	ProperBigFractionFormat.java	parse	initialIndex	int	getIndex()	0	0	PARAM_USE	0
865	201	8	ProperBigFractionFormat.java	parse	whole	BigInteger	parseNextBigInteger()	0	1	NO_USE	0
865	201	8	ProperBigFractionFormat.java	parse	num	BigInteger	parseNextBigInteger()	0	2	NO_USE	0
865	201	8	ProperBigFractionFormat.java	parse	startIndex	int	getIndex()	0	0	NO_USE	0
865	201	8	ProperBigFractionFormat.java	parse	c	char	parseNextCharacter()	0	0	NO_USE	0
865	201	8	ProperBigFractionFormat.java	parse	den	BigInteger	parseNextBigInteger()	0	2	NO_USE	1
865	201	8	ProperBigFractionFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
865	201	8	ProperBigFractionFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	CLALLER_USE	0
865	201	8	ProperBigFractionFormat.java	parse	THIS	ProperBigFractionFormat	UNKNOWN_AS	0	0	NO_USE	0
866	209	8	ProperBigFractionFormat.java	parse	ret	BigFraction	OTHERS	0	1	NO_USE	0
866	209	8	ProperBigFractionFormat.java	parse	initialIndex	int	getIndex()	0	0	PARAM_USE	0
866	209	8	ProperBigFractionFormat.java	parse	whole	BigInteger	parseNextBigInteger()	0	1	NO_USE	0
866	209	8	ProperBigFractionFormat.java	parse	num	BigInteger	parseNextBigInteger()	0	2	NO_USE	0
866	209	8	ProperBigFractionFormat.java	parse	startIndex	int	getIndex()	0	0	NO_USE	0
866	209	8	ProperBigFractionFormat.java	parse	c	char	parseNextCharacter()	0	0	NO_USE	0
866	209	8	ProperBigFractionFormat.java	parse	den	BigInteger	parseNextBigInteger()	0	2	NO_USE	1
866	209	8	ProperBigFractionFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
866	209	8	ProperBigFractionFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	CLALLER_USE	0
866	209	8	ProperBigFractionFormat.java	parse	THIS	ProperBigFractionFormat	UNKNOWN_AS	0	0	NO_USE	0
867	216	8	ProperBigFractionFormat.java	parse	ret	BigFraction	OTHERS	0	1	NO_USE	0
867	216	8	ProperBigFractionFormat.java	parse	initialIndex	int	getIndex()	0	0	NO_USE	0
867	216	8	ProperBigFractionFormat.java	parse	whole	BigInteger	parseNextBigInteger()	0	1	CLALLER_USE	0
867	216	8	ProperBigFractionFormat.java	parse	num	BigInteger	parseNextBigInteger()	0	2	NO_USE	0
867	216	8	ProperBigFractionFormat.java	parse	startIndex	int	getIndex()	0	0	NO_USE	0
867	216	8	ProperBigFractionFormat.java	parse	c	char	parseNextCharacter()	0	0	NO_USE	0
867	216	8	ProperBigFractionFormat.java	parse	den	BigInteger	parseNextBigInteger()	0	2	NO_USE	0
867	216	8	ProperBigFractionFormat.java	parse	wholeIsNeg	boolean	<	0	0	NO_USE	1
867	216	8	ProperBigFractionFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
867	216	8	ProperBigFractionFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	NO_USE	0
867	216	8	ProperBigFractionFormat.java	parse	THIS	ProperBigFractionFormat	UNKNOWN_AS	0	0	NO_USE	0
868	220	8	ProperBigFractionFormat.java	parse	ret	BigFraction	OTHERS	0	1	NO_USE	0
868	220	8	ProperBigFractionFormat.java	parse	initialIndex	int	getIndex()	0	0	NO_USE	0
868	220	8	ProperBigFractionFormat.java	parse	whole	BigInteger	negate()	0	1	NO_USE	0
868	220	8	ProperBigFractionFormat.java	parse	num	BigInteger	add()	0	2	CLALLER_USE	0
868	220	8	ProperBigFractionFormat.java	parse	startIndex	int	getIndex()	0	0	NO_USE	0
868	220	8	ProperBigFractionFormat.java	parse	c	char	parseNextCharacter()	0	0	NO_USE	0
868	220	8	ProperBigFractionFormat.java	parse	den	BigInteger	parseNextBigInteger()	0	2	NO_USE	0
868	220	8	ProperBigFractionFormat.java	parse	wholeIsNeg	boolean	<	0	0	NO_USE	1
868	220	8	ProperBigFractionFormat.java	parse	source	String	PARAM_AS	1	0	NO_USE	0
868	220	8	ProperBigFractionFormat.java	parse	pos	ParsePosition	PARAM_AS	1	0	NO_USE	0
868	220	8	ProperBigFractionFormat.java	parse	THIS	ProperBigFractionFormat	UNKNOWN_AS	0	0	NO_USE	0
869	234	8	ProperBigFractionFormat.java	setWholeFormat	format	NumberFormat	PARAM_AS	1	1	NO_USE	1
869	234	8	ProperBigFractionFormat.java	setWholeFormat	THIS	ProperBigFractionFormat	UNKNOWN_AS	0	0	FIELD_USE	0
870	181	8	Fraction.java	Fraction	overflow	long	NAME	0	3	NO_USE	1
870	181	8	Fraction.java	Fraction	r0	double	NAME	0	0	NO_USE	0
870	181	8	Fraction.java	Fraction	a0	long	CAST	0	2	OTHER_USE	1
870	181	8	Fraction.java	Fraction	value	double	PARAM_AS	1	2	OTHER_USE	0
870	181	8	Fraction.java	Fraction	epsilon	double	PARAM_AS	1	2	NO_USE	0
870	181	8	Fraction.java	Fraction	maxDenominator	int	PARAM_AS	1	2	NO_USE	0
870	181	8	Fraction.java	Fraction	maxIterations	int	PARAM_AS	1	2	NO_USE	0
870	181	8	Fraction.java	Fraction	THIS	Fraction	UNKNOWN_AS	0	0	NO_USE	0
871	187	8	Fraction.java	Fraction	overflow	long	NAME	0	3	NO_USE	0
871	187	8	Fraction.java	Fraction	r0	double	NAME	0	0	NO_USE	0
871	187	8	Fraction.java	Fraction	a0	long	CAST	0	2	OTHER_USE	1
871	187	8	Fraction.java	Fraction	value	double	PARAM_AS	1	2	NO_USE	1
871	187	8	Fraction.java	Fraction	epsilon	double	PARAM_AS	1	2	NO_USE	1
871	187	8	Fraction.java	Fraction	maxDenominator	int	PARAM_AS	1	2	NO_USE	0
871	187	8	Fraction.java	Fraction	maxIterations	int	PARAM_AS	1	2	NO_USE	0
871	187	8	Fraction.java	Fraction	THIS	Fraction	UNKNOWN_AS	0	0	FIELD_USE	0
872	209	12	Fraction.java	Fraction	r1	double	/	0	0	NO_USE	0
872	209	12	Fraction.java	Fraction	a1	long	CAST	0	0	NO_USE	0
872	209	12	Fraction.java	Fraction	overflow	long	NAME	0	3	NO_USE	1
872	209	12	Fraction.java	Fraction	r0	double	NAME	0	0	NO_USE	0
872	209	12	Fraction.java	Fraction	a0	long	CAST	0	2	NO_USE	0
872	209	12	Fraction.java	Fraction	p0	long	1	0	0	NO_USE	0
872	209	12	Fraction.java	Fraction	q0	long	0	0	0	NO_USE	0
872	209	12	Fraction.java	Fraction	p1	long	NAME	0	0	NO_USE	0
872	209	12	Fraction.java	Fraction	q1	long	1	0	0	NO_USE	0
872	209	12	Fraction.java	Fraction	p2	long	+	0	1	OTHER_USE	1
872	209	12	Fraction.java	Fraction	q2	long	+	0	3	OTHER_USE	1
872	209	12	Fraction.java	Fraction	n	int	0	0	2	NO_USE	0
872	209	12	Fraction.java	Fraction	stop	boolean	LITERAL	0	0	NO_USE	0
872	209	12	Fraction.java	Fraction	value	double	PARAM_AS	1	2	OTHER_USE	0
872	209	12	Fraction.java	Fraction	epsilon	double	PARAM_AS	1	2	NO_USE	0
872	209	12	Fraction.java	Fraction	maxDenominator	int	PARAM_AS	1	2	NO_USE	0
872	209	12	Fraction.java	Fraction	maxIterations	int	PARAM_AS	1	2	NO_USE	0
872	209	12	Fraction.java	Fraction	THIS	Fraction	1	0	0	NO_USE	0
873	214	12	Fraction.java	Fraction	r1	double	/	0	0	OTHER_USE	0
873	214	12	Fraction.java	Fraction	a1	long	CAST	0	0	OTHER_USE	0
873	214	12	Fraction.java	Fraction	convergent	double	/	0	1	NO_USE	1
873	214	12	Fraction.java	Fraction	overflow	long	NAME	0	3	NO_USE	0
873	214	12	Fraction.java	Fraction	r0	double	NAME	0	0	NO_USE	0
873	214	12	Fraction.java	Fraction	a0	long	CAST	0	2	NO_USE	0
873	214	12	Fraction.java	Fraction	p0	long	1	0	0	NO_USE	0
873	214	12	Fraction.java	Fraction	q0	long	0	0	0	NO_USE	0
873	214	12	Fraction.java	Fraction	p1	long	NAME	0	0	OTHER_USE	0
873	214	12	Fraction.java	Fraction	q1	long	1	0	0	OTHER_USE	0
873	214	12	Fraction.java	Fraction	p2	long	+	0	1	OTHER_USE	0
873	214	12	Fraction.java	Fraction	q2	long	+	0	3	OTHER_USE	1
873	214	12	Fraction.java	Fraction	n	int	0	0	2	NO_USE	1
873	214	12	Fraction.java	Fraction	stop	boolean	LITERAL	0	0	NO_USE	0
873	214	12	Fraction.java	Fraction	value	double	PARAM_AS	1	2	NO_USE	1
873	214	12	Fraction.java	Fraction	epsilon	double	PARAM_AS	1	2	NO_USE	1
873	214	12	Fraction.java	Fraction	maxDenominator	int	PARAM_AS	1	2	NO_USE	1
873	214	12	Fraction.java	Fraction	maxIterations	int	PARAM_AS	1	2	NO_USE	1
873	214	12	Fraction.java	Fraction	THIS	Fraction	1	0	0	NO_USE	0
874	226	8	Fraction.java	Fraction	overflow	long	NAME	0	3	NO_USE	0
874	226	8	Fraction.java	Fraction	r0	double	NAME	0	0	NO_USE	0
874	226	8	Fraction.java	Fraction	a0	long	NAME	0	2	NO_USE	0
874	226	8	Fraction.java	Fraction	p0	long	NAME	0	0	NO_USE	0
874	226	8	Fraction.java	Fraction	q0	long	NAME	0	0	NO_USE	0
874	226	8	Fraction.java	Fraction	p1	long	NAME	0	0	NO_USE	0
874	226	8	Fraction.java	Fraction	q1	long	NAME	0	0	NO_USE	0
874	226	8	Fraction.java	Fraction	p2	long	+	0	1	NO_USE	0
874	226	8	Fraction.java	Fraction	q2	long	+	0	3	NO_USE	0
874	226	8	Fraction.java	Fraction	n	int	0	0	2	NO_USE	1
874	226	8	Fraction.java	Fraction	stop	boolean	LITERAL	0	0	NO_USE	0
874	226	8	Fraction.java	Fraction	value	double	PARAM_AS	1	2	OTHER_USE	0
874	226	8	Fraction.java	Fraction	epsilon	double	PARAM_AS	1	2	NO_USE	0
874	226	8	Fraction.java	Fraction	maxDenominator	int	PARAM_AS	1	2	NO_USE	0
874	226	8	Fraction.java	Fraction	maxIterations	int	PARAM_AS	1	2	OTHER_USE	1
874	226	8	Fraction.java	Fraction	THIS	Fraction	1	0	0	NO_USE	0
875	230	8	Fraction.java	Fraction	overflow	long	NAME	0	3	NO_USE	0
875	230	8	Fraction.java	Fraction	r0	double	NAME	0	0	NO_USE	0
875	230	8	Fraction.java	Fraction	a0	long	NAME	0	2	NO_USE	0
875	230	8	Fraction.java	Fraction	p0	long	NAME	0	0	NO_USE	0
875	230	8	Fraction.java	Fraction	q0	long	NAME	0	0	NO_USE	0
875	230	8	Fraction.java	Fraction	p1	long	NAME	0	0	OTHER_USE	0
875	230	8	Fraction.java	Fraction	q1	long	NAME	0	0	OTHER_USE	0
875	230	8	Fraction.java	Fraction	p2	long	+	0	1	OTHER_USE	0
875	230	8	Fraction.java	Fraction	q2	long	+	0	3	OTHER_USE	1
875	230	8	Fraction.java	Fraction	n	int	0	0	2	NO_USE	0
875	230	8	Fraction.java	Fraction	stop	boolean	LITERAL	0	0	NO_USE	0
875	230	8	Fraction.java	Fraction	value	double	PARAM_AS	1	2	NO_USE	0
875	230	8	Fraction.java	Fraction	epsilon	double	PARAM_AS	1	2	NO_USE	0
875	230	8	Fraction.java	Fraction	maxDenominator	int	PARAM_AS	1	2	NO_USE	1
875	230	8	Fraction.java	Fraction	maxIterations	int	PARAM_AS	1	2	NO_USE	0
875	230	8	Fraction.java	Fraction	THIS	Fraction	1	0	0	FIELD_USE	0
876	257	8	Fraction.java	Fraction	num	int	PARAM_AS	1	1	OTHER_USE	0
876	257	8	Fraction.java	Fraction	den	int	PARAM_AS	1	4	OTHER_USE	1
876	257	8	Fraction.java	Fraction	THIS	Fraction	UNKNOWN_AS	0	0	FIELD_USE	0
877	261	8	Fraction.java	Fraction	num	int	PARAM_AS	1	1	==	0
877	261	8	Fraction.java	Fraction	den	int	PARAM_AS	1	4	==	1
877	261	8	Fraction.java	Fraction	THIS	Fraction	UNKNOWN_AS	0	0	FIELD_USE	0
878	262	12	Fraction.java	Fraction	num	int	PARAM_AS	1	1	OTHER_USE	1
878	262	12	Fraction.java	Fraction	den	int	PARAM_AS	1	4	OTHER_USE	1
878	262	12	Fraction.java	Fraction	THIS	Fraction	UNKNOWN_AS	0	0	FIELD_USE	0
879	272	8	Fraction.java	Fraction	d	int	gcd()	0	1	OTHER_USE	1
879	272	8	Fraction.java	Fraction	num	int	PREFIX_EXPR	1	1	NO_USE	0
879	272	8	Fraction.java	Fraction	den	int	PREFIX_EXPR	1	4	NO_USE	0
879	272	8	Fraction.java	Fraction	THIS	Fraction	UNKNOWN_AS	0	0	NO_USE	0
880	278	8	Fraction.java	Fraction	d	int	gcd()	0	1	NO_USE	0
880	278	8	Fraction.java	Fraction	num	int	NAME	1	1	-x	0
880	278	8	Fraction.java	Fraction	den	int	NAME	1	4	-x	1
880	278	8	Fraction.java	Fraction	THIS	Fraction	UNKNOWN_AS	0	0	NO_USE	0
881	292	8	Fraction.java	abs	ret	Fraction	UNKNOWN_AS	0	0	NO_USE	0
881	292	8	Fraction.java	abs	THIS	Fraction	UNKNOWN_AS	0	1	CLALLER_USE	1
882	333	8	Fraction.java	equals	other	Object	PARAM_AS	1	2	NO_USE	1
882	333	8	Fraction.java	equals	THIS	Fraction	UNKNOWN_AS	0	1	NO_USE	1
883	336	8	Fraction.java	equals	other	Object	PARAM_AS	1	2	OTHER_USE	1
883	336	8	Fraction.java	equals	THIS	Fraction	UNKNOWN_AS	0	1	FIELD_USE	0
884	406	8	Fraction.java	negate	THIS	Fraction	UNKNOWN_AS	0	1	FIELD_USE	1
885	477	8	Fraction.java	addSub	fraction	Fraction	PARAM_AS	1	2	NO_USE	1
885	477	8	Fraction.java	addSub	isAdd	boolean	PARAM_AS	1	0	NO_USE	0
885	477	8	Fraction.java	addSub	THIS	Fraction	UNKNOWN_AS	0	2	FIELD_USE	0
886	481	8	Fraction.java	addSub	fraction	Fraction	PARAM_AS	1	2	OTHER_USE	0
886	481	8	Fraction.java	addSub	isAdd	boolean	PARAM_AS	1	0	OTHER_USE	0
886	481	8	Fraction.java	addSub	THIS	Fraction	UNKNOWN_AS	0	2	NO_USE	1
887	484	8	Fraction.java	addSub	fraction	Fraction	PARAM_AS	1	2	NO_USE	1
887	484	8	Fraction.java	addSub	isAdd	boolean	PARAM_AS	1	0	NO_USE	0
887	484	8	Fraction.java	addSub	THIS	Fraction	UNKNOWN_AS	0	2	NO_USE	1
888	490	8	Fraction.java	addSub	d1	int	gcd()	0	1	NO_USE	1
888	490	8	Fraction.java	addSub	fraction	Fraction	PARAM_AS	1	2	OTHER_USE	0
888	490	8	Fraction.java	addSub	isAdd	boolean	PARAM_AS	1	0	OTHER_USE	0
888	490	8	Fraction.java	addSub	THIS	Fraction	UNKNOWN_AS	0	2	FIELD_USE	0
889	514	8	Fraction.java	addSub	d1	int	gcd()	0	1	NO_USE	0
889	514	8	Fraction.java	addSub	uvp	BigInteger	multiply()	0	0	NO_USE	0
889	514	8	Fraction.java	addSub	upv	BigInteger	multiply()	0	0	NO_USE	0
889	514	8	Fraction.java	addSub	t	BigInteger	OTHERS	0	0	NO_USE	0
889	514	8	Fraction.java	addSub	tmodd1	int	intValue()	0	0	NO_USE	0
889	514	8	Fraction.java	addSub	d2	int	OTHERS	0	0	NO_USE	0
889	514	8	Fraction.java	addSub	w	BigInteger	divide()	0	1	OTHER_USE	1
889	514	8	Fraction.java	addSub	fraction	Fraction	PARAM_AS	1	2	NO_USE	0
889	514	8	Fraction.java	addSub	isAdd	boolean	PARAM_AS	1	0	NO_USE	0
889	514	8	Fraction.java	addSub	THIS	Fraction	UNKNOWN_AS	0	2	FIELD_USE	0
890	534	8	Fraction.java	multiply	fraction	Fraction	PARAM_AS	1	2	NO_USE	1
890	534	8	Fraction.java	multiply	THIS	Fraction	UNKNOWN_AS	0	2	FIELD_USE	0
891	537	8	Fraction.java	multiply	fraction	Fraction	PARAM_AS	1	2	NO_USE	1
891	537	8	Fraction.java	multiply	THIS	Fraction	UNKNOWN_AS	0	2	NO_USE	1
892	569	8	Fraction.java	divide	fraction	Fraction	PARAM_AS	1	2	NO_USE	1
892	569	8	Fraction.java	divide	THIS	Fraction	UNKNOWN_AS	0	1	FIELD_USE	0
893	572	8	Fraction.java	divide	fraction	Fraction	PARAM_AS	1	2	OTHER_USE	1
893	572	8	Fraction.java	divide	THIS	Fraction	UNKNOWN_AS	0	1	FIELD_USE	1
894	600	8	Fraction.java	getReducedFraction	numerator	int	PARAM_AS	1	3	OTHER_USE	0
894	600	8	Fraction.java	getReducedFraction	denominator	int	PARAM_AS	1	4	OTHER_USE	1
894	600	8	Fraction.java	getReducedFraction	THIS	Fraction	UNKNOWN_AS	0	0	FIELD_USE	0
895	604	8	Fraction.java	getReducedFraction	numerator	int	PARAM_AS	1	3	NO_USE	1
895	604	8	Fraction.java	getReducedFraction	denominator	int	PARAM_AS	1	4	NO_USE	0
895	604	8	Fraction.java	getReducedFraction	THIS	Fraction	UNKNOWN_AS	0	0	NO_USE	0
896	608	8	Fraction.java	getReducedFraction	numerator	int	PARAM_AS	1	3	NO_USE	1
896	608	8	Fraction.java	getReducedFraction	denominator	int	PARAM_AS	1	4	NO_USE	1
896	608	8	Fraction.java	getReducedFraction	THIS	Fraction	UNKNOWN_AS	0	0	NO_USE	0
897	611	8	Fraction.java	getReducedFraction	numerator	int	2	1	3	==	0
897	611	8	Fraction.java	getReducedFraction	denominator	int	2	1	4	==	1
897	611	8	Fraction.java	getReducedFraction	THIS	Fraction	UNKNOWN_AS	0	0	FIELD_USE	0
898	612	12	Fraction.java	getReducedFraction	numerator	int	2	1	3	OTHER_USE	1
898	612	12	Fraction.java	getReducedFraction	denominator	int	2	1	4	OTHER_USE	1
898	612	12	Fraction.java	getReducedFraction	THIS	Fraction	UNKNOWN_AS	0	0	FIELD_USE	0
899	639	8	Fraction.java	toString	str	String	NULL	0	0	NO_USE	0
899	639	8	Fraction.java	toString	THIS	Fraction	UNKNOWN_AS	0	2	FIELD_USE	1
900	641	15	Fraction.java	toString	str	String	toString()	0	0	NO_USE	0
900	641	15	Fraction.java	toString	THIS	Fraction	UNKNOWN_AS	0	2	FIELD_USE	1
901	87	8	AbstractIntegerDistribution.java	cumulativeProbability	x0	double	PARAM_AS	1	3	OTHER_USE	1
901	87	8	AbstractIntegerDistribution.java	cumulativeProbability	x1	double	PARAM_AS	1	1	OTHER_USE	1
901	87	8	AbstractIntegerDistribution.java	cumulativeProbability	THIS	AbstractIntegerDistribution	UNKNOWN_AS	0	0	FIELD_USE	0
902	91	8	AbstractIntegerDistribution.java	cumulativeProbability	x0	double	PARAM_AS	1	3	PARAM_USE	1
902	91	8	AbstractIntegerDistribution.java	cumulativeProbability	x1	double	PARAM_AS	1	1	PARAM_USE	0
902	91	8	AbstractIntegerDistribution.java	cumulativeProbability	THIS	AbstractIntegerDistribution	UNKNOWN_AS	0	0	CLALLER_USE	0
903	125	8	AbstractIntegerDistribution.java	probability	fl	double	floor()	0	1	NO_USE	1
903	125	8	AbstractIntegerDistribution.java	probability	x	double	PARAM_AS	1	1	OTHER_USE	1
903	125	8	AbstractIntegerDistribution.java	probability	THIS	AbstractIntegerDistribution	UNKNOWN_AS	0	0	CLALLER_USE	0
904	144	8	AbstractIntegerDistribution.java	cumulativeProbability	x0	int	PARAM_AS	1	1	OTHER_USE	1
904	144	8	AbstractIntegerDistribution.java	cumulativeProbability	x1	int	PARAM_AS	1	1	OTHER_USE	1
904	144	8	AbstractIntegerDistribution.java	cumulativeProbability	THIS	AbstractIntegerDistribution	UNKNOWN_AS	0	0	FIELD_USE	0
905	163	8	AbstractIntegerDistribution.java	inverseCumulativeProbability	p	double	PARAM_AS	1	3	OTHER_USE	1
905	163	8	AbstractIntegerDistribution.java	inverseCumulativeProbability	THIS	AbstractIntegerDistribution	UNKNOWN_AS	0	0	NO_USE	0
906	175	12	AbstractIntegerDistribution.java	inverseCumulativeProbability	xm	int	+	0	2	==	0
906	175	12	AbstractIntegerDistribution.java	inverseCumulativeProbability	x0	int	getDomainLowerBound()	0	1	==	0
906	175	12	AbstractIntegerDistribution.java	inverseCumulativeProbability	x1	int	getDomainUpperBound()	0	1	==	0
906	175	12	AbstractIntegerDistribution.java	inverseCumulativeProbability	pm	double	checkedCumulativeProbability()	0	1	NO_USE	1
906	175	12	AbstractIntegerDistribution.java	inverseCumulativeProbability	p	double	PARAM_AS	1	3	NO_USE	1
906	175	12	AbstractIntegerDistribution.java	inverseCumulativeProbability	THIS	AbstractIntegerDistribution	UNKNOWN_AS	0	0	NO_USE	0
907	177	16	AbstractIntegerDistribution.java	inverseCumulativeProbability	xm	int	+	0	2	OTHER_USE	1
907	177	16	AbstractIntegerDistribution.java	inverseCumulativeProbability	x0	int	getDomainLowerBound()	0	1	NO_USE	0
907	177	16	AbstractIntegerDistribution.java	inverseCumulativeProbability	x1	int	getDomainUpperBound()	0	1	--x	1
907	177	16	AbstractIntegerDistribution.java	inverseCumulativeProbability	pm	double	checkedCumulativeProbability()	0	1	NO_USE	0
907	177	16	AbstractIntegerDistribution.java	inverseCumulativeProbability	p	double	PARAM_AS	1	3	NO_USE	0
907	177	16	AbstractIntegerDistribution.java	inverseCumulativeProbability	THIS	AbstractIntegerDistribution	UNKNOWN_AS	0	0	NO_USE	0
908	187	16	AbstractIntegerDistribution.java	inverseCumulativeProbability	xm	int	+	0	2	OTHER_USE	1
908	187	16	AbstractIntegerDistribution.java	inverseCumulativeProbability	x0	int	getDomainLowerBound()	0	1	++x	1
908	187	16	AbstractIntegerDistribution.java	inverseCumulativeProbability	x1	int	NAME	0	1	NO_USE	0
908	187	16	AbstractIntegerDistribution.java	inverseCumulativeProbability	pm	double	checkedCumulativeProbability()	0	1	NO_USE	0
908	187	16	AbstractIntegerDistribution.java	inverseCumulativeProbability	p	double	PARAM_AS	1	3	NO_USE	0
908	187	16	AbstractIntegerDistribution.java	inverseCumulativeProbability	THIS	AbstractIntegerDistribution	UNKNOWN_AS	0	0	NO_USE	0
909	242	8	AbstractIntegerDistribution.java	sample	sampleSize	int	PARAM_AS	1	1	OTHER_USE	1
909	242	8	AbstractIntegerDistribution.java	sample	THIS	AbstractIntegerDistribution	UNKNOWN_AS	0	0	FIELD_USE	0
910	268	8	AbstractIntegerDistribution.java	checkedCumulativeProbability	result	double	cumulativeProbability()	0	1	NO_USE	1
910	268	8	AbstractIntegerDistribution.java	checkedCumulativeProbability	argument	int	PARAM_AS	1	0	OTHER_USE	0
910	268	8	AbstractIntegerDistribution.java	checkedCumulativeProbability	THIS	AbstractIntegerDistribution	UNKNOWN_AS	0	0	FIELD_USE	0
911	61	8	TDistributionImpl.java	TDistributionImpl	degreesOfFreedom	double	PARAM_AS	1	1	OTHER_USE	1
911	61	8	TDistributionImpl.java	TDistributionImpl	inverseCumAccuracy	double	PARAM_AS	1	0	NO_USE	0
911	61	8	TDistributionImpl.java	TDistributionImpl	THIS	TDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
912	109	8	TDistributionImpl.java	cumulativeProbability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
912	109	8	TDistributionImpl.java	cumulativeProbability	x	double	PARAM_AS	1	2	*	1
912	109	8	TDistributionImpl.java	cumulativeProbability	THIS	TDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
913	117	12	TDistributionImpl.java	cumulativeProbability	t	double	regularizedBeta()	0	0	*	0
913	117	12	TDistributionImpl.java	cumulativeProbability	ret	double	0.5	0	0	NO_USE	0
913	117	12	TDistributionImpl.java	cumulativeProbability	x	double	PARAM_AS	1	2	NO_USE	1
913	117	12	TDistributionImpl.java	cumulativeProbability	THIS	TDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
914	143	8	TDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	2	NO_USE	1
914	143	8	TDistributionImpl.java	inverseCumulativeProbability	THIS	TDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
915	146	8	TDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	2	NO_USE	1
915	146	8	TDistributionImpl.java	inverseCumulativeProbability	THIS	TDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
916	244	8	TDistributionImpl.java	calculateNumericalMean	df	double	getDegreesOfFreedom()	0	1	NO_USE	1
916	244	8	TDistributionImpl.java	calculateNumericalMean	THIS	TDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
917	267	8	TDistributionImpl.java	calculateNumericalVariance	df	double	getDegreesOfFreedom()	0	3	/	1
917	267	8	TDistributionImpl.java	calculateNumericalVariance	THIS	TDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
918	271	8	TDistributionImpl.java	calculateNumericalVariance	df	double	getDegreesOfFreedom()	0	3	NO_USE	1
918	271	8	TDistributionImpl.java	calculateNumericalVariance	THIS	TDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
919	70	8	GammaDistributionImpl.java	GammaDistributionImpl	alpha	double	PARAM_AS	1	1	OTHER_USE	1
919	70	8	GammaDistributionImpl.java	GammaDistributionImpl	beta	double	PARAM_AS	1	1	NO_USE	0
919	70	8	GammaDistributionImpl.java	GammaDistributionImpl	inverseCumAccuracy	double	PARAM_AS	1	0	NO_USE	0
919	70	8	GammaDistributionImpl.java	GammaDistributionImpl	THIS	GammaDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
920	73	8	GammaDistributionImpl.java	GammaDistributionImpl	alpha	double	PARAM_AS	1	1	NO_USE	0
920	73	8	GammaDistributionImpl.java	GammaDistributionImpl	beta	double	PARAM_AS	1	1	OTHER_USE	1
920	73	8	GammaDistributionImpl.java	GammaDistributionImpl	inverseCumAccuracy	double	PARAM_AS	1	0	NO_USE	0
920	73	8	GammaDistributionImpl.java	GammaDistributionImpl	THIS	GammaDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
921	104	8	GammaDistributionImpl.java	cumulativeProbability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
921	104	8	GammaDistributionImpl.java	cumulativeProbability	x	double	PARAM_AS	1	1	/	1
921	104	8	GammaDistributionImpl.java	cumulativeProbability	THIS	GammaDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
922	129	8	GammaDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	2	NO_USE	1
922	129	8	GammaDistributionImpl.java	inverseCumulativeProbability	THIS	GammaDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
923	132	8	GammaDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	2	NO_USE	1
923	132	8	GammaDistributionImpl.java	inverseCumulativeProbability	THIS	GammaDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
924	157	8	GammaDistributionImpl.java	density	x	double	PARAM_AS	1	1	NO_USE	1
924	157	8	GammaDistributionImpl.java	density	THIS	GammaDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
925	194	8	GammaDistributionImpl.java	getDomainUpperBound	ret	double	UNKNOWN_AS	0	0	NO_USE	0
925	194	8	GammaDistributionImpl.java	getDomainUpperBound	p	double	PARAM_AS	1	1	NO_USE	1
925	194	8	GammaDistributionImpl.java	getDomainUpperBound	THIS	GammaDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
926	220	8	GammaDistributionImpl.java	getInitialDomain	ret	double	UNKNOWN_AS	0	0	NO_USE	0
926	220	8	GammaDistributionImpl.java	getInitialDomain	p	double	PARAM_AS	1	1	NO_USE	1
926	220	8	GammaDistributionImpl.java	getInitialDomain	THIS	GammaDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
927	85	8	PoissonDistributionImpl.java	PoissonDistributionImpl	p	double	PARAM_AS	1	1	OTHER_USE	1
927	85	8	PoissonDistributionImpl.java	PoissonDistributionImpl	epsilon	double	PARAM_AS	1	0	NO_USE	0
927	85	8	PoissonDistributionImpl.java	PoissonDistributionImpl	maxIterations	int	PARAM_AS	1	0	NO_USE	0
927	85	8	PoissonDistributionImpl.java	PoissonDistributionImpl	THIS	PoissonDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
928	131	8	PoissonDistributionImpl.java	probability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
928	131	8	PoissonDistributionImpl.java	probability	x	int	PARAM_AS	1	3	==	1
928	131	8	PoissonDistributionImpl.java	probability	THIS	PoissonDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
929	133	15	PoissonDistributionImpl.java	probability	ret	double	0.0	0	0	NO_USE	0
929	133	15	PoissonDistributionImpl.java	probability	x	int	PARAM_AS	1	3	PARAM_USE	1
929	133	15	PoissonDistributionImpl.java	probability	THIS	PoissonDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
930	154	8	PoissonDistributionImpl.java	cumulativeProbability	x	int	PARAM_AS	1	2	NO_USE	1
930	154	8	PoissonDistributionImpl.java	cumulativeProbability	THIS	PoissonDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
931	157	8	PoissonDistributionImpl.java	cumulativeProbability	x	int	PARAM_AS	1	2	NO_USE	1
931	157	8	PoissonDistributionImpl.java	cumulativeProbability	THIS	PoissonDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
932	73	8	NormalDistributionImpl.java	NormalDistributionImpl	mean	double	PARAM_AS	1	0	NO_USE	0
932	73	8	NormalDistributionImpl.java	NormalDistributionImpl	sd	double	PARAM_AS	1	1	OTHER_USE	1
932	73	8	NormalDistributionImpl.java	NormalDistributionImpl	inverseCumAccuracy	double	PARAM_AS	1	0	NO_USE	0
932	73	8	NormalDistributionImpl.java	NormalDistributionImpl	THIS	NormalDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
933	125	8	NormalDistributionImpl.java	cumulativeProbability	dev	double	-	0	1	<	1
933	125	8	NormalDistributionImpl.java	cumulativeProbability	x	double	PARAM_AS	1	0	NO_USE	0
933	125	8	NormalDistributionImpl.java	cumulativeProbability	THIS	NormalDistributionImpl	UNKNOWN_AS	0	1	NO_USE	1
934	159	8	NormalDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	2	NO_USE	1
934	159	8	NormalDistributionImpl.java	inverseCumulativeProbability	THIS	NormalDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
935	162	8	NormalDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	2	NO_USE	1
935	162	8	NormalDistributionImpl.java	inverseCumulativeProbability	THIS	NormalDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
936	192	8	NormalDistributionImpl.java	getDomainLowerBound	ret	double	UNKNOWN_AS	0	0	NO_USE	0
936	192	8	NormalDistributionImpl.java	getDomainLowerBound	p	double	PARAM_AS	1	1	NO_USE	1
936	192	8	NormalDistributionImpl.java	getDomainLowerBound	THIS	NormalDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
937	213	8	NormalDistributionImpl.java	getDomainUpperBound	ret	double	UNKNOWN_AS	0	0	NO_USE	0
937	213	8	NormalDistributionImpl.java	getDomainUpperBound	p	double	PARAM_AS	1	1	NO_USE	1
937	213	8	NormalDistributionImpl.java	getDomainUpperBound	THIS	NormalDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
938	234	8	NormalDistributionImpl.java	getInitialDomain	ret	double	UNKNOWN_AS	0	0	NO_USE	0
938	234	8	NormalDistributionImpl.java	getInitialDomain	p	double	PARAM_AS	1	2	>	1
938	234	8	NormalDistributionImpl.java	getInitialDomain	THIS	NormalDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
939	236	15	NormalDistributionImpl.java	getInitialDomain	ret	double	-	0	0	NO_USE	0
939	236	15	NormalDistributionImpl.java	getInitialDomain	p	double	PARAM_AS	1	2	NO_USE	1
939	236	15	NormalDistributionImpl.java	getInitialDomain	THIS	NormalDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
940	52	8	BinomialDistributionImpl.java	BinomialDistributionImpl	trials	int	PARAM_AS	1	1	OTHER_USE	1
940	52	8	BinomialDistributionImpl.java	BinomialDistributionImpl	p	double	PARAM_AS	1	2	NO_USE	0
940	52	8	BinomialDistributionImpl.java	BinomialDistributionImpl	THIS	BinomialDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
941	56	8	BinomialDistributionImpl.java	BinomialDistributionImpl	trials	int	PARAM_AS	1	1	NO_USE	0
941	56	8	BinomialDistributionImpl.java	BinomialDistributionImpl	p	double	PARAM_AS	1	2	OTHER_USE	1
941	56	8	BinomialDistributionImpl.java	BinomialDistributionImpl	THIS	BinomialDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
942	113	8	BinomialDistributionImpl.java	cumulativeProbability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
942	113	8	BinomialDistributionImpl.java	cumulativeProbability	x	int	PARAM_AS	1	2	>=	1
942	113	8	BinomialDistributionImpl.java	cumulativeProbability	THIS	BinomialDistributionImpl	UNKNOWN_AS	0	1	FIELD_USE	0
943	115	15	BinomialDistributionImpl.java	cumulativeProbability	ret	double	0.0	0	0	NO_USE	0
943	115	15	BinomialDistributionImpl.java	cumulativeProbability	x	int	PARAM_AS	1	2	+	1
943	115	15	BinomialDistributionImpl.java	cumulativeProbability	THIS	BinomialDistributionImpl	UNKNOWN_AS	0	1	CLALLER_USE	1
944	132	8	BinomialDistributionImpl.java	probability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
944	132	8	BinomialDistributionImpl.java	probability	x	int	PARAM_AS	1	2	PARAM_USE	1
944	132	8	BinomialDistributionImpl.java	probability	THIS	BinomialDistributionImpl	UNKNOWN_AS	0	1	FIELD_USE	1
945	157	8	BinomialDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	2	NO_USE	1
945	157	8	BinomialDistributionImpl.java	inverseCumulativeProbability	THIS	BinomialDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
946	160	8	BinomialDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	2	NO_USE	1
946	160	8	BinomialDistributionImpl.java	inverseCumulativeProbability	THIS	BinomialDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
947	79	8	AbstractContinuousDistribution.java	inverseCumulativeProbability	p	double	PARAM_AS	1	2	OTHER_USE	1
947	79	8	AbstractContinuousDistribution.java	inverseCumulativeProbability	THIS	AbstractContinuousDistribution	UNKNOWN_AS	0	2	NO_USE	0
948	115	12	AbstractContinuousDistribution.java	inverseCumulativeProbability	rootFindingFunction	UnivariateRealFunction	CLASS_INSTANCE_CREATION	0	2	NO_USE	1
948	115	12	AbstractContinuousDistribution.java	inverseCumulativeProbability	lowerBound	double	getDomainLowerBound()	0	1	RET_USE	1
948	115	12	AbstractContinuousDistribution.java	inverseCumulativeProbability	upperBound	double	getDomainUpperBound()	0	1	NO_USE	0
948	115	12	AbstractContinuousDistribution.java	inverseCumulativeProbability	bracket	double[]	bracket()	0	0	NO_USE	0
948	115	12	AbstractContinuousDistribution.java	inverseCumulativeProbability	p	double	PARAM_AS	1	2	NO_USE	0
948	115	12	AbstractContinuousDistribution.java	inverseCumulativeProbability	THIS	AbstractContinuousDistribution	UNKNOWN_AS	0	2	NO_USE	1
949	118	12	AbstractContinuousDistribution.java	inverseCumulativeProbability	rootFindingFunction	UnivariateRealFunction	CLASS_INSTANCE_CREATION	0	2	NO_USE	1
949	118	12	AbstractContinuousDistribution.java	inverseCumulativeProbability	lowerBound	double	getDomainLowerBound()	0	1	NO_USE	0
949	118	12	AbstractContinuousDistribution.java	inverseCumulativeProbability	upperBound	double	getDomainUpperBound()	0	1	RET_USE	1
949	118	12	AbstractContinuousDistribution.java	inverseCumulativeProbability	bracket	double[]	bracket()	0	0	NO_USE	0
949	118	12	AbstractContinuousDistribution.java	inverseCumulativeProbability	p	double	PARAM_AS	1	2	NO_USE	0
949	118	12	AbstractContinuousDistribution.java	inverseCumulativeProbability	THIS	AbstractContinuousDistribution	UNKNOWN_AS	0	2	NO_USE	1
950	169	8	AbstractContinuousDistribution.java	sample	sampleSize	int	PARAM_AS	1	1	OTHER_USE	1
950	169	8	AbstractContinuousDistribution.java	sample	THIS	AbstractContinuousDistribution	UNKNOWN_AS	0	0	FIELD_USE	0
951	77	8	WeibullDistributionImpl.java	WeibullDistributionImpl	alpha	double	PARAM_AS	1	1	OTHER_USE	1
951	77	8	WeibullDistributionImpl.java	WeibullDistributionImpl	beta	double	PARAM_AS	1	1	NO_USE	0
951	77	8	WeibullDistributionImpl.java	WeibullDistributionImpl	inverseCumAccuracy	double	PARAM_AS	1	0	NO_USE	0
951	77	8	WeibullDistributionImpl.java	WeibullDistributionImpl	THIS	WeibullDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
952	81	8	WeibullDistributionImpl.java	WeibullDistributionImpl	alpha	double	PARAM_AS	1	1	NO_USE	0
952	81	8	WeibullDistributionImpl.java	WeibullDistributionImpl	beta	double	PARAM_AS	1	1	OTHER_USE	1
952	81	8	WeibullDistributionImpl.java	WeibullDistributionImpl	inverseCumAccuracy	double	PARAM_AS	1	0	NO_USE	0
952	81	8	WeibullDistributionImpl.java	WeibullDistributionImpl	THIS	WeibullDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
953	98	8	WeibullDistributionImpl.java	cumulativeProbability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
953	98	8	WeibullDistributionImpl.java	cumulativeProbability	x	double	PARAM_AS	1	1	/	1
953	98	8	WeibullDistributionImpl.java	cumulativeProbability	THIS	WeibullDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
954	125	8	WeibullDistributionImpl.java	density	x	double	PARAM_AS	1	1	NO_USE	1
954	125	8	WeibullDistributionImpl.java	density	THIS	WeibullDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
955	155	8	WeibullDistributionImpl.java	inverseCumulativeProbability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
955	155	8	WeibullDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	4	OTHER_USE	1
955	155	8	WeibullDistributionImpl.java	inverseCumulativeProbability	THIS	WeibullDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
956	157	15	WeibullDistributionImpl.java	inverseCumulativeProbability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
956	157	15	WeibullDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	4	==	1
956	157	15	WeibullDistributionImpl.java	inverseCumulativeProbability	THIS	WeibullDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
957	159	16	WeibullDistributionImpl.java	inverseCumulativeProbability	ret	double	0.0	0	0	NO_USE	0
957	159	16	WeibullDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	4	-	1
957	159	16	WeibullDistributionImpl.java	inverseCumulativeProbability	THIS	WeibullDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
958	51	8	ZipfDistributionImpl.java	ZipfDistributionImpl	numberOfElements	int	PARAM_AS	1	1	OTHER_USE	1
958	51	8	ZipfDistributionImpl.java	ZipfDistributionImpl	exponent	double	PARAM_AS	1	1	NO_USE	0
958	51	8	ZipfDistributionImpl.java	ZipfDistributionImpl	THIS	ZipfDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
959	55	8	ZipfDistributionImpl.java	ZipfDistributionImpl	numberOfElements	int	PARAM_AS	1	1	NO_USE	0
959	55	8	ZipfDistributionImpl.java	ZipfDistributionImpl	exponent	double	PARAM_AS	1	1	OTHER_USE	1
959	55	8	ZipfDistributionImpl.java	ZipfDistributionImpl	THIS	ZipfDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
960	85	8	ZipfDistributionImpl.java	probability	x	int	PARAM_AS	1	2	NO_USE	1
960	85	8	ZipfDistributionImpl.java	probability	THIS	ZipfDistributionImpl	UNKNOWN_AS	0	1	NO_USE	1
961	101	8	ZipfDistributionImpl.java	cumulativeProbability	x	int	PARAM_AS	1	2	>=	1
961	101	8	ZipfDistributionImpl.java	cumulativeProbability	THIS	ZipfDistributionImpl	UNKNOWN_AS	0	1	FIELD_USE	0
962	103	15	ZipfDistributionImpl.java	cumulativeProbability	x	int	PARAM_AS	1	2	NO_USE	1
962	103	15	ZipfDistributionImpl.java	cumulativeProbability	THIS	ZipfDistributionImpl	UNKNOWN_AS	0	1	NO_USE	1
963	79	8	FDistributionImpl.java	FDistributionImpl	numeratorDegreesOfFreedom	double	PARAM_AS	1	1	OTHER_USE	1
963	79	8	FDistributionImpl.java	FDistributionImpl	denominatorDegreesOfFreedom	double	PARAM_AS	1	1	NO_USE	0
963	79	8	FDistributionImpl.java	FDistributionImpl	inverseCumAccuracy	double	PARAM_AS	1	0	NO_USE	0
963	79	8	FDistributionImpl.java	FDistributionImpl	THIS	FDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
964	83	8	FDistributionImpl.java	FDistributionImpl	numeratorDegreesOfFreedom	double	PARAM_AS	1	1	NO_USE	0
964	83	8	FDistributionImpl.java	FDistributionImpl	denominatorDegreesOfFreedom	double	PARAM_AS	1	1	OTHER_USE	1
964	83	8	FDistributionImpl.java	FDistributionImpl	inverseCumAccuracy	double	PARAM_AS	1	0	NO_USE	0
964	83	8	FDistributionImpl.java	FDistributionImpl	THIS	FDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
965	131	8	FDistributionImpl.java	cumulativeProbability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
965	131	8	FDistributionImpl.java	cumulativeProbability	x	double	PARAM_AS	1	1	*	1
965	131	8	FDistributionImpl.java	cumulativeProbability	THIS	FDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
966	159	8	FDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	2	NO_USE	1
966	159	8	FDistributionImpl.java	inverseCumulativeProbability	THIS	FDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
967	162	8	FDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	2	NO_USE	1
967	162	8	FDistributionImpl.java	inverseCumulativeProbability	THIS	FDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
968	206	8	FDistributionImpl.java	getInitialDomain	ret	double	1	0	0	NO_USE	0
968	206	8	FDistributionImpl.java	getInitialDomain	d	double	NAME	0	1	/	1
968	206	8	FDistributionImpl.java	getInitialDomain	p	double	PARAM_AS	1	0	NO_USE	0
968	206	8	FDistributionImpl.java	getInitialDomain	THIS	FDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
969	280	8	FDistributionImpl.java	calculateNumericalMean	denominatorDF	double	getDenominatorDegreesOfFreedom()	0	1	/	1
969	280	8	FDistributionImpl.java	calculateNumericalMean	THIS	FDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
970	307	8	FDistributionImpl.java	calculateNumericalVariance	denominatorDF	double	getDenominatorDegreesOfFreedom()	0	1	-	1
970	307	8	FDistributionImpl.java	calculateNumericalVariance	THIS	FDistributionImpl	UNKNOWN_AS	0	0	CLALLER_USE	0
971	111	8	ChiSquaredDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	2	NO_USE	1
971	111	8	ChiSquaredDistributionImpl.java	inverseCumulativeProbability	THIS	ChiSquaredDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
972	114	8	ChiSquaredDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	2	NO_USE	1
972	114	8	ChiSquaredDistributionImpl.java	inverseCumulativeProbability	THIS	ChiSquaredDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
973	148	8	ChiSquaredDistributionImpl.java	getDomainUpperBound	ret	double	UNKNOWN_AS	0	0	NO_USE	0
973	148	8	ChiSquaredDistributionImpl.java	getDomainUpperBound	p	double	PARAM_AS	1	1	NO_USE	1
973	148	8	ChiSquaredDistributionImpl.java	getDomainUpperBound	THIS	ChiSquaredDistributionImpl	UNKNOWN_AS	0	0	CLALLER_USE	0
974	174	8	ChiSquaredDistributionImpl.java	getInitialDomain	ret	double	UNKNOWN_AS	0	0	NO_USE	0
974	174	8	ChiSquaredDistributionImpl.java	getInitialDomain	p	double	PARAM_AS	1	1	NO_USE	1
974	174	8	ChiSquaredDistributionImpl.java	getInitialDomain	THIS	ChiSquaredDistributionImpl	UNKNOWN_AS	0	0	CLALLER_USE	0
975	81	8	CauchyDistributionImpl.java	CauchyDistributionImpl	median	double	PARAM_AS	1	0	NO_USE	0
975	81	8	CauchyDistributionImpl.java	CauchyDistributionImpl	scale	double	PARAM_AS	1	1	OTHER_USE	1
975	81	8	CauchyDistributionImpl.java	CauchyDistributionImpl	inverseCumAccuracy	double	PARAM_AS	1	0	NO_USE	0
975	81	8	CauchyDistributionImpl.java	CauchyDistributionImpl	THIS	CauchyDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
976	135	8	CauchyDistributionImpl.java	inverseCumulativeProbability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
976	135	8	CauchyDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	4	OTHER_USE	1
976	135	8	CauchyDistributionImpl.java	inverseCumulativeProbability	THIS	CauchyDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
977	137	15	CauchyDistributionImpl.java	inverseCumulativeProbability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
977	137	15	CauchyDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	4	==	1
977	137	15	CauchyDistributionImpl.java	inverseCumulativeProbability	THIS	CauchyDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
978	139	16	CauchyDistributionImpl.java	inverseCumulativeProbability	ret	double	NAME	0	0	NO_USE	0
978	139	16	CauchyDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	4	-	1
978	139	16	CauchyDistributionImpl.java	inverseCumulativeProbability	THIS	CauchyDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
979	159	8	CauchyDistributionImpl.java	getDomainLowerBound	ret	double	UNKNOWN_AS	0	0	NO_USE	0
979	159	8	CauchyDistributionImpl.java	getDomainLowerBound	p	double	PARAM_AS	1	1	NO_USE	1
979	159	8	CauchyDistributionImpl.java	getDomainLowerBound	THIS	CauchyDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
980	180	8	CauchyDistributionImpl.java	getDomainUpperBound	ret	double	UNKNOWN_AS	0	0	NO_USE	0
980	180	8	CauchyDistributionImpl.java	getDomainUpperBound	p	double	PARAM_AS	1	1	NO_USE	1
980	180	8	CauchyDistributionImpl.java	getDomainUpperBound	THIS	CauchyDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
981	201	8	CauchyDistributionImpl.java	getInitialDomain	ret	double	UNKNOWN_AS	0	0	NO_USE	0
981	201	8	CauchyDistributionImpl.java	getInitialDomain	p	double	PARAM_AS	1	2	>	1
981	201	8	CauchyDistributionImpl.java	getInitialDomain	THIS	CauchyDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
982	203	15	CauchyDistributionImpl.java	getInitialDomain	ret	double	-	0	0	NO_USE	0
982	203	15	CauchyDistributionImpl.java	getInitialDomain	p	double	PARAM_AS	1	2	NO_USE	1
982	203	15	CauchyDistributionImpl.java	getInitialDomain	THIS	CauchyDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
983	109	8	SaddlePointExpansion.java	getStirlingError	ret	double	UNKNOWN_AS	0	0	NO_USE	0
983	109	8	SaddlePointExpansion.java	getStirlingError	z	double	PARAM_AS	1	1	*	1
983	109	8	SaddlePointExpansion.java	getStirlingError	THIS	SaddlePointExpansion	UNKNOWN_AS	0	0	FIELD_USE	0
984	111	12	SaddlePointExpansion.java	getStirlingError	z2	double	*	0	2	OTHER_USE	1
984	111	12	SaddlePointExpansion.java	getStirlingError	ret	double	UNKNOWN_AS	0	0	NO_USE	0
984	111	12	SaddlePointExpansion.java	getStirlingError	z	double	PARAM_AS	1	1	+	0
984	111	12	SaddlePointExpansion.java	getStirlingError	THIS	SaddlePointExpansion	UNKNOWN_AS	0	0	FIELD_USE	0
985	147	8	SaddlePointExpansion.java	getDeviancePart	ret	double	UNKNOWN_AS	0	0	NO_USE	0
985	147	8	SaddlePointExpansion.java	getDeviancePart	x	double	PARAM_AS	1	2	-	1
985	147	8	SaddlePointExpansion.java	getDeviancePart	mu	double	PARAM_AS	1	2	-	1
985	147	8	SaddlePointExpansion.java	getDeviancePart	THIS	SaddlePointExpansion	UNKNOWN_AS	0	0	FIELD_USE	0
986	180	8	SaddlePointExpansion.java	logBinomialProbability	ret	double	UNKNOWN_AS	0	0	+	0
986	180	8	SaddlePointExpansion.java	logBinomialProbability	x	int	PARAM_AS	1	2	==	1
986	180	8	SaddlePointExpansion.java	logBinomialProbability	n	int	PARAM_AS	1	1	PARAM_USE	0
986	180	8	SaddlePointExpansion.java	logBinomialProbability	p	double	PARAM_AS	1	1	<	0
986	180	8	SaddlePointExpansion.java	logBinomialProbability	q	double	PARAM_AS	1	1	*	0
986	180	8	SaddlePointExpansion.java	logBinomialProbability	THIS	SaddlePointExpansion	UNKNOWN_AS	0	0	CLALLER_USE	0
987	181	12	SaddlePointExpansion.java	logBinomialProbability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
987	181	12	SaddlePointExpansion.java	logBinomialProbability	x	int	PARAM_AS	1	2	NO_USE	0
987	181	12	SaddlePointExpansion.java	logBinomialProbability	n	int	PARAM_AS	1	1	PARAM_USE	0
987	181	12	SaddlePointExpansion.java	logBinomialProbability	p	double	PARAM_AS	1	1	*	1
987	181	12	SaddlePointExpansion.java	logBinomialProbability	q	double	PARAM_AS	1	1	*	0
987	181	12	SaddlePointExpansion.java	logBinomialProbability	THIS	SaddlePointExpansion	UNKNOWN_AS	0	0	CLALLER_USE	0
988	186	15	SaddlePointExpansion.java	logBinomialProbability	ret	double	*	0	0	+	0
988	186	15	SaddlePointExpansion.java	logBinomialProbability	x	int	PARAM_AS	1	2	PARAM_USE	1
988	186	15	SaddlePointExpansion.java	logBinomialProbability	n	int	PARAM_AS	1	1	PARAM_USE	1
988	186	15	SaddlePointExpansion.java	logBinomialProbability	p	double	PARAM_AS	1	1	*	0
988	186	15	SaddlePointExpansion.java	logBinomialProbability	q	double	PARAM_AS	1	1	<	0
988	186	15	SaddlePointExpansion.java	logBinomialProbability	THIS	SaddlePointExpansion	UNKNOWN_AS	0	0	CLALLER_USE	0
989	187	12	SaddlePointExpansion.java	logBinomialProbability	ret	double	*	0	0	NO_USE	0
989	187	12	SaddlePointExpansion.java	logBinomialProbability	x	int	PARAM_AS	1	2	NO_USE	0
989	187	12	SaddlePointExpansion.java	logBinomialProbability	n	int	PARAM_AS	1	1	PARAM_USE	0
989	187	12	SaddlePointExpansion.java	logBinomialProbability	p	double	PARAM_AS	1	1	*	0
989	187	12	SaddlePointExpansion.java	logBinomialProbability	q	double	PARAM_AS	1	1	*	1
989	187	12	SaddlePointExpansion.java	logBinomialProbability	THIS	SaddlePointExpansion	UNKNOWN_AS	0	0	CLALLER_USE	0
990	84	8	KolmogorovSmirnovDistributionImpl.java	KolmogorovSmirnovDistributionImpl	n	int	PARAM_AS	1	1	OTHER_USE	1
990	84	8	KolmogorovSmirnovDistributionImpl.java	KolmogorovSmirnovDistributionImpl	THIS	KolmogorovSmirnovDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
991	157	8	KolmogorovSmirnovDistributionImpl.java	cdf	ninv	double	/	0	2	<=	0
991	157	8	KolmogorovSmirnovDistributionImpl.java	cdf	ninvhalf	double	*	0	2	<	1
991	157	8	KolmogorovSmirnovDistributionImpl.java	cdf	d	double	PARAM_AS	1	6	<	1
991	157	8	KolmogorovSmirnovDistributionImpl.java	cdf	exact	boolean	PARAM_AS	1	0	NO_USE	0
991	157	8	KolmogorovSmirnovDistributionImpl.java	cdf	THIS	KolmogorovSmirnovDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
992	161	15	KolmogorovSmirnovDistributionImpl.java	cdf	ninv	double	/	0	2	-	1
992	161	15	KolmogorovSmirnovDistributionImpl.java	cdf	ninvhalf	double	*	0	2	NO_USE	1
992	161	15	KolmogorovSmirnovDistributionImpl.java	cdf	d	double	PARAM_AS	1	6	*	1
992	161	15	KolmogorovSmirnovDistributionImpl.java	cdf	exact	boolean	PARAM_AS	1	0	NO_USE	0
992	161	15	KolmogorovSmirnovDistributionImpl.java	cdf	THIS	KolmogorovSmirnovDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
993	173	15	KolmogorovSmirnovDistributionImpl.java	cdf	ninv	double	/	0	2	NO_USE	1
993	173	15	KolmogorovSmirnovDistributionImpl.java	cdf	ninvhalf	double	*	0	2	NO_USE	0
993	173	15	KolmogorovSmirnovDistributionImpl.java	cdf	d	double	PARAM_AS	1	6	-	1
993	173	15	KolmogorovSmirnovDistributionImpl.java	cdf	exact	boolean	PARAM_AS	1	0	NO_USE	0
993	173	15	KolmogorovSmirnovDistributionImpl.java	cdf	THIS	KolmogorovSmirnovDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
994	177	15	KolmogorovSmirnovDistributionImpl.java	cdf	ninv	double	/	0	2	NO_USE	0
994	177	15	KolmogorovSmirnovDistributionImpl.java	cdf	ninvhalf	double	*	0	2	NO_USE	0
994	177	15	KolmogorovSmirnovDistributionImpl.java	cdf	d	double	PARAM_AS	1	6	NO_USE	1
994	177	15	KolmogorovSmirnovDistributionImpl.java	cdf	exact	boolean	PARAM_AS	1	0	NO_USE	0
994	177	15	KolmogorovSmirnovDistributionImpl.java	cdf	THIS	KolmogorovSmirnovDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
995	280	8	KolmogorovSmirnovDistributionImpl.java	createH	k	int	CAST	0	0	NO_USE	0
995	280	8	KolmogorovSmirnovDistributionImpl.java	createH	m	int	-	0	0	NO_USE	0
995	280	8	KolmogorovSmirnovDistributionImpl.java	createH	hDouble	double	-	0	1	NO_USE	1
995	280	8	KolmogorovSmirnovDistributionImpl.java	createH	d	double	PARAM_AS	1	0	NO_USE	0
995	280	8	KolmogorovSmirnovDistributionImpl.java	createH	THIS	KolmogorovSmirnovDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
996	308	16	KolmogorovSmirnovDistributionImpl.java	createH	j	int	0	0	1	ARRIDX_USE	1
996	308	16	KolmogorovSmirnovDistributionImpl.java	createH	i	int	0	0	1	ARRIDX_USE	1
996	308	16	KolmogorovSmirnovDistributionImpl.java	createH	k	int	CAST	0	0	NO_USE	0
996	308	16	KolmogorovSmirnovDistributionImpl.java	createH	m	int	-	0	0	NO_USE	0
996	308	16	KolmogorovSmirnovDistributionImpl.java	createH	hDouble	double	-	0	1	NO_USE	0
996	308	16	KolmogorovSmirnovDistributionImpl.java	createH	h	BigFraction	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
996	308	16	KolmogorovSmirnovDistributionImpl.java	createH	Hdata	BigFraction[][]	ARRAY_CREATION	0	0	ARR_USE	0
996	308	16	KolmogorovSmirnovDistributionImpl.java	createH	d	double	PARAM_AS	1	0	NO_USE	0
996	308	16	KolmogorovSmirnovDistributionImpl.java	createH	THIS	KolmogorovSmirnovDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
997	339	8	KolmogorovSmirnovDistributionImpl.java	createH	k	int	CAST	0	0	NO_USE	0
997	339	8	KolmogorovSmirnovDistributionImpl.java	createH	m	int	subtract()	0	0	-	0
997	339	8	KolmogorovSmirnovDistributionImpl.java	createH	hDouble	double	-	0	1	NO_USE	0
997	339	8	KolmogorovSmirnovDistributionImpl.java	createH	h	BigFraction	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	1
997	339	8	KolmogorovSmirnovDistributionImpl.java	createH	Hdata	BigFraction[][]	subtract()	0	0	ARR_USE	0
997	339	8	KolmogorovSmirnovDistributionImpl.java	createH	hPowers	BigFraction[]	multiply()	0	0	NO_USE	0
997	339	8	KolmogorovSmirnovDistributionImpl.java	createH	d	double	PARAM_AS	1	0	NO_USE	0
997	339	8	KolmogorovSmirnovDistributionImpl.java	createH	THIS	KolmogorovSmirnovDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
998	356	16	KolmogorovSmirnovDistributionImpl.java	createH	j	int	0	0	1	-	1
998	356	16	KolmogorovSmirnovDistributionImpl.java	createH	i	int	0	0	1	-	1
998	356	16	KolmogorovSmirnovDistributionImpl.java	createH	k	int	CAST	0	0	NO_USE	0
998	356	16	KolmogorovSmirnovDistributionImpl.java	createH	m	int	add()	0	0	NO_USE	0
998	356	16	KolmogorovSmirnovDistributionImpl.java	createH	hDouble	double	-	0	1	NO_USE	0
998	356	16	KolmogorovSmirnovDistributionImpl.java	createH	h	BigFraction	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
998	356	16	KolmogorovSmirnovDistributionImpl.java	createH	Hdata	BigFraction[][]	add()	0	0	ARR_USE	0
998	356	16	KolmogorovSmirnovDistributionImpl.java	createH	hPowers	BigFraction[]	multiply()	0	0	NO_USE	0
998	356	16	KolmogorovSmirnovDistributionImpl.java	createH	d	double	PARAM_AS	1	0	NO_USE	0
998	356	16	KolmogorovSmirnovDistributionImpl.java	createH	THIS	KolmogorovSmirnovDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
999	74	8	AbstractDistribution.java	cumulativeProbability	x0	double	PARAM_AS	1	1	OTHER_USE	1
999	74	8	AbstractDistribution.java	cumulativeProbability	x1	double	PARAM_AS	1	1	OTHER_USE	1
999	74	8	AbstractDistribution.java	cumulativeProbability	THIS	AbstractDistribution	UNKNOWN_AS	0	0	FIELD_USE	0
1000	97	8	AbstractDistribution.java	getNumericalMean	THIS	AbstractDistribution	UNKNOWN_AS	0	1	CLALLER_USE	1
1001	123	8	AbstractDistribution.java	getNumericalVariance	THIS	AbstractDistribution	UNKNOWN_AS	0	1	CLALLER_USE	1
1002	99	8	BetaDistributionImpl.java	recomputeZ	THIS	BetaDistributionImpl	UNKNOWN_AS	0	1	FIELD_USE	1
1003	110	8	BetaDistributionImpl.java	density	x	double	PARAM_AS	1	4	==	1
1003	110	8	BetaDistributionImpl.java	density	THIS	BetaDistributionImpl	UNKNOWN_AS	0	2	FIELD_USE	0
1004	112	15	BetaDistributionImpl.java	density	x	double	PARAM_AS	1	4	==	1
1004	112	15	BetaDistributionImpl.java	density	THIS	BetaDistributionImpl	UNKNOWN_AS	0	2	FIELD_USE	0
1005	113	12	BetaDistributionImpl.java	density	x	double	PARAM_AS	1	4	NO_USE	0
1005	113	12	BetaDistributionImpl.java	density	THIS	BetaDistributionImpl	UNKNOWN_AS	0	2	FIELD_USE	1
1006	117	15	BetaDistributionImpl.java	density	x	double	PARAM_AS	1	4	PARAM_USE	1
1006	117	15	BetaDistributionImpl.java	density	THIS	BetaDistributionImpl	UNKNOWN_AS	0	2	FIELD_USE	0
1007	118	12	BetaDistributionImpl.java	density	x	double	PARAM_AS	1	4	NO_USE	0
1007	118	12	BetaDistributionImpl.java	density	THIS	BetaDistributionImpl	UNKNOWN_AS	0	2	FIELD_USE	1
1008	132	8	BetaDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	2	==	1
1008	132	8	BetaDistributionImpl.java	inverseCumulativeProbability	THIS	BetaDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
1009	134	15	BetaDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	2	OTHER_USE	1
1009	134	15	BetaDistributionImpl.java	inverseCumulativeProbability	THIS	BetaDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
1010	161	8	BetaDistributionImpl.java	cumulativeProbability	x	double	PARAM_AS	1	2	>=	1
1010	161	8	BetaDistributionImpl.java	cumulativeProbability	THIS	BetaDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1011	163	15	BetaDistributionImpl.java	cumulativeProbability	x	double	PARAM_AS	1	2	PARAM_USE	1
1011	163	15	BetaDistributionImpl.java	cumulativeProbability	THIS	BetaDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1012	62	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	populationSize	int	PARAM_AS	1	3	OTHER_USE	1
1012	62	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	numberOfSuccesses	int	PARAM_AS	1	2	NO_USE	0
1012	62	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	sampleSize	int	PARAM_AS	1	2	NO_USE	0
1012	62	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	THIS	HypergeometricDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1013	66	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	populationSize	int	PARAM_AS	1	3	NO_USE	0
1013	66	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	numberOfSuccesses	int	PARAM_AS	1	2	OTHER_USE	1
1013	66	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	sampleSize	int	PARAM_AS	1	2	NO_USE	0
1013	66	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	THIS	HypergeometricDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1014	70	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	populationSize	int	PARAM_AS	1	3	NO_USE	0
1014	70	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	numberOfSuccesses	int	PARAM_AS	1	2	NO_USE	0
1014	70	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	sampleSize	int	PARAM_AS	1	2	OTHER_USE	1
1014	70	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	THIS	HypergeometricDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1015	75	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	populationSize	int	PARAM_AS	1	3	OTHER_USE	1
1015	75	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	numberOfSuccesses	int	PARAM_AS	1	2	OTHER_USE	1
1015	75	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	sampleSize	int	PARAM_AS	1	2	NO_USE	0
1015	75	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	THIS	HypergeometricDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1016	79	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	populationSize	int	PARAM_AS	1	3	OTHER_USE	1
1016	79	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	numberOfSuccesses	int	PARAM_AS	1	2	NO_USE	0
1016	79	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	sampleSize	int	PARAM_AS	1	2	OTHER_USE	1
1016	79	8	HypergeometricDistributionImpl.java	HypergeometricDistributionImpl	THIS	HypergeometricDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1017	100	8	HypergeometricDistributionImpl.java	cumulativeProbability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
1017	100	8	HypergeometricDistributionImpl.java	cumulativeProbability	domain	int[]	getDomain()	0	2	ARR_USE	1
1017	100	8	HypergeometricDistributionImpl.java	cumulativeProbability	x	int	PARAM_AS	1	2	>=	1
1017	100	8	HypergeometricDistributionImpl.java	cumulativeProbability	THIS	HypergeometricDistributionImpl	UNKNOWN_AS	0	0	CLALLER_USE	0
1018	102	15	HypergeometricDistributionImpl.java	cumulativeProbability	ret	double	0.0	0	0	NO_USE	0
1018	102	15	HypergeometricDistributionImpl.java	cumulativeProbability	domain	int[]	getDomain()	0	2	ARR_USE	1
1018	102	15	HypergeometricDistributionImpl.java	cumulativeProbability	x	int	PARAM_AS	1	2	PARAM_USE	1
1018	102	15	HypergeometricDistributionImpl.java	cumulativeProbability	THIS	HypergeometricDistributionImpl	UNKNOWN_AS	0	0	CLALLER_USE	0
1019	205	8	HypergeometricDistributionImpl.java	probability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
1019	205	8	HypergeometricDistributionImpl.java	probability	domain	int[]	getDomain()	0	2	NO_USE	1
1019	205	8	HypergeometricDistributionImpl.java	probability	x	int	PARAM_AS	1	2	PARAM_USE	1
1019	205	8	HypergeometricDistributionImpl.java	probability	THIS	HypergeometricDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1020	250	8	HypergeometricDistributionImpl.java	upperCumulativeProbability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
1020	250	8	HypergeometricDistributionImpl.java	upperCumulativeProbability	domain	int[]	getDomain()	0	2	ARR_USE	1
1020	250	8	HypergeometricDistributionImpl.java	upperCumulativeProbability	x	int	PARAM_AS	1	2	>	1
1020	250	8	HypergeometricDistributionImpl.java	upperCumulativeProbability	THIS	HypergeometricDistributionImpl	UNKNOWN_AS	0	0	CLALLER_USE	0
1021	252	15	HypergeometricDistributionImpl.java	upperCumulativeProbability	ret	double	1.0	0	0	NO_USE	0
1021	252	15	HypergeometricDistributionImpl.java	upperCumulativeProbability	domain	int[]	getDomain()	0	2	ARR_USE	1
1021	252	15	HypergeometricDistributionImpl.java	upperCumulativeProbability	x	int	PARAM_AS	1	2	PARAM_USE	1
1021	252	15	HypergeometricDistributionImpl.java	upperCumulativeProbability	THIS	HypergeometricDistributionImpl	UNKNOWN_AS	0	0	CLALLER_USE	0
1022	51	8	PascalDistributionImpl.java	PascalDistributionImpl	r	int	PARAM_AS	1	1	OTHER_USE	1
1022	51	8	PascalDistributionImpl.java	PascalDistributionImpl	p	double	PARAM_AS	1	2	NO_USE	0
1022	51	8	PascalDistributionImpl.java	PascalDistributionImpl	THIS	PascalDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1023	55	8	PascalDistributionImpl.java	PascalDistributionImpl	r	int	PARAM_AS	1	1	NO_USE	0
1023	55	8	PascalDistributionImpl.java	PascalDistributionImpl	p	double	PARAM_AS	1	2	OTHER_USE	1
1023	55	8	PascalDistributionImpl.java	PascalDistributionImpl	THIS	PascalDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
1024	113	8	PascalDistributionImpl.java	cumulativeProbability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
1024	113	8	PascalDistributionImpl.java	cumulativeProbability	x	int	PARAM_AS	1	1	+	1
1024	113	8	PascalDistributionImpl.java	cumulativeProbability	THIS	PascalDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1025	130	8	PascalDistributionImpl.java	probability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
1025	130	8	PascalDistributionImpl.java	probability	x	int	PARAM_AS	1	1	+	1
1025	130	8	PascalDistributionImpl.java	probability	THIS	PascalDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1026	158	8	PascalDistributionImpl.java	inverseCumulativeProbability	ret	int	UNKNOWN_AS	0	0	NO_USE	0
1026	158	8	PascalDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	2	==	1
1026	158	8	PascalDistributionImpl.java	inverseCumulativeProbability	THIS	PascalDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
1027	160	15	PascalDistributionImpl.java	inverseCumulativeProbability	ret	int	PREFIX_EXPR	0	0	NO_USE	0
1027	160	15	PascalDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	2	OTHER_USE	1
1027	160	15	PascalDistributionImpl.java	inverseCumulativeProbability	THIS	PascalDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
1028	65	8	ExponentialDistributionImpl.java	ExponentialDistributionImpl	mean	double	PARAM_AS	1	1	OTHER_USE	1
1028	65	8	ExponentialDistributionImpl.java	ExponentialDistributionImpl	inverseCumAccuracy	double	PARAM_AS	1	0	NO_USE	0
1028	65	8	ExponentialDistributionImpl.java	ExponentialDistributionImpl	THIS	ExponentialDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1029	84	8	ExponentialDistributionImpl.java	density	x	double	PARAM_AS	1	1	NO_USE	1
1029	84	8	ExponentialDistributionImpl.java	density	THIS	ExponentialDistributionImpl	UNKNOWN_AS	0	0	NO_USE	0
1030	107	8	ExponentialDistributionImpl.java	cumulativeProbability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
1030	107	8	ExponentialDistributionImpl.java	cumulativeProbability	x	double	PARAM_AS	1	1	-x	1
1030	107	8	ExponentialDistributionImpl.java	cumulativeProbability	THIS	ExponentialDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1031	131	8	ExponentialDistributionImpl.java	inverseCumulativeProbability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
1031	131	8	ExponentialDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	3	OTHER_USE	1
1031	131	8	ExponentialDistributionImpl.java	inverseCumulativeProbability	THIS	ExponentialDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1032	133	15	ExponentialDistributionImpl.java	inverseCumulativeProbability	ret	double	UNKNOWN_AS	0	0	NO_USE	0
1032	133	15	ExponentialDistributionImpl.java	inverseCumulativeProbability	p	double	PARAM_AS	1	3	-	1
1032	133	15	ExponentialDistributionImpl.java	inverseCumulativeProbability	THIS	ExponentialDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1033	183	8	ExponentialDistributionImpl.java	getDomainUpperBound	p	double	PARAM_AS	1	1	NO_USE	1
1033	183	8	ExponentialDistributionImpl.java	getDomainUpperBound	THIS	ExponentialDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1034	205	8	ExponentialDistributionImpl.java	getInitialDomain	p	double	PARAM_AS	1	1	NO_USE	1
1034	205	8	ExponentialDistributionImpl.java	getInitialDomain	THIS	ExponentialDistributionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1035	150	8	BlockFieldMatrix.java	BlockFieldMatrix	rows	int	PARAM_AS	1	0	NO_USE	0
1035	150	8	BlockFieldMatrix.java	BlockFieldMatrix	columns	int	PARAM_AS	1	0	NO_USE	0
1035	150	8	BlockFieldMatrix.java	BlockFieldMatrix	blockData	T[][]	PARAM_AS	1	1	OTHER_USE	0
1035	150	8	BlockFieldMatrix.java	BlockFieldMatrix	copyArray	boolean	PARAM_AS	1	0	NO_USE	1
1035	150	8	BlockFieldMatrix.java	BlockFieldMatrix	THIS	BlockFieldMatrix	/	0	2	CLALLER_USE	0
1036	162	16	BlockFieldMatrix.java	BlockFieldMatrix	jBlock	int	0	0	1	PARAM_USE	1
1036	162	16	BlockFieldMatrix.java	BlockFieldMatrix	iHeight	int	blockHeight()	0	1	*	1
1036	162	16	BlockFieldMatrix.java	BlockFieldMatrix	iBlock	int	0	0	0	NO_USE	0
1036	162	16	BlockFieldMatrix.java	BlockFieldMatrix	index	int	0	0	1	ARRIDX_USE	1
1036	162	16	BlockFieldMatrix.java	BlockFieldMatrix	rows	int	PARAM_AS	1	0	NO_USE	0
1036	162	16	BlockFieldMatrix.java	BlockFieldMatrix	columns	int	PARAM_AS	1	0	NO_USE	0
1036	162	16	BlockFieldMatrix.java	BlockFieldMatrix	blockData	T[][]	PARAM_AS	1	1	ARR_USE	1
1036	162	16	BlockFieldMatrix.java	BlockFieldMatrix	copyArray	boolean	PARAM_AS	1	0	NO_USE	0
1036	162	16	BlockFieldMatrix.java	BlockFieldMatrix	THIS	BlockFieldMatrix	NAME	0	2	FIELD_USE	1
1037	166	16	BlockFieldMatrix.java	BlockFieldMatrix	jBlock	int	0	0	1	NO_USE	0
1037	166	16	BlockFieldMatrix.java	BlockFieldMatrix	iHeight	int	blockHeight()	0	1	NO_USE	0
1037	166	16	BlockFieldMatrix.java	BlockFieldMatrix	iBlock	int	0	0	0	NO_USE	0
1037	166	16	BlockFieldMatrix.java	BlockFieldMatrix	index	int	0	0	1	ARRIDX_USE	0
1037	166	16	BlockFieldMatrix.java	BlockFieldMatrix	rows	int	PARAM_AS	1	0	NO_USE	0
1037	166	16	BlockFieldMatrix.java	BlockFieldMatrix	columns	int	PARAM_AS	1	0	NO_USE	0
1037	166	16	BlockFieldMatrix.java	BlockFieldMatrix	blockData	T[][]	PARAM_AS	1	1	ARR_USE	0
1037	166	16	BlockFieldMatrix.java	BlockFieldMatrix	copyArray	boolean	PARAM_AS	1	0	NO_USE	1
1037	166	16	BlockFieldMatrix.java	BlockFieldMatrix	THIS	BlockFieldMatrix	NAME	0	2	FIELD_USE	0
1038	207	12	BlockFieldMatrix.java	toBlocksLayout	length	int	FIELD_ACCESS	0	1	OTHER_USE	1
1038	207	12	BlockFieldMatrix.java	toBlocksLayout	i	int	0	0	0	NO_USE	0
1038	207	12	BlockFieldMatrix.java	toBlocksLayout	rows	int	NAME	0	0	NO_USE	0
1038	207	12	BlockFieldMatrix.java	toBlocksLayout	columns	int	FIELD_ACCESS	0	1	OTHER_USE	1
1038	207	12	BlockFieldMatrix.java	toBlocksLayout	blockRows	int	/	0	0	NO_USE	0
1038	207	12	BlockFieldMatrix.java	toBlocksLayout	blockColumns	int	/	0	0	NO_USE	0
1038	207	12	BlockFieldMatrix.java	toBlocksLayout	rawData	T[][]	PARAM_AS	1	0	NO_USE	0
1038	207	12	BlockFieldMatrix.java	toBlocksLayout	THIS	BlockFieldMatrix	UNKNOWN_AS	0	0	NO_USE	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	jWidth	int	blockWidth()	0	0	PARAM_USE	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	outIndex	int	+	0	0	NO_USE	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	outBlock	T[]	ARRAY_ACCESS	0	0	PARAM_USE	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	index	int	+	0	0	ARRIDX_USE	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	width	int	blockWidth()	0	0	PARAM_USE	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	heightExcess	int	-	0	1	PARAM_USE	1
1039	668	16	BlockFieldMatrix.java	getSubMatrix	widthExcess	int	-	0	2	>	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	jBlock	int	0	0	0	NO_USE	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	iHeight	int	blockHeight()	0	0	-	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	qBlock	int	NAME	0	0	+	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	iBlock	int	0	0	0	NO_USE	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	out	BlockFieldMatrix<T>	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	blockStartRow	int	/	0	0	NO_USE	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	rowsShift	int	%	0	0	PARAM_USE	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	blockStartColumn	int	/	0	0	NO_USE	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	columnsShift	int	%	0	0	PARAM_USE	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	pBlock	int	NAME	0	0	NO_USE	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	startRow	int	PARAM_AS	1	0	NO_USE	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	endRow	int	PARAM_AS	1	0	NO_USE	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	startColumn	int	PARAM_AS	1	0	NO_USE	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	endColumn	int	PARAM_AS	1	0	NO_USE	0
1039	668	16	BlockFieldMatrix.java	getSubMatrix	THIS	BlockFieldMatrix	UNKNOWN_AS	0	0	CLALLER_USE	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	jWidth	int	blockWidth()	0	0	PARAM_USE	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	outIndex	int	+	0	0	NO_USE	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	outBlock	T[]	ARRAY_ACCESS	0	0	PARAM_USE	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	index	int	+	0	0	ARRIDX_USE	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	width	int	blockWidth()	0	0	PARAM_USE	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	heightExcess	int	-	0	1	PARAM_USE	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	widthExcess	int	-	0	2	PARAM_USE	1
1040	670	20	BlockFieldMatrix.java	getSubMatrix	jBlock	int	0	0	0	NO_USE	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	iHeight	int	blockHeight()	0	0	-	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	qBlock	int	NAME	0	0	+	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	iBlock	int	0	0	0	NO_USE	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	out	BlockFieldMatrix<T>	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	blockStartRow	int	/	0	0	NO_USE	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	rowsShift	int	%	0	0	PARAM_USE	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	blockStartColumn	int	/	0	0	NO_USE	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	columnsShift	int	%	0	0	PARAM_USE	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	pBlock	int	NAME	0	0	NO_USE	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	startRow	int	PARAM_AS	1	0	NO_USE	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	endRow	int	PARAM_AS	1	0	NO_USE	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	startColumn	int	PARAM_AS	1	0	NO_USE	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	endColumn	int	PARAM_AS	1	0	NO_USE	0
1040	670	20	BlockFieldMatrix.java	getSubMatrix	THIS	BlockFieldMatrix	UNKNOWN_AS	0	0	CLALLER_USE	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	jWidth	int	blockWidth()	0	0	PARAM_USE	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	outIndex	int	+	0	0	NO_USE	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	outBlock	T[]	ARRAY_ACCESS	0	0	PARAM_USE	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	index	int	+	0	0	ARRIDX_USE	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	width	int	blockWidth()	0	0	PARAM_USE	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	heightExcess	int	-	0	1	NO_USE	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	widthExcess	int	-	0	2	PARAM_USE	1
1041	702	20	BlockFieldMatrix.java	getSubMatrix	jBlock	int	0	0	0	NO_USE	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	iHeight	int	blockHeight()	0	0	+	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	qBlock	int	NAME	0	0	+	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	iBlock	int	0	0	0	NO_USE	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	out	BlockFieldMatrix<T>	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	blockStartRow	int	/	0	0	NO_USE	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	rowsShift	int	%	0	0	PARAM_USE	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	blockStartColumn	int	/	0	0	NO_USE	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	columnsShift	int	%	0	0	PARAM_USE	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	pBlock	int	NAME	0	0	NO_USE	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	startRow	int	PARAM_AS	1	0	NO_USE	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	endRow	int	PARAM_AS	1	0	NO_USE	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	startColumn	int	PARAM_AS	1	0	NO_USE	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	endColumn	int	PARAM_AS	1	0	NO_USE	0
1041	702	20	BlockFieldMatrix.java	getSubMatrix	THIS	BlockFieldMatrix	UNKNOWN_AS	0	0	CLALLER_USE	0
1042	765	8	BlockFieldMatrix.java	setSubMatrix	refLength	int	FIELD_ACCESS	0	2	NO_USE	1
1042	765	8	BlockFieldMatrix.java	setSubMatrix	subMatrix	T[][]	PARAM_AS	1	0	NO_USE	0
1042	765	8	BlockFieldMatrix.java	setSubMatrix	row	int	PARAM_AS	1	0	NO_USE	0
1042	765	8	BlockFieldMatrix.java	setSubMatrix	column	int	PARAM_AS	1	0	NO_USE	0
1042	765	8	BlockFieldMatrix.java	setSubMatrix	THIS	BlockFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	0
1043	772	12	BlockFieldMatrix.java	setSubMatrix	refLength	int	FIELD_ACCESS	0	2	OTHER_USE	1
1043	772	12	BlockFieldMatrix.java	setSubMatrix	endRow	int	-	0	0	NO_USE	0
1043	772	12	BlockFieldMatrix.java	setSubMatrix	endColumn	int	-	0	0	NO_USE	0
1043	772	12	BlockFieldMatrix.java	setSubMatrix	subMatrix	T[][]	PARAM_AS	1	0	NO_USE	0
1043	772	12	BlockFieldMatrix.java	setSubMatrix	row	int	PARAM_AS	1	0	NO_USE	0
1043	772	12	BlockFieldMatrix.java	setSubMatrix	column	int	PARAM_AS	1	0	NO_USE	0
1043	772	12	BlockFieldMatrix.java	setSubMatrix	THIS	BlockFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1044	825	12	BlockFieldMatrix.java	getRowMatrix	jWidth	int	blockWidth()	0	1	*	1
1044	825	12	BlockFieldMatrix.java	getRowMatrix	block	T[]	ARRAY_ACCESS	0	0	PARAM_USE	0
1044	825	12	BlockFieldMatrix.java	getRowMatrix	available	int	-	0	1	PARAM_USE	1
1044	825	12	BlockFieldMatrix.java	getRowMatrix	jBlock	int	0	0	0	NO_USE	0
1044	825	12	BlockFieldMatrix.java	getRowMatrix	out	BlockFieldMatrix<T>	CLASS_INSTANCE_CREATION	0	0	OTHER_USE	0
1044	825	12	BlockFieldMatrix.java	getRowMatrix	iBlock	int	/	0	0	NO_USE	0
1044	825	12	BlockFieldMatrix.java	getRowMatrix	iRow	int	-	0	0	*	0
1044	825	12	BlockFieldMatrix.java	getRowMatrix	outBlockIndex	int	0	0	0	++x	0
1044	825	12	BlockFieldMatrix.java	getRowMatrix	outIndex	int	0	0	0	PARAM_USE	0
1044	825	12	BlockFieldMatrix.java	getRowMatrix	outBlock	T[]	ARRAY_ACCESS	0	0	PARAM_USE	0
1044	825	12	BlockFieldMatrix.java	getRowMatrix	row	int	PARAM_AS	1	0	NO_USE	0
1044	825	12	BlockFieldMatrix.java	getRowMatrix	THIS	BlockFieldMatrix	UNKNOWN_AS	0	0	FIELD_USE	0
1045	864	8	BlockFieldMatrix.java	setRowMatrix	nCols	int	getColumnDimension()	0	1	OTHER_USE	1
1045	864	8	BlockFieldMatrix.java	setRowMatrix	row	int	PARAM_AS	1	0	NO_USE	0
1045	864	8	BlockFieldMatrix.java	setRowMatrix	matrix	BlockFieldMatrix<T>	PARAM_AS	1	2	CLALLER_USE	1
1045	864	8	BlockFieldMatrix.java	setRowMatrix	THIS	BlockFieldMatrix	UNKNOWN_AS	0	0	NO_USE	0
1046	881	12	BlockFieldMatrix.java	setRowMatrix	jWidth	int	blockWidth()	0	1	*	1
1046	881	12	BlockFieldMatrix.java	setRowMatrix	block	T[]	ARRAY_ACCESS	0	0	PARAM_USE	0
1046	881	12	BlockFieldMatrix.java	setRowMatrix	available	int	-	0	1	PARAM_USE	1
1046	881	12	BlockFieldMatrix.java	setRowMatrix	jBlock	int	0	0	0	NO_USE	0
1046	881	12	BlockFieldMatrix.java	setRowMatrix	nCols	int	getColumnDimension()	0	1	NO_USE	0
1046	881	12	BlockFieldMatrix.java	setRowMatrix	iBlock	int	/	0	0	NO_USE	0
1046	881	12	BlockFieldMatrix.java	setRowMatrix	iRow	int	-	0	0	*	0
1046	881	12	BlockFieldMatrix.java	setRowMatrix	mBlockIndex	int	0	0	0	++x	0
1046	881	12	BlockFieldMatrix.java	setRowMatrix	mIndex	int	0	0	0	PARAM_USE	0
1046	881	12	BlockFieldMatrix.java	setRowMatrix	mBlock	T[]	ARRAY_ACCESS	0	0	PARAM_USE	0
1046	881	12	BlockFieldMatrix.java	setRowMatrix	row	int	PARAM_AS	1	0	NO_USE	0
1046	881	12	BlockFieldMatrix.java	setRowMatrix	matrix	BlockFieldMatrix<T>	PARAM_AS	1	2	OTHER_USE	0
1046	881	12	BlockFieldMatrix.java	setRowMatrix	THIS	BlockFieldMatrix	UNKNOWN_AS	0	0	FIELD_USE	0
1047	910	16	BlockFieldMatrix.java	getColumnMatrix	i	int	0	0	0	NO_USE	0
1047	910	16	BlockFieldMatrix.java	getColumnMatrix	iHeight	int	blockHeight()	0	0	NO_USE	0
1047	910	16	BlockFieldMatrix.java	getColumnMatrix	block	T[]	ARRAY_ACCESS	0	0	NO_USE	0
1047	910	16	BlockFieldMatrix.java	getColumnMatrix	iBlock	int	0	0	0	NO_USE	0
1047	910	16	BlockFieldMatrix.java	getColumnMatrix	out	BlockFieldMatrix<T>	CLASS_INSTANCE_CREATION	0	0	OTHER_USE	0
1047	910	16	BlockFieldMatrix.java	getColumnMatrix	jBlock	int	/	0	0	NO_USE	0
1047	910	16	BlockFieldMatrix.java	getColumnMatrix	jColumn	int	-	0	0	NO_USE	0
1047	910	16	BlockFieldMatrix.java	getColumnMatrix	jWidth	int	blockWidth()	0	0	NO_USE	0
1047	910	16	BlockFieldMatrix.java	getColumnMatrix	outBlockIndex	int	0	0	0	++x	0
1047	910	16	BlockFieldMatrix.java	getColumnMatrix	outIndex	int	0	0	1	NO_USE	1
1047	910	16	BlockFieldMatrix.java	getColumnMatrix	outBlock	T[]	ARRAY_ACCESS	0	1	NO_USE	1
1047	910	16	BlockFieldMatrix.java	getColumnMatrix	column	int	PARAM_AS	1	0	NO_USE	0
1047	910	16	BlockFieldMatrix.java	getColumnMatrix	THIS	BlockFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1048	946	8	BlockFieldMatrix.java	setColumnMatrix	nRows	int	getRowDimension()	0	1	OTHER_USE	1
1048	946	8	BlockFieldMatrix.java	setColumnMatrix	column	int	PARAM_AS	1	0	NO_USE	0
1048	946	8	BlockFieldMatrix.java	setColumnMatrix	matrix	BlockFieldMatrix<T>	PARAM_AS	1	2	CLALLER_USE	1
1048	946	8	BlockFieldMatrix.java	setColumnMatrix	THIS	BlockFieldMatrix	UNKNOWN_AS	0	1	NO_USE	0
1049	964	16	BlockFieldMatrix.java	setColumnMatrix	i	int	0	0	0	NO_USE	0
1049	964	16	BlockFieldMatrix.java	setColumnMatrix	iHeight	int	blockHeight()	0	0	NO_USE	0
1049	964	16	BlockFieldMatrix.java	setColumnMatrix	block	T[]	ARRAY_ACCESS	0	0	NO_USE	0
1049	964	16	BlockFieldMatrix.java	setColumnMatrix	iBlock	int	0	0	0	NO_USE	0
1049	964	16	BlockFieldMatrix.java	setColumnMatrix	nRows	int	getRowDimension()	0	1	NO_USE	0
1049	964	16	BlockFieldMatrix.java	setColumnMatrix	jBlock	int	/	0	0	NO_USE	0
1049	964	16	BlockFieldMatrix.java	setColumnMatrix	jColumn	int	-	0	0	NO_USE	0
1049	964	16	BlockFieldMatrix.java	setColumnMatrix	jWidth	int	blockWidth()	0	0	NO_USE	0
1049	964	16	BlockFieldMatrix.java	setColumnMatrix	mBlockIndex	int	0	0	0	++x	0
1049	964	16	BlockFieldMatrix.java	setColumnMatrix	mIndex	int	0	0	1	NO_USE	1
1049	964	16	BlockFieldMatrix.java	setColumnMatrix	mBlock	T[]	ARRAY_ACCESS	0	1	NO_USE	1
1049	964	16	BlockFieldMatrix.java	setColumnMatrix	column	int	PARAM_AS	1	0	NO_USE	0
1049	964	16	BlockFieldMatrix.java	setColumnMatrix	matrix	BlockFieldMatrix<T>	PARAM_AS	1	2	OTHER_USE	0
1049	964	16	BlockFieldMatrix.java	setColumnMatrix	THIS	BlockFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1050	1060	8	BlockFieldMatrix.java	setRow	nCols	int	getColumnDimension()	0	1	OTHER_USE	1
1050	1060	8	BlockFieldMatrix.java	setRow	row	int	PARAM_AS	1	0	NO_USE	0
1050	1060	8	BlockFieldMatrix.java	setRow	array	T[]	PARAM_AS	1	1	OTHER_USE	1
1050	1060	8	BlockFieldMatrix.java	setRow	THIS	BlockFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1051	1103	8	BlockFieldMatrix.java	setColumn	nRows	int	getRowDimension()	0	1	OTHER_USE	1
1051	1103	8	BlockFieldMatrix.java	setColumn	column	int	PARAM_AS	1	0	NO_USE	0
1051	1103	8	BlockFieldMatrix.java	setColumn	array	T[]	PARAM_AS	1	1	OTHER_USE	1
1051	1103	8	BlockFieldMatrix.java	setColumn	THIS	BlockFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1052	1233	8	BlockFieldMatrix.java	operate	v	T[]	PARAM_AS	1	1	OTHER_USE	1
1052	1233	8	BlockFieldMatrix.java	operate	THIS	BlockFieldMatrix	UNKNOWN_AS	0	2	FIELD_USE	1
1053	1275	8	BlockFieldMatrix.java	preMultiply	v	T[]	PARAM_AS	1	1	OTHER_USE	1
1053	1275	8	BlockFieldMatrix.java	preMultiply	THIS	BlockFieldMatrix	UNKNOWN_AS	0	2	FIELD_USE	1
1054	46	8	InvertibleRealLinearOperator.java	solve	b	double[]	PARAM_AS	1	1	OTHER_USE	1
1054	46	8	InvertibleRealLinearOperator.java	solve	THIS	InvertibleRealLinearOperator	UNKNOWN_AS	0	2	FIELD_USE	1
1055	51	8	InvertibleRealLinearOperator.java	solve	x	RealVector	solve()	0	1	OTHER_USE	1
1055	51	8	InvertibleRealLinearOperator.java	solve	b	double[]	PARAM_AS	1	1	NO_USE	0
1055	51	8	InvertibleRealLinearOperator.java	solve	THIS	InvertibleRealLinearOperator	UNKNOWN_AS	0	2	NO_USE	0
1056	63	8	TriDiagonalTransformer.java	TriDiagonalTransformer	matrix	RealMatrix	PARAM_AS	1	1	CLALLER_USE	1
1056	63	8	TriDiagonalTransformer.java	TriDiagonalTransformer	THIS	TriDiagonalTransformer	UNKNOWN_AS	0	0	NO_USE	0
1057	86	8	TriDiagonalTransformer.java	getQ	THIS	TriDiagonalTransformer	UNKNOWN_AS	0	1	CLALLER_USE	1
1058	98	8	TriDiagonalTransformer.java	getQT	THIS	TriDiagonalTransformer	UNKNOWN_AS	0	1	FIELD_USE	1
1059	107	16	TriDiagonalTransformer.java	getQT	hK	double[]	ARRAY_ACCESS	0	1	ARR_USE	1
1059	107	16	TriDiagonalTransformer.java	getQT	inv	double	/	0	0	OTHER_USE	0
1059	107	16	TriDiagonalTransformer.java	getQT	k	int	-	0	1	-	1
1059	107	16	TriDiagonalTransformer.java	getQT	m	int	NAME	0	0	<	0
1059	107	16	TriDiagonalTransformer.java	getQT	THIS	TriDiagonalTransformer	createRealMatrix()	0	1	FIELD_USE	0
1060	138	8	TriDiagonalTransformer.java	getT	THIS	TriDiagonalTransformer	UNKNOWN_AS	0	3	FIELD_USE	1
1061	143	16	TriDiagonalTransformer.java	getT	i	int	0	0	2	PARAM_USE	1
1061	143	16	TriDiagonalTransformer.java	getT	m	int	NAME	0	0	NO_USE	0
1061	143	16	TriDiagonalTransformer.java	getT	THIS	TriDiagonalTransformer	createRealMatrix()	0	3	FIELD_USE	0
1062	146	16	TriDiagonalTransformer.java	getT	i	int	0	0	2	PARAM_USE	1
1062	146	16	TriDiagonalTransformer.java	getT	m	int	NAME	0	0	NO_USE	0
1062	146	16	TriDiagonalTransformer.java	getT	THIS	TriDiagonalTransformer	createRealMatrix()	0	3	FIELD_USE	1
1063	206	12	TriDiagonalTransformer.java	transform	hK	double[]	ARRAY_ACCESS	0	0	ARR_USE	0
1063	206	12	TriDiagonalTransformer.java	transform	xNormSqr	double	*	0	0	NO_USE	0
1063	206	12	TriDiagonalTransformer.java	transform	a	double	OTHERS	0	1	OTHER_USE	1
1063	206	12	TriDiagonalTransformer.java	transform	k	int	NAME	0	0	+	0
1063	206	12	TriDiagonalTransformer.java	transform	m	int	NAME	0	0	PARAM_USE	0
1063	206	12	TriDiagonalTransformer.java	transform	z	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
1063	206	12	TriDiagonalTransformer.java	transform	THIS	TriDiagonalTransformer	NAME	0	0	FIELD_USE	0
1064	72	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	ii	int	ARRAY_ACCESS	0	2	NO_USE	1
1064	72	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	isi	int	ARRAY_ACCESS	0	2	NO_USE	1
1064	72	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	i	int	+	0	0	OTHER_USE	0
1064	72	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	loop	boolean	LITERAL	0	0	NO_USE	0
1064	72	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	order	int	getRowDimension()	0	0	NO_USE	0
1064	72	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	c	double[][]	getData()	0	4	NO_USE	1
1064	72	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	b	double[][]	ARRAY_CREATION	0	0	NO_USE	0
1064	72	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	swap	int[]	NAME	0	1	ARR_USE	0
1064	72	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	index	int[]	NAME	0	2	NO_USE	0
1064	72	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	r	int	NAME	0	3	ARRIDX_USE	0
1064	72	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	matrix	RealMatrix	PARAM_AS	1	0	NO_USE	0
1064	72	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	small	double	PARAM_AS	1	2	NO_USE	0
1064	72	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	THIS	RectangularCholeskyDecompositionImpl	UNKNOWN_AS	0	0	NO_USE	0
1065	79	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	loop	boolean	LITERAL	0	0	NO_USE	0
1065	79	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	order	int	getRowDimension()	0	0	NO_USE	0
1065	79	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	c	double[][]	getData()	0	4	NO_USE	0
1065	79	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	b	double[][]	ARRAY_CREATION	0	0	NO_USE	0
1065	79	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	swap	int[]	NAME	0	1	ARR_USE	1
1065	79	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	index	int[]	NAME	0	2	ARR_USE	0
1065	79	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	r	int	NAME	0	3	ARRIDX_USE	1
1065	79	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	matrix	RealMatrix	PARAM_AS	1	0	NO_USE	0
1065	79	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	small	double	PARAM_AS	1	2	NO_USE	0
1065	79	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	THIS	RectangularCholeskyDecompositionImpl	UNKNOWN_AS	0	0	NO_USE	0
1066	87	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	ir	int	ARRAY_ACCESS	0	2	OTHER_USE	1
1066	87	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	loop	boolean	LITERAL	0	0	NO_USE	0
1066	87	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	order	int	getRowDimension()	0	0	<	0
1066	87	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	c	double[][]	getData()	0	4	ARR_USE	1
1066	87	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	b	double[][]	ARRAY_CREATION	0	0	ARR_USE	0
1066	87	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	swap	int[]	NAME	0	1	NO_USE	0
1066	87	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	index	int[]	NAME	0	2	ARR_USE	0
1066	87	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	r	int	NAME	0	3	==	0
1066	87	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	matrix	RealMatrix	PARAM_AS	1	0	NO_USE	0
1066	87	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	small	double	PARAM_AS	1	2	OTHER_USE	1
1066	87	12	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	THIS	RectangularCholeskyDecompositionImpl	UNKNOWN_AS	0	0	NO_USE	0
1067	89	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	ir	int	ARRAY_ACCESS	0	2	OTHER_USE	0
1067	89	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	loop	boolean	LITERAL	0	0	NO_USE	0
1067	89	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	order	int	getRowDimension()	0	0	NO_USE	0
1067	89	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	c	double[][]	getData()	0	4	NO_USE	0
1067	89	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	b	double[][]	ARRAY_CREATION	0	0	NO_USE	0
1067	89	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	swap	int[]	NAME	0	1	NO_USE	0
1067	89	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	index	int[]	NAME	0	2	NO_USE	0
1067	89	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	r	int	NAME	0	3	NO_USE	1
1067	89	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	matrix	RealMatrix	PARAM_AS	1	0	NO_USE	0
1067	89	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	small	double	PARAM_AS	1	2	OTHER_USE	0
1067	89	16	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	THIS	RectangularCholeskyDecompositionImpl	UNKNOWN_AS	0	0	NO_USE	0
1068	95	20	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	i	int	NAME	0	2	OTHER_USE	1
1068	95	20	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	ir	int	ARRAY_ACCESS	0	2	NO_USE	0
1068	95	20	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	loop	boolean	LITERAL	0	0	NO_USE	0
1068	95	20	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	order	int	getRowDimension()	0	0	NO_USE	0
1068	95	20	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	c	double[][]	getData()	0	4	NO_USE	1
1068	95	20	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	b	double[][]	ARRAY_CREATION	0	0	NO_USE	0
1068	95	20	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	swap	int[]	NAME	0	1	NO_USE	0
1068	95	20	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	index	int[]	NAME	0	2	NO_USE	1
1068	95	20	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	r	int	NAME	0	3	NO_USE	0
1068	95	20	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	matrix	RealMatrix	PARAM_AS	1	0	NO_USE	0
1068	95	20	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	small	double	PARAM_AS	1	2	OTHER_USE	1
1068	95	20	RectangularCholeskyDecompositionImpl.java	RectangularCholeskyDecompositionImpl	THIS	RectangularCholeskyDecompositionImpl	UNKNOWN_AS	0	0	NO_USE	0
1069	64	8	AbstractRealVector.java	checkVectorDimensions	d	int	getDimension()	0	1	OTHER_USE	1
1069	64	8	AbstractRealVector.java	checkVectorDimensions	n	int	PARAM_AS	1	1	OTHER_USE	1
1069	64	8	AbstractRealVector.java	checkVectorDimensions	THIS	AbstractRealVector	UNKNOWN_AS	0	0	NO_USE	0
1070	76	8	AbstractRealVector.java	checkIndex	index	int	PARAM_AS	1	2	OTHER_USE	1
1070	76	8	AbstractRealVector.java	checkIndex	THIS	AbstractRealVector	UNKNOWN_AS	0	1	FIELD_USE	1
1071	112	8	AbstractRealVector.java	add	v	RealVector	PARAM_AS	1	1	OTHER_USE	1
1071	112	8	AbstractRealVector.java	add	THIS	AbstractRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1072	140	8	AbstractRealVector.java	subtract	v	RealVector	PARAM_AS	1	1	OTHER_USE	1
1072	140	8	AbstractRealVector.java	subtract	THIS	AbstractRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1073	161	8	AbstractRealVector.java	mapAddToSelf	d	double	PARAM_AS	1	1	PARAM_USE	1
1073	161	8	AbstractRealVector.java	mapAddToSelf	THIS	AbstractRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1074	192	8	AbstractRealVector.java	cosine	norm	double	getNorm()	0	1	NO_USE	1
1074	192	8	AbstractRealVector.java	cosine	vNorm	double	getNorm()	0	1	NO_USE	1
1074	192	8	AbstractRealVector.java	cosine	v	RealVector	PARAM_AS	1	0	NO_USE	0
1074	192	8	AbstractRealVector.java	cosine	THIS	AbstractRealVector	UNKNOWN_AS	0	0	FIELD_USE	0
1075	324	12	AbstractRealVector.java	getMinIndex	entry	Entry	next()	0	1	CLALLER_USE	1
1075	324	12	AbstractRealVector.java	getMinIndex	minIndex	int	PREFIX_EXPR	0	0	NO_USE	0
1075	324	12	AbstractRealVector.java	getMinIndex	minValue	double	NAME	0	1	NO_USE	1
1075	324	12	AbstractRealVector.java	getMinIndex	iterator	Iterator<Entry>	iterator()	0	0	NO_USE	0
1075	324	12	AbstractRealVector.java	getMinIndex	THIS	AbstractRealVector	UNKNOWN_AS	0	0	NO_USE	0
1076	350	12	AbstractRealVector.java	getMaxIndex	entry	Entry	next()	0	1	CLALLER_USE	1
1076	350	12	AbstractRealVector.java	getMaxIndex	maxIndex	int	PREFIX_EXPR	0	0	NO_USE	0
1076	350	12	AbstractRealVector.java	getMaxIndex	maxValue	double	NAME	0	1	NO_USE	1
1076	350	12	AbstractRealVector.java	getMaxIndex	iterator	Iterator<Entry>	iterator()	0	0	NO_USE	0
1076	350	12	AbstractRealVector.java	getMaxIndex	THIS	AbstractRealVector	UNKNOWN_AS	0	0	NO_USE	0
1077	400	8	AbstractRealVector.java	outerProduct	product	RealMatrix	UNKNOWN_AS	0	0	NO_USE	0
1077	400	8	AbstractRealVector.java	outerProduct	v	RealVector	PARAM_AS	1	1	CLALLER_USE	1
1077	400	8	AbstractRealVector.java	outerProduct	THIS	AbstractRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1078	103	8	ArrayRealVector.java	ArrayRealVector	d	double[]	PARAM_AS	1	1	NO_USE	1
1078	103	8	ArrayRealVector.java	ArrayRealVector	copyArray	boolean	PARAM_AS	1	0	NO_USE	0
1078	103	8	ArrayRealVector.java	ArrayRealVector	THIS	ArrayRealVector	UNKNOWN_AS	0	0	NO_USE	0
1079	120	8	ArrayRealVector.java	ArrayRealVector	d	double[]	PARAM_AS	1	2	NO_USE	1
1079	120	8	ArrayRealVector.java	ArrayRealVector	pos	int	PARAM_AS	1	1	NO_USE	0
1079	120	8	ArrayRealVector.java	ArrayRealVector	size	int	PARAM_AS	1	1	NO_USE	0
1079	120	8	ArrayRealVector.java	ArrayRealVector	THIS	ArrayRealVector	UNKNOWN_AS	0	1	NO_USE	0
1080	123	8	ArrayRealVector.java	ArrayRealVector	d	double[]	PARAM_AS	1	2	OTHER_USE	1
1080	123	8	ArrayRealVector.java	ArrayRealVector	pos	int	PARAM_AS	1	1	+	1
1080	123	8	ArrayRealVector.java	ArrayRealVector	size	int	PARAM_AS	1	1	+	1
1080	123	8	ArrayRealVector.java	ArrayRealVector	THIS	ArrayRealVector	UNKNOWN_AS	0	1	FIELD_USE	1
1081	152	8	ArrayRealVector.java	ArrayRealVector	d	Double[]	PARAM_AS	1	2	NO_USE	1
1081	152	8	ArrayRealVector.java	ArrayRealVector	pos	int	PARAM_AS	1	1	NO_USE	0
1081	152	8	ArrayRealVector.java	ArrayRealVector	size	int	PARAM_AS	1	1	NO_USE	0
1081	152	8	ArrayRealVector.java	ArrayRealVector	THIS	ArrayRealVector	UNKNOWN_AS	0	1	NO_USE	0
1082	155	8	ArrayRealVector.java	ArrayRealVector	d	Double[]	PARAM_AS	1	2	OTHER_USE	1
1082	155	8	ArrayRealVector.java	ArrayRealVector	pos	int	PARAM_AS	1	1	+	1
1082	155	8	ArrayRealVector.java	ArrayRealVector	size	int	PARAM_AS	1	1	+	1
1082	155	8	ArrayRealVector.java	ArrayRealVector	THIS	ArrayRealVector	UNKNOWN_AS	0	1	FIELD_USE	1
1083	171	8	ArrayRealVector.java	ArrayRealVector	v	RealVector	PARAM_AS	1	1	NO_USE	1
1083	171	8	ArrayRealVector.java	ArrayRealVector	THIS	ArrayRealVector	UNKNOWN_AS	0	0	NO_USE	0
1084	290	8	ArrayRealVector.java	add	v	RealVector	PARAM_AS	1	1	OTHER_USE	1
1084	290	8	ArrayRealVector.java	add	THIS	ArrayRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1085	330	8	ArrayRealVector.java	subtract	v	RealVector	PARAM_AS	1	1	OTHER_USE	1
1085	330	8	ArrayRealVector.java	subtract	THIS	ArrayRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1086	420	8	ArrayRealVector.java	ebeMultiply	v	RealVector	PARAM_AS	1	1	OTHER_USE	1
1086	420	8	ArrayRealVector.java	ebeMultiply	THIS	ArrayRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1087	456	8	ArrayRealVector.java	ebeDivide	v	RealVector	PARAM_AS	1	1	OTHER_USE	1
1087	456	8	ArrayRealVector.java	ebeDivide	THIS	ArrayRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1088	510	8	ArrayRealVector.java	dotProduct	v	RealVector	PARAM_AS	1	1	OTHER_USE	1
1088	510	8	ArrayRealVector.java	dotProduct	THIS	ArrayRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1089	580	8	ArrayRealVector.java	getDistance	v	RealVector	PARAM_AS	1	1	OTHER_USE	1
1089	580	8	ArrayRealVector.java	getDistance	THIS	ArrayRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1090	627	8	ArrayRealVector.java	getL1Distance	v	RealVector	PARAM_AS	1	1	OTHER_USE	1
1090	627	8	ArrayRealVector.java	getL1Distance	THIS	ArrayRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1091	674	8	ArrayRealVector.java	getLInfDistance	v	RealVector	PARAM_AS	1	1	OTHER_USE	1
1091	674	8	ArrayRealVector.java	getLInfDistance	THIS	ArrayRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1092	721	8	ArrayRealVector.java	unitVector	norm	double	getNorm()	0	1	NO_USE	1
1092	721	8	ArrayRealVector.java	unitVector	THIS	ArrayRealVector	UNKNOWN_AS	0	0	FIELD_USE	0
1093	731	8	ArrayRealVector.java	unitize	norm	double	getNorm()	0	1	NO_USE	1
1093	731	8	ArrayRealVector.java	unitize	THIS	ArrayRealVector	UNKNOWN_AS	0	0	FIELD_USE	0
1094	763	8	ArrayRealVector.java	outerProduct	v	RealVector	PARAM_AS	1	1	OTHER_USE	1
1094	763	8	ArrayRealVector.java	outerProduct	THIS	ArrayRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1095	945	8	ArrayRealVector.java	checkVectorDimensions	n	int	PARAM_AS	1	1	OTHER_USE	1
1095	945	8	ArrayRealVector.java	checkVectorDimensions	THIS	ArrayRealVector	UNKNOWN_AS	0	2	FIELD_USE	1
1096	958	12	ArrayRealVector.java	isNaN	THIS	ArrayRealVector	UNKNOWN_AS	0	0	NO_USE	1
1097	973	8	ArrayRealVector.java	isInfinite	THIS	ArrayRealVector	UNKNOWN_AS	0	1	NO_USE	1
1098	978	12	ArrayRealVector.java	isInfinite	THIS	ArrayRealVector	UNKNOWN_AS	0	1	NO_USE	1
1099	1002	8	ArrayRealVector.java	equals	other	Object	PARAM_AS	1	3	NO_USE	1
1099	1002	8	ArrayRealVector.java	equals	THIS	ArrayRealVector	UNKNOWN_AS	0	4	NO_USE	1
1100	1006	8	ArrayRealVector.java	equals	other	Object	PARAM_AS	1	3	NO_USE	1
1100	1006	8	ArrayRealVector.java	equals	THIS	ArrayRealVector	UNKNOWN_AS	0	4	NO_USE	0
1101	1011	8	ArrayRealVector.java	equals	rhs	RealVector	CAST	0	3	NO_USE	1
1101	1011	8	ArrayRealVector.java	equals	other	Object	PARAM_AS	1	3	NO_USE	0
1101	1011	8	ArrayRealVector.java	equals	THIS	ArrayRealVector	UNKNOWN_AS	0	4	NO_USE	1
1102	1015	8	ArrayRealVector.java	equals	rhs	RealVector	CAST	0	3	NO_USE	1
1102	1015	8	ArrayRealVector.java	equals	other	Object	PARAM_AS	1	3	NO_USE	0
1102	1015	8	ArrayRealVector.java	equals	THIS	ArrayRealVector	UNKNOWN_AS	0	4	CLALLER_USE	0
1103	1020	12	ArrayRealVector.java	equals	i	int	0	0	2	NO_USE	1
1103	1020	12	ArrayRealVector.java	equals	rhs	RealVector	CAST	0	3	NO_USE	1
1103	1020	12	ArrayRealVector.java	equals	other	Object	PARAM_AS	1	3	NO_USE	0
1103	1020	12	ArrayRealVector.java	equals	THIS	ArrayRealVector	UNKNOWN_AS	0	4	NO_USE	1
1104	1035	8	ArrayRealVector.java	hashCode	THIS	ArrayRealVector	UNKNOWN_AS	0	1	NO_USE	1
1105	72	8	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	matrix	FieldMatrix<T>	PARAM_AS	1	1	CLALLER_USE	1
1105	72	8	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	THIS	FieldLUDecompositionImpl	UNKNOWN_AS	0	2	NO_USE	0
1106	117	16	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	luRow	T[]	NAME	0	0	NO_USE	0
1106	117	16	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	row	int	NAME	0	0	NO_USE	0
1106	117	16	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	sum	T	subtract()	0	0	NO_USE	0
1106	117	16	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	nonZero	int	NAME	0	3	++x	1
1106	117	16	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	col	int	NAME	0	2	NO_USE	1
1106	117	16	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	m	int	getColumnDimension()	0	1	NO_USE	0
1106	117	16	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	matrix	FieldMatrix<T>	PARAM_AS	1	1	NO_USE	0
1106	117	16	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	THIS	FieldLUDecompositionImpl	LITERAL	0	2	NO_USE	1
1107	124	12	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	sum	T	subtract()	0	0	NO_USE	0
1107	124	12	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	nonZero	int	NAME	0	3	NO_USE	1
1107	124	12	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	col	int	NAME	0	2	NO_USE	0
1107	124	12	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	m	int	getColumnDimension()	0	1	NO_USE	1
1107	124	12	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	matrix	FieldMatrix<T>	PARAM_AS	1	1	NO_USE	0
1107	124	12	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	THIS	FieldLUDecompositionImpl	LITERAL	0	2	NO_USE	0
1108	130	12	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	sum	T	subtract()	0	0	NO_USE	0
1108	130	12	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	nonZero	int	NAME	0	3	ARRIDX_USE	1
1108	130	12	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	col	int	NAME	0	2	ARRIDX_USE	1
1108	130	12	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	m	int	getColumnDimension()	0	1	<	0
1108	130	12	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	matrix	FieldMatrix<T>	PARAM_AS	1	1	NO_USE	0
1108	130	12	FieldLUDecompositionImpl.java	FieldLUDecompositionImpl	THIS	FieldLUDecompositionImpl	LITERAL	0	2	FIELD_USE	0
1109	155	8	FieldLUDecompositionImpl.java	getL	THIS	FieldLUDecompositionImpl	UNKNOWN_AS	0	2	FIELD_USE	1
1110	171	8	FieldLUDecompositionImpl.java	getU	THIS	FieldLUDecompositionImpl	UNKNOWN_AS	0	2	FIELD_USE	1
1111	186	8	FieldLUDecompositionImpl.java	getP	THIS	FieldLUDecompositionImpl	UNKNOWN_AS	0	2	FIELD_USE	1
1112	203	8	FieldLUDecompositionImpl.java	getDeterminant	THIS	FieldLUDecompositionImpl	UNKNOWN_AS	0	0	FIELD_USE	1
1113	100	8	SingularValueDecompositionImpl.java	SingularValueDecompositionImpl	localcopy	double[][]	getData()	0	0	NO_USE	0
1113	100	8	SingularValueDecompositionImpl.java	SingularValueDecompositionImpl	matATA	double[][]	ARRAY_ACCESS	0	0	OTHER_USE	0
1113	100	8	SingularValueDecompositionImpl.java	SingularValueDecompositionImpl	matAAT	double[][]	ARRAY_ACCESS	0	0	OTHER_USE	0
1113	100	8	SingularValueDecompositionImpl.java	SingularValueDecompositionImpl	p	int	UNKNOWN_AS	0	0	-	0
1113	100	8	SingularValueDecompositionImpl.java	SingularValueDecompositionImpl	matrix	RealMatrix	PARAM_AS	1	0	NO_USE	0
1113	100	8	SingularValueDecompositionImpl.java	SingularValueDecompositionImpl	THIS	SingularValueDecompositionImpl	NULL	0	2	FIELD_USE	1
1114	134	12	SingularValueDecompositionImpl.java	SingularValueDecompositionImpl	tmp	RealVector	getColumnVector()	0	0	CLALLER_USE	0
1114	134	12	SingularValueDecompositionImpl.java	SingularValueDecompositionImpl	product	double	dotProduct()	0	1	NO_USE	1
1114	134	12	SingularValueDecompositionImpl.java	SingularValueDecompositionImpl	i	int	0	0	0	PARAM_USE	0
1114	134	12	SingularValueDecompositionImpl.java	SingularValueDecompositionImpl	localcopy	double[][]	getData()	0	0	NO_USE	0
1114	134	12	SingularValueDecompositionImpl.java	SingularValueDecompositionImpl	matATA	double[][]	ARRAY_ACCESS	0	0	NO_USE	0
1114	134	12	SingularValueDecompositionImpl.java	SingularValueDecompositionImpl	matAAT	double[][]	ARRAY_ACCESS	0	0	NO_USE	0
1114	134	12	SingularValueDecompositionImpl.java	SingularValueDecompositionImpl	p	int	NAME	0	0	NO_USE	0
1114	134	12	SingularValueDecompositionImpl.java	SingularValueDecompositionImpl	matrix	RealMatrix	PARAM_AS	1	0	NO_USE	0
1114	134	12	SingularValueDecompositionImpl.java	SingularValueDecompositionImpl	THIS	SingularValueDecompositionImpl	sqrt()	0	2	FIELD_USE	0
1115	149	8	SingularValueDecompositionImpl.java	getUT	THIS	SingularValueDecompositionImpl	UNKNOWN_AS	0	1	CLALLER_USE	1
1116	158	8	SingularValueDecompositionImpl.java	getS	THIS	SingularValueDecompositionImpl	UNKNOWN_AS	0	1	FIELD_USE	1
1117	178	8	SingularValueDecompositionImpl.java	getVT	THIS	SingularValueDecompositionImpl	UNKNOWN_AS	0	1	CLALLER_USE	1
1118	194	8	SingularValueDecompositionImpl.java	getCovariance	p	int	NAME	0	0	NO_USE	0
1118	194	8	SingularValueDecompositionImpl.java	getCovariance	dimension	int	0	0	1	NO_USE	1
1118	194	8	SingularValueDecompositionImpl.java	getCovariance	minSingularValue	double	PARAM_AS	1	0	OTHER_USE	0
1118	194	8	SingularValueDecompositionImpl.java	getCovariance	THIS	SingularValueDecompositionImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1119	228	12	SingularValueDecompositionImpl.java	getRank	i	int	-	0	1	+	1
1119	228	12	SingularValueDecompositionImpl.java	getRank	threshold	double	*	0	1	NO_USE	1
1119	228	12	SingularValueDecompositionImpl.java	getRank	THIS	SingularValueDecompositionImpl	UNKNOWN_AS	0	1	NO_USE	1
1120	105	8	SparseFieldMatrix.java	addToEntry	key	int	computeKey()	0	0	PARAM_USE	0
1120	105	8	SparseFieldMatrix.java	addToEntry	value	T	add()	0	1	PARAM_USE	1
1120	105	8	SparseFieldMatrix.java	addToEntry	row	int	PARAM_AS	1	0	NO_USE	0
1120	105	8	SparseFieldMatrix.java	addToEntry	column	int	PARAM_AS	1	0	NO_USE	0
1120	105	8	SparseFieldMatrix.java	addToEntry	increment	T	PARAM_AS	1	0	NO_USE	0
1120	105	8	SparseFieldMatrix.java	addToEntry	THIS	SparseFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1121	151	8	SparseFieldMatrix.java	multiplyEntry	key	int	computeKey()	0	0	PARAM_USE	0
1121	151	8	SparseFieldMatrix.java	multiplyEntry	value	T	multiply()	0	1	PARAM_USE	1
1121	151	8	SparseFieldMatrix.java	multiplyEntry	row	int	PARAM_AS	1	0	NO_USE	0
1121	151	8	SparseFieldMatrix.java	multiplyEntry	column	int	PARAM_AS	1	0	NO_USE	0
1121	151	8	SparseFieldMatrix.java	multiplyEntry	factor	T	PARAM_AS	1	0	NO_USE	0
1121	151	8	SparseFieldMatrix.java	multiplyEntry	THIS	SparseFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1122	164	8	SparseFieldMatrix.java	setEntry	row	int	PARAM_AS	1	0	PARAM_USE	0
1122	164	8	SparseFieldMatrix.java	setEntry	column	int	PARAM_AS	1	0	PARAM_USE	0
1122	164	8	SparseFieldMatrix.java	setEntry	value	T	PARAM_AS	1	1	PARAM_USE	1
1122	164	8	SparseFieldMatrix.java	setEntry	THIS	SparseFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1123	52	8	AbstractRealMatrix.java	AbstractRealMatrix	rowDimension	int	PARAM_AS	1	1	OTHER_USE	1
1123	52	8	AbstractRealMatrix.java	AbstractRealMatrix	columnDimension	int	PARAM_AS	1	1	NO_USE	0
1123	52	8	AbstractRealMatrix.java	AbstractRealMatrix	THIS	AbstractRealMatrix	UNKNOWN_AS	0	0	NO_USE	0
1124	55	8	AbstractRealMatrix.java	AbstractRealMatrix	rowDimension	int	PARAM_AS	1	1	NO_USE	0
1124	55	8	AbstractRealMatrix.java	AbstractRealMatrix	columnDimension	int	PARAM_AS	1	1	OTHER_USE	1
1124	55	8	AbstractRealMatrix.java	AbstractRealMatrix	THIS	AbstractRealMatrix	UNKNOWN_AS	0	0	NO_USE	0
1125	157	8	AbstractRealMatrix.java	power	p	int	PARAM_AS	1	3	NO_USE	1
1125	157	8	AbstractRealMatrix.java	power	THIS	AbstractRealMatrix	UNKNOWN_AS	0	1	NO_USE	0
1126	161	8	AbstractRealMatrix.java	power	p	int	PARAM_AS	1	3	NO_USE	0
1126	161	8	AbstractRealMatrix.java	power	THIS	AbstractRealMatrix	UNKNOWN_AS	0	1	CLALLER_USE	1
1127	165	8	AbstractRealMatrix.java	power	p	int	PARAM_AS	1	3	NO_USE	1
1127	165	8	AbstractRealMatrix.java	power	THIS	AbstractRealMatrix	UNKNOWN_AS	0	1	CLALLER_USE	0
1128	169	8	AbstractRealMatrix.java	power	p	int	PARAM_AS	1	3	NO_USE	1
1128	169	8	AbstractRealMatrix.java	power	THIS	AbstractRealMatrix	UNKNOWN_AS	0	1	CLALLER_USE	0
1129	187	12	AbstractRealMatrix.java	power	i	int	0	0	1	-	1
1129	187	12	AbstractRealMatrix.java	power	power	int	-	0	0	NO_USE	0
1129	187	12	AbstractRealMatrix.java	power	binaryRepresentation	char[]	toCharArray()	0	1	OTHER_USE	1
1129	187	12	AbstractRealMatrix.java	power	nonZeroPositions	ArrayList<Integer>	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1129	187	12	AbstractRealMatrix.java	power	maxI	int	PREFIX_EXPR	0	1	==	0
1129	187	12	AbstractRealMatrix.java	power	p	int	PARAM_AS	1	3	NO_USE	0
1129	187	12	AbstractRealMatrix.java	power	THIS	AbstractRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	0
1130	192	16	AbstractRealMatrix.java	power	pos	int	-	0	0	OTHER_USE	0
1130	192	16	AbstractRealMatrix.java	power	i	int	0	0	1	NO_USE	0
1130	192	16	AbstractRealMatrix.java	power	power	int	-	0	0	NO_USE	0
1130	192	16	AbstractRealMatrix.java	power	binaryRepresentation	char[]	toCharArray()	0	1	NO_USE	0
1130	192	16	AbstractRealMatrix.java	power	nonZeroPositions	ArrayList<Integer>	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1130	192	16	AbstractRealMatrix.java	power	maxI	int	PREFIX_EXPR	0	1	NO_USE	1
1130	192	16	AbstractRealMatrix.java	power	p	int	PARAM_AS	1	3	NO_USE	0
1130	192	16	AbstractRealMatrix.java	power	THIS	AbstractRealMatrix	UNKNOWN_AS	0	1	NO_USE	0
1131	337	8	AbstractRealMatrix.java	copySubMatrix	rowsCount	int	-	0	1	OTHER_USE	1
1131	337	8	AbstractRealMatrix.java	copySubMatrix	columnsCount	int	-	0	1	OTHER_USE	1
1131	337	8	AbstractRealMatrix.java	copySubMatrix	startRow	int	PARAM_AS	1	0	NO_USE	0
1131	337	8	AbstractRealMatrix.java	copySubMatrix	endRow	int	PARAM_AS	1	0	NO_USE	0
1131	337	8	AbstractRealMatrix.java	copySubMatrix	startColumn	int	PARAM_AS	1	0	NO_USE	0
1131	337	8	AbstractRealMatrix.java	copySubMatrix	endColumn	int	PARAM_AS	1	0	NO_USE	0
1131	337	8	AbstractRealMatrix.java	copySubMatrix	destination	double[][]	PARAM_AS	1	2	OTHER_USE	1
1131	337	8	AbstractRealMatrix.java	copySubMatrix	THIS	AbstractRealMatrix	UNKNOWN_AS	0	2	FIELD_USE	1
1132	373	8	AbstractRealMatrix.java	copySubMatrix	selectedRows	int[]	PARAM_AS	1	1	OTHER_USE	1
1132	373	8	AbstractRealMatrix.java	copySubMatrix	selectedColumns	int[]	PARAM_AS	1	1	OTHER_USE	1
1132	373	8	AbstractRealMatrix.java	copySubMatrix	destination	double[][]	PARAM_AS	1	2	OTHER_USE	1
1132	373	8	AbstractRealMatrix.java	copySubMatrix	THIS	AbstractRealMatrix	UNKNOWN_AS	0	4	FIELD_USE	1
1133	393	8	AbstractRealMatrix.java	setSubMatrix	nRows	int	NAME	0	1	NO_USE	1
1133	393	8	AbstractRealMatrix.java	setSubMatrix	subMatrix	double[][]	PARAM_AS	1	1	NO_USE	0
1133	393	8	AbstractRealMatrix.java	setSubMatrix	row	int	PARAM_AS	1	0	NO_USE	0
1133	393	8	AbstractRealMatrix.java	setSubMatrix	column	int	PARAM_AS	1	0	NO_USE	0
1133	393	8	AbstractRealMatrix.java	setSubMatrix	THIS	AbstractRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	0
1134	398	8	AbstractRealMatrix.java	setSubMatrix	nRows	int	NAME	0	1	NO_USE	0
1134	398	8	AbstractRealMatrix.java	setSubMatrix	nCols	int	FIELD_ACCESS	0	2	NO_USE	1
1134	398	8	AbstractRealMatrix.java	setSubMatrix	subMatrix	double[][]	PARAM_AS	1	1	NO_USE	0
1134	398	8	AbstractRealMatrix.java	setSubMatrix	row	int	PARAM_AS	1	0	NO_USE	0
1134	398	8	AbstractRealMatrix.java	setSubMatrix	column	int	PARAM_AS	1	0	NO_USE	0
1134	398	8	AbstractRealMatrix.java	setSubMatrix	THIS	AbstractRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	0
1135	403	12	AbstractRealMatrix.java	setSubMatrix	r	int	1	0	1	ARRIDX_USE	1
1135	403	12	AbstractRealMatrix.java	setSubMatrix	nRows	int	NAME	0	1	NO_USE	0
1135	403	12	AbstractRealMatrix.java	setSubMatrix	nCols	int	FIELD_ACCESS	0	2	OTHER_USE	1
1135	403	12	AbstractRealMatrix.java	setSubMatrix	subMatrix	double[][]	PARAM_AS	1	1	ARR_USE	1
1135	403	12	AbstractRealMatrix.java	setSubMatrix	row	int	PARAM_AS	1	0	NO_USE	0
1135	403	12	AbstractRealMatrix.java	setSubMatrix	column	int	PARAM_AS	1	0	NO_USE	0
1135	403	12	AbstractRealMatrix.java	setSubMatrix	THIS	AbstractRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1136	436	8	AbstractRealMatrix.java	setRowMatrix	nCols	int	getColumnDimension()	0	1	OTHER_USE	1
1136	436	8	AbstractRealMatrix.java	setRowMatrix	row	int	PARAM_AS	1	0	NO_USE	0
1136	436	8	AbstractRealMatrix.java	setRowMatrix	matrix	RealMatrix	PARAM_AS	1	2	CLALLER_USE	1
1136	436	8	AbstractRealMatrix.java	setRowMatrix	THIS	AbstractRealMatrix	UNKNOWN_AS	0	0	NO_USE	0
1137	463	8	AbstractRealMatrix.java	setColumnMatrix	nRows	int	getRowDimension()	0	1	OTHER_USE	1
1137	463	8	AbstractRealMatrix.java	setColumnMatrix	column	int	PARAM_AS	1	0	NO_USE	0
1137	463	8	AbstractRealMatrix.java	setColumnMatrix	matrix	RealMatrix	PARAM_AS	1	2	CLALLER_USE	1
1137	463	8	AbstractRealMatrix.java	setColumnMatrix	THIS	AbstractRealMatrix	UNKNOWN_AS	0	0	NO_USE	0
1138	483	8	AbstractRealMatrix.java	setRowVector	nCols	int	getColumnDimension()	0	1	OTHER_USE	1
1138	483	8	AbstractRealMatrix.java	setRowVector	row	int	PARAM_AS	1	0	NO_USE	0
1138	483	8	AbstractRealMatrix.java	setRowVector	vector	RealVector	PARAM_AS	1	1	CLALLER_USE	1
1138	483	8	AbstractRealMatrix.java	setRowVector	THIS	AbstractRealMatrix	UNKNOWN_AS	0	0	NO_USE	0
1139	501	8	AbstractRealMatrix.java	setColumnVector	nRows	int	getRowDimension()	0	1	OTHER_USE	1
1139	501	8	AbstractRealMatrix.java	setColumnVector	column	int	PARAM_AS	1	0	NO_USE	0
1139	501	8	AbstractRealMatrix.java	setColumnVector	vector	RealVector	PARAM_AS	1	1	CLALLER_USE	1
1139	501	8	AbstractRealMatrix.java	setColumnVector	THIS	AbstractRealMatrix	UNKNOWN_AS	0	0	NO_USE	0
1140	526	8	AbstractRealMatrix.java	setRow	nCols	int	getColumnDimension()	0	1	OTHER_USE	1
1140	526	8	AbstractRealMatrix.java	setRow	row	int	PARAM_AS	1	0	NO_USE	0
1140	526	8	AbstractRealMatrix.java	setRow	array	double[]	PARAM_AS	1	1	OTHER_USE	1
1140	526	8	AbstractRealMatrix.java	setRow	THIS	AbstractRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1141	550	8	AbstractRealMatrix.java	setColumn	nRows	int	getRowDimension()	0	1	OTHER_USE	1
1141	550	8	AbstractRealMatrix.java	setColumn	column	int	PARAM_AS	1	0	NO_USE	0
1141	550	8	AbstractRealMatrix.java	setColumn	array	double[]	PARAM_AS	1	1	OTHER_USE	1
1141	550	8	AbstractRealMatrix.java	setColumn	THIS	AbstractRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1142	603	8	AbstractRealMatrix.java	getTrace	nRows	int	getRowDimension()	0	1	OTHER_USE	1
1142	603	8	AbstractRealMatrix.java	getTrace	nCols	int	getColumnDimension()	0	1	OTHER_USE	1
1142	603	8	AbstractRealMatrix.java	getTrace	THIS	AbstractRealMatrix	UNKNOWN_AS	0	0	NO_USE	0
1143	617	8	AbstractRealMatrix.java	operate	nRows	int	getRowDimension()	0	0	NO_USE	0
1143	617	8	AbstractRealMatrix.java	operate	nCols	int	getColumnDimension()	0	1	OTHER_USE	1
1143	617	8	AbstractRealMatrix.java	operate	v	double[]	PARAM_AS	1	1	OTHER_USE	1
1143	617	8	AbstractRealMatrix.java	operate	THIS	AbstractRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1144	640	12	AbstractRealMatrix.java	operate	nRows	int	getRowDimension()	0	0	NO_USE	0
1144	640	12	AbstractRealMatrix.java	operate	nCols	int	getColumnDimension()	0	1	OTHER_USE	1
1144	640	12	AbstractRealMatrix.java	operate	v	RealVector	PARAM_AS	1	1	CLALLER_USE	1
1144	640	12	AbstractRealMatrix.java	operate	THIS	AbstractRealMatrix	UNKNOWN_AS	0	0	NO_USE	0
1145	662	8	AbstractRealMatrix.java	preMultiply	nRows	int	getRowDimension()	0	1	OTHER_USE	1
1145	662	8	AbstractRealMatrix.java	preMultiply	nCols	int	getColumnDimension()	0	0	NO_USE	0
1145	662	8	AbstractRealMatrix.java	preMultiply	v	double[]	PARAM_AS	1	1	OTHER_USE	1
1145	662	8	AbstractRealMatrix.java	preMultiply	THIS	AbstractRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1146	686	12	AbstractRealMatrix.java	preMultiply	nRows	int	getRowDimension()	0	1	OTHER_USE	1
1146	686	12	AbstractRealMatrix.java	preMultiply	nCols	int	getColumnDimension()	0	0	NO_USE	0
1146	686	12	AbstractRealMatrix.java	preMultiply	v	RealVector	PARAM_AS	1	1	CLALLER_USE	1
1146	686	12	AbstractRealMatrix.java	preMultiply	THIS	AbstractRealMatrix	UNKNOWN_AS	0	0	NO_USE	0
1147	861	12	AbstractRealMatrix.java	toString	i	int	0	0	1	NO_USE	1
1147	861	12	AbstractRealMatrix.java	toString	nRows	int	getRowDimension()	0	0	NO_USE	0
1147	861	12	AbstractRealMatrix.java	toString	nCols	int	getColumnDimension()	0	0	NO_USE	0
1147	861	12	AbstractRealMatrix.java	toString	res	StringBuffer	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1147	861	12	AbstractRealMatrix.java	toString	fullClassName	String	getName()	0	0	NO_USE	0
1147	861	12	AbstractRealMatrix.java	toString	shortClassName	String	substring()	0	0	NO_USE	0
1147	861	12	AbstractRealMatrix.java	toString	THIS	AbstractRealMatrix	UNKNOWN_AS	0	0	NO_USE	0
1148	866	16	AbstractRealMatrix.java	toString	j	int	0	0	1	NO_USE	1
1148	866	16	AbstractRealMatrix.java	toString	i	int	0	0	1	NO_USE	0
1148	866	16	AbstractRealMatrix.java	toString	nRows	int	getRowDimension()	0	0	NO_USE	0
1148	866	16	AbstractRealMatrix.java	toString	nCols	int	getColumnDimension()	0	0	NO_USE	0
1148	866	16	AbstractRealMatrix.java	toString	res	StringBuffer	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1148	866	16	AbstractRealMatrix.java	toString	fullClassName	String	getName()	0	0	NO_USE	0
1148	866	16	AbstractRealMatrix.java	toString	shortClassName	String	substring()	0	0	NO_USE	0
1148	866	16	AbstractRealMatrix.java	toString	THIS	AbstractRealMatrix	UNKNOWN_AS	0	0	NO_USE	0
1149	888	8	AbstractRealMatrix.java	equals	object	Object	PARAM_AS	1	2	NO_USE	1
1149	888	8	AbstractRealMatrix.java	equals	THIS	AbstractRealMatrix	UNKNOWN_AS	0	2	NO_USE	1
1150	891	8	AbstractRealMatrix.java	equals	object	Object	PARAM_AS	1	2	NO_USE	1
1150	891	8	AbstractRealMatrix.java	equals	THIS	AbstractRealMatrix	UNKNOWN_AS	0	2	NO_USE	0
1151	897	8	AbstractRealMatrix.java	equals	m	RealMatrix	CAST	0	3	NO_USE	1
1151	897	8	AbstractRealMatrix.java	equals	nRows	int	getRowDimension()	0	1	NO_USE	1
1151	897	8	AbstractRealMatrix.java	equals	nCols	int	getColumnDimension()	0	1	NO_USE	1
1151	897	8	AbstractRealMatrix.java	equals	object	Object	PARAM_AS	1	2	NO_USE	0
1151	897	8	AbstractRealMatrix.java	equals	THIS	AbstractRealMatrix	UNKNOWN_AS	0	2	NO_USE	0
1152	902	16	AbstractRealMatrix.java	equals	col	int	0	0	2	NO_USE	1
1152	902	16	AbstractRealMatrix.java	equals	row	int	0	0	2	NO_USE	1
1152	902	16	AbstractRealMatrix.java	equals	m	RealMatrix	CAST	0	3	NO_USE	1
1152	902	16	AbstractRealMatrix.java	equals	nRows	int	getRowDimension()	0	1	NO_USE	0
1152	902	16	AbstractRealMatrix.java	equals	nCols	int	getColumnDimension()	0	1	NO_USE	0
1152	902	16	AbstractRealMatrix.java	equals	object	Object	PARAM_AS	1	2	NO_USE	0
1152	902	16	AbstractRealMatrix.java	equals	THIS	AbstractRealMatrix	UNKNOWN_AS	0	2	NO_USE	1
1153	151	12	SparseFieldVector.java	add	key	int	key()	0	1	PARAM_USE	1
1153	151	12	SparseFieldVector.java	add	value	T	value()	0	0	PARAM_USE	0
1153	151	12	SparseFieldVector.java	add	res	SparseFieldVector<T>	CAST	0	0	CLALLER_USE	0
1153	151	12	SparseFieldVector.java	add	iter	Iterator	iterator()	0	0	NO_USE	0
1153	151	12	SparseFieldVector.java	add	v	SparseFieldVector<T>	PARAM_AS	1	0	NO_USE	0
1153	151	12	SparseFieldVector.java	add	THIS	SparseFieldVector	UNKNOWN_AS	0	1	FIELD_USE	1
1154	190	8	SparseFieldVector.java	append	v	FieldVector<T>	PARAM_AS	1	1	OTHER_USE	1
1154	190	8	SparseFieldVector.java	append	THIS	SparseFieldVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1155	238	12	SparseFieldVector.java	dotProduct	idx	int	key()	0	1	ARRIDX_USE	1
1155	238	12	SparseFieldVector.java	dotProduct	value	T	getZero()	0	0	NO_USE	0
1155	238	12	SparseFieldVector.java	dotProduct	res	T	getZero()	0	0	NO_USE	0
1155	238	12	SparseFieldVector.java	dotProduct	iter	Iterator	iterator()	0	0	NO_USE	0
1155	238	12	SparseFieldVector.java	dotProduct	v	T[]	PARAM_AS	1	1	ARR_USE	1
1155	238	12	SparseFieldVector.java	dotProduct	THIS	SparseFieldVector	UNKNOWN_AS	0	1	NO_USE	1
1156	331	12	SparseFieldVector.java	getSubVector	key	int	key()	0	2	-	1
1156	331	12	SparseFieldVector.java	getSubVector	res	SparseFieldVector<T>	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1156	331	12	SparseFieldVector.java	getSubVector	end	int	+	0	1	NO_USE	1
1156	331	12	SparseFieldVector.java	getSubVector	iter	Iterator	iterator()	0	0	CLALLER_USE	0
1156	331	12	SparseFieldVector.java	getSubVector	index	int	PARAM_AS	1	1	-	1
1156	331	12	SparseFieldVector.java	getSubVector	n	int	PARAM_AS	1	0	NO_USE	0
1156	331	12	SparseFieldVector.java	getSubVector	THIS	SparseFieldVector	UNKNOWN_AS	0	0	NO_USE	0
1157	444	8	SparseFieldVector.java	outerProduct	v	FieldVector<T>	PARAM_AS	1	1	OTHER_USE	1
1157	444	8	SparseFieldVector.java	outerProduct	THIS	SparseFieldVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1158	508	12	SparseFieldVector.java	subtract	key	int	key()	0	1	PARAM_USE	1
1158	508	12	SparseFieldVector.java	subtract	res	SparseFieldVector<T>	CAST	0	0	CLALLER_USE	0
1158	508	12	SparseFieldVector.java	subtract	iter	Iterator	iterator()	0	0	CLALLER_USE	0
1158	508	12	SparseFieldVector.java	subtract	v	SparseFieldVector<T>	PARAM_AS	1	0	NO_USE	0
1158	508	12	SparseFieldVector.java	subtract	THIS	SparseFieldVector	UNKNOWN_AS	0	1	FIELD_USE	1
1159	519	8	SparseFieldVector.java	subtract	v	FieldVector<T>	PARAM_AS	1	1	OTHER_USE	1
1159	519	8	SparseFieldVector.java	subtract	THIS	SparseFieldVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1160	531	12	SparseFieldVector.java	subtract	i	int	0	0	1	PARAM_USE	1
1160	531	12	SparseFieldVector.java	subtract	res	SparseFieldVector<T>	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1160	531	12	SparseFieldVector.java	subtract	v	T[]	PARAM_AS	1	0	ARR_USE	0
1160	531	12	SparseFieldVector.java	subtract	THIS	SparseFieldVector	UNKNOWN_AS	0	1	FIELD_USE	1
1161	552	8	SparseFieldVector.java	checkIndex	index	int	PARAM_AS	1	2	OTHER_USE	1
1161	552	8	SparseFieldVector.java	checkIndex	THIS	SparseFieldVector	UNKNOWN_AS	0	1	CLALLER_USE	1
1162	564	8	SparseFieldVector.java	checkVectorDimensions	n	int	PARAM_AS	1	1	OTHER_USE	1
1162	564	8	SparseFieldVector.java	checkVectorDimensions	THIS	SparseFieldVector	UNKNOWN_AS	0	1	CLALLER_USE	1
1163	571	8	SparseFieldVector.java	add	v	FieldVector<T>	PARAM_AS	1	1	OTHER_USE	1
1163	571	8	SparseFieldVector.java	add	THIS	SparseFieldVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1164	611	8	SparseFieldVector.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	1
1164	611	8	SparseFieldVector.java	equals	THIS	SparseFieldVector	UNKNOWN_AS	0	8	NO_USE	1
1165	615	8	SparseFieldVector.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	1
1165	615	8	SparseFieldVector.java	equals	THIS	SparseFieldVector	UNKNOWN_AS	0	8	NO_USE	0
1166	622	8	SparseFieldVector.java	equals	other	SparseFieldVector<T>	CAST	0	3	OTHER_USE	0
1166	622	8	SparseFieldVector.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	0
1166	622	8	SparseFieldVector.java	equals	THIS	SparseFieldVector	UNKNOWN_AS	0	8	FIELD_USE	1
1167	623	12	SparseFieldVector.java	equals	other	SparseFieldVector<T>	CAST	0	3	NO_USE	1
1167	623	12	SparseFieldVector.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	0
1167	623	12	SparseFieldVector.java	equals	THIS	SparseFieldVector	UNKNOWN_AS	0	8	NO_USE	1
1168	626	15	SparseFieldVector.java	equals	other	SparseFieldVector<T>	CAST	0	3	NO_USE	1
1168	626	15	SparseFieldVector.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	0
1168	626	15	SparseFieldVector.java	equals	THIS	SparseFieldVector	UNKNOWN_AS	0	8	NO_USE	1
1169	629	8	SparseFieldVector.java	equals	other	SparseFieldVector<T>	CAST	0	3	NO_USE	1
1169	629	8	SparseFieldVector.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	0
1169	629	8	SparseFieldVector.java	equals	THIS	SparseFieldVector	UNKNOWN_AS	0	8	NO_USE	1
1170	637	12	SparseFieldVector.java	equals	test	T	getEntry()	0	1	NO_USE	1
1170	637	12	SparseFieldVector.java	equals	other	SparseFieldVector<T>	CAST	0	3	NO_USE	0
1170	637	12	SparseFieldVector.java	equals	iter	Iterator	iterator()	0	2	NO_USE	1
1170	637	12	SparseFieldVector.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	0
1170	637	12	SparseFieldVector.java	equals	THIS	SparseFieldVector	UNKNOWN_AS	0	8	NO_USE	0
1171	645	12	SparseFieldVector.java	equals	test	T	value()	0	1	NO_USE	1
1171	645	12	SparseFieldVector.java	equals	other	SparseFieldVector<T>	CAST	0	3	NO_USE	0
1171	645	12	SparseFieldVector.java	equals	iter	Iterator	iterator()	0	2	NO_USE	1
1171	645	12	SparseFieldVector.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	0
1171	645	12	SparseFieldVector.java	equals	THIS	SparseFieldVector	UNKNOWN_AS	0	8	NO_USE	1
1172	151	8	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	field	Field<T>	PARAM_AS	1	0	NO_USE	0
1172	151	8	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	d	T[][]	PARAM_AS	1	1	PARAM_USE	0
1172	151	8	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	copyArray	boolean	PARAM_AS	1	0	NO_USE	1
1172	151	8	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	THIS	Array2DRowFieldMatrix	UNKNOWN_AS	0	1	CLALLER_USE	0
1173	156	12	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	nRows	int	NAME	0	1	NO_USE	1
1173	156	12	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	field	Field<T>	PARAM_AS	1	0	NO_USE	0
1173	156	12	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	d	T[][]	PARAM_AS	1	1	NO_USE	0
1173	156	12	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	copyArray	boolean	PARAM_AS	1	0	NO_USE	0
1173	156	12	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	THIS	Array2DRowFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	0
1174	160	12	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	nRows	int	NAME	0	1	NO_USE	0
1174	160	12	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	nCols	int	FIELD_ACCESS	0	2	NO_USE	1
1174	160	12	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	field	Field<T>	PARAM_AS	1	0	NO_USE	0
1174	160	12	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	d	T[][]	PARAM_AS	1	1	NO_USE	0
1174	160	12	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	copyArray	boolean	PARAM_AS	1	0	NO_USE	0
1174	160	12	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	THIS	Array2DRowFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	0
1175	164	16	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	r	int	1	0	1	ARRIDX_USE	1
1175	164	16	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	nRows	int	NAME	0	1	NO_USE	0
1175	164	16	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	nCols	int	FIELD_ACCESS	0	2	OTHER_USE	1
1175	164	16	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	field	Field<T>	PARAM_AS	1	0	NO_USE	0
1175	164	16	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	d	T[][]	PARAM_AS	1	1	ARR_USE	1
1175	164	16	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	copyArray	boolean	PARAM_AS	1	0	NO_USE	0
1175	164	16	Array2DRowFieldMatrix.java	Array2DRowFieldMatrix	THIS	Array2DRowFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1176	318	8	Array2DRowFieldMatrix.java	setSubMatrix	subMatrix	T[][]	PARAM_AS	1	1	OTHER_USE	0
1176	318	8	Array2DRowFieldMatrix.java	setSubMatrix	row	int	PARAM_AS	1	1	>	0
1176	318	8	Array2DRowFieldMatrix.java	setSubMatrix	column	int	PARAM_AS	1	1	>	0
1176	318	8	Array2DRowFieldMatrix.java	setSubMatrix	THIS	Array2DRowFieldMatrix	UNKNOWN_AS	0	2	FIELD_USE	1
1177	319	12	Array2DRowFieldMatrix.java	setSubMatrix	subMatrix	T[][]	PARAM_AS	1	1	NO_USE	0
1177	319	12	Array2DRowFieldMatrix.java	setSubMatrix	row	int	PARAM_AS	1	1	OTHER_USE	1
1177	319	12	Array2DRowFieldMatrix.java	setSubMatrix	column	int	PARAM_AS	1	1	NO_USE	0
1177	319	12	Array2DRowFieldMatrix.java	setSubMatrix	THIS	Array2DRowFieldMatrix	UNKNOWN_AS	0	2	FIELD_USE	0
1178	322	12	Array2DRowFieldMatrix.java	setSubMatrix	subMatrix	T[][]	PARAM_AS	1	1	NO_USE	0
1178	322	12	Array2DRowFieldMatrix.java	setSubMatrix	row	int	PARAM_AS	1	1	NO_USE	0
1178	322	12	Array2DRowFieldMatrix.java	setSubMatrix	column	int	PARAM_AS	1	1	OTHER_USE	1
1178	322	12	Array2DRowFieldMatrix.java	setSubMatrix	THIS	Array2DRowFieldMatrix	UNKNOWN_AS	0	2	FIELD_USE	0
1179	326	12	Array2DRowFieldMatrix.java	setSubMatrix	nRows	int	NAME	0	1	NO_USE	1
1179	326	12	Array2DRowFieldMatrix.java	setSubMatrix	subMatrix	T[][]	PARAM_AS	1	1	NO_USE	0
1179	326	12	Array2DRowFieldMatrix.java	setSubMatrix	row	int	PARAM_AS	1	1	NO_USE	0
1179	326	12	Array2DRowFieldMatrix.java	setSubMatrix	column	int	PARAM_AS	1	1	NO_USE	0
1179	326	12	Array2DRowFieldMatrix.java	setSubMatrix	THIS	Array2DRowFieldMatrix	UNKNOWN_AS	0	2	FIELD_USE	0
1180	331	12	Array2DRowFieldMatrix.java	setSubMatrix	nRows	int	NAME	0	1	NO_USE	0
1180	331	12	Array2DRowFieldMatrix.java	setSubMatrix	nCols	int	FIELD_ACCESS	0	2	NO_USE	1
1180	331	12	Array2DRowFieldMatrix.java	setSubMatrix	subMatrix	T[][]	PARAM_AS	1	1	NO_USE	0
1180	331	12	Array2DRowFieldMatrix.java	setSubMatrix	row	int	PARAM_AS	1	1	NO_USE	0
1180	331	12	Array2DRowFieldMatrix.java	setSubMatrix	column	int	PARAM_AS	1	1	NO_USE	0
1180	331	12	Array2DRowFieldMatrix.java	setSubMatrix	THIS	Array2DRowFieldMatrix	UNKNOWN_AS	0	2	FIELD_USE	0
1181	336	16	Array2DRowFieldMatrix.java	setSubMatrix	i	int	0	0	1	ARRIDX_USE	1
1181	336	16	Array2DRowFieldMatrix.java	setSubMatrix	nRows	int	NAME	0	1	NO_USE	0
1181	336	16	Array2DRowFieldMatrix.java	setSubMatrix	nCols	int	FIELD_ACCESS	0	2	OTHER_USE	1
1181	336	16	Array2DRowFieldMatrix.java	setSubMatrix	subMatrix	T[][]	PARAM_AS	1	1	ARR_USE	1
1181	336	16	Array2DRowFieldMatrix.java	setSubMatrix	row	int	PARAM_AS	1	1	NO_USE	0
1181	336	16	Array2DRowFieldMatrix.java	setSubMatrix	column	int	PARAM_AS	1	1	NO_USE	0
1181	336	16	Array2DRowFieldMatrix.java	setSubMatrix	THIS	Array2DRowFieldMatrix	buildArray()	0	2	FIELD_USE	1
1182	400	8	Array2DRowFieldMatrix.java	operate	nRows	int	getRowDimension()	0	0	NO_USE	0
1182	400	8	Array2DRowFieldMatrix.java	operate	nCols	int	getColumnDimension()	0	1	OTHER_USE	1
1182	400	8	Array2DRowFieldMatrix.java	operate	v	T[]	PARAM_AS	1	1	OTHER_USE	1
1182	400	8	Array2DRowFieldMatrix.java	operate	THIS	Array2DRowFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1183	420	8	Array2DRowFieldMatrix.java	preMultiply	nRows	int	getRowDimension()	0	1	OTHER_USE	1
1183	420	8	Array2DRowFieldMatrix.java	preMultiply	nCols	int	getColumnDimension()	0	0	NO_USE	0
1183	420	8	Array2DRowFieldMatrix.java	preMultiply	v	T[]	PARAM_AS	1	1	OTHER_USE	1
1183	420	8	Array2DRowFieldMatrix.java	preMultiply	THIS	Array2DRowFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1184	76	8	AbstractFieldMatrix.java	AbstractFieldMatrix	field	Field<T>	PARAM_AS	1	0	NO_USE	0
1184	76	8	AbstractFieldMatrix.java	AbstractFieldMatrix	rowDimension	int	PARAM_AS	1	1	OTHER_USE	1
1184	76	8	AbstractFieldMatrix.java	AbstractFieldMatrix	columnDimension	int	PARAM_AS	1	1	NO_USE	0
1184	76	8	AbstractFieldMatrix.java	AbstractFieldMatrix	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	0	FIELD_USE	0
1185	80	8	AbstractFieldMatrix.java	AbstractFieldMatrix	field	Field<T>	PARAM_AS	1	0	NO_USE	0
1185	80	8	AbstractFieldMatrix.java	AbstractFieldMatrix	rowDimension	int	PARAM_AS	1	1	NO_USE	0
1185	80	8	AbstractFieldMatrix.java	AbstractFieldMatrix	columnDimension	int	PARAM_AS	1	1	OTHER_USE	1
1185	80	8	AbstractFieldMatrix.java	AbstractFieldMatrix	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	0	FIELD_USE	0
1186	97	8	AbstractFieldMatrix.java	extractField	d	T[][]	PARAM_AS	1	3	NO_USE	1
1186	97	8	AbstractFieldMatrix.java	extractField	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	2	NO_USE	0
1187	100	8	AbstractFieldMatrix.java	extractField	d	T[][]	PARAM_AS	1	3	NO_USE	1
1187	100	8	AbstractFieldMatrix.java	extractField	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	2	FIELD_USE	1
1188	103	8	AbstractFieldMatrix.java	extractField	d	T[][]	PARAM_AS	1	3	NO_USE	1
1188	103	8	AbstractFieldMatrix.java	extractField	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	2	FIELD_USE	1
1189	118	8	AbstractFieldMatrix.java	extractField	d	T[]	PARAM_AS	1	1	NO_USE	1
1189	118	8	AbstractFieldMatrix.java	extractField	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1190	139	8	AbstractFieldMatrix.java	buildArray	field	Field<T>	PARAM_AS	1	0	CLALLER_USE	0
1190	139	8	AbstractFieldMatrix.java	buildArray	rows	int	PARAM_AS	1	0	PARAM_USE	0
1190	139	8	AbstractFieldMatrix.java	buildArray	columns	int	PARAM_AS	1	1	NO_USE	1
1190	139	8	AbstractFieldMatrix.java	buildArray	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	0	NO_USE	0
1191	271	8	AbstractFieldMatrix.java	power	p	int	PARAM_AS	1	3	NO_USE	1
1191	271	8	AbstractFieldMatrix.java	power	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	1	NO_USE	0
1192	275	8	AbstractFieldMatrix.java	power	p	int	PARAM_AS	1	3	NO_USE	0
1192	275	8	AbstractFieldMatrix.java	power	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	1	CLALLER_USE	1
1193	279	8	AbstractFieldMatrix.java	power	p	int	PARAM_AS	1	3	NO_USE	1
1193	279	8	AbstractFieldMatrix.java	power	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	1	CLALLER_USE	0
1194	283	8	AbstractFieldMatrix.java	power	p	int	PARAM_AS	1	3	NO_USE	1
1194	283	8	AbstractFieldMatrix.java	power	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	1	CLALLER_USE	0
1195	301	12	AbstractFieldMatrix.java	power	i	int	0	0	1	-	1
1195	301	12	AbstractFieldMatrix.java	power	power	int	-	0	0	NO_USE	0
1195	301	12	AbstractFieldMatrix.java	power	binaryRepresentation	char[]	toCharArray()	0	1	OTHER_USE	1
1195	301	12	AbstractFieldMatrix.java	power	nonZeroPositions	ArrayList<Integer>	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1195	301	12	AbstractFieldMatrix.java	power	p	int	PARAM_AS	1	3	NO_USE	0
1195	301	12	AbstractFieldMatrix.java	power	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	0
1196	390	8	AbstractFieldMatrix.java	copySubMatrix	rowsCount	int	-	0	1	OTHER_USE	1
1196	390	8	AbstractFieldMatrix.java	copySubMatrix	columnsCount	int	-	0	1	OTHER_USE	1
1196	390	8	AbstractFieldMatrix.java	copySubMatrix	startRow	int	PARAM_AS	1	0	NO_USE	0
1196	390	8	AbstractFieldMatrix.java	copySubMatrix	endRow	int	PARAM_AS	1	0	NO_USE	0
1196	390	8	AbstractFieldMatrix.java	copySubMatrix	startColumn	int	PARAM_AS	1	0	NO_USE	0
1196	390	8	AbstractFieldMatrix.java	copySubMatrix	endColumn	int	PARAM_AS	1	0	NO_USE	0
1196	390	8	AbstractFieldMatrix.java	copySubMatrix	destination	T[][]	PARAM_AS	1	2	OTHER_USE	1
1196	390	8	AbstractFieldMatrix.java	copySubMatrix	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	2	FIELD_USE	1
1197	429	8	AbstractFieldMatrix.java	copySubMatrix	selectedRows	int[]	PARAM_AS	1	1	OTHER_USE	1
1197	429	8	AbstractFieldMatrix.java	copySubMatrix	selectedColumns	int[]	PARAM_AS	1	1	OTHER_USE	1
1197	429	8	AbstractFieldMatrix.java	copySubMatrix	destination	T[][]	PARAM_AS	1	2	OTHER_USE	1
1197	429	8	AbstractFieldMatrix.java	copySubMatrix	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	4	FIELD_USE	1
1198	449	8	AbstractFieldMatrix.java	setSubMatrix	subMatrix	T[][]	PARAM_AS	1	2	NO_USE	1
1198	449	8	AbstractFieldMatrix.java	setSubMatrix	row	int	PARAM_AS	1	0	NO_USE	0
1198	449	8	AbstractFieldMatrix.java	setSubMatrix	column	int	PARAM_AS	1	0	NO_USE	0
1198	449	8	AbstractFieldMatrix.java	setSubMatrix	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	1	NO_USE	0
1199	453	8	AbstractFieldMatrix.java	setSubMatrix	nRows	int	NAME	0	1	NO_USE	1
1199	453	8	AbstractFieldMatrix.java	setSubMatrix	subMatrix	T[][]	PARAM_AS	1	2	NO_USE	0
1199	453	8	AbstractFieldMatrix.java	setSubMatrix	row	int	PARAM_AS	1	0	NO_USE	0
1199	453	8	AbstractFieldMatrix.java	setSubMatrix	column	int	PARAM_AS	1	0	NO_USE	0
1199	453	8	AbstractFieldMatrix.java	setSubMatrix	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	0
1200	458	8	AbstractFieldMatrix.java	setSubMatrix	nRows	int	NAME	0	1	NO_USE	0
1200	458	8	AbstractFieldMatrix.java	setSubMatrix	nCols	int	FIELD_ACCESS	0	2	NO_USE	1
1200	458	8	AbstractFieldMatrix.java	setSubMatrix	subMatrix	T[][]	PARAM_AS	1	2	NO_USE	0
1200	458	8	AbstractFieldMatrix.java	setSubMatrix	row	int	PARAM_AS	1	0	NO_USE	0
1200	458	8	AbstractFieldMatrix.java	setSubMatrix	column	int	PARAM_AS	1	0	NO_USE	0
1200	458	8	AbstractFieldMatrix.java	setSubMatrix	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	0
1201	463	12	AbstractFieldMatrix.java	setSubMatrix	r	int	1	0	1	ARRIDX_USE	1
1201	463	12	AbstractFieldMatrix.java	setSubMatrix	nRows	int	NAME	0	1	NO_USE	0
1201	463	12	AbstractFieldMatrix.java	setSubMatrix	nCols	int	FIELD_ACCESS	0	2	OTHER_USE	1
1201	463	12	AbstractFieldMatrix.java	setSubMatrix	subMatrix	T[][]	PARAM_AS	1	2	ARR_USE	1
1201	463	12	AbstractFieldMatrix.java	setSubMatrix	row	int	PARAM_AS	1	0	NO_USE	0
1201	463	12	AbstractFieldMatrix.java	setSubMatrix	column	int	PARAM_AS	1	0	NO_USE	0
1201	463	12	AbstractFieldMatrix.java	setSubMatrix	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1202	497	8	AbstractFieldMatrix.java	setRowMatrix	nCols	int	getColumnDimension()	0	1	OTHER_USE	1
1202	497	8	AbstractFieldMatrix.java	setRowMatrix	row	int	PARAM_AS	1	0	NO_USE	0
1202	497	8	AbstractFieldMatrix.java	setRowMatrix	matrix	FieldMatrix<T>	PARAM_AS	1	2	CLALLER_USE	1
1202	497	8	AbstractFieldMatrix.java	setRowMatrix	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	0	NO_USE	0
1203	527	8	AbstractFieldMatrix.java	setColumnMatrix	nRows	int	getRowDimension()	0	1	OTHER_USE	1
1203	527	8	AbstractFieldMatrix.java	setColumnMatrix	column	int	PARAM_AS	1	0	NO_USE	0
1203	527	8	AbstractFieldMatrix.java	setColumnMatrix	matrix	FieldMatrix<T>	PARAM_AS	1	2	CLALLER_USE	1
1203	527	8	AbstractFieldMatrix.java	setColumnMatrix	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	0	NO_USE	0
1204	548	8	AbstractFieldMatrix.java	setRowVector	nCols	int	getColumnDimension()	0	1	OTHER_USE	1
1204	548	8	AbstractFieldMatrix.java	setRowVector	row	int	PARAM_AS	1	0	NO_USE	0
1204	548	8	AbstractFieldMatrix.java	setRowVector	vector	FieldVector<T>	PARAM_AS	1	1	CLALLER_USE	1
1204	548	8	AbstractFieldMatrix.java	setRowVector	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	0	NO_USE	0
1205	567	8	AbstractFieldMatrix.java	setColumnVector	nRows	int	getRowDimension()	0	1	OTHER_USE	1
1205	567	8	AbstractFieldMatrix.java	setColumnVector	column	int	PARAM_AS	1	0	NO_USE	0
1205	567	8	AbstractFieldMatrix.java	setColumnVector	vector	FieldVector<T>	PARAM_AS	1	1	CLALLER_USE	1
1205	567	8	AbstractFieldMatrix.java	setColumnVector	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	0	NO_USE	0
1206	594	8	AbstractFieldMatrix.java	setRow	nCols	int	getColumnDimension()	0	1	OTHER_USE	1
1206	594	8	AbstractFieldMatrix.java	setRow	row	int	PARAM_AS	1	0	NO_USE	0
1206	594	8	AbstractFieldMatrix.java	setRow	array	T[]	PARAM_AS	1	1	OTHER_USE	1
1206	594	8	AbstractFieldMatrix.java	setRow	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1207	620	8	AbstractFieldMatrix.java	setColumn	nRows	int	getRowDimension()	0	1	OTHER_USE	1
1207	620	8	AbstractFieldMatrix.java	setColumn	column	int	PARAM_AS	1	0	NO_USE	0
1207	620	8	AbstractFieldMatrix.java	setColumn	array	T[]	PARAM_AS	1	1	OTHER_USE	1
1207	620	8	AbstractFieldMatrix.java	setColumn	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1208	671	8	AbstractFieldMatrix.java	getTrace	nRows	int	getRowDimension()	0	1	OTHER_USE	1
1208	671	8	AbstractFieldMatrix.java	getTrace	nCols	int	getColumnDimension()	0	1	OTHER_USE	1
1208	671	8	AbstractFieldMatrix.java	getTrace	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	0	NO_USE	0
1209	686	8	AbstractFieldMatrix.java	operate	nRows	int	getRowDimension()	0	0	NO_USE	0
1209	686	8	AbstractFieldMatrix.java	operate	nCols	int	getColumnDimension()	0	1	OTHER_USE	1
1209	686	8	AbstractFieldMatrix.java	operate	v	T[]	PARAM_AS	1	1	OTHER_USE	1
1209	686	8	AbstractFieldMatrix.java	operate	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1210	709	12	AbstractFieldMatrix.java	operate	nRows	int	getRowDimension()	0	0	NO_USE	0
1210	709	12	AbstractFieldMatrix.java	operate	nCols	int	getColumnDimension()	0	1	OTHER_USE	1
1210	709	12	AbstractFieldMatrix.java	operate	v	FieldVector<T>	PARAM_AS	1	1	CLALLER_USE	1
1210	709	12	AbstractFieldMatrix.java	operate	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	0	NO_USE	0
1211	731	8	AbstractFieldMatrix.java	preMultiply	nRows	int	getRowDimension()	0	1	OTHER_USE	1
1211	731	8	AbstractFieldMatrix.java	preMultiply	nCols	int	getColumnDimension()	0	0	NO_USE	0
1211	731	8	AbstractFieldMatrix.java	preMultiply	v	T[]	PARAM_AS	1	1	OTHER_USE	1
1211	731	8	AbstractFieldMatrix.java	preMultiply	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1212	754	12	AbstractFieldMatrix.java	preMultiply	nRows	int	getRowDimension()	0	1	OTHER_USE	1
1212	754	12	AbstractFieldMatrix.java	preMultiply	nCols	int	getColumnDimension()	0	0	NO_USE	0
1212	754	12	AbstractFieldMatrix.java	preMultiply	v	FieldVector<T>	PARAM_AS	1	1	CLALLER_USE	1
1212	754	12	AbstractFieldMatrix.java	preMultiply	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	0	NO_USE	0
1213	929	12	AbstractFieldMatrix.java	toString	i	int	0	0	1	NO_USE	1
1213	929	12	AbstractFieldMatrix.java	toString	nRows	int	getRowDimension()	0	0	NO_USE	0
1213	929	12	AbstractFieldMatrix.java	toString	nCols	int	getColumnDimension()	0	0	NO_USE	0
1213	929	12	AbstractFieldMatrix.java	toString	res	StringBuffer	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1213	929	12	AbstractFieldMatrix.java	toString	fullClassName	String	getName()	0	0	NO_USE	0
1213	929	12	AbstractFieldMatrix.java	toString	shortClassName	String	substring()	0	0	NO_USE	0
1213	929	12	AbstractFieldMatrix.java	toString	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	0	NO_USE	0
1214	934	16	AbstractFieldMatrix.java	toString	j	int	0	0	1	NO_USE	1
1214	934	16	AbstractFieldMatrix.java	toString	i	int	0	0	1	NO_USE	0
1214	934	16	AbstractFieldMatrix.java	toString	nRows	int	getRowDimension()	0	0	NO_USE	0
1214	934	16	AbstractFieldMatrix.java	toString	nCols	int	getColumnDimension()	0	0	NO_USE	0
1214	934	16	AbstractFieldMatrix.java	toString	res	StringBuffer	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1214	934	16	AbstractFieldMatrix.java	toString	fullClassName	String	getName()	0	0	NO_USE	0
1214	934	16	AbstractFieldMatrix.java	toString	shortClassName	String	substring()	0	0	NO_USE	0
1214	934	16	AbstractFieldMatrix.java	toString	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	0	NO_USE	0
1215	956	8	AbstractFieldMatrix.java	equals	object	Object	PARAM_AS	1	2	NO_USE	1
1215	956	8	AbstractFieldMatrix.java	equals	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	2	NO_USE	1
1216	959	8	AbstractFieldMatrix.java	equals	object	Object	PARAM_AS	1	2	NO_USE	1
1216	959	8	AbstractFieldMatrix.java	equals	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	2	NO_USE	0
1217	965	8	AbstractFieldMatrix.java	equals	m	FieldMatrix<?>	CAST	0	3	NO_USE	1
1217	965	8	AbstractFieldMatrix.java	equals	nRows	int	getRowDimension()	0	1	NO_USE	1
1217	965	8	AbstractFieldMatrix.java	equals	nCols	int	getColumnDimension()	0	1	NO_USE	1
1217	965	8	AbstractFieldMatrix.java	equals	object	Object	PARAM_AS	1	2	NO_USE	0
1217	965	8	AbstractFieldMatrix.java	equals	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	2	NO_USE	0
1218	970	16	AbstractFieldMatrix.java	equals	col	int	0	0	2	NO_USE	1
1218	970	16	AbstractFieldMatrix.java	equals	row	int	0	0	2	NO_USE	1
1218	970	16	AbstractFieldMatrix.java	equals	m	FieldMatrix<?>	CAST	0	3	NO_USE	1
1218	970	16	AbstractFieldMatrix.java	equals	nRows	int	getRowDimension()	0	1	NO_USE	0
1218	970	16	AbstractFieldMatrix.java	equals	nCols	int	getColumnDimension()	0	1	NO_USE	0
1218	970	16	AbstractFieldMatrix.java	equals	object	Object	PARAM_AS	1	2	NO_USE	0
1218	970	16	AbstractFieldMatrix.java	equals	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	2	NO_USE	1
1219	1005	8	AbstractFieldMatrix.java	checkRowIndex	row	int	PARAM_AS	1	2	OTHER_USE	1
1219	1005	8	AbstractFieldMatrix.java	checkRowIndex	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1220	1018	8	AbstractFieldMatrix.java	checkColumnIndex	column	int	PARAM_AS	1	2	OTHER_USE	1
1220	1018	8	AbstractFieldMatrix.java	checkColumnIndex	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1221	1040	8	AbstractFieldMatrix.java	checkSubMatrixIndex	startRow	int	PARAM_AS	1	1	OTHER_USE	1
1221	1040	8	AbstractFieldMatrix.java	checkSubMatrixIndex	endRow	int	PARAM_AS	1	1	OTHER_USE	1
1221	1040	8	AbstractFieldMatrix.java	checkSubMatrixIndex	startColumn	int	PARAM_AS	1	1	NO_USE	0
1221	1040	8	AbstractFieldMatrix.java	checkSubMatrixIndex	endColumn	int	PARAM_AS	1	1	NO_USE	0
1221	1040	8	AbstractFieldMatrix.java	checkSubMatrixIndex	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	0	FIELD_USE	0
1222	1047	8	AbstractFieldMatrix.java	checkSubMatrixIndex	startRow	int	PARAM_AS	1	1	NO_USE	0
1222	1047	8	AbstractFieldMatrix.java	checkSubMatrixIndex	endRow	int	PARAM_AS	1	1	NO_USE	0
1222	1047	8	AbstractFieldMatrix.java	checkSubMatrixIndex	startColumn	int	PARAM_AS	1	1	OTHER_USE	1
1222	1047	8	AbstractFieldMatrix.java	checkSubMatrixIndex	endColumn	int	PARAM_AS	1	1	OTHER_USE	1
1222	1047	8	AbstractFieldMatrix.java	checkSubMatrixIndex	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	0	FIELD_USE	0
1223	1064	8	AbstractFieldMatrix.java	checkSubMatrixIndex	selectedRows	int[]	PARAM_AS	1	2	NO_USE	1
1223	1064	8	AbstractFieldMatrix.java	checkSubMatrixIndex	selectedColumns	int[]	PARAM_AS	1	2	NO_USE	1
1223	1064	8	AbstractFieldMatrix.java	checkSubMatrixIndex	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	2	NO_USE	0
1224	1068	8	AbstractFieldMatrix.java	checkSubMatrixIndex	selectedRows	int[]	PARAM_AS	1	2	NO_USE	1
1224	1068	8	AbstractFieldMatrix.java	checkSubMatrixIndex	selectedColumns	int[]	PARAM_AS	1	2	NO_USE	1
1224	1068	8	AbstractFieldMatrix.java	checkSubMatrixIndex	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	2	NO_USE	1
1225	1089	8	AbstractFieldMatrix.java	checkAdditionCompatible	m	FieldMatrix<T>	PARAM_AS	1	2	CLALLER_USE	1
1225	1089	8	AbstractFieldMatrix.java	checkAdditionCompatible	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	2	CLALLER_USE	1
1226	1104	8	AbstractFieldMatrix.java	checkSubtractionCompatible	m	FieldMatrix<T>	PARAM_AS	1	2	CLALLER_USE	1
1226	1104	8	AbstractFieldMatrix.java	checkSubtractionCompatible	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	2	CLALLER_USE	1
1227	1119	8	AbstractFieldMatrix.java	checkMultiplicationCompatible	m	FieldMatrix<T>	PARAM_AS	1	1	CLALLER_USE	1
1227	1119	8	AbstractFieldMatrix.java	checkMultiplicationCompatible	THIS	AbstractFieldMatrix	UNKNOWN_AS	0	1	CLALLER_USE	1
1228	75	8	BiDiagonalTransformer.java	BiDiagonalTransformer	m	int	getRowDimension()	0	1	NO_USE	1
1228	75	8	BiDiagonalTransformer.java	BiDiagonalTransformer	n	int	getColumnDimension()	0	1	NO_USE	1
1228	75	8	BiDiagonalTransformer.java	BiDiagonalTransformer	p	int	min()	0	0	NO_USE	0
1228	75	8	BiDiagonalTransformer.java	BiDiagonalTransformer	matrix	RealMatrix	PARAM_AS	1	0	NO_USE	0
1228	75	8	BiDiagonalTransformer.java	BiDiagonalTransformer	THIS	BiDiagonalTransformer	NULL	0	0	CLALLER_USE	0
1229	90	8	BiDiagonalTransformer.java	getU	THIS	BiDiagonalTransformer	UNKNOWN_AS	0	1	FIELD_USE	1
1230	108	16	BiDiagonalTransformer.java	getU	hK	double[]	ARRAY_ACCESS	0	1	ARR_USE	1
1230	108	16	BiDiagonalTransformer.java	getU	k	int	-	0	1	OTHER_USE	1
1230	108	16	BiDiagonalTransformer.java	getU	m	int	NAME	0	0	<	0
1230	108	16	BiDiagonalTransformer.java	getU	n	int	FIELD_ACCESS	0	0	NO_USE	0
1230	108	16	BiDiagonalTransformer.java	getU	p	int	NAME	0	0	NO_USE	0
1230	108	16	BiDiagonalTransformer.java	getU	diagOffset	int	OTHERS	0	2	-	1
1230	108	16	BiDiagonalTransformer.java	getU	diagonal	double[]	OTHERS	0	0	ARR_USE	0
1230	108	16	BiDiagonalTransformer.java	getU	THIS	BiDiagonalTransformer	createRealMatrix()	0	1	FIELD_USE	0
1231	122	12	BiDiagonalTransformer.java	getU	m	int	NAME	0	0	NO_USE	0
1231	122	12	BiDiagonalTransformer.java	getU	n	int	FIELD_ACCESS	0	0	NO_USE	0
1231	122	12	BiDiagonalTransformer.java	getU	p	int	NAME	0	0	NO_USE	0
1231	122	12	BiDiagonalTransformer.java	getU	diagOffset	int	OTHERS	0	2	NO_USE	1
1231	122	12	BiDiagonalTransformer.java	getU	diagonal	double[]	OTHERS	0	0	NO_USE	0
1231	122	12	BiDiagonalTransformer.java	getU	THIS	BiDiagonalTransformer	createRealMatrix()	0	1	FIELD_USE	0
1232	139	8	BiDiagonalTransformer.java	getB	THIS	BiDiagonalTransformer	UNKNOWN_AS	0	3	FIELD_USE	1
1233	146	16	BiDiagonalTransformer.java	getB	i	int	0	0	2	>	0
1233	146	16	BiDiagonalTransformer.java	getB	m	int	NAME	0	1	NO_USE	1
1233	146	16	BiDiagonalTransformer.java	getB	n	int	FIELD_ACCESS	0	1	NO_USE	1
1233	146	16	BiDiagonalTransformer.java	getB	THIS	BiDiagonalTransformer	createRealMatrix()	0	3	FIELD_USE	0
1234	147	20	BiDiagonalTransformer.java	getB	i	int	0	0	2	PARAM_USE	1
1234	147	20	BiDiagonalTransformer.java	getB	m	int	NAME	0	1	NO_USE	0
1234	147	20	BiDiagonalTransformer.java	getB	n	int	FIELD_ACCESS	0	1	NO_USE	0
1234	147	20	BiDiagonalTransformer.java	getB	THIS	BiDiagonalTransformer	createRealMatrix()	0	3	FIELD_USE	0
1235	151	20	BiDiagonalTransformer.java	getB	i	int	0	0	2	PARAM_USE	1
1235	151	20	BiDiagonalTransformer.java	getB	m	int	NAME	0	1	NO_USE	0
1235	151	20	BiDiagonalTransformer.java	getB	n	int	FIELD_ACCESS	0	1	NO_USE	0
1235	151	20	BiDiagonalTransformer.java	getB	THIS	BiDiagonalTransformer	createRealMatrix()	0	3	FIELD_USE	1
1236	171	8	BiDiagonalTransformer.java	getV	THIS	BiDiagonalTransformer	UNKNOWN_AS	0	1	FIELD_USE	1
1237	189	16	BiDiagonalTransformer.java	getV	hK	double[]	ARRAY_ACCESS	0	1	ARR_USE	1
1237	189	16	BiDiagonalTransformer.java	getV	k	int	-	0	1	OTHER_USE	1
1237	189	16	BiDiagonalTransformer.java	getV	m	int	NAME	0	0	NO_USE	0
1237	189	16	BiDiagonalTransformer.java	getV	n	int	FIELD_ACCESS	0	0	<	0
1237	189	16	BiDiagonalTransformer.java	getV	p	int	NAME	0	0	NO_USE	0
1237	189	16	BiDiagonalTransformer.java	getV	diagOffset	int	OTHERS	0	1	-	0
1237	189	16	BiDiagonalTransformer.java	getV	diagonal	double[]	OTHERS	0	0	ARR_USE	0
1237	189	16	BiDiagonalTransformer.java	getV	THIS	BiDiagonalTransformer	createRealMatrix()	0	1	FIELD_USE	0
1238	203	12	BiDiagonalTransformer.java	getV	m	int	NAME	0	0	NO_USE	0
1238	203	12	BiDiagonalTransformer.java	getV	n	int	FIELD_ACCESS	0	0	NO_USE	0
1238	203	12	BiDiagonalTransformer.java	getV	p	int	NAME	0	0	NO_USE	0
1238	203	12	BiDiagonalTransformer.java	getV	diagOffset	int	OTHERS	0	1	NO_USE	1
1238	203	12	BiDiagonalTransformer.java	getV	diagonal	double[]	OTHERS	0	0	NO_USE	0
1238	203	12	BiDiagonalTransformer.java	getV	THIS	BiDiagonalTransformer	createRealMatrix()	0	1	FIELD_USE	0
1239	272	12	BiDiagonalTransformer.java	transformToUpperBiDiagonal	xNormSqr	double	*	0	0	NO_USE	0
1239	272	12	BiDiagonalTransformer.java	transformToUpperBiDiagonal	hK	double[]	ARRAY_ACCESS	0	0	ARR_USE	0
1239	272	12	BiDiagonalTransformer.java	transformToUpperBiDiagonal	a	double	OTHERS	0	1	OTHER_USE	1
1239	272	12	BiDiagonalTransformer.java	transformToUpperBiDiagonal	k	int	NAME	0	1	ARRIDX_USE	0
1239	272	12	BiDiagonalTransformer.java	transformToUpperBiDiagonal	m	int	NAME	0	0	<	0
1239	272	12	BiDiagonalTransformer.java	transformToUpperBiDiagonal	n	int	FIELD_ACCESS	0	1	<	0
1239	272	12	BiDiagonalTransformer.java	transformToUpperBiDiagonal	THIS	BiDiagonalTransformer	NAME	0	0	FIELD_USE	0
1240	288	12	BiDiagonalTransformer.java	transformToUpperBiDiagonal	xNormSqr	double	*	0	0	PARAM_USE	0
1240	288	12	BiDiagonalTransformer.java	transformToUpperBiDiagonal	hK	double[]	NAME	0	0	ARR_USE	0
1240	288	12	BiDiagonalTransformer.java	transformToUpperBiDiagonal	a	double	OTHERS	0	1	NO_USE	0
1240	288	12	BiDiagonalTransformer.java	transformToUpperBiDiagonal	k	int	NAME	0	1	+	1
1240	288	12	BiDiagonalTransformer.java	transformToUpperBiDiagonal	m	int	NAME	0	0	<	0
1240	288	12	BiDiagonalTransformer.java	transformToUpperBiDiagonal	n	int	FIELD_ACCESS	0	1	<	1
1240	288	12	BiDiagonalTransformer.java	transformToUpperBiDiagonal	THIS	BiDiagonalTransformer	NAME	0	0	FIELD_USE	0
1241	297	16	BiDiagonalTransformer.java	transformToUpperBiDiagonal	b	double	OTHERS	0	1	OTHER_USE	1
1241	297	16	BiDiagonalTransformer.java	transformToUpperBiDiagonal	xNormSqr	double	*	0	0	NO_USE	0
1241	297	16	BiDiagonalTransformer.java	transformToUpperBiDiagonal	hK	double[]	NAME	0	0	ARR_USE	0
1241	297	16	BiDiagonalTransformer.java	transformToUpperBiDiagonal	a	double	OTHERS	0	1	NO_USE	0
1241	297	16	BiDiagonalTransformer.java	transformToUpperBiDiagonal	k	int	NAME	0	1	+	0
1241	297	16	BiDiagonalTransformer.java	transformToUpperBiDiagonal	m	int	NAME	0	0	<	0
1241	297	16	BiDiagonalTransformer.java	transformToUpperBiDiagonal	n	int	FIELD_ACCESS	0	1	<	0
1241	297	16	BiDiagonalTransformer.java	transformToUpperBiDiagonal	THIS	BiDiagonalTransformer	NAME	0	0	FIELD_USE	0
1242	336	12	BiDiagonalTransformer.java	transformToLowerBiDiagonal	hK	double[]	ARRAY_ACCESS	0	0	ARR_USE	0
1242	336	12	BiDiagonalTransformer.java	transformToLowerBiDiagonal	xNormSqr	double	*	0	0	NO_USE	0
1242	336	12	BiDiagonalTransformer.java	transformToLowerBiDiagonal	a	double	OTHERS	0	1	OTHER_USE	1
1242	336	12	BiDiagonalTransformer.java	transformToLowerBiDiagonal	k	int	NAME	0	1	ARRIDX_USE	0
1242	336	12	BiDiagonalTransformer.java	transformToLowerBiDiagonal	m	int	NAME	0	1	<	0
1242	336	12	BiDiagonalTransformer.java	transformToLowerBiDiagonal	n	int	FIELD_ACCESS	0	0	<	0
1242	336	12	BiDiagonalTransformer.java	transformToLowerBiDiagonal	THIS	BiDiagonalTransformer	NAME	0	0	FIELD_USE	0
1243	351	12	BiDiagonalTransformer.java	transformToLowerBiDiagonal	hK	double[]	NAME	0	0	NO_USE	0
1243	351	12	BiDiagonalTransformer.java	transformToLowerBiDiagonal	xNormSqr	double	*	0	0	PARAM_USE	0
1243	351	12	BiDiagonalTransformer.java	transformToLowerBiDiagonal	a	double	OTHERS	0	1	NO_USE	0
1243	351	12	BiDiagonalTransformer.java	transformToLowerBiDiagonal	k	int	NAME	0	1	+	1
1243	351	12	BiDiagonalTransformer.java	transformToLowerBiDiagonal	m	int	NAME	0	1	<	1
1243	351	12	BiDiagonalTransformer.java	transformToLowerBiDiagonal	n	int	FIELD_ACCESS	0	0	<	0
1243	351	12	BiDiagonalTransformer.java	transformToLowerBiDiagonal	THIS	BiDiagonalTransformer	NAME	0	0	FIELD_USE	0
1244	361	16	BiDiagonalTransformer.java	transformToLowerBiDiagonal	hKp1	double[]	ARRAY_ACCESS	0	0	ARR_USE	0
1244	361	16	BiDiagonalTransformer.java	transformToLowerBiDiagonal	b	double	OTHERS	0	1	OTHER_USE	1
1244	361	16	BiDiagonalTransformer.java	transformToLowerBiDiagonal	hK	double[]	NAME	0	0	NO_USE	0
1244	361	16	BiDiagonalTransformer.java	transformToLowerBiDiagonal	xNormSqr	double	*	0	0	NO_USE	0
1244	361	16	BiDiagonalTransformer.java	transformToLowerBiDiagonal	a	double	OTHERS	0	1	NO_USE	0
1244	361	16	BiDiagonalTransformer.java	transformToLowerBiDiagonal	k	int	NAME	0	1	ARRIDX_USE	0
1244	361	16	BiDiagonalTransformer.java	transformToLowerBiDiagonal	m	int	NAME	0	1	<	0
1244	361	16	BiDiagonalTransformer.java	transformToLowerBiDiagonal	n	int	FIELD_ACCESS	0	0	<	0
1244	361	16	BiDiagonalTransformer.java	transformToLowerBiDiagonal	THIS	BiDiagonalTransformer	NAME	0	0	FIELD_USE	0
1245	112	8	MatrixUtils.java	createRealMatrix	data	double[][]	PARAM_AS	1	2	NO_USE	1
1245	112	8	MatrixUtils.java	createRealMatrix	THIS	MatrixUtils	UNKNOWN_AS	0	0	NO_USE	0
1246	140	8	MatrixUtils.java	createFieldMatrix	data	T[][]	PARAM_AS	1	2	NO_USE	1
1246	140	8	MatrixUtils.java	createFieldMatrix	THIS	MatrixUtils	UNKNOWN_AS	0	0	NO_USE	0
1247	232	8	MatrixUtils.java	createRealVector	data	double[]	PARAM_AS	1	1	NO_USE	1
1247	232	8	MatrixUtils.java	createRealVector	THIS	MatrixUtils	UNKNOWN_AS	0	0	NO_USE	0
1248	249	8	MatrixUtils.java	createFieldVector	data	T[]	PARAM_AS	1	2	NO_USE	1
1248	249	8	MatrixUtils.java	createFieldVector	THIS	MatrixUtils	UNKNOWN_AS	0	1	NO_USE	0
1249	252	8	MatrixUtils.java	createFieldVector	data	T[]	PARAM_AS	1	2	NO_USE	1
1249	252	8	MatrixUtils.java	createFieldVector	THIS	MatrixUtils	UNKNOWN_AS	0	1	FIELD_USE	1
1250	268	8	MatrixUtils.java	createRowRealMatrix	rowData	double[]	PARAM_AS	1	1	NO_USE	1
1250	268	8	MatrixUtils.java	createRowRealMatrix	THIS	MatrixUtils	UNKNOWN_AS	0	0	NO_USE	0
1251	291	8	MatrixUtils.java	createRowFieldMatrix	rowData	T[]	PARAM_AS	1	1	NO_USE	1
1251	291	8	MatrixUtils.java	createRowFieldMatrix	THIS	MatrixUtils	UNKNOWN_AS	0	0	NO_USE	0
1252	295	8	MatrixUtils.java	createRowFieldMatrix	nCols	int	NAME	0	1	NO_USE	1
1252	295	8	MatrixUtils.java	createRowFieldMatrix	rowData	T[]	PARAM_AS	1	1	NO_USE	0
1252	295	8	MatrixUtils.java	createRowFieldMatrix	THIS	MatrixUtils	UNKNOWN_AS	0	0	FIELD_USE	0
1253	315	8	MatrixUtils.java	createColumnRealMatrix	columnData	double[]	PARAM_AS	1	1	NO_USE	1
1253	315	8	MatrixUtils.java	createColumnRealMatrix	THIS	MatrixUtils	UNKNOWN_AS	0	0	NO_USE	0
1254	338	8	MatrixUtils.java	createColumnFieldMatrix	columnData	T[]	PARAM_AS	1	1	NO_USE	1
1254	338	8	MatrixUtils.java	createColumnFieldMatrix	THIS	MatrixUtils	UNKNOWN_AS	0	0	NO_USE	0
1255	342	8	MatrixUtils.java	createColumnFieldMatrix	nRows	int	NAME	0	1	NO_USE	1
1255	342	8	MatrixUtils.java	createColumnFieldMatrix	columnData	T[]	PARAM_AS	1	1	NO_USE	0
1255	342	8	MatrixUtils.java	createColumnFieldMatrix	THIS	MatrixUtils	UNKNOWN_AS	0	0	FIELD_USE	0
1256	375	8	MatrixUtils.java	checkRowIndex	m	AnyMatrix	PARAM_AS	1	1	CLALLER_USE	1
1256	375	8	MatrixUtils.java	checkRowIndex	row	int	PARAM_AS	1	2	OTHER_USE	1
1256	375	8	MatrixUtils.java	checkRowIndex	THIS	MatrixUtils	UNKNOWN_AS	0	0	FIELD_USE	0
1257	390	8	MatrixUtils.java	checkColumnIndex	m	AnyMatrix	PARAM_AS	1	1	CLALLER_USE	1
1257	390	8	MatrixUtils.java	checkColumnIndex	column	int	PARAM_AS	1	2	OTHER_USE	1
1257	390	8	MatrixUtils.java	checkColumnIndex	THIS	MatrixUtils	UNKNOWN_AS	0	0	FIELD_USE	0
1258	414	8	MatrixUtils.java	checkSubMatrixIndex	m	AnyMatrix	PARAM_AS	1	0	NO_USE	0
1258	414	8	MatrixUtils.java	checkSubMatrixIndex	startRow	int	PARAM_AS	1	1	OTHER_USE	1
1258	414	8	MatrixUtils.java	checkSubMatrixIndex	endRow	int	PARAM_AS	1	1	OTHER_USE	1
1258	414	8	MatrixUtils.java	checkSubMatrixIndex	startColumn	int	PARAM_AS	1	1	NO_USE	0
1258	414	8	MatrixUtils.java	checkSubMatrixIndex	endColumn	int	PARAM_AS	1	1	NO_USE	0
1258	414	8	MatrixUtils.java	checkSubMatrixIndex	THIS	MatrixUtils	UNKNOWN_AS	0	0	FIELD_USE	0
1259	421	8	MatrixUtils.java	checkSubMatrixIndex	m	AnyMatrix	PARAM_AS	1	0	NO_USE	0
1259	421	8	MatrixUtils.java	checkSubMatrixIndex	startRow	int	PARAM_AS	1	1	NO_USE	0
1259	421	8	MatrixUtils.java	checkSubMatrixIndex	endRow	int	PARAM_AS	1	1	NO_USE	0
1259	421	8	MatrixUtils.java	checkSubMatrixIndex	startColumn	int	PARAM_AS	1	1	OTHER_USE	1
1259	421	8	MatrixUtils.java	checkSubMatrixIndex	endColumn	int	PARAM_AS	1	1	OTHER_USE	1
1259	421	8	MatrixUtils.java	checkSubMatrixIndex	THIS	MatrixUtils	UNKNOWN_AS	0	0	FIELD_USE	0
1260	445	8	MatrixUtils.java	checkSubMatrixIndex	m	AnyMatrix	PARAM_AS	1	0	NO_USE	0
1260	445	8	MatrixUtils.java	checkSubMatrixIndex	selectedRows	int[]	PARAM_AS	1	2	NO_USE	1
1260	445	8	MatrixUtils.java	checkSubMatrixIndex	selectedColumns	int[]	PARAM_AS	1	2	NO_USE	0
1260	445	8	MatrixUtils.java	checkSubMatrixIndex	THIS	MatrixUtils	UNKNOWN_AS	0	2	NO_USE	0
1261	448	8	MatrixUtils.java	checkSubMatrixIndex	m	AnyMatrix	PARAM_AS	1	0	NO_USE	0
1261	448	8	MatrixUtils.java	checkSubMatrixIndex	selectedRows	int[]	PARAM_AS	1	2	NO_USE	0
1261	448	8	MatrixUtils.java	checkSubMatrixIndex	selectedColumns	int[]	PARAM_AS	1	2	NO_USE	1
1261	448	8	MatrixUtils.java	checkSubMatrixIndex	THIS	MatrixUtils	UNKNOWN_AS	0	2	NO_USE	0
1262	451	8	MatrixUtils.java	checkSubMatrixIndex	m	AnyMatrix	PARAM_AS	1	0	NO_USE	0
1262	451	8	MatrixUtils.java	checkSubMatrixIndex	selectedRows	int[]	PARAM_AS	1	2	NO_USE	1
1262	451	8	MatrixUtils.java	checkSubMatrixIndex	selectedColumns	int[]	PARAM_AS	1	2	NO_USE	0
1262	451	8	MatrixUtils.java	checkSubMatrixIndex	THIS	MatrixUtils	UNKNOWN_AS	0	2	FIELD_USE	1
1263	454	8	MatrixUtils.java	checkSubMatrixIndex	m	AnyMatrix	PARAM_AS	1	0	NO_USE	0
1263	454	8	MatrixUtils.java	checkSubMatrixIndex	selectedRows	int[]	PARAM_AS	1	2	NO_USE	0
1263	454	8	MatrixUtils.java	checkSubMatrixIndex	selectedColumns	int[]	PARAM_AS	1	2	NO_USE	1
1263	454	8	MatrixUtils.java	checkSubMatrixIndex	THIS	MatrixUtils	UNKNOWN_AS	0	2	FIELD_USE	1
1264	474	8	MatrixUtils.java	checkAdditionCompatible	left	AnyMatrix	PARAM_AS	1	2	CLALLER_USE	1
1264	474	8	MatrixUtils.java	checkAdditionCompatible	right	AnyMatrix	PARAM_AS	1	2	CLALLER_USE	1
1264	474	8	MatrixUtils.java	checkAdditionCompatible	THIS	MatrixUtils	UNKNOWN_AS	0	0	NO_USE	0
1265	489	8	MatrixUtils.java	checkSubtractionCompatible	left	AnyMatrix	PARAM_AS	1	2	CLALLER_USE	1
1265	489	8	MatrixUtils.java	checkSubtractionCompatible	right	AnyMatrix	PARAM_AS	1	2	CLALLER_USE	1
1265	489	8	MatrixUtils.java	checkSubtractionCompatible	THIS	MatrixUtils	UNKNOWN_AS	0	0	NO_USE	0
1266	504	8	MatrixUtils.java	checkMultiplicationCompatible	left	AnyMatrix	PARAM_AS	1	1	CLALLER_USE	1
1266	504	8	MatrixUtils.java	checkMultiplicationCompatible	right	AnyMatrix	PARAM_AS	1	1	CLALLER_USE	1
1266	504	8	MatrixUtils.java	checkMultiplicationCompatible	THIS	MatrixUtils	UNKNOWN_AS	0	0	NO_USE	0
1267	203	12	RealVectorFormat.java	format	i	int	0	0	1	NO_USE	1
1267	203	12	RealVectorFormat.java	format	vector	RealVector	PARAM_AS	1	0	NO_USE	0
1267	203	12	RealVectorFormat.java	format	toAppendTo	StringBuffer	PARAM_AS	1	0	CLALLER_USE	0
1267	203	12	RealVectorFormat.java	format	pos	FieldPosition	PARAM_AS	1	0	NO_USE	0
1267	203	12	RealVectorFormat.java	format	THIS	RealVectorFormat	UNKNOWN_AS	0	0	FIELD_USE	0
1268	226	8	RealVectorFormat.java	parse	parsePosition	ParsePosition	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	1
1268	226	8	RealVectorFormat.java	parse	result	ArrayRealVector	parse()	0	0	NO_USE	0
1268	226	8	RealVectorFormat.java	parse	source	String	PARAM_AS	1	0	OTHER_USE	0
1268	226	8	RealVectorFormat.java	parse	THIS	RealVectorFormat	UNKNOWN_AS	0	0	NO_USE	0
1269	246	8	RealVectorFormat.java	parse	initialIndex	int	getIndex()	0	0	NO_USE	0
1269	246	8	RealVectorFormat.java	parse	source	String	PARAM_AS	1	3	NO_USE	1
1269	246	8	RealVectorFormat.java	parse	pos	ParsePosition	PARAM_AS	1	3	NO_USE	1
1269	246	8	RealVectorFormat.java	parse	THIS	RealVectorFormat	UNKNOWN_AS	0	3	NO_USE	1
1270	254	12	RealVectorFormat.java	parse	loop	boolean	LITERAL	0	0	NO_USE	0
1270	254	12	RealVectorFormat.java	parse	initialIndex	int	getIndex()	0	0	NO_USE	0
1270	254	12	RealVectorFormat.java	parse	components	List<Number>	CLASS_INSTANCE_CREATION	0	1	NO_USE	1
1270	254	12	RealVectorFormat.java	parse	source	String	PARAM_AS	1	3	PARAM_USE	0
1270	254	12	RealVectorFormat.java	parse	pos	ParsePosition	PARAM_AS	1	3	PARAM_USE	0
1270	254	12	RealVectorFormat.java	parse	THIS	RealVectorFormat	UNKNOWN_AS	0	3	FIELD_USE	0
1271	256	16	RealVectorFormat.java	parse	loop	boolean	LITERAL	0	0	NO_USE	0
1271	256	16	RealVectorFormat.java	parse	initialIndex	int	getIndex()	0	0	NO_USE	0
1271	256	16	RealVectorFormat.java	parse	components	List<Number>	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1271	256	16	RealVectorFormat.java	parse	source	String	PARAM_AS	1	3	NO_USE	1
1271	256	16	RealVectorFormat.java	parse	pos	ParsePosition	PARAM_AS	1	3	NO_USE	1
1271	256	16	RealVectorFormat.java	parse	THIS	RealVectorFormat	UNKNOWN_AS	0	3	NO_USE	1
1272	261	12	RealVectorFormat.java	parse	loop	boolean	LITERAL	0	0	NO_USE	1
1272	261	12	RealVectorFormat.java	parse	initialIndex	int	getIndex()	0	0	PARAM_USE	0
1272	261	12	RealVectorFormat.java	parse	components	List<Number>	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	0
1272	261	12	RealVectorFormat.java	parse	source	String	PARAM_AS	1	3	PARAM_USE	0
1272	261	12	RealVectorFormat.java	parse	pos	ParsePosition	PARAM_AS	1	3	PARAM_USE	0
1272	261	12	RealVectorFormat.java	parse	THIS	RealVectorFormat	UNKNOWN_AS	0	3	FIELD_USE	0
1273	264	16	RealVectorFormat.java	parse	component	Number	parseNumber()	0	1	PARAM_USE	1
1273	264	16	RealVectorFormat.java	parse	loop	boolean	LITERAL	0	0	NO_USE	0
1273	264	16	RealVectorFormat.java	parse	initialIndex	int	getIndex()	0	0	PARAM_USE	0
1273	264	16	RealVectorFormat.java	parse	components	List<Number>	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	0
1273	264	16	RealVectorFormat.java	parse	source	String	PARAM_AS	1	3	NO_USE	0
1273	264	16	RealVectorFormat.java	parse	pos	ParsePosition	PARAM_AS	1	3	CLALLER_USE	0
1273	264	16	RealVectorFormat.java	parse	THIS	RealVectorFormat	UNKNOWN_AS	0	3	NO_USE	0
1274	278	8	RealVectorFormat.java	parse	initialIndex	int	getIndex()	0	0	NO_USE	0
1274	278	8	RealVectorFormat.java	parse	components	List<Number>	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1274	278	8	RealVectorFormat.java	parse	source	String	PARAM_AS	1	3	NO_USE	1
1274	278	8	RealVectorFormat.java	parse	pos	ParsePosition	PARAM_AS	1	3	NO_USE	1
1274	278	8	RealVectorFormat.java	parse	THIS	RealVectorFormat	UNKNOWN_AS	0	3	NO_USE	1
1275	94	8	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	matrix	RealMatrix	PARAM_AS	1	1	CLALLER_USE	1
1275	94	8	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	relativeSymmetryThreshold	double	PARAM_AS	1	0	NO_USE	0
1275	94	8	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	absolutePositivityThreshold	double	PARAM_AS	1	1	NO_USE	0
1275	94	8	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	THIS	CholeskyDecompositionImpl	UNKNOWN_AS	0	0	NO_USE	0
1276	115	16	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	lJ	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1276	115	16	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	lIJ	double	ARRAY_ACCESS	0	1	NO_USE	1
1276	115	16	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	lJI	double	ARRAY_ACCESS	0	1	NO_USE	1
1276	115	16	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	maxDelta	double	*	0	1	NO_USE	1
1276	115	16	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	j	int	+	0	0	OTHER_USE	0
1276	115	16	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	lI	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1276	115	16	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	i	int	0	0	0	OTHER_USE	0
1276	115	16	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	order	int	getRowDimension()	0	0	NO_USE	0
1276	115	16	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	matrix	RealMatrix	PARAM_AS	1	1	NO_USE	0
1276	115	16	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	relativeSymmetryThreshold	double	PARAM_AS	1	0	OTHER_USE	0
1276	115	16	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	absolutePositivityThreshold	double	PARAM_AS	1	1	NO_USE	0
1276	115	16	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	THIS	CholeskyDecompositionImpl	NULL	0	0	NO_USE	0
1277	128	12	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	ltI	double[]	ARRAY_ACCESS	0	1	NO_USE	1
1277	128	12	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	i	int	0	0	1	OTHER_USE	1
1277	128	12	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	order	int	getRowDimension()	0	0	NO_USE	0
1277	128	12	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	matrix	RealMatrix	PARAM_AS	1	1	NO_USE	0
1277	128	12	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	relativeSymmetryThreshold	double	PARAM_AS	1	0	NO_USE	0
1277	128	12	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	absolutePositivityThreshold	double	PARAM_AS	1	1	OTHER_USE	1
1277	128	12	CholeskyDecompositionImpl.java	CholeskyDecompositionImpl	THIS	CholeskyDecompositionImpl	NULL	0	0	NO_USE	0
1278	147	8	CholeskyDecompositionImpl.java	getL	THIS	CholeskyDecompositionImpl	UNKNOWN_AS	0	1	CLALLER_USE	1
1279	156	8	CholeskyDecompositionImpl.java	getLT	THIS	CholeskyDecompositionImpl	UNKNOWN_AS	0	1	FIELD_USE	1
1280	106	12	QRDecompositionImpl.java	QRDecompositionImpl	qrtMinor	double[]	ARRAY_ACCESS	0	0	ARR_USE	0
1280	106	12	QRDecompositionImpl.java	QRDecompositionImpl	xNormSqr	double	*	0	0	NO_USE	0
1280	106	12	QRDecompositionImpl.java	QRDecompositionImpl	a	double	OTHERS	0	1	OTHER_USE	1
1280	106	12	QRDecompositionImpl.java	QRDecompositionImpl	minor	int	NAME	0	0	ARRIDX_USE	0
1280	106	12	QRDecompositionImpl.java	QRDecompositionImpl	m	int	getRowDimension()	0	0	<	0
1280	106	12	QRDecompositionImpl.java	QRDecompositionImpl	n	int	getColumnDimension()	0	0	<	0
1280	106	12	QRDecompositionImpl.java	QRDecompositionImpl	matrix	RealMatrix	PARAM_AS	1	0	NO_USE	0
1280	106	12	QRDecompositionImpl.java	QRDecompositionImpl	THIS	QRDecompositionImpl	NAME	0	0	FIELD_USE	0
1281	150	8	QRDecompositionImpl.java	getR	THIS	QRDecompositionImpl	UNKNOWN_AS	0	1	FIELD_USE	1
1282	172	8	QRDecompositionImpl.java	getQ	THIS	QRDecompositionImpl	UNKNOWN_AS	0	1	CLALLER_USE	1
1283	180	8	QRDecompositionImpl.java	getQT	THIS	QRDecompositionImpl	UNKNOWN_AS	0	1	FIELD_USE	1
1284	199	16	QRDecompositionImpl.java	getQT	qrtMinor	double[]	ARRAY_ACCESS	0	1	ARR_USE	1
1284	199	16	QRDecompositionImpl.java	getQT	minor	int	-	0	1	OTHER_USE	1
1284	199	16	QRDecompositionImpl.java	getQT	n	int	NAME	0	0	NO_USE	0
1284	199	16	QRDecompositionImpl.java	getQT	m	int	FIELD_ACCESS	0	0	<	0
1284	199	16	QRDecompositionImpl.java	getQT	THIS	QRDecompositionImpl	createRealMatrix()	0	1	FIELD_USE	0
1285	221	8	QRDecompositionImpl.java	getH	THIS	QRDecompositionImpl	UNKNOWN_AS	0	1	FIELD_USE	1
1286	147	8	BlockRealMatrix.java	BlockRealMatrix	rows	int	PARAM_AS	1	0	NO_USE	0
1286	147	8	BlockRealMatrix.java	BlockRealMatrix	columns	int	PARAM_AS	1	0	NO_USE	0
1286	147	8	BlockRealMatrix.java	BlockRealMatrix	blockData	double[][]	PARAM_AS	1	1	OTHER_USE	0
1286	147	8	BlockRealMatrix.java	BlockRealMatrix	copyArray	boolean	PARAM_AS	1	0	NO_USE	1
1286	147	8	BlockRealMatrix.java	BlockRealMatrix	THIS	BlockRealMatrix	/	0	2	FIELD_USE	0
1287	159	16	BlockRealMatrix.java	BlockRealMatrix	jBlock	int	0	0	1	PARAM_USE	1
1287	159	16	BlockRealMatrix.java	BlockRealMatrix	iHeight	int	blockHeight()	0	1	*	1
1287	159	16	BlockRealMatrix.java	BlockRealMatrix	iBlock	int	0	0	0	NO_USE	0
1287	159	16	BlockRealMatrix.java	BlockRealMatrix	index	int	0	0	1	ARRIDX_USE	1
1287	159	16	BlockRealMatrix.java	BlockRealMatrix	rows	int	PARAM_AS	1	0	NO_USE	0
1287	159	16	BlockRealMatrix.java	BlockRealMatrix	columns	int	PARAM_AS	1	0	NO_USE	0
1287	159	16	BlockRealMatrix.java	BlockRealMatrix	blockData	double[][]	PARAM_AS	1	1	ARR_USE	1
1287	159	16	BlockRealMatrix.java	BlockRealMatrix	copyArray	boolean	PARAM_AS	1	0	NO_USE	0
1287	159	16	BlockRealMatrix.java	BlockRealMatrix	THIS	BlockRealMatrix	NAME	0	2	FIELD_USE	1
1288	163	16	BlockRealMatrix.java	BlockRealMatrix	jBlock	int	0	0	1	NO_USE	0
1288	163	16	BlockRealMatrix.java	BlockRealMatrix	iHeight	int	blockHeight()	0	1	NO_USE	0
1288	163	16	BlockRealMatrix.java	BlockRealMatrix	iBlock	int	0	0	0	NO_USE	0
1288	163	16	BlockRealMatrix.java	BlockRealMatrix	index	int	0	0	1	ARRIDX_USE	0
1288	163	16	BlockRealMatrix.java	BlockRealMatrix	rows	int	PARAM_AS	1	0	NO_USE	0
1288	163	16	BlockRealMatrix.java	BlockRealMatrix	columns	int	PARAM_AS	1	0	NO_USE	0
1288	163	16	BlockRealMatrix.java	BlockRealMatrix	blockData	double[][]	PARAM_AS	1	1	ARR_USE	0
1288	163	16	BlockRealMatrix.java	BlockRealMatrix	copyArray	boolean	PARAM_AS	1	0	NO_USE	1
1288	163	16	BlockRealMatrix.java	BlockRealMatrix	THIS	BlockRealMatrix	NAME	0	2	FIELD_USE	0
1289	200	12	BlockRealMatrix.java	toBlocksLayout	length	int	FIELD_ACCESS	0	1	OTHER_USE	1
1289	200	12	BlockRealMatrix.java	toBlocksLayout	i	int	0	0	0	NO_USE	0
1289	200	12	BlockRealMatrix.java	toBlocksLayout	rows	int	NAME	0	0	NO_USE	0
1289	200	12	BlockRealMatrix.java	toBlocksLayout	columns	int	FIELD_ACCESS	0	1	OTHER_USE	1
1289	200	12	BlockRealMatrix.java	toBlocksLayout	blockRows	int	/	0	0	NO_USE	0
1289	200	12	BlockRealMatrix.java	toBlocksLayout	blockColumns	int	/	0	0	NO_USE	0
1289	200	12	BlockRealMatrix.java	toBlocksLayout	rawData	double[][]	PARAM_AS	1	0	NO_USE	0
1289	200	12	BlockRealMatrix.java	toBlocksLayout	THIS	BlockRealMatrix	UNKNOWN_AS	0	0	NO_USE	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	jWidth	int	blockWidth()	0	0	PARAM_USE	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	outIndex	int	+	0	0	NO_USE	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	outBlock	double[]	ARRAY_ACCESS	0	0	PARAM_USE	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	index	int	+	0	0	ARRIDX_USE	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	width	int	blockWidth()	0	0	PARAM_USE	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	heightExcess	int	-	0	1	PARAM_USE	1
1290	676	16	BlockRealMatrix.java	getSubMatrix	widthExcess	int	-	0	2	>	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	jBlock	int	0	0	0	NO_USE	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	iHeight	int	blockHeight()	0	0	-	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	qBlock	int	NAME	0	0	+	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	iBlock	int	0	0	0	NO_USE	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	out	BlockRealMatrix	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	blockStartRow	int	/	0	0	NO_USE	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	rowsShift	int	%	0	0	PARAM_USE	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	blockStartColumn	int	/	0	0	NO_USE	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	columnsShift	int	%	0	0	PARAM_USE	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	pBlock	int	NAME	0	0	NO_USE	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	startRow	int	PARAM_AS	1	0	NO_USE	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	endRow	int	PARAM_AS	1	0	NO_USE	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	startColumn	int	PARAM_AS	1	0	NO_USE	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	endColumn	int	PARAM_AS	1	0	NO_USE	0
1290	676	16	BlockRealMatrix.java	getSubMatrix	THIS	BlockRealMatrix	UNKNOWN_AS	0	0	CLALLER_USE	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	jWidth	int	blockWidth()	0	0	PARAM_USE	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	outIndex	int	+	0	0	NO_USE	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	outBlock	double[]	ARRAY_ACCESS	0	0	PARAM_USE	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	index	int	+	0	0	ARRIDX_USE	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	width	int	blockWidth()	0	0	PARAM_USE	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	heightExcess	int	-	0	1	PARAM_USE	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	widthExcess	int	-	0	2	PARAM_USE	1
1291	678	20	BlockRealMatrix.java	getSubMatrix	jBlock	int	0	0	0	NO_USE	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	iHeight	int	blockHeight()	0	0	-	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	qBlock	int	NAME	0	0	+	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	iBlock	int	0	0	0	NO_USE	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	out	BlockRealMatrix	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	blockStartRow	int	/	0	0	NO_USE	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	rowsShift	int	%	0	0	PARAM_USE	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	blockStartColumn	int	/	0	0	NO_USE	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	columnsShift	int	%	0	0	PARAM_USE	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	pBlock	int	NAME	0	0	NO_USE	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	startRow	int	PARAM_AS	1	0	NO_USE	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	endRow	int	PARAM_AS	1	0	NO_USE	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	startColumn	int	PARAM_AS	1	0	NO_USE	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	endColumn	int	PARAM_AS	1	0	NO_USE	0
1291	678	20	BlockRealMatrix.java	getSubMatrix	THIS	BlockRealMatrix	UNKNOWN_AS	0	0	CLALLER_USE	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	jWidth	int	blockWidth()	0	0	PARAM_USE	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	outIndex	int	+	0	0	NO_USE	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	outBlock	double[]	ARRAY_ACCESS	0	0	PARAM_USE	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	index	int	+	0	0	ARRIDX_USE	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	width	int	blockWidth()	0	0	PARAM_USE	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	heightExcess	int	-	0	1	NO_USE	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	widthExcess	int	-	0	2	PARAM_USE	1
1292	710	20	BlockRealMatrix.java	getSubMatrix	jBlock	int	0	0	0	NO_USE	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	iHeight	int	blockHeight()	0	0	+	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	qBlock	int	NAME	0	0	+	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	iBlock	int	0	0	0	NO_USE	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	out	BlockRealMatrix	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	blockStartRow	int	/	0	0	NO_USE	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	rowsShift	int	%	0	0	PARAM_USE	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	blockStartColumn	int	/	0	0	NO_USE	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	columnsShift	int	%	0	0	PARAM_USE	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	pBlock	int	NAME	0	0	NO_USE	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	startRow	int	PARAM_AS	1	0	NO_USE	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	endRow	int	PARAM_AS	1	0	NO_USE	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	startColumn	int	PARAM_AS	1	0	NO_USE	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	endColumn	int	PARAM_AS	1	0	NO_USE	0
1292	710	20	BlockRealMatrix.java	getSubMatrix	THIS	BlockRealMatrix	UNKNOWN_AS	0	0	CLALLER_USE	0
1293	774	8	BlockRealMatrix.java	setSubMatrix	refLength	int	FIELD_ACCESS	0	2	NO_USE	1
1293	774	8	BlockRealMatrix.java	setSubMatrix	subMatrix	double[][]	PARAM_AS	1	0	NO_USE	0
1293	774	8	BlockRealMatrix.java	setSubMatrix	row	int	PARAM_AS	1	0	NO_USE	0
1293	774	8	BlockRealMatrix.java	setSubMatrix	column	int	PARAM_AS	1	0	NO_USE	0
1293	774	8	BlockRealMatrix.java	setSubMatrix	THIS	BlockRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	0
1294	781	12	BlockRealMatrix.java	setSubMatrix	refLength	int	FIELD_ACCESS	0	2	OTHER_USE	1
1294	781	12	BlockRealMatrix.java	setSubMatrix	endRow	int	-	0	0	NO_USE	0
1294	781	12	BlockRealMatrix.java	setSubMatrix	endColumn	int	-	0	0	NO_USE	0
1294	781	12	BlockRealMatrix.java	setSubMatrix	subMatrix	double[][]	PARAM_AS	1	0	NO_USE	0
1294	781	12	BlockRealMatrix.java	setSubMatrix	row	int	PARAM_AS	1	0	NO_USE	0
1294	781	12	BlockRealMatrix.java	setSubMatrix	column	int	PARAM_AS	1	0	NO_USE	0
1294	781	12	BlockRealMatrix.java	setSubMatrix	THIS	BlockRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1295	834	12	BlockRealMatrix.java	getRowMatrix	jWidth	int	blockWidth()	0	1	*	1
1295	834	12	BlockRealMatrix.java	getRowMatrix	block	double[]	ARRAY_ACCESS	0	0	PARAM_USE	0
1295	834	12	BlockRealMatrix.java	getRowMatrix	available	int	-	0	1	PARAM_USE	1
1295	834	12	BlockRealMatrix.java	getRowMatrix	jBlock	int	0	0	0	NO_USE	0
1295	834	12	BlockRealMatrix.java	getRowMatrix	out	BlockRealMatrix	CLASS_INSTANCE_CREATION	0	0	OTHER_USE	0
1295	834	12	BlockRealMatrix.java	getRowMatrix	iBlock	int	/	0	0	NO_USE	0
1295	834	12	BlockRealMatrix.java	getRowMatrix	iRow	int	-	0	0	*	0
1295	834	12	BlockRealMatrix.java	getRowMatrix	outBlockIndex	int	0	0	0	++x	0
1295	834	12	BlockRealMatrix.java	getRowMatrix	outIndex	int	0	0	0	PARAM_USE	0
1295	834	12	BlockRealMatrix.java	getRowMatrix	outBlock	double[]	ARRAY_ACCESS	0	0	PARAM_USE	0
1295	834	12	BlockRealMatrix.java	getRowMatrix	row	int	PARAM_AS	1	0	NO_USE	0
1295	834	12	BlockRealMatrix.java	getRowMatrix	THIS	BlockRealMatrix	UNKNOWN_AS	0	0	FIELD_USE	0
1296	873	8	BlockRealMatrix.java	setRowMatrix	nCols	int	getColumnDimension()	0	1	OTHER_USE	1
1296	873	8	BlockRealMatrix.java	setRowMatrix	row	int	PARAM_AS	1	0	NO_USE	0
1296	873	8	BlockRealMatrix.java	setRowMatrix	matrix	BlockRealMatrix	PARAM_AS	1	2	CLALLER_USE	1
1296	873	8	BlockRealMatrix.java	setRowMatrix	THIS	BlockRealMatrix	UNKNOWN_AS	0	0	NO_USE	0
1297	890	12	BlockRealMatrix.java	setRowMatrix	jWidth	int	blockWidth()	0	1	*	1
1297	890	12	BlockRealMatrix.java	setRowMatrix	block	double[]	ARRAY_ACCESS	0	0	PARAM_USE	0
1297	890	12	BlockRealMatrix.java	setRowMatrix	available	int	-	0	1	PARAM_USE	1
1297	890	12	BlockRealMatrix.java	setRowMatrix	jBlock	int	0	0	0	NO_USE	0
1297	890	12	BlockRealMatrix.java	setRowMatrix	nCols	int	getColumnDimension()	0	1	NO_USE	0
1297	890	12	BlockRealMatrix.java	setRowMatrix	iBlock	int	/	0	0	NO_USE	0
1297	890	12	BlockRealMatrix.java	setRowMatrix	iRow	int	-	0	0	*	0
1297	890	12	BlockRealMatrix.java	setRowMatrix	mBlockIndex	int	0	0	0	++x	0
1297	890	12	BlockRealMatrix.java	setRowMatrix	mIndex	int	0	0	0	PARAM_USE	0
1297	890	12	BlockRealMatrix.java	setRowMatrix	mBlock	double[]	ARRAY_ACCESS	0	0	PARAM_USE	0
1297	890	12	BlockRealMatrix.java	setRowMatrix	row	int	PARAM_AS	1	0	NO_USE	0
1297	890	12	BlockRealMatrix.java	setRowMatrix	matrix	BlockRealMatrix	PARAM_AS	1	2	OTHER_USE	0
1297	890	12	BlockRealMatrix.java	setRowMatrix	THIS	BlockRealMatrix	UNKNOWN_AS	0	0	FIELD_USE	0
1298	919	16	BlockRealMatrix.java	getColumnMatrix	i	int	0	0	0	NO_USE	0
1298	919	16	BlockRealMatrix.java	getColumnMatrix	iHeight	int	blockHeight()	0	0	NO_USE	0
1298	919	16	BlockRealMatrix.java	getColumnMatrix	block	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1298	919	16	BlockRealMatrix.java	getColumnMatrix	iBlock	int	0	0	0	NO_USE	0
1298	919	16	BlockRealMatrix.java	getColumnMatrix	out	BlockRealMatrix	CLASS_INSTANCE_CREATION	0	0	OTHER_USE	0
1298	919	16	BlockRealMatrix.java	getColumnMatrix	jBlock	int	/	0	0	NO_USE	0
1298	919	16	BlockRealMatrix.java	getColumnMatrix	jColumn	int	-	0	0	NO_USE	0
1298	919	16	BlockRealMatrix.java	getColumnMatrix	jWidth	int	blockWidth()	0	0	NO_USE	0
1298	919	16	BlockRealMatrix.java	getColumnMatrix	outBlockIndex	int	0	0	0	++x	0
1298	919	16	BlockRealMatrix.java	getColumnMatrix	outIndex	int	0	0	1	NO_USE	1
1298	919	16	BlockRealMatrix.java	getColumnMatrix	outBlock	double[]	ARRAY_ACCESS	0	1	NO_USE	1
1298	919	16	BlockRealMatrix.java	getColumnMatrix	column	int	PARAM_AS	1	0	NO_USE	0
1298	919	16	BlockRealMatrix.java	getColumnMatrix	THIS	BlockRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1299	955	8	BlockRealMatrix.java	setColumnMatrix	nRows	int	getRowDimension()	0	1	OTHER_USE	1
1299	955	8	BlockRealMatrix.java	setColumnMatrix	column	int	PARAM_AS	1	0	NO_USE	0
1299	955	8	BlockRealMatrix.java	setColumnMatrix	matrix	BlockRealMatrix	PARAM_AS	1	2	CLALLER_USE	1
1299	955	8	BlockRealMatrix.java	setColumnMatrix	THIS	BlockRealMatrix	UNKNOWN_AS	0	1	NO_USE	0
1300	973	16	BlockRealMatrix.java	setColumnMatrix	i	int	0	0	0	NO_USE	0
1300	973	16	BlockRealMatrix.java	setColumnMatrix	iHeight	int	blockHeight()	0	0	NO_USE	0
1300	973	16	BlockRealMatrix.java	setColumnMatrix	block	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1300	973	16	BlockRealMatrix.java	setColumnMatrix	iBlock	int	0	0	0	NO_USE	0
1300	973	16	BlockRealMatrix.java	setColumnMatrix	nRows	int	getRowDimension()	0	1	NO_USE	0
1300	973	16	BlockRealMatrix.java	setColumnMatrix	jBlock	int	/	0	0	NO_USE	0
1300	973	16	BlockRealMatrix.java	setColumnMatrix	jColumn	int	-	0	0	NO_USE	0
1300	973	16	BlockRealMatrix.java	setColumnMatrix	jWidth	int	blockWidth()	0	0	NO_USE	0
1300	973	16	BlockRealMatrix.java	setColumnMatrix	mBlockIndex	int	0	0	0	++x	0
1300	973	16	BlockRealMatrix.java	setColumnMatrix	mIndex	int	0	0	1	NO_USE	1
1300	973	16	BlockRealMatrix.java	setColumnMatrix	mBlock	double[]	ARRAY_ACCESS	0	1	NO_USE	1
1300	973	16	BlockRealMatrix.java	setColumnMatrix	column	int	PARAM_AS	1	0	NO_USE	0
1300	973	16	BlockRealMatrix.java	setColumnMatrix	matrix	BlockRealMatrix	PARAM_AS	1	2	OTHER_USE	0
1300	973	16	BlockRealMatrix.java	setColumnMatrix	THIS	BlockRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1301	1069	8	BlockRealMatrix.java	setRow	nCols	int	getColumnDimension()	0	1	OTHER_USE	1
1301	1069	8	BlockRealMatrix.java	setRow	row	int	PARAM_AS	1	0	NO_USE	0
1301	1069	8	BlockRealMatrix.java	setRow	array	double[]	PARAM_AS	1	1	OTHER_USE	1
1301	1069	8	BlockRealMatrix.java	setRow	THIS	BlockRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1302	1112	8	BlockRealMatrix.java	setColumn	nRows	int	getRowDimension()	0	1	OTHER_USE	1
1302	1112	8	BlockRealMatrix.java	setColumn	column	int	PARAM_AS	1	0	NO_USE	0
1302	1112	8	BlockRealMatrix.java	setColumn	array	double[]	PARAM_AS	1	1	OTHER_USE	1
1302	1112	8	BlockRealMatrix.java	setColumn	THIS	BlockRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1303	1225	8	BlockRealMatrix.java	operate	v	double[]	PARAM_AS	1	1	OTHER_USE	1
1303	1225	8	BlockRealMatrix.java	operate	THIS	BlockRealMatrix	UNKNOWN_AS	0	2	FIELD_USE	1
1304	1264	8	BlockRealMatrix.java	preMultiply	v	double[]	PARAM_AS	1	1	OTHER_USE	1
1304	1264	8	BlockRealMatrix.java	preMultiply	THIS	BlockRealMatrix	UNKNOWN_AS	0	2	FIELD_USE	1
1305	117	8	Array2DRowRealMatrix.java	Array2DRowRealMatrix	d	double[][]	PARAM_AS	1	2	PARAM_USE	0
1305	117	8	Array2DRowRealMatrix.java	Array2DRowRealMatrix	copyArray	boolean	PARAM_AS	1	0	NO_USE	1
1305	117	8	Array2DRowRealMatrix.java	Array2DRowRealMatrix	THIS	Array2DRowRealMatrix	UNKNOWN_AS	0	1	CLALLER_USE	0
1306	120	12	Array2DRowRealMatrix.java	Array2DRowRealMatrix	d	double[][]	PARAM_AS	1	2	NO_USE	1
1306	120	12	Array2DRowRealMatrix.java	Array2DRowRealMatrix	copyArray	boolean	PARAM_AS	1	0	NO_USE	0
1306	120	12	Array2DRowRealMatrix.java	Array2DRowRealMatrix	THIS	Array2DRowRealMatrix	UNKNOWN_AS	0	1	NO_USE	0
1307	124	12	Array2DRowRealMatrix.java	Array2DRowRealMatrix	nRows	int	NAME	0	1	NO_USE	1
1307	124	12	Array2DRowRealMatrix.java	Array2DRowRealMatrix	d	double[][]	PARAM_AS	1	2	NO_USE	0
1307	124	12	Array2DRowRealMatrix.java	Array2DRowRealMatrix	copyArray	boolean	PARAM_AS	1	0	NO_USE	0
1307	124	12	Array2DRowRealMatrix.java	Array2DRowRealMatrix	THIS	Array2DRowRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	0
1308	128	12	Array2DRowRealMatrix.java	Array2DRowRealMatrix	nRows	int	NAME	0	1	NO_USE	0
1308	128	12	Array2DRowRealMatrix.java	Array2DRowRealMatrix	nCols	int	FIELD_ACCESS	0	2	NO_USE	1
1308	128	12	Array2DRowRealMatrix.java	Array2DRowRealMatrix	d	double[][]	PARAM_AS	1	2	NO_USE	0
1308	128	12	Array2DRowRealMatrix.java	Array2DRowRealMatrix	copyArray	boolean	PARAM_AS	1	0	NO_USE	0
1308	128	12	Array2DRowRealMatrix.java	Array2DRowRealMatrix	THIS	Array2DRowRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	0
1309	132	16	Array2DRowRealMatrix.java	Array2DRowRealMatrix	r	int	1	0	1	ARRIDX_USE	1
1309	132	16	Array2DRowRealMatrix.java	Array2DRowRealMatrix	nRows	int	NAME	0	1	NO_USE	0
1309	132	16	Array2DRowRealMatrix.java	Array2DRowRealMatrix	nCols	int	FIELD_ACCESS	0	2	OTHER_USE	1
1309	132	16	Array2DRowRealMatrix.java	Array2DRowRealMatrix	d	double[][]	PARAM_AS	1	2	ARR_USE	1
1309	132	16	Array2DRowRealMatrix.java	Array2DRowRealMatrix	copyArray	boolean	PARAM_AS	1	0	NO_USE	0
1309	132	16	Array2DRowRealMatrix.java	Array2DRowRealMatrix	THIS	Array2DRowRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1310	273	8	Array2DRowRealMatrix.java	setSubMatrix	subMatrix	double[][]	PARAM_AS	1	1	PARAM_USE	0
1310	273	8	Array2DRowRealMatrix.java	setSubMatrix	row	int	PARAM_AS	1	1	>	0
1310	273	8	Array2DRowRealMatrix.java	setSubMatrix	column	int	PARAM_AS	1	1	>	0
1310	273	8	Array2DRowRealMatrix.java	setSubMatrix	THIS	Array2DRowRealMatrix	UNKNOWN_AS	0	2	FIELD_USE	1
1311	274	12	Array2DRowRealMatrix.java	setSubMatrix	subMatrix	double[][]	PARAM_AS	1	1	NO_USE	0
1311	274	12	Array2DRowRealMatrix.java	setSubMatrix	row	int	PARAM_AS	1	1	OTHER_USE	1
1311	274	12	Array2DRowRealMatrix.java	setSubMatrix	column	int	PARAM_AS	1	1	NO_USE	0
1311	274	12	Array2DRowRealMatrix.java	setSubMatrix	THIS	Array2DRowRealMatrix	UNKNOWN_AS	0	2	FIELD_USE	0
1312	277	12	Array2DRowRealMatrix.java	setSubMatrix	subMatrix	double[][]	PARAM_AS	1	1	NO_USE	0
1312	277	12	Array2DRowRealMatrix.java	setSubMatrix	row	int	PARAM_AS	1	1	NO_USE	0
1312	277	12	Array2DRowRealMatrix.java	setSubMatrix	column	int	PARAM_AS	1	1	OTHER_USE	1
1312	277	12	Array2DRowRealMatrix.java	setSubMatrix	THIS	Array2DRowRealMatrix	UNKNOWN_AS	0	2	FIELD_USE	0
1313	282	12	Array2DRowRealMatrix.java	setSubMatrix	nRows	int	NAME	0	1	NO_USE	1
1313	282	12	Array2DRowRealMatrix.java	setSubMatrix	subMatrix	double[][]	PARAM_AS	1	1	NO_USE	0
1313	282	12	Array2DRowRealMatrix.java	setSubMatrix	row	int	PARAM_AS	1	1	NO_USE	0
1313	282	12	Array2DRowRealMatrix.java	setSubMatrix	column	int	PARAM_AS	1	1	NO_USE	0
1313	282	12	Array2DRowRealMatrix.java	setSubMatrix	THIS	Array2DRowRealMatrix	UNKNOWN_AS	0	2	FIELD_USE	0
1314	287	12	Array2DRowRealMatrix.java	setSubMatrix	nRows	int	NAME	0	1	NO_USE	0
1314	287	12	Array2DRowRealMatrix.java	setSubMatrix	nCols	int	FIELD_ACCESS	0	2	NO_USE	1
1314	287	12	Array2DRowRealMatrix.java	setSubMatrix	subMatrix	double[][]	PARAM_AS	1	1	NO_USE	0
1314	287	12	Array2DRowRealMatrix.java	setSubMatrix	row	int	PARAM_AS	1	1	NO_USE	0
1314	287	12	Array2DRowRealMatrix.java	setSubMatrix	column	int	PARAM_AS	1	1	NO_USE	0
1314	287	12	Array2DRowRealMatrix.java	setSubMatrix	THIS	Array2DRowRealMatrix	UNKNOWN_AS	0	2	FIELD_USE	0
1315	292	16	Array2DRowRealMatrix.java	setSubMatrix	i	int	0	0	1	ARRIDX_USE	1
1315	292	16	Array2DRowRealMatrix.java	setSubMatrix	nRows	int	NAME	0	1	NO_USE	0
1315	292	16	Array2DRowRealMatrix.java	setSubMatrix	nCols	int	FIELD_ACCESS	0	2	OTHER_USE	1
1315	292	16	Array2DRowRealMatrix.java	setSubMatrix	subMatrix	double[][]	PARAM_AS	1	1	ARR_USE	1
1315	292	16	Array2DRowRealMatrix.java	setSubMatrix	row	int	PARAM_AS	1	1	NO_USE	0
1315	292	16	Array2DRowRealMatrix.java	setSubMatrix	column	int	PARAM_AS	1	1	NO_USE	0
1315	292	16	Array2DRowRealMatrix.java	setSubMatrix	THIS	Array2DRowRealMatrix	ARRAY_CREATION	0	2	FIELD_USE	1
1316	348	8	Array2DRowRealMatrix.java	operate	nRows	int	getRowDimension()	0	0	NO_USE	0
1316	348	8	Array2DRowRealMatrix.java	operate	nCols	int	getColumnDimension()	0	1	OTHER_USE	1
1316	348	8	Array2DRowRealMatrix.java	operate	v	double[]	PARAM_AS	1	1	OTHER_USE	1
1316	348	8	Array2DRowRealMatrix.java	operate	THIS	Array2DRowRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1317	368	8	Array2DRowRealMatrix.java	preMultiply	nRows	int	getRowDimension()	0	1	OTHER_USE	1
1317	368	8	Array2DRowRealMatrix.java	preMultiply	nCols	int	getColumnDimension()	0	0	NO_USE	0
1317	368	8	Array2DRowRealMatrix.java	preMultiply	v	double[]	PARAM_AS	1	1	OTHER_USE	1
1317	368	8	Array2DRowRealMatrix.java	preMultiply	THIS	Array2DRowRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1318	139	12	OpenMapRealVector.java	OpenMapRealVector	value	double	ARRAY_ACCESS	0	1	PARAM_USE	1
1318	139	12	OpenMapRealVector.java	OpenMapRealVector	key	int	0	0	0	PARAM_USE	0
1318	139	12	OpenMapRealVector.java	OpenMapRealVector	values	double[]	PARAM_AS	1	0	NO_USE	0
1318	139	12	OpenMapRealVector.java	OpenMapRealVector	epsilon	double	PARAM_AS	1	0	NO_USE	0
1318	139	12	OpenMapRealVector.java	OpenMapRealVector	THIS	OpenMapRealVector	NAME	0	1	FIELD_USE	1
1319	168	12	OpenMapRealVector.java	OpenMapRealVector	value	double	doubleValue()	0	1	PARAM_USE	1
1319	168	12	OpenMapRealVector.java	OpenMapRealVector	key	int	0	0	0	PARAM_USE	0
1319	168	12	OpenMapRealVector.java	OpenMapRealVector	values	Double[]	PARAM_AS	1	0	NO_USE	0
1319	168	12	OpenMapRealVector.java	OpenMapRealVector	epsilon	double	PARAM_AS	1	0	NO_USE	0
1319	168	12	OpenMapRealVector.java	OpenMapRealVector	THIS	OpenMapRealVector	NAME	0	1	FIELD_USE	1
1320	196	12	OpenMapRealVector.java	OpenMapRealVector	value	double	getEntry()	0	1	PARAM_USE	1
1320	196	12	OpenMapRealVector.java	OpenMapRealVector	key	int	0	0	0	PARAM_USE	0
1320	196	12	OpenMapRealVector.java	OpenMapRealVector	v	RealVector	PARAM_AS	1	0	NO_USE	0
1320	196	12	OpenMapRealVector.java	OpenMapRealVector	THIS	OpenMapRealVector	NAME	0	1	FIELD_USE	1
1321	227	8	OpenMapRealVector.java	add	v	RealVector	PARAM_AS	1	1	OTHER_USE	1
1321	227	8	OpenMapRealVector.java	add	THIS	OpenMapRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1322	252	12	OpenMapRealVector.java	add	key	int	key()	0	1	PARAM_USE	1
1322	252	12	OpenMapRealVector.java	add	copyThis	boolean	>	0	0	NO_USE	0
1322	252	12	OpenMapRealVector.java	add	res	OpenMapRealVector	OTHERS	0	0	CLALLER_USE	0
1322	252	12	OpenMapRealVector.java	add	iter	Iterator	OTHERS	0	0	CLALLER_USE	0
1322	252	12	OpenMapRealVector.java	add	randomAccess	OpenIntToDoubleHashMap	OTHERS	0	1	CLALLER_USE	1
1322	252	12	OpenMapRealVector.java	add	v	OpenMapRealVector	PARAM_AS	1	0	NO_USE	0
1322	252	12	OpenMapRealVector.java	add	THIS	OpenMapRealVector	UNKNOWN_AS	0	0	NO_USE	0
1323	278	8	OpenMapRealVector.java	append	v	RealVector	PARAM_AS	1	1	OTHER_USE	1
1323	278	8	OpenMapRealVector.java	append	THIS	OpenMapRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1324	334	8	OpenMapRealVector.java	dotProduct	v	RealVector	PARAM_AS	1	1	OTHER_USE	1
1324	334	8	OpenMapRealVector.java	dotProduct	THIS	OpenMapRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1325	401	12	OpenMapRealVector.java	getSubVector	key	int	key()	0	2	-	1
1325	401	12	OpenMapRealVector.java	getSubVector	res	OpenMapRealVector	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1325	401	12	OpenMapRealVector.java	getSubVector	end	int	+	0	1	NO_USE	1
1325	401	12	OpenMapRealVector.java	getSubVector	iter	Iterator	iterator()	0	0	CLALLER_USE	0
1325	401	12	OpenMapRealVector.java	getSubVector	index	int	PARAM_AS	1	1	-	1
1325	401	12	OpenMapRealVector.java	getSubVector	n	int	PARAM_AS	1	0	NO_USE	0
1325	401	12	OpenMapRealVector.java	getSubVector	THIS	OpenMapRealVector	UNKNOWN_AS	0	0	NO_USE	0
1326	447	12	OpenMapRealVector.java	getDistance	key	int	key()	0	1	NO_USE	1
1326	447	12	OpenMapRealVector.java	getDistance	iter	Iterator	iterator()	0	0	CLALLER_USE	0
1326	447	12	OpenMapRealVector.java	getDistance	res	double	*	0	0	NO_USE	0
1326	447	12	OpenMapRealVector.java	getDistance	v	OpenMapRealVector	PARAM_AS	1	0	NO_USE	0
1326	447	12	OpenMapRealVector.java	getDistance	THIS	OpenMapRealVector	UNKNOWN_AS	0	1	NO_USE	1
1327	459	8	OpenMapRealVector.java	getDistance	v	RealVector	PARAM_AS	1	1	OTHER_USE	1
1327	459	8	OpenMapRealVector.java	getDistance	THIS	OpenMapRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1328	504	12	OpenMapRealVector.java	getL1Distance	key	int	key()	0	1	NO_USE	1
1328	504	12	OpenMapRealVector.java	getL1Distance	max	double	NAME	0	0	NO_USE	0
1328	504	12	OpenMapRealVector.java	getL1Distance	iter	Iterator	iterator()	0	0	CLALLER_USE	0
1328	504	12	OpenMapRealVector.java	getL1Distance	v	OpenMapRealVector	PARAM_AS	1	0	NO_USE	0
1328	504	12	OpenMapRealVector.java	getL1Distance	THIS	OpenMapRealVector	UNKNOWN_AS	0	1	NO_USE	1
1329	516	8	OpenMapRealVector.java	getL1Distance	v	RealVector	PARAM_AS	1	1	OTHER_USE	1
1329	516	8	OpenMapRealVector.java	getL1Distance	THIS	OpenMapRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1330	546	12	OpenMapRealVector.java	getLInfDistance	delta	double	abs()	0	1	OTHER_USE	1
1330	546	12	OpenMapRealVector.java	getLInfDistance	max	double	0	0	2	NO_USE	1
1330	546	12	OpenMapRealVector.java	getLInfDistance	iter	Iterator	iterator()	0	1	NO_USE	0
1330	546	12	OpenMapRealVector.java	getLInfDistance	v	OpenMapRealVector	PARAM_AS	1	0	NO_USE	0
1330	546	12	OpenMapRealVector.java	getLInfDistance	THIS	OpenMapRealVector	UNKNOWN_AS	0	1	NO_USE	0
1331	554	12	OpenMapRealVector.java	getLInfDistance	key	int	key()	0	1	NO_USE	1
1331	554	12	OpenMapRealVector.java	getLInfDistance	max	double	NAME	0	2	>	0
1331	554	12	OpenMapRealVector.java	getLInfDistance	iter	Iterator	iterator()	0	1	CLALLER_USE	0
1331	554	12	OpenMapRealVector.java	getLInfDistance	v	OpenMapRealVector	PARAM_AS	1	0	NO_USE	0
1331	554	12	OpenMapRealVector.java	getLInfDistance	THIS	OpenMapRealVector	UNKNOWN_AS	0	1	NO_USE	1
1332	555	16	OpenMapRealVector.java	getLInfDistance	key	int	key()	0	1	NO_USE	0
1332	555	16	OpenMapRealVector.java	getLInfDistance	max	double	NAME	0	2	NO_USE	1
1332	555	16	OpenMapRealVector.java	getLInfDistance	iter	Iterator	iterator()	0	1	CLALLER_USE	1
1332	555	16	OpenMapRealVector.java	getLInfDistance	v	OpenMapRealVector	PARAM_AS	1	0	NO_USE	0
1332	555	16	OpenMapRealVector.java	getLInfDistance	THIS	OpenMapRealVector	UNKNOWN_AS	0	1	NO_USE	0
1333	567	8	OpenMapRealVector.java	getLInfDistance	v	RealVector	PARAM_AS	1	1	OTHER_USE	1
1333	567	8	OpenMapRealVector.java	getLInfDistance	THIS	OpenMapRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1334	580	12	OpenMapRealVector.java	getLInfDistance	delta	double	abs()	0	1	OTHER_USE	1
1334	580	12	OpenMapRealVector.java	getLInfDistance	i	int	0	0	0	NO_USE	0
1334	580	12	OpenMapRealVector.java	getLInfDistance	max	double	0	0	1	NO_USE	1
1334	580	12	OpenMapRealVector.java	getLInfDistance	v	double[]	PARAM_AS	1	0	NO_USE	0
1334	580	12	OpenMapRealVector.java	getLInfDistance	THIS	OpenMapRealVector	UNKNOWN_AS	0	0	NO_USE	0
1335	594	12	OpenMapRealVector.java	isInfinite	value	double	value()	0	2	NO_USE	1
1335	594	12	OpenMapRealVector.java	isInfinite	infiniteFound	boolean	LITERAL	0	0	NO_USE	0
1335	594	12	OpenMapRealVector.java	isInfinite	iter	Iterator	iterator()	0	0	NO_USE	0
1335	594	12	OpenMapRealVector.java	isInfinite	THIS	OpenMapRealVector	UNKNOWN_AS	0	0	NO_USE	0
1336	597	12	OpenMapRealVector.java	isInfinite	value	double	value()	0	2	NO_USE	1
1336	597	12	OpenMapRealVector.java	isInfinite	infiniteFound	boolean	LITERAL	0	0	NO_USE	0
1336	597	12	OpenMapRealVector.java	isInfinite	iter	Iterator	iterator()	0	0	NO_USE	0
1336	597	12	OpenMapRealVector.java	isInfinite	THIS	OpenMapRealVector	UNKNOWN_AS	0	0	NO_USE	0
1337	609	12	OpenMapRealVector.java	isNaN	iter	Iterator	iterator()	0	1	NO_USE	1
1337	609	12	OpenMapRealVector.java	isNaN	THIS	OpenMapRealVector	UNKNOWN_AS	0	0	NO_USE	0
1338	664	8	OpenMapRealVector.java	setEntry	index	int	PARAM_AS	1	1	PARAM_USE	0
1338	664	8	OpenMapRealVector.java	setEntry	value	double	PARAM_AS	1	1	PARAM_USE	1
1338	664	8	OpenMapRealVector.java	setEntry	THIS	OpenMapRealVector	UNKNOWN_AS	0	2	FIELD_USE	1
1339	666	15	OpenMapRealVector.java	setEntry	index	int	PARAM_AS	1	1	PARAM_USE	1
1339	666	15	OpenMapRealVector.java	setEntry	value	double	PARAM_AS	1	1	NO_USE	0
1339	666	15	OpenMapRealVector.java	setEntry	THIS	OpenMapRealVector	UNKNOWN_AS	0	2	FIELD_USE	1
1340	712	12	OpenMapRealVector.java	subtract	key	int	key()	0	1	PARAM_USE	1
1340	712	12	OpenMapRealVector.java	subtract	res	OpenMapRealVector	copy()	0	0	CLALLER_USE	0
1340	712	12	OpenMapRealVector.java	subtract	iter	Iterator	iterator()	0	0	CLALLER_USE	0
1340	712	12	OpenMapRealVector.java	subtract	v	OpenMapRealVector	PARAM_AS	1	0	NO_USE	0
1340	712	12	OpenMapRealVector.java	subtract	THIS	OpenMapRealVector	UNKNOWN_AS	0	1	FIELD_USE	1
1341	725	8	OpenMapRealVector.java	subtract	v	RealVector	PARAM_AS	1	1	OTHER_USE	1
1341	725	8	OpenMapRealVector.java	subtract	THIS	OpenMapRealVector	UNKNOWN_AS	0	0	CLALLER_USE	0
1342	737	12	OpenMapRealVector.java	subtract	i	int	0	0	1	PARAM_USE	1
1342	737	12	OpenMapRealVector.java	subtract	res	OpenMapRealVector	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1342	737	12	OpenMapRealVector.java	subtract	v	double[]	PARAM_AS	1	0	ARR_USE	0
1342	737	12	OpenMapRealVector.java	subtract	THIS	OpenMapRealVector	UNKNOWN_AS	0	1	FIELD_USE	1
1343	759	8	OpenMapRealVector.java	unitize	norm	double	getNorm()	0	1	NO_USE	1
1343	759	8	OpenMapRealVector.java	unitize	THIS	OpenMapRealVector	UNKNOWN_AS	0	1	FIELD_USE	1
1344	806	8	OpenMapRealVector.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	1
1344	806	8	OpenMapRealVector.java	equals	THIS	OpenMapRealVector	UNKNOWN_AS	0	6	NO_USE	1
1345	809	8	OpenMapRealVector.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	1
1345	809	8	OpenMapRealVector.java	equals	THIS	OpenMapRealVector	UNKNOWN_AS	0	6	NO_USE	0
1346	813	8	OpenMapRealVector.java	equals	other	OpenMapRealVector	CAST	0	2	NO_USE	1
1346	813	8	OpenMapRealVector.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	0
1346	813	8	OpenMapRealVector.java	equals	THIS	OpenMapRealVector	UNKNOWN_AS	0	6	NO_USE	1
1347	816	8	OpenMapRealVector.java	equals	other	OpenMapRealVector	CAST	0	2	NO_USE	1
1347	816	8	OpenMapRealVector.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	0
1347	816	8	OpenMapRealVector.java	equals	THIS	OpenMapRealVector	UNKNOWN_AS	0	6	NO_USE	1
1348	824	12	OpenMapRealVector.java	equals	test	double	getEntry()	0	1	NO_USE	1
1348	824	12	OpenMapRealVector.java	equals	other	OpenMapRealVector	CAST	0	2	NO_USE	0
1348	824	12	OpenMapRealVector.java	equals	iter	Iterator	iterator()	0	2	NO_USE	1
1348	824	12	OpenMapRealVector.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	0
1348	824	12	OpenMapRealVector.java	equals	THIS	OpenMapRealVector	UNKNOWN_AS	0	6	NO_USE	0
1349	832	12	OpenMapRealVector.java	equals	test	double	value()	0	1	NO_USE	1
1349	832	12	OpenMapRealVector.java	equals	other	OpenMapRealVector	CAST	0	2	NO_USE	0
1349	832	12	OpenMapRealVector.java	equals	iter	Iterator	iterator()	0	2	NO_USE	1
1349	832	12	OpenMapRealVector.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	0
1349	832	12	OpenMapRealVector.java	equals	THIS	OpenMapRealVector	UNKNOWN_AS	0	6	NO_USE	1
1350	95	8	RealLinearOperator.java	operate	x	double[]	PARAM_AS	1	1	OTHER_USE	1
1350	95	8	RealLinearOperator.java	operate	THIS	RealLinearOperator	UNKNOWN_AS	0	2	FIELD_USE	1
1351	99	8	RealLinearOperator.java	operate	y	RealVector	operate()	0	1	OTHER_USE	1
1351	99	8	RealLinearOperator.java	operate	x	double[]	PARAM_AS	1	1	NO_USE	0
1351	99	8	RealLinearOperator.java	operate	THIS	RealLinearOperator	UNKNOWN_AS	0	2	NO_USE	0
1352	100	8	EigenDecompositionImpl.java	EigenDecompositionImpl	matrix	RealMatrix	PARAM_AS	1	1	PARAM_USE	1
1352	100	8	EigenDecompositionImpl.java	EigenDecompositionImpl	splitTolerance	double	PARAM_AS	1	0	NO_USE	0
1352	100	8	EigenDecompositionImpl.java	EigenDecompositionImpl	THIS	EigenDecompositionImpl	UNKNOWN_AS	0	1	CLALLER_USE	1
1353	148	16	EigenDecompositionImpl.java	isSymmetric	mij	double	getEntry()	0	2	NO_USE	1
1353	148	16	EigenDecompositionImpl.java	isSymmetric	mji	double	getEntry()	0	2	NO_USE	1
1353	148	16	EigenDecompositionImpl.java	isSymmetric	j	int	+	0	0	OTHER_USE	0
1353	148	16	EigenDecompositionImpl.java	isSymmetric	i	int	0	0	0	OTHER_USE	0
1353	148	16	EigenDecompositionImpl.java	isSymmetric	rows	int	getRowDimension()	0	0	NO_USE	0
1353	148	16	EigenDecompositionImpl.java	isSymmetric	columns	int	getColumnDimension()	0	0	NO_USE	0
1353	148	16	EigenDecompositionImpl.java	isSymmetric	eps	double	*	0	1	OTHER_USE	1
1353	148	16	EigenDecompositionImpl.java	isSymmetric	matrix	RealMatrix	PARAM_AS	1	0	NO_USE	0
1353	148	16	EigenDecompositionImpl.java	isSymmetric	raiseException	boolean	PARAM_AS	1	0	OTHER_USE	0
1353	148	16	EigenDecompositionImpl.java	isSymmetric	THIS	EigenDecompositionImpl	UNKNOWN_AS	0	0	NO_USE	0
1354	150	20	EigenDecompositionImpl.java	isSymmetric	mij	double	getEntry()	0	2	NO_USE	0
1354	150	20	EigenDecompositionImpl.java	isSymmetric	mji	double	getEntry()	0	2	NO_USE	0
1354	150	20	EigenDecompositionImpl.java	isSymmetric	j	int	+	0	0	OTHER_USE	0
1354	150	20	EigenDecompositionImpl.java	isSymmetric	i	int	0	0	0	OTHER_USE	0
1354	150	20	EigenDecompositionImpl.java	isSymmetric	rows	int	getRowDimension()	0	0	NO_USE	0
1354	150	20	EigenDecompositionImpl.java	isSymmetric	columns	int	getColumnDimension()	0	0	NO_USE	0
1354	150	20	EigenDecompositionImpl.java	isSymmetric	eps	double	*	0	1	OTHER_USE	0
1354	150	20	EigenDecompositionImpl.java	isSymmetric	matrix	RealMatrix	PARAM_AS	1	0	NO_USE	0
1354	150	20	EigenDecompositionImpl.java	isSymmetric	raiseException	boolean	PARAM_AS	1	0	NO_USE	1
1354	150	20	EigenDecompositionImpl.java	isSymmetric	THIS	EigenDecompositionImpl	UNKNOWN_AS	0	0	NO_USE	0
1355	163	8	EigenDecompositionImpl.java	getV	THIS	EigenDecompositionImpl	UNKNOWN_AS	0	1	FIELD_USE	1
1356	177	8	EigenDecompositionImpl.java	getD	THIS	EigenDecompositionImpl	UNKNOWN_AS	0	1	FIELD_USE	1
1357	187	8	EigenDecompositionImpl.java	getVT	THIS	EigenDecompositionImpl	UNKNOWN_AS	0	1	FIELD_USE	1
1358	481	12	EigenDecompositionImpl.java	findEigenVectors	i	int	0	0	2	ARRIDX_USE	1
1358	481	12	EigenDecompositionImpl.java	findEigenVectors	z	double[][]	clone()	0	0	NO_USE	0
1358	481	12	EigenDecompositionImpl.java	findEigenVectors	n	int	0.0	0	0	NO_USE	0
1358	481	12	EigenDecompositionImpl.java	findEigenVectors	e	double[]	0.0	0	4	NO_USE	0
1358	481	12	EigenDecompositionImpl.java	findEigenVectors	maxAbsoluteValue	double	0.0	0	8	NO_USE	1
1358	481	12	EigenDecompositionImpl.java	findEigenVectors	householderMatrix	double[][]	PARAM_AS	1	0	NO_USE	0
1358	481	12	EigenDecompositionImpl.java	findEigenVectors	THIS	EigenDecompositionImpl	ARRAY_ACCESS	0	6	FIELD_USE	1
1359	484	12	EigenDecompositionImpl.java	findEigenVectors	i	int	0	0	2	ARRIDX_USE	1
1359	484	12	EigenDecompositionImpl.java	findEigenVectors	z	double[][]	clone()	0	0	NO_USE	0
1359	484	12	EigenDecompositionImpl.java	findEigenVectors	n	int	0.0	0	0	NO_USE	0
1359	484	12	EigenDecompositionImpl.java	findEigenVectors	e	double[]	0.0	0	4	ARR_USE	1
1359	484	12	EigenDecompositionImpl.java	findEigenVectors	maxAbsoluteValue	double	abs()	0	8	NO_USE	1
1359	484	12	EigenDecompositionImpl.java	findEigenVectors	householderMatrix	double[][]	PARAM_AS	1	0	NO_USE	0
1359	484	12	EigenDecompositionImpl.java	findEigenVectors	THIS	EigenDecompositionImpl	ARRAY_ACCESS	0	6	NO_USE	0
1360	489	8	EigenDecompositionImpl.java	findEigenVectors	z	double[][]	clone()	0	0	NO_USE	0
1360	489	8	EigenDecompositionImpl.java	findEigenVectors	n	int	0.0	0	0	<	0
1360	489	8	EigenDecompositionImpl.java	findEigenVectors	e	double[]	0.0	0	4	ARR_USE	0
1360	489	8	EigenDecompositionImpl.java	findEigenVectors	maxAbsoluteValue	double	abs()	0	8	*	1
1360	489	8	EigenDecompositionImpl.java	findEigenVectors	householderMatrix	double[][]	PARAM_AS	1	0	NO_USE	0
1360	489	8	EigenDecompositionImpl.java	findEigenVectors	THIS	EigenDecompositionImpl	ARRAY_ACCESS	0	6	FIELD_USE	0
1361	491	16	EigenDecompositionImpl.java	findEigenVectors	i	int	0	0	2	ARRIDX_USE	1
1361	491	16	EigenDecompositionImpl.java	findEigenVectors	z	double[][]	clone()	0	0	NO_USE	0
1361	491	16	EigenDecompositionImpl.java	findEigenVectors	n	int	0.0	0	0	NO_USE	0
1361	491	16	EigenDecompositionImpl.java	findEigenVectors	e	double[]	0.0	0	4	NO_USE	0
1361	491	16	EigenDecompositionImpl.java	findEigenVectors	maxAbsoluteValue	double	abs()	0	8	NO_USE	1
1361	491	16	EigenDecompositionImpl.java	findEigenVectors	householderMatrix	double[][]	PARAM_AS	1	0	NO_USE	0
1361	491	16	EigenDecompositionImpl.java	findEigenVectors	THIS	EigenDecompositionImpl	ARRAY_ACCESS	0	6	FIELD_USE	1
1362	494	16	EigenDecompositionImpl.java	findEigenVectors	i	int	0.0	0	2	ARRIDX_USE	1
1362	494	16	EigenDecompositionImpl.java	findEigenVectors	z	double[][]	clone()	0	0	NO_USE	0
1362	494	16	EigenDecompositionImpl.java	findEigenVectors	n	int	0.0	0	0	NO_USE	0
1362	494	16	EigenDecompositionImpl.java	findEigenVectors	e	double[]	0.0	0	4	ARR_USE	1
1362	494	16	EigenDecompositionImpl.java	findEigenVectors	maxAbsoluteValue	double	abs()	0	8	NO_USE	1
1362	494	16	EigenDecompositionImpl.java	findEigenVectors	householderMatrix	double[][]	PARAM_AS	1	0	NO_USE	0
1362	494	16	EigenDecompositionImpl.java	findEigenVectors	THIS	EigenDecompositionImpl	0.0	0	6	NO_USE	0
1363	506	20	EigenDecompositionImpl.java	findEigenVectors	delta	double	+	0	2	NO_USE	1
1363	506	20	EigenDecompositionImpl.java	findEigenVectors	its	int	0	0	1	NO_USE	0
1363	506	20	EigenDecompositionImpl.java	findEigenVectors	m	int	NAME	0	2	NO_USE	1
1363	506	20	EigenDecompositionImpl.java	findEigenVectors	j	int	0	0	2	NO_USE	0
1363	506	20	EigenDecompositionImpl.java	findEigenVectors	z	double[][]	clone()	0	0	NO_USE	0
1363	506	20	EigenDecompositionImpl.java	findEigenVectors	n	int	0.0	0	0	NO_USE	0
1363	506	20	EigenDecompositionImpl.java	findEigenVectors	e	double[]	0.0	0	4	NO_USE	1
1363	506	20	EigenDecompositionImpl.java	findEigenVectors	maxAbsoluteValue	double	abs()	0	8	NO_USE	0
1363	506	20	EigenDecompositionImpl.java	findEigenVectors	householderMatrix	double[][]	PARAM_AS	1	0	NO_USE	0
1363	506	20	EigenDecompositionImpl.java	findEigenVectors	THIS	EigenDecompositionImpl	0.0	0	6	NO_USE	0
1364	510	16	EigenDecompositionImpl.java	findEigenVectors	its	int	0	0	1	==	0
1364	510	16	EigenDecompositionImpl.java	findEigenVectors	m	int	NAME	0	2	ARRIDX_USE	1
1364	510	16	EigenDecompositionImpl.java	findEigenVectors	j	int	0	0	2	+	1
1364	510	16	EigenDecompositionImpl.java	findEigenVectors	z	double[][]	clone()	0	0	ARR_USE	0
1364	510	16	EigenDecompositionImpl.java	findEigenVectors	n	int	0.0	0	0	<	0
1364	510	16	EigenDecompositionImpl.java	findEigenVectors	e	double[]	0.0	0	4	ARR_USE	0
1364	510	16	EigenDecompositionImpl.java	findEigenVectors	maxAbsoluteValue	double	abs()	0	8	NO_USE	0
1364	510	16	EigenDecompositionImpl.java	findEigenVectors	householderMatrix	double[][]	PARAM_AS	1	0	NO_USE	0
1364	510	16	EigenDecompositionImpl.java	findEigenVectors	THIS	EigenDecompositionImpl	0.0	0	6	FIELD_USE	0
1365	511	20	EigenDecompositionImpl.java	findEigenVectors	its	int	0	0	1	NO_USE	1
1365	511	20	EigenDecompositionImpl.java	findEigenVectors	m	int	NAME	0	2	NO_USE	0
1365	511	20	EigenDecompositionImpl.java	findEigenVectors	j	int	0	0	2	NO_USE	0
1365	511	20	EigenDecompositionImpl.java	findEigenVectors	z	double[][]	clone()	0	0	NO_USE	0
1365	511	20	EigenDecompositionImpl.java	findEigenVectors	n	int	0.0	0	0	NO_USE	0
1365	511	20	EigenDecompositionImpl.java	findEigenVectors	e	double[]	0.0	0	4	NO_USE	0
1365	511	20	EigenDecompositionImpl.java	findEigenVectors	maxAbsoluteValue	double	abs()	0	8	NO_USE	0
1365	511	20	EigenDecompositionImpl.java	findEigenVectors	householderMatrix	double[][]	PARAM_AS	1	0	NO_USE	0
1365	511	20	EigenDecompositionImpl.java	findEigenVectors	THIS	EigenDecompositionImpl	0.0	0	6	FIELD_USE	1
1366	518	20	EigenDecompositionImpl.java	findEigenVectors	q	double	/	0	2	-	1
1366	518	20	EigenDecompositionImpl.java	findEigenVectors	t	double	sqrt()	0	1	-	0
1366	518	20	EigenDecompositionImpl.java	findEigenVectors	its	int	0	0	1	NO_USE	0
1366	518	20	EigenDecompositionImpl.java	findEigenVectors	m	int	NAME	0	2	ARRIDX_USE	0
1366	518	20	EigenDecompositionImpl.java	findEigenVectors	j	int	0	0	2	ARRIDX_USE	0
1366	518	20	EigenDecompositionImpl.java	findEigenVectors	z	double[][]	clone()	0	0	NO_USE	0
1366	518	20	EigenDecompositionImpl.java	findEigenVectors	n	int	0.0	0	0	NO_USE	0
1366	518	20	EigenDecompositionImpl.java	findEigenVectors	e	double[]	0.0	0	4	ARR_USE	0
1366	518	20	EigenDecompositionImpl.java	findEigenVectors	maxAbsoluteValue	double	abs()	0	8	NO_USE	0
1366	518	20	EigenDecompositionImpl.java	findEigenVectors	householderMatrix	double[][]	PARAM_AS	1	0	NO_USE	0
1366	518	20	EigenDecompositionImpl.java	findEigenVectors	THIS	EigenDecompositionImpl	0.0	0	6	FIELD_USE	0
1367	530	24	EigenDecompositionImpl.java	findEigenVectors	p	double	*	0	1	/	1
1367	530	24	EigenDecompositionImpl.java	findEigenVectors	h	double	*	0	0	NO_USE	0
1367	530	24	EigenDecompositionImpl.java	findEigenVectors	q	double	+	0	2	/	1
1367	530	24	EigenDecompositionImpl.java	findEigenVectors	t	double	sqrt()	0	1	*	0
1367	530	24	EigenDecompositionImpl.java	findEigenVectors	u	double	0.0	0	0	NO_USE	0
1367	530	24	EigenDecompositionImpl.java	findEigenVectors	s	double	1.0	0	0	*	0
1367	530	24	EigenDecompositionImpl.java	findEigenVectors	c	double	1.0	0	0	*	0
1367	530	24	EigenDecompositionImpl.java	findEigenVectors	i	int	-	0	2	+	0
1367	530	24	EigenDecompositionImpl.java	findEigenVectors	its	int	0	0	1	NO_USE	0
1367	530	24	EigenDecompositionImpl.java	findEigenVectors	m	int	NAME	0	2	NO_USE	0
1367	530	24	EigenDecompositionImpl.java	findEigenVectors	j	int	0	0	2	NO_USE	0
1367	530	24	EigenDecompositionImpl.java	findEigenVectors	z	double[][]	clone()	0	0	NO_USE	0
1367	530	24	EigenDecompositionImpl.java	findEigenVectors	n	int	0.0	0	0	NO_USE	0
1367	530	24	EigenDecompositionImpl.java	findEigenVectors	e	double[]	0.0	0	4	ARR_USE	0
1367	530	24	EigenDecompositionImpl.java	findEigenVectors	maxAbsoluteValue	double	abs()	0	8	NO_USE	0
1367	530	24	EigenDecompositionImpl.java	findEigenVectors	householderMatrix	double[][]	PARAM_AS	1	0	NO_USE	0
1367	530	24	EigenDecompositionImpl.java	findEigenVectors	THIS	EigenDecompositionImpl	0.0	0	6	NO_USE	0
1368	543	24	EigenDecompositionImpl.java	findEigenVectors	p	double	*	0	1	NO_USE	0
1368	543	24	EigenDecompositionImpl.java	findEigenVectors	h	double	*	0	0	NO_USE	0
1368	543	24	EigenDecompositionImpl.java	findEigenVectors	q	double	+	0	2	NO_USE	0
1368	543	24	EigenDecompositionImpl.java	findEigenVectors	t	double	sqrt()	0	1	NO_USE	0
1368	543	24	EigenDecompositionImpl.java	findEigenVectors	u	double	0.0	0	0	OTHER_USE	0
1368	543	24	EigenDecompositionImpl.java	findEigenVectors	s	double	*	0	0	NO_USE	0
1368	543	24	EigenDecompositionImpl.java	findEigenVectors	c	double	/	0	0	NO_USE	0
1368	543	24	EigenDecompositionImpl.java	findEigenVectors	i	int	*	0	2	+	1
1368	543	24	EigenDecompositionImpl.java	findEigenVectors	its	int	0	0	1	NO_USE	0
1368	543	24	EigenDecompositionImpl.java	findEigenVectors	m	int	NAME	0	2	ARRIDX_USE	0
1368	543	24	EigenDecompositionImpl.java	findEigenVectors	j	int	0	0	2	NO_USE	0
1368	543	24	EigenDecompositionImpl.java	findEigenVectors	z	double[][]	clone()	0	0	NO_USE	0
1368	543	24	EigenDecompositionImpl.java	findEigenVectors	n	int	0.0	0	0	NO_USE	0
1368	543	24	EigenDecompositionImpl.java	findEigenVectors	e	double[]	*	0	4	ARR_USE	1
1368	543	24	EigenDecompositionImpl.java	findEigenVectors	maxAbsoluteValue	double	abs()	0	8	NO_USE	0
1368	543	24	EigenDecompositionImpl.java	findEigenVectors	householderMatrix	double[][]	PARAM_AS	1	0	NO_USE	0
1368	543	24	EigenDecompositionImpl.java	findEigenVectors	THIS	EigenDecompositionImpl	0.0	0	6	FIELD_USE	0
1369	559	20	EigenDecompositionImpl.java	findEigenVectors	q	double	-	0	2	NO_USE	0
1369	559	20	EigenDecompositionImpl.java	findEigenVectors	t	double	+	0	1	NO_USE	1
1369	559	20	EigenDecompositionImpl.java	findEigenVectors	u	double	*	0	0	NO_USE	0
1369	559	20	EigenDecompositionImpl.java	findEigenVectors	s	double	*	0	0	NO_USE	0
1369	559	20	EigenDecompositionImpl.java	findEigenVectors	c	double	/	0	0	NO_USE	0
1369	559	20	EigenDecompositionImpl.java	findEigenVectors	i	int	-	0	2	NO_USE	1
1369	559	20	EigenDecompositionImpl.java	findEigenVectors	its	int	0	0	1	NO_USE	0
1369	559	20	EigenDecompositionImpl.java	findEigenVectors	m	int	0.0	0	2	NO_USE	0
1369	559	20	EigenDecompositionImpl.java	findEigenVectors	j	int	0	0	2	NO_USE	1
1369	559	20	EigenDecompositionImpl.java	findEigenVectors	z	double[][]	-	0	0	NO_USE	0
1369	559	20	EigenDecompositionImpl.java	findEigenVectors	n	int	0.0	0	0	NO_USE	0
1369	559	20	EigenDecompositionImpl.java	findEigenVectors	e	double[]	0.0	0	4	NO_USE	0
1369	559	20	EigenDecompositionImpl.java	findEigenVectors	maxAbsoluteValue	double	abs()	0	8	NO_USE	0
1369	559	20	EigenDecompositionImpl.java	findEigenVectors	householderMatrix	double[][]	PARAM_AS	1	0	NO_USE	0
1369	559	20	EigenDecompositionImpl.java	findEigenVectors	THIS	EigenDecompositionImpl	+	0	6	NO_USE	0
1370	574	16	EigenDecompositionImpl.java	findEigenVectors	j	int	+	0	1	OTHER_USE	1
1370	574	16	EigenDecompositionImpl.java	findEigenVectors	k	int	NAME	0	1	NO_USE	0
1370	574	16	EigenDecompositionImpl.java	findEigenVectors	p	double	ARRAY_ACCESS	0	1	NO_USE	1
1370	574	16	EigenDecompositionImpl.java	findEigenVectors	i	int	0	0	1	NO_USE	0
1370	574	16	EigenDecompositionImpl.java	findEigenVectors	z	double[][]	-	0	0	NO_USE	0
1370	574	16	EigenDecompositionImpl.java	findEigenVectors	n	int	0.0	0	0	NO_USE	0
1370	574	16	EigenDecompositionImpl.java	findEigenVectors	e	double[]	0.0	0	4	NO_USE	0
1370	574	16	EigenDecompositionImpl.java	findEigenVectors	maxAbsoluteValue	double	abs()	0	8	NO_USE	0
1370	574	16	EigenDecompositionImpl.java	findEigenVectors	householderMatrix	double[][]	PARAM_AS	1	0	NO_USE	0
1370	574	16	EigenDecompositionImpl.java	findEigenVectors	THIS	EigenDecompositionImpl	NAME	0	6	FIELD_USE	1
1371	579	12	EigenDecompositionImpl.java	findEigenVectors	k	int	NAME	0	1	ARRIDX_USE	1
1371	579	12	EigenDecompositionImpl.java	findEigenVectors	p	double	ARRAY_ACCESS	0	1	OTHER_USE	0
1371	579	12	EigenDecompositionImpl.java	findEigenVectors	i	int	0	0	1	ARRIDX_USE	1
1371	579	12	EigenDecompositionImpl.java	findEigenVectors	z	double[][]	-	0	0	ARR_USE	0
1371	579	12	EigenDecompositionImpl.java	findEigenVectors	n	int	0.0	0	0	<	0
1371	579	12	EigenDecompositionImpl.java	findEigenVectors	e	double[]	0.0	0	4	NO_USE	0
1371	579	12	EigenDecompositionImpl.java	findEigenVectors	maxAbsoluteValue	double	abs()	0	8	NO_USE	0
1371	579	12	EigenDecompositionImpl.java	findEigenVectors	householderMatrix	double[][]	PARAM_AS	1	0	NO_USE	0
1371	579	12	EigenDecompositionImpl.java	findEigenVectors	THIS	EigenDecompositionImpl	NAME	0	6	FIELD_USE	0
1372	593	12	EigenDecompositionImpl.java	findEigenVectors	i	int	0	0	1	ARRIDX_USE	1
1372	593	12	EigenDecompositionImpl.java	findEigenVectors	z	double[][]	NAME	0	0	NO_USE	0
1372	593	12	EigenDecompositionImpl.java	findEigenVectors	n	int	0.0	0	0	NO_USE	0
1372	593	12	EigenDecompositionImpl.java	findEigenVectors	e	double[]	0.0	0	4	NO_USE	0
1372	593	12	EigenDecompositionImpl.java	findEigenVectors	maxAbsoluteValue	double	0.0	0	8	NO_USE	1
1372	593	12	EigenDecompositionImpl.java	findEigenVectors	householderMatrix	double[][]	PARAM_AS	1	0	NO_USE	0
1372	593	12	EigenDecompositionImpl.java	findEigenVectors	THIS	EigenDecompositionImpl	NAME	0	6	FIELD_USE	1
1373	598	8	EigenDecompositionImpl.java	findEigenVectors	z	double[][]	NAME	0	0	NO_USE	0
1373	598	8	EigenDecompositionImpl.java	findEigenVectors	n	int	0.0	0	0	<	0
1373	598	8	EigenDecompositionImpl.java	findEigenVectors	e	double[]	0.0	0	4	NO_USE	0
1373	598	8	EigenDecompositionImpl.java	findEigenVectors	maxAbsoluteValue	double	abs()	0	8	*	1
1373	598	8	EigenDecompositionImpl.java	findEigenVectors	householderMatrix	double[][]	PARAM_AS	1	0	NO_USE	0
1373	598	8	EigenDecompositionImpl.java	findEigenVectors	THIS	EigenDecompositionImpl	NAME	0	6	FIELD_USE	0
1374	600	16	EigenDecompositionImpl.java	findEigenVectors	i	int	0	0	1	ARRIDX_USE	1
1374	600	16	EigenDecompositionImpl.java	findEigenVectors	z	double[][]	NAME	0	0	NO_USE	0
1374	600	16	EigenDecompositionImpl.java	findEigenVectors	n	int	0.0	0	0	NO_USE	0
1374	600	16	EigenDecompositionImpl.java	findEigenVectors	e	double[]	0.0	0	4	NO_USE	0
1374	600	16	EigenDecompositionImpl.java	findEigenVectors	maxAbsoluteValue	double	abs()	0	8	NO_USE	1
1374	600	16	EigenDecompositionImpl.java	findEigenVectors	householderMatrix	double[][]	PARAM_AS	1	0	NO_USE	0
1374	600	16	EigenDecompositionImpl.java	findEigenVectors	THIS	EigenDecompositionImpl	NAME	0	6	FIELD_USE	1
1375	70	8	LUDecompositionImpl.java	LUDecompositionImpl	matrix	RealMatrix	PARAM_AS	1	1	CLALLER_USE	1
1375	70	8	LUDecompositionImpl.java	LUDecompositionImpl	singularityThreshold	double	PARAM_AS	1	1	NO_USE	0
1375	70	8	LUDecompositionImpl.java	LUDecompositionImpl	THIS	LUDecompositionImpl	UNKNOWN_AS	0	1	NO_USE	0
1376	116	16	LUDecompositionImpl.java	LUDecompositionImpl	luRow	double[]	NAME	0	0	NO_USE	0
1376	116	16	LUDecompositionImpl.java	LUDecompositionImpl	row	int	NAME	0	0	OTHER_USE	0
1376	116	16	LUDecompositionImpl.java	LUDecompositionImpl	sum	double	*	0	1	PARAM_USE	1
1376	116	16	LUDecompositionImpl.java	LUDecompositionImpl	max	int	NAME	0	2	NO_USE	0
1376	116	16	LUDecompositionImpl.java	LUDecompositionImpl	largest	double	NAME	0	1	NO_USE	1
1376	116	16	LUDecompositionImpl.java	LUDecompositionImpl	col	int	NAME	0	2	NO_USE	0
1376	116	16	LUDecompositionImpl.java	LUDecompositionImpl	m	int	getColumnDimension()	0	0	NO_USE	0
1376	116	16	LUDecompositionImpl.java	LUDecompositionImpl	matrix	RealMatrix	PARAM_AS	1	1	NO_USE	0
1376	116	16	LUDecompositionImpl.java	LUDecompositionImpl	singularityThreshold	double	PARAM_AS	1	1	NO_USE	0
1376	116	16	LUDecompositionImpl.java	LUDecompositionImpl	THIS	LUDecompositionImpl	LITERAL	0	1	NO_USE	0
1377	123	12	LUDecompositionImpl.java	LUDecompositionImpl	sum	double	*	0	1	NO_USE	0
1377	123	12	LUDecompositionImpl.java	LUDecompositionImpl	max	int	NAME	0	2	NO_USE	1
1377	123	12	LUDecompositionImpl.java	LUDecompositionImpl	largest	double	abs()	0	1	NO_USE	0
1377	123	12	LUDecompositionImpl.java	LUDecompositionImpl	col	int	NAME	0	2	NO_USE	1
1377	123	12	LUDecompositionImpl.java	LUDecompositionImpl	m	int	getColumnDimension()	0	0	NO_USE	0
1377	123	12	LUDecompositionImpl.java	LUDecompositionImpl	matrix	RealMatrix	PARAM_AS	1	1	NO_USE	0
1377	123	12	LUDecompositionImpl.java	LUDecompositionImpl	singularityThreshold	double	PARAM_AS	1	1	NO_USE	1
1377	123	12	LUDecompositionImpl.java	LUDecompositionImpl	THIS	LUDecompositionImpl	LITERAL	0	1	NO_USE	1
1378	129	12	LUDecompositionImpl.java	LUDecompositionImpl	sum	double	*	0	1	NO_USE	0
1378	129	12	LUDecompositionImpl.java	LUDecompositionImpl	max	int	NAME	0	2	ARRIDX_USE	1
1378	129	12	LUDecompositionImpl.java	LUDecompositionImpl	largest	double	abs()	0	1	NO_USE	0
1378	129	12	LUDecompositionImpl.java	LUDecompositionImpl	col	int	NAME	0	2	ARRIDX_USE	1
1378	129	12	LUDecompositionImpl.java	LUDecompositionImpl	m	int	getColumnDimension()	0	0	<	0
1378	129	12	LUDecompositionImpl.java	LUDecompositionImpl	matrix	RealMatrix	PARAM_AS	1	1	NO_USE	0
1378	129	12	LUDecompositionImpl.java	LUDecompositionImpl	singularityThreshold	double	PARAM_AS	1	1	NO_USE	0
1378	129	12	LUDecompositionImpl.java	LUDecompositionImpl	THIS	LUDecompositionImpl	LITERAL	0	1	FIELD_USE	0
1379	154	8	LUDecompositionImpl.java	getL	THIS	LUDecompositionImpl	UNKNOWN_AS	0	2	FIELD_USE	1
1380	170	8	LUDecompositionImpl.java	getU	THIS	LUDecompositionImpl	UNKNOWN_AS	0	2	FIELD_USE	1
1381	185	8	LUDecompositionImpl.java	getP	THIS	LUDecompositionImpl	UNKNOWN_AS	0	2	FIELD_USE	1
1382	202	8	LUDecompositionImpl.java	getDeterminant	THIS	LUDecompositionImpl	UNKNOWN_AS	0	0	FIELD_USE	1
1383	97	8	ArrayFieldVector.java	ArrayFieldVector	d	T[]	PARAM_AS	1	1	NO_USE	1
1383	97	8	ArrayFieldVector.java	ArrayFieldVector	THIS	ArrayFieldVector	UNKNOWN_AS	0	0	NO_USE	0
1384	117	8	ArrayFieldVector.java	ArrayFieldVector	field	Field<T>	PARAM_AS	1	0	NO_USE	0
1384	117	8	ArrayFieldVector.java	ArrayFieldVector	d	T[]	PARAM_AS	1	1	NO_USE	1
1384	117	8	ArrayFieldVector.java	ArrayFieldVector	THIS	ArrayFieldVector	UNKNOWN_AS	0	0	NO_USE	0
1385	146	8	ArrayFieldVector.java	ArrayFieldVector	d	T[]	PARAM_AS	1	2	NO_USE	1
1385	146	8	ArrayFieldVector.java	ArrayFieldVector	copyArray	boolean	PARAM_AS	1	0	NO_USE	0
1385	146	8	ArrayFieldVector.java	ArrayFieldVector	THIS	ArrayFieldVector	UNKNOWN_AS	0	1	NO_USE	0
1386	149	8	ArrayFieldVector.java	ArrayFieldVector	d	T[]	PARAM_AS	1	2	NO_USE	1
1386	149	8	ArrayFieldVector.java	ArrayFieldVector	copyArray	boolean	PARAM_AS	1	0	NO_USE	0
1386	149	8	ArrayFieldVector.java	ArrayFieldVector	THIS	ArrayFieldVector	UNKNOWN_AS	0	1	FIELD_USE	1
1387	172	8	ArrayFieldVector.java	ArrayFieldVector	field	Field<T>	PARAM_AS	1	0	NO_USE	0
1387	172	8	ArrayFieldVector.java	ArrayFieldVector	d	T[]	PARAM_AS	1	1	NO_USE	1
1387	172	8	ArrayFieldVector.java	ArrayFieldVector	copyArray	boolean	PARAM_AS	1	0	NO_USE	0
1387	172	8	ArrayFieldVector.java	ArrayFieldVector	THIS	ArrayFieldVector	UNKNOWN_AS	0	0	NO_USE	0
1388	190	8	ArrayFieldVector.java	ArrayFieldVector	d	T[]	PARAM_AS	1	2	NO_USE	1
1388	190	8	ArrayFieldVector.java	ArrayFieldVector	pos	int	PARAM_AS	1	1	NO_USE	0
1388	190	8	ArrayFieldVector.java	ArrayFieldVector	size	int	PARAM_AS	1	1	NO_USE	0
1388	190	8	ArrayFieldVector.java	ArrayFieldVector	THIS	ArrayFieldVector	UNKNOWN_AS	0	1	NO_USE	0
1389	193	8	ArrayFieldVector.java	ArrayFieldVector	d	T[]	PARAM_AS	1	2	OTHER_USE	1
1389	193	8	ArrayFieldVector.java	ArrayFieldVector	pos	int	PARAM_AS	1	1	+	1
1389	193	8	ArrayFieldVector.java	ArrayFieldVector	size	int	PARAM_AS	1	1	+	1
1389	193	8	ArrayFieldVector.java	ArrayFieldVector	THIS	ArrayFieldVector	UNKNOWN_AS	0	1	FIELD_USE	1
1390	213	8	ArrayFieldVector.java	ArrayFieldVector	field	Field<T>	PARAM_AS	1	0	NO_USE	0
1390	213	8	ArrayFieldVector.java	ArrayFieldVector	d	T[]	PARAM_AS	1	2	NO_USE	1
1390	213	8	ArrayFieldVector.java	ArrayFieldVector	pos	int	PARAM_AS	1	1	NO_USE	0
1390	213	8	ArrayFieldVector.java	ArrayFieldVector	size	int	PARAM_AS	1	1	NO_USE	0
1390	213	8	ArrayFieldVector.java	ArrayFieldVector	THIS	ArrayFieldVector	UNKNOWN_AS	0	1	NO_USE	0
1391	216	8	ArrayFieldVector.java	ArrayFieldVector	field	Field<T>	PARAM_AS	1	0	NO_USE	0
1391	216	8	ArrayFieldVector.java	ArrayFieldVector	d	T[]	PARAM_AS	1	2	OTHER_USE	1
1391	216	8	ArrayFieldVector.java	ArrayFieldVector	pos	int	PARAM_AS	1	1	+	1
1391	216	8	ArrayFieldVector.java	ArrayFieldVector	size	int	PARAM_AS	1	1	+	1
1391	216	8	ArrayFieldVector.java	ArrayFieldVector	THIS	ArrayFieldVector	UNKNOWN_AS	0	1	FIELD_USE	1
1392	231	8	ArrayFieldVector.java	ArrayFieldVector	v	FieldVector<T>	PARAM_AS	1	1	NO_USE	1
1392	231	8	ArrayFieldVector.java	ArrayFieldVector	THIS	ArrayFieldVector	UNKNOWN_AS	0	0	NO_USE	0
1393	248	8	ArrayFieldVector.java	ArrayFieldVector	v	ArrayFieldVector<T>	PARAM_AS	1	1	NO_USE	1
1393	248	8	ArrayFieldVector.java	ArrayFieldVector	THIS	ArrayFieldVector	UNKNOWN_AS	0	0	NO_USE	0
1394	264	8	ArrayFieldVector.java	ArrayFieldVector	v	ArrayFieldVector<T>	PARAM_AS	1	1	NO_USE	1
1394	264	8	ArrayFieldVector.java	ArrayFieldVector	deep	boolean	PARAM_AS	1	0	NO_USE	0
1394	264	8	ArrayFieldVector.java	ArrayFieldVector	THIS	ArrayFieldVector	UNKNOWN_AS	0	0	NO_USE	0
1395	280	8	ArrayFieldVector.java	ArrayFieldVector	v1	ArrayFieldVector<T>	PARAM_AS	1	1	NO_USE	1
1395	280	8	ArrayFieldVector.java	ArrayFieldVector	v2	ArrayFieldVector<T>	PARAM_AS	1	1	NO_USE	1
1395	280	8	ArrayFieldVector.java	ArrayFieldVector	THIS	ArrayFieldVector	UNKNOWN_AS	0	0	NO_USE	0
1396	299	8	ArrayFieldVector.java	ArrayFieldVector	v1	ArrayFieldVector<T>	PARAM_AS	1	1	NO_USE	1
1396	299	8	ArrayFieldVector.java	ArrayFieldVector	v2	T[]	PARAM_AS	1	1	NO_USE	1
1396	299	8	ArrayFieldVector.java	ArrayFieldVector	THIS	ArrayFieldVector	UNKNOWN_AS	0	0	NO_USE	0
1397	318	8	ArrayFieldVector.java	ArrayFieldVector	v1	T[]	PARAM_AS	1	1	NO_USE	1
1397	318	8	ArrayFieldVector.java	ArrayFieldVector	v2	ArrayFieldVector<T>	PARAM_AS	1	1	NO_USE	1
1397	318	8	ArrayFieldVector.java	ArrayFieldVector	THIS	ArrayFieldVector	UNKNOWN_AS	0	0	NO_USE	0
1398	344	8	ArrayFieldVector.java	ArrayFieldVector	v1	T[]	PARAM_AS	1	2	NO_USE	1
1398	344	8	ArrayFieldVector.java	ArrayFieldVector	v2	T[]	PARAM_AS	1	2	NO_USE	1
1398	344	8	ArrayFieldVector.java	ArrayFieldVector	THIS	ArrayFieldVector	UNKNOWN_AS	0	2	NO_USE	0
1399	348	8	ArrayFieldVector.java	ArrayFieldVector	v1	T[]	PARAM_AS	1	2	NO_USE	1
1399	348	8	ArrayFieldVector.java	ArrayFieldVector	v2	T[]	PARAM_AS	1	2	NO_USE	1
1399	348	8	ArrayFieldVector.java	ArrayFieldVector	THIS	ArrayFieldVector	UNKNOWN_AS	0	2	FIELD_USE	1
1400	369	8	ArrayFieldVector.java	ArrayFieldVector	field	Field<T>	PARAM_AS	1	0	NO_USE	0
1400	369	8	ArrayFieldVector.java	ArrayFieldVector	v1	T[]	PARAM_AS	1	1	NO_USE	1
1400	369	8	ArrayFieldVector.java	ArrayFieldVector	v2	T[]	PARAM_AS	1	1	NO_USE	1
1400	369	8	ArrayFieldVector.java	ArrayFieldVector	THIS	ArrayFieldVector	UNKNOWN_AS	0	2	FIELD_USE	1
1401	857	8	ArrayFieldVector.java	checkVectorDimensions	n	int	PARAM_AS	1	1	OTHER_USE	1
1401	857	8	ArrayFieldVector.java	checkVectorDimensions	THIS	ArrayFieldVector	UNKNOWN_AS	0	2	FIELD_USE	1
1402	871	8	ArrayFieldVector.java	equals	other	Object	PARAM_AS	1	2	NO_USE	1
1402	871	8	ArrayFieldVector.java	equals	THIS	ArrayFieldVector	UNKNOWN_AS	0	4	NO_USE	1
1403	874	8	ArrayFieldVector.java	equals	other	Object	PARAM_AS	1	2	NO_USE	1
1403	874	8	ArrayFieldVector.java	equals	THIS	ArrayFieldVector	UNKNOWN_AS	0	4	NO_USE	0
1404	881	12	ArrayFieldVector.java	equals	rhs	FieldVector<T>	CAST	0	2	NO_USE	1
1404	881	12	ArrayFieldVector.java	equals	other	Object	PARAM_AS	1	2	NO_USE	0
1404	881	12	ArrayFieldVector.java	equals	THIS	ArrayFieldVector	UNKNOWN_AS	0	4	NO_USE	1
1405	886	16	ArrayFieldVector.java	equals	i	int	0	0	2	NO_USE	1
1405	886	16	ArrayFieldVector.java	equals	rhs	FieldVector<T>	CAST	0	2	NO_USE	1
1405	886	16	ArrayFieldVector.java	equals	other	Object	PARAM_AS	1	2	NO_USE	0
1405	886	16	ArrayFieldVector.java	equals	THIS	ArrayFieldVector	UNKNOWN_AS	0	4	NO_USE	1
1406	918	8	ArrayFieldVector.java	checkIndex	index	int	PARAM_AS	1	2	OTHER_USE	1
1406	918	8	ArrayFieldVector.java	checkIndex	THIS	ArrayFieldVector	UNKNOWN_AS	0	1	FIELD_USE	1
1407	191	16	OpenMapRealMatrix.java	multiply	rightKey	int	computeKey()	0	1	PARAM_USE	1
1407	191	16	OpenMapRealMatrix.java	multiply	j	int	0	0	0	PARAM_USE	0
1407	191	16	OpenMapRealMatrix.java	multiply	value	double	value()	0	0	*	0
1407	191	16	OpenMapRealMatrix.java	multiply	key	int	key()	0	0	NO_USE	0
1407	191	16	OpenMapRealMatrix.java	multiply	i	int	/	0	0	PARAM_USE	0
1407	191	16	OpenMapRealMatrix.java	multiply	k	int	%	0	0	NO_USE	0
1407	191	16	OpenMapRealMatrix.java	multiply	iterator	Iterator	iterator()	0	0	NO_USE	0
1407	191	16	OpenMapRealMatrix.java	multiply	outCols	int	getColumnDimension()	0	0	NO_USE	0
1407	191	16	OpenMapRealMatrix.java	multiply	out	OpenMapRealMatrix	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1407	191	16	OpenMapRealMatrix.java	multiply	m	OpenMapRealMatrix	PARAM_AS	1	1	OTHER_USE	1
1407	191	16	OpenMapRealMatrix.java	multiply	THIS	OpenMapRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	1
1408	195	20	OpenMapRealMatrix.java	multiply	outKey	int	computeKey()	0	0	PARAM_USE	0
1408	195	20	OpenMapRealMatrix.java	multiply	outValue	double	+	0	1	PARAM_USE	1
1408	195	20	OpenMapRealMatrix.java	multiply	rightKey	int	computeKey()	0	1	NO_USE	0
1408	195	20	OpenMapRealMatrix.java	multiply	j	int	0	0	0	NO_USE	0
1408	195	20	OpenMapRealMatrix.java	multiply	value	double	value()	0	0	NO_USE	0
1408	195	20	OpenMapRealMatrix.java	multiply	key	int	key()	0	0	NO_USE	0
1408	195	20	OpenMapRealMatrix.java	multiply	i	int	/	0	0	NO_USE	0
1408	195	20	OpenMapRealMatrix.java	multiply	k	int	%	0	0	NO_USE	0
1408	195	20	OpenMapRealMatrix.java	multiply	iterator	Iterator	iterator()	0	0	NO_USE	0
1408	195	20	OpenMapRealMatrix.java	multiply	outCols	int	getColumnDimension()	0	0	NO_USE	0
1408	195	20	OpenMapRealMatrix.java	multiply	out	OpenMapRealMatrix	CLASS_INSTANCE_CREATION	0	0	OTHER_USE	0
1408	195	20	OpenMapRealMatrix.java	multiply	m	OpenMapRealMatrix	PARAM_AS	1	1	NO_USE	0
1408	195	20	OpenMapRealMatrix.java	multiply	THIS	OpenMapRealMatrix	UNKNOWN_AS	0	1	FIELD_USE	0
1409	226	8	OpenMapRealMatrix.java	setEntry	row	int	PARAM_AS	1	0	PARAM_USE	0
1409	226	8	OpenMapRealMatrix.java	setEntry	column	int	PARAM_AS	1	0	PARAM_USE	0
1409	226	8	OpenMapRealMatrix.java	setEntry	value	double	PARAM_AS	1	1	PARAM_USE	1
1409	226	8	OpenMapRealMatrix.java	setEntry	THIS	OpenMapRealMatrix	UNKNOWN_AS	0	0	FIELD_USE	0
1410	240	8	OpenMapRealMatrix.java	addToEntry	key	int	computeKey()	0	0	PARAM_USE	0
1410	240	8	OpenMapRealMatrix.java	addToEntry	value	double	+	0	1	PARAM_USE	1
1410	240	8	OpenMapRealMatrix.java	addToEntry	row	int	PARAM_AS	1	0	NO_USE	0
1410	240	8	OpenMapRealMatrix.java	addToEntry	column	int	PARAM_AS	1	0	NO_USE	0
1410	240	8	OpenMapRealMatrix.java	addToEntry	increment	double	PARAM_AS	1	0	NO_USE	0
1410	240	8	OpenMapRealMatrix.java	addToEntry	THIS	OpenMapRealMatrix	UNKNOWN_AS	0	0	FIELD_USE	0
1411	254	8	OpenMapRealMatrix.java	multiplyEntry	key	int	computeKey()	0	0	PARAM_USE	0
1411	254	8	OpenMapRealMatrix.java	multiplyEntry	value	double	*	0	1	PARAM_USE	1
1411	254	8	OpenMapRealMatrix.java	multiplyEntry	row	int	PARAM_AS	1	0	NO_USE	0
1411	254	8	OpenMapRealMatrix.java	multiplyEntry	column	int	PARAM_AS	1	0	NO_USE	0
1411	254	8	OpenMapRealMatrix.java	multiplyEntry	factor	double	PARAM_AS	1	0	NO_USE	0
1411	254	8	OpenMapRealMatrix.java	multiplyEntry	THIS	OpenMapRealMatrix	UNKNOWN_AS	0	0	FIELD_USE	0
1412	81	12	SimpleVectorialPointChecker.java	converged	pi	double	ARRAY_ACCESS	0	0	NO_USE	0
1412	81	12	SimpleVectorialPointChecker.java	converged	ci	double	ARRAY_ACCESS	0	0	NO_USE	0
1412	81	12	SimpleVectorialPointChecker.java	converged	difference	double	abs()	0	2	NO_USE	1
1412	81	12	SimpleVectorialPointChecker.java	converged	size	double	max()	0	1	NO_USE	1
1412	81	12	SimpleVectorialPointChecker.java	converged	i	int	0	0	0	NO_USE	0
1412	81	12	SimpleVectorialPointChecker.java	converged	p	double[]	getPointRef()	0	0	NO_USE	0
1412	81	12	SimpleVectorialPointChecker.java	converged	c	double[]	getPointRef()	0	0	NO_USE	0
1412	81	12	SimpleVectorialPointChecker.java	converged	iteration	int	PARAM_AS	1	0	NO_USE	0
1412	81	12	SimpleVectorialPointChecker.java	converged	previous	VectorialPointValuePair	PARAM_AS	1	0	NO_USE	0
1412	81	12	SimpleVectorialPointChecker.java	converged	current	VectorialPointValuePair	PARAM_AS	1	0	NO_USE	0
1412	81	12	SimpleVectorialPointChecker.java	converged	THIS	SimpleVectorialPointChecker	UNKNOWN_AS	0	2	NO_USE	1
1413	74	8	BaseMultiStartMultivariateVectorialOptimizer.java	BaseMultiStartMultivariateVectorialOptimizer	optimizer	BaseMultivariateVectorialOptimizer<FUNC>	PARAM_AS	1	1	NO_USE	1
1413	74	8	BaseMultiStartMultivariateVectorialOptimizer.java	BaseMultiStartMultivariateVectorialOptimizer	starts	int	PARAM_AS	1	1	NO_USE	0
1413	74	8	BaseMultiStartMultivariateVectorialOptimizer.java	BaseMultiStartMultivariateVectorialOptimizer	generator	RandomVectorGenerator	PARAM_AS	1	1	NO_USE	1
1413	74	8	BaseMultiStartMultivariateVectorialOptimizer.java	BaseMultiStartMultivariateVectorialOptimizer	THIS	BaseMultiStartMultivariateVectorialOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1414	78	8	BaseMultiStartMultivariateVectorialOptimizer.java	BaseMultiStartMultivariateVectorialOptimizer	optimizer	BaseMultivariateVectorialOptimizer<FUNC>	PARAM_AS	1	1	NO_USE	0
1414	78	8	BaseMultiStartMultivariateVectorialOptimizer.java	BaseMultiStartMultivariateVectorialOptimizer	starts	int	PARAM_AS	1	1	OTHER_USE	1
1414	78	8	BaseMultiStartMultivariateVectorialOptimizer.java	BaseMultiStartMultivariateVectorialOptimizer	generator	RandomVectorGenerator	PARAM_AS	1	1	NO_USE	0
1414	78	8	BaseMultiStartMultivariateVectorialOptimizer.java	BaseMultiStartMultivariateVectorialOptimizer	THIS	BaseMultiStartMultivariateVectorialOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1415	115	8	BaseMultiStartMultivariateVectorialOptimizer.java	getOptima	THIS	BaseMultiStartMultivariateVectorialOptimizer	UNKNOWN_AS	0	1	FIELD_USE	1
1416	170	8	BaseMultiStartMultivariateVectorialOptimizer.java	optimize	lastException	MathUserException	NAME	0	0	OTHER_USE	0
1416	170	8	BaseMultiStartMultivariateVectorialOptimizer.java	optimize	maxEval	int	PARAM_AS	1	0	NO_USE	0
1416	170	8	BaseMultiStartMultivariateVectorialOptimizer.java	optimize	f	FUNC	PARAM_AS	1	0	NO_USE	0
1416	170	8	BaseMultiStartMultivariateVectorialOptimizer.java	optimize	target	double[]	PARAM_AS	1	0	NO_USE	0
1416	170	8	BaseMultiStartMultivariateVectorialOptimizer.java	optimize	weights	double[]	PARAM_AS	1	0	NO_USE	0
1416	170	8	BaseMultiStartMultivariateVectorialOptimizer.java	optimize	startPoint	double[]	PARAM_AS	1	0	NO_USE	0
1416	170	8	BaseMultiStartMultivariateVectorialOptimizer.java	optimize	THIS	BaseMultiStartMultivariateVectorialOptimizer	getEvaluations()	0	1	NO_USE	1
1417	92	8	BracketFinder.java	BracketFinder	growLimit	double	PARAM_AS	1	1	OTHER_USE	1
1417	92	8	BracketFinder.java	BracketFinder	maxEvaluations	int	PARAM_AS	1	1	NO_USE	0
1417	92	8	BracketFinder.java	BracketFinder	THIS	BracketFinder	UNKNOWN_AS	0	0	NO_USE	0
1418	95	8	BracketFinder.java	BracketFinder	growLimit	double	PARAM_AS	1	1	NO_USE	0
1418	95	8	BracketFinder.java	BracketFinder	maxEvaluations	int	PARAM_AS	1	1	OTHER_USE	1
1418	95	8	BracketFinder.java	BracketFinder	THIS	BracketFinder	UNKNOWN_AS	0	0	NO_USE	0
1419	121	8	BracketFinder.java	search	isMinim	boolean	==	0	4	NO_USE	1
1419	121	8	BracketFinder.java	search	fA	double	eval()	0	2	OTHER_USE	1
1419	121	8	BracketFinder.java	search	fB	double	eval()	0	4	OTHER_USE	1
1419	121	8	BracketFinder.java	search	func	UnivariateRealFunction	PARAM_AS	1	0	NO_USE	0
1419	121	8	BracketFinder.java	search	goal	GoalType	PARAM_AS	1	0	NO_USE	0
1419	121	8	BracketFinder.java	search	xA	double	PARAM_AS	1	0	OTHER_USE	0
1419	121	8	BracketFinder.java	search	xB	double	PARAM_AS	1	1	OTHER_USE	0
1419	121	8	BracketFinder.java	search	THIS	BracketFinder	UNKNOWN_AS	0	2	NO_USE	0
1420	148	12	BracketFinder.java	search	tmp1	double	*	0	0	NO_USE	0
1420	148	12	BracketFinder.java	search	tmp2	double	*	0	0	NO_USE	0
1420	148	12	BracketFinder.java	search	val	double	-	0	0	NO_USE	0
1420	148	12	BracketFinder.java	search	denom	double	OTHERS	0	0	NO_USE	0
1420	148	12	BracketFinder.java	search	w	double	-	0	5	PARAM_USE	1
1420	148	12	BracketFinder.java	search	wLim	double	+	0	3	-	0
1420	148	12	BracketFinder.java	search	fW	double	UNKNOWN_AS	0	6	<	0
1420	148	12	BracketFinder.java	search	isMinim	boolean	==	0	4	OTHER_USE	0
1420	148	12	BracketFinder.java	search	fA	double	NAME	0	2	NO_USE	0
1420	148	12	BracketFinder.java	search	fB	double	NAME	0	4	OTHER_USE	0
1420	148	12	BracketFinder.java	search	xC	double	+	0	3	+	1
1420	148	12	BracketFinder.java	search	fC	double	eval()	0	4	<	0
1420	148	12	BracketFinder.java	search	func	UnivariateRealFunction	PARAM_AS	1	0	PARAM_USE	0
1420	148	12	BracketFinder.java	search	goal	GoalType	PARAM_AS	1	0	NO_USE	0
1420	148	12	BracketFinder.java	search	xA	double	NAME	1	0	NO_USE	0
1420	148	12	BracketFinder.java	search	xB	double	NAME	1	1	OTHER_USE	1
1420	148	12	BracketFinder.java	search	THIS	BracketFinder	UNKNOWN_AS	0	2	CLALLER_USE	0
1421	150	16	BracketFinder.java	search	tmp1	double	*	0	0	NO_USE	0
1421	150	16	BracketFinder.java	search	tmp2	double	*	0	0	NO_USE	0
1421	150	16	BracketFinder.java	search	val	double	-	0	0	NO_USE	0
1421	150	16	BracketFinder.java	search	denom	double	OTHERS	0	0	NO_USE	0
1421	150	16	BracketFinder.java	search	w	double	-	0	5	OTHER_USE	0
1421	150	16	BracketFinder.java	search	wLim	double	+	0	3	NO_USE	0
1421	150	16	BracketFinder.java	search	fW	double	eval()	0	6	OTHER_USE	1
1421	150	16	BracketFinder.java	search	isMinim	boolean	==	0	4	OTHER_USE	1
1421	150	16	BracketFinder.java	search	fA	double	NAME	0	2	NO_USE	0
1421	150	16	BracketFinder.java	search	fB	double	NAME	0	4	OTHER_USE	0
1421	150	16	BracketFinder.java	search	xC	double	+	0	3	NO_USE	0
1421	150	16	BracketFinder.java	search	fC	double	eval()	0	4	NO_USE	1
1421	150	16	BracketFinder.java	search	func	UnivariateRealFunction	PARAM_AS	1	0	NO_USE	0
1421	150	16	BracketFinder.java	search	goal	GoalType	PARAM_AS	1	0	NO_USE	0
1421	150	16	BracketFinder.java	search	xA	double	NAME	1	0	NO_USE	0
1421	150	16	BracketFinder.java	search	xB	double	NAME	1	1	OTHER_USE	0
1421	150	16	BracketFinder.java	search	THIS	BracketFinder	UNKNOWN_AS	0	2	NO_USE	0
1422	158	23	BracketFinder.java	search	tmp1	double	*	0	0	NO_USE	0
1422	158	23	BracketFinder.java	search	tmp2	double	*	0	0	NO_USE	0
1422	158	23	BracketFinder.java	search	val	double	-	0	0	NO_USE	0
1422	158	23	BracketFinder.java	search	denom	double	OTHERS	0	0	NO_USE	0
1422	158	23	BracketFinder.java	search	w	double	-	0	5	OTHER_USE	0
1422	158	23	BracketFinder.java	search	wLim	double	+	0	3	NO_USE	0
1422	158	23	BracketFinder.java	search	fW	double	eval()	0	6	OTHER_USE	1
1422	158	23	BracketFinder.java	search	isMinim	boolean	==	0	4	NO_USE	1
1422	158	23	BracketFinder.java	search	fA	double	NAME	0	2	NO_USE	0
1422	158	23	BracketFinder.java	search	fB	double	NAME	0	4	NO_USE	1
1422	158	23	BracketFinder.java	search	xC	double	+	0	3	NO_USE	0
1422	158	23	BracketFinder.java	search	fC	double	eval()	0	4	NO_USE	0
1422	158	23	BracketFinder.java	search	func	UnivariateRealFunction	PARAM_AS	1	0	NO_USE	0
1422	158	23	BracketFinder.java	search	goal	GoalType	PARAM_AS	1	0	NO_USE	0
1422	158	23	BracketFinder.java	search	xA	double	NAME	1	0	NO_USE	0
1422	158	23	BracketFinder.java	search	xB	double	NAME	1	1	NO_USE	0
1422	158	23	BracketFinder.java	search	THIS	BracketFinder	UNKNOWN_AS	0	2	NO_USE	0
1423	167	19	BracketFinder.java	search	tmp1	double	*	0	0	NO_USE	0
1423	167	19	BracketFinder.java	search	tmp2	double	*	0	0	NO_USE	0
1423	167	19	BracketFinder.java	search	val	double	-	0	0	NO_USE	0
1423	167	19	BracketFinder.java	search	denom	double	OTHERS	0	0	NO_USE	0
1423	167	19	BracketFinder.java	search	w	double	+	0	5	PARAM_USE	1
1423	167	19	BracketFinder.java	search	wLim	double	+	0	3	OTHER_USE	1
1423	167	19	BracketFinder.java	search	fW	double	eval()	0	6	<	0
1423	167	19	BracketFinder.java	search	isMinim	boolean	==	0	4	OTHER_USE	0
1423	167	19	BracketFinder.java	search	fA	double	NAME	0	2	NO_USE	0
1423	167	19	BracketFinder.java	search	fB	double	NAME	0	4	NO_USE	0
1423	167	19	BracketFinder.java	search	xC	double	NAME	0	3	-	1
1423	167	19	BracketFinder.java	search	fC	double	NAME	0	4	<	0
1423	167	19	BracketFinder.java	search	func	UnivariateRealFunction	PARAM_AS	1	0	PARAM_USE	0
1423	167	19	BracketFinder.java	search	goal	GoalType	PARAM_AS	1	0	NO_USE	0
1423	167	19	BracketFinder.java	search	xA	double	NAME	1	0	NO_USE	0
1423	167	19	BracketFinder.java	search	xB	double	NAME	1	1	-	0
1423	167	19	BracketFinder.java	search	THIS	BracketFinder	UNKNOWN_AS	0	2	CLALLER_USE	0
1424	170	19	BracketFinder.java	search	tmp1	double	*	0	0	NO_USE	0
1424	170	19	BracketFinder.java	search	tmp2	double	*	0	0	NO_USE	0
1424	170	19	BracketFinder.java	search	val	double	-	0	0	NO_USE	0
1424	170	19	BracketFinder.java	search	denom	double	OTHERS	0	0	NO_USE	0
1424	170	19	BracketFinder.java	search	w	double	NAME	0	5	PARAM_USE	1
1424	170	19	BracketFinder.java	search	wLim	double	+	0	3	NO_USE	1
1424	170	19	BracketFinder.java	search	fW	double	eval()	0	6	<	0
1424	170	19	BracketFinder.java	search	isMinim	boolean	==	0	4	OTHER_USE	0
1424	170	19	BracketFinder.java	search	fA	double	NAME	0	2	NO_USE	0
1424	170	19	BracketFinder.java	search	fB	double	NAME	0	4	NO_USE	0
1424	170	19	BracketFinder.java	search	xC	double	NAME	0	3	OTHER_USE	1
1424	170	19	BracketFinder.java	search	fC	double	NAME	0	4	<	0
1424	170	19	BracketFinder.java	search	func	UnivariateRealFunction	PARAM_AS	1	0	PARAM_USE	0
1424	170	19	BracketFinder.java	search	goal	GoalType	PARAM_AS	1	0	NO_USE	0
1424	170	19	BracketFinder.java	search	xA	double	NAME	1	0	NO_USE	0
1424	170	19	BracketFinder.java	search	xB	double	NAME	1	1	-	0
1424	170	19	BracketFinder.java	search	THIS	BracketFinder	UNKNOWN_AS	0	2	CLALLER_USE	0
1425	172	16	BracketFinder.java	search	tmp1	double	*	0	0	NO_USE	0
1425	172	16	BracketFinder.java	search	tmp2	double	*	0	0	NO_USE	0
1425	172	16	BracketFinder.java	search	val	double	-	0	0	NO_USE	0
1425	172	16	BracketFinder.java	search	denom	double	OTHERS	0	0	NO_USE	0
1425	172	16	BracketFinder.java	search	w	double	NAME	0	5	OTHER_USE	0
1425	172	16	BracketFinder.java	search	wLim	double	+	0	3	NO_USE	0
1425	172	16	BracketFinder.java	search	fW	double	eval()	0	6	OTHER_USE	1
1425	172	16	BracketFinder.java	search	isMinim	boolean	==	0	4	NO_USE	1
1425	172	16	BracketFinder.java	search	fA	double	NAME	0	2	NO_USE	0
1425	172	16	BracketFinder.java	search	fB	double	NAME	0	4	NO_USE	0
1425	172	16	BracketFinder.java	search	xC	double	NAME	0	3	OTHER_USE	0
1425	172	16	BracketFinder.java	search	fC	double	NAME	0	4	OTHER_USE	1
1425	172	16	BracketFinder.java	search	func	UnivariateRealFunction	PARAM_AS	1	0	PARAM_USE	0
1425	172	16	BracketFinder.java	search	goal	GoalType	PARAM_AS	1	0	NO_USE	0
1425	172	16	BracketFinder.java	search	xA	double	NAME	1	0	NO_USE	0
1425	172	16	BracketFinder.java	search	xB	double	NAME	1	1	-	0
1425	172	16	BracketFinder.java	search	THIS	BracketFinder	UNKNOWN_AS	0	2	CLALLER_USE	0
1426	202	8	BracketFinder.java	search	isMinim	boolean	==	0	4	NO_USE	0
1426	202	8	BracketFinder.java	search	fA	double	NAME	0	2	NO_USE	0
1426	202	8	BracketFinder.java	search	fB	double	NAME	0	4	NO_USE	0
1426	202	8	BracketFinder.java	search	xC	double	NAME	0	3	NO_USE	0
1426	202	8	BracketFinder.java	search	fC	double	NAME	0	4	NO_USE	0
1426	202	8	BracketFinder.java	search	func	UnivariateRealFunction	PARAM_AS	1	0	NO_USE	0
1426	202	8	BracketFinder.java	search	goal	GoalType	PARAM_AS	1	0	NO_USE	0
1426	202	8	BracketFinder.java	search	xA	double	NAME	1	0	NO_USE	0
1426	202	8	BracketFinder.java	search	xB	double	NAME	1	1	NO_USE	0
1426	202	8	BracketFinder.java	search	THIS	BracketFinder	NAME	0	2	FIELD_USE	1
1427	76	8	MultiStartUnivariateRealOptimizer.java	MultiStartUnivariateRealOptimizer	optimizer	BaseUnivariateRealOptimizer<FUNC>	PARAM_AS	1	1	NO_USE	1
1427	76	8	MultiStartUnivariateRealOptimizer.java	MultiStartUnivariateRealOptimizer	starts	int	PARAM_AS	1	1	NO_USE	0
1427	76	8	MultiStartUnivariateRealOptimizer.java	MultiStartUnivariateRealOptimizer	generator	RandomGenerator	PARAM_AS	1	1	NO_USE	1
1427	76	8	MultiStartUnivariateRealOptimizer.java	MultiStartUnivariateRealOptimizer	THIS	MultiStartUnivariateRealOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1428	80	8	MultiStartUnivariateRealOptimizer.java	MultiStartUnivariateRealOptimizer	optimizer	BaseUnivariateRealOptimizer<FUNC>	PARAM_AS	1	1	NO_USE	0
1428	80	8	MultiStartUnivariateRealOptimizer.java	MultiStartUnivariateRealOptimizer	starts	int	PARAM_AS	1	1	OTHER_USE	1
1428	80	8	MultiStartUnivariateRealOptimizer.java	MultiStartUnivariateRealOptimizer	generator	RandomGenerator	PARAM_AS	1	1	NO_USE	0
1428	80	8	MultiStartUnivariateRealOptimizer.java	MultiStartUnivariateRealOptimizer	THIS	MultiStartUnivariateRealOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1429	141	8	MultiStartUnivariateRealOptimizer.java	getOptima	THIS	MultiStartUnivariateRealOptimizer	UNKNOWN_AS	0	1	FIELD_USE	1
1430	178	8	MultiStartUnivariateRealOptimizer.java	optimize	lastException	MathUserException	NAME	0	0	OTHER_USE	0
1430	178	8	MultiStartUnivariateRealOptimizer.java	optimize	maxEval	int	PARAM_AS	1	0	NO_USE	0
1430	178	8	MultiStartUnivariateRealOptimizer.java	optimize	f	FUNC	PARAM_AS	1	0	NO_USE	0
1430	178	8	MultiStartUnivariateRealOptimizer.java	optimize	goal	GoalType	PARAM_AS	1	0	NO_USE	0
1430	178	8	MultiStartUnivariateRealOptimizer.java	optimize	min	double	PARAM_AS	1	0	NO_USE	0
1430	178	8	MultiStartUnivariateRealOptimizer.java	optimize	max	double	PARAM_AS	1	0	NO_USE	0
1430	178	8	MultiStartUnivariateRealOptimizer.java	optimize	startValue	double	PARAM_AS	1	0	NO_USE	0
1430	178	8	MultiStartUnivariateRealOptimizer.java	optimize	THIS	MultiStartUnivariateRealOptimizer	getEvaluations()	0	1	NO_USE	1
1431	77	8	BrentOptimizer.java	BrentOptimizer	rel	double	PARAM_AS	1	1	OTHER_USE	1
1431	77	8	BrentOptimizer.java	BrentOptimizer	abs	double	PARAM_AS	1	1	NO_USE	0
1431	77	8	BrentOptimizer.java	BrentOptimizer	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1432	80	8	BrentOptimizer.java	BrentOptimizer	rel	double	PARAM_AS	1	1	NO_USE	0
1432	80	8	BrentOptimizer.java	BrentOptimizer	abs	double	PARAM_AS	1	1	OTHER_USE	1
1432	80	8	BrentOptimizer.java	BrentOptimizer	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1433	101	8	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	NO_USE	0
1433	101	8	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	OTHER_USE	1
1433	101	8	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1433	101	8	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	OTHER_USE	1
1433	101	8	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1433	101	8	BrentOptimizer.java	doOptimize	a	double	UNKNOWN_AS	0	2	NO_USE	0
1433	101	8	BrentOptimizer.java	doOptimize	b	double	UNKNOWN_AS	0	2	NO_USE	0
1433	101	8	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1434	115	8	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	NO_USE	1
1434	115	8	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	NO_USE	0
1434	115	8	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1434	115	8	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	NO_USE	0
1434	115	8	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1434	115	8	BrentOptimizer.java	doOptimize	a	double	NAME	0	2	NO_USE	0
1434	115	8	BrentOptimizer.java	doOptimize	b	double	NAME	0	2	NO_USE	0
1434	115	8	BrentOptimizer.java	doOptimize	x	double	NAME	0	9	NO_USE	0
1434	115	8	BrentOptimizer.java	doOptimize	v	double	NAME	0	2	NO_USE	0
1434	115	8	BrentOptimizer.java	doOptimize	w	double	NAME	0	2	NO_USE	0
1434	115	8	BrentOptimizer.java	doOptimize	d	double	0	0	2	NO_USE	0
1434	115	8	BrentOptimizer.java	doOptimize	e	double	0	0	1	NO_USE	0
1434	115	8	BrentOptimizer.java	doOptimize	fx	double	computeObjectiveValue()	0	1	-x	0
1434	115	8	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1435	133	12	BrentOptimizer.java	doOptimize	m	double	*	0	3	<=	0
1435	133	12	BrentOptimizer.java	doOptimize	tol1	double	+	0	2	>	0
1435	133	12	BrentOptimizer.java	doOptimize	tol2	double	*	0	2	<	0
1435	133	12	BrentOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	1
1435	133	12	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	!x	0
1435	133	12	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	NO_USE	0
1435	133	12	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1435	133	12	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	NO_USE	0
1435	133	12	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	!=	0
1435	133	12	BrentOptimizer.java	doOptimize	a	double	NAME	0	2	-	0
1435	133	12	BrentOptimizer.java	doOptimize	b	double	NAME	0	2	-	0
1435	133	12	BrentOptimizer.java	doOptimize	x	double	NAME	0	9	-	0
1435	133	12	BrentOptimizer.java	doOptimize	v	double	NAME	0	2	-	0
1435	133	12	BrentOptimizer.java	doOptimize	w	double	NAME	0	2	-	0
1435	133	12	BrentOptimizer.java	doOptimize	d	double	0	0	2	OTHER_USE	0
1435	133	12	BrentOptimizer.java	doOptimize	e	double	0	0	1	PARAM_USE	0
1435	133	12	BrentOptimizer.java	doOptimize	fx	double	PREFIX_EXPR	0	1	-	0
1435	133	12	BrentOptimizer.java	doOptimize	fv	double	NAME	0	1	-	0
1435	133	12	BrentOptimizer.java	doOptimize	fw	double	NAME	0	1	-	0
1435	133	12	BrentOptimizer.java	doOptimize	previous	UnivariateRealPointValuePair	NULL	0	1	PARAM_USE	0
1435	133	12	BrentOptimizer.java	doOptimize	current	UnivariateRealPointValuePair	CLASS_INSTANCE_CREATION	0	1	OTHER_USE	0
1435	133	12	BrentOptimizer.java	doOptimize	iter	int	0	0	1	PARAM_USE	0
1435	133	12	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	CLALLER_USE	0
1436	139	16	BrentOptimizer.java	doOptimize	p	double	0	0	3	-x	0
1436	139	16	BrentOptimizer.java	doOptimize	q	double	0	0	4	*	0
1436	139	16	BrentOptimizer.java	doOptimize	r	double	0	0	1	*	0
1436	139	16	BrentOptimizer.java	doOptimize	u	double	0	0	4	-	0
1436	139	16	BrentOptimizer.java	doOptimize	m	double	*	0	3	<=	0
1436	139	16	BrentOptimizer.java	doOptimize	tol1	double	+	0	2	OTHER_USE	1
1436	139	16	BrentOptimizer.java	doOptimize	tol2	double	*	0	2	<	0
1436	139	16	BrentOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	0
1436	139	16	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	NO_USE	0
1436	139	16	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	NO_USE	0
1436	139	16	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1436	139	16	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	NO_USE	0
1436	139	16	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1436	139	16	BrentOptimizer.java	doOptimize	a	double	NAME	0	2	-	0
1436	139	16	BrentOptimizer.java	doOptimize	b	double	NAME	0	2	-	0
1436	139	16	BrentOptimizer.java	doOptimize	x	double	NAME	0	9	-	0
1436	139	16	BrentOptimizer.java	doOptimize	v	double	NAME	0	2	-	0
1436	139	16	BrentOptimizer.java	doOptimize	w	double	NAME	0	2	-	0
1436	139	16	BrentOptimizer.java	doOptimize	d	double	0	0	2	OTHER_USE	0
1436	139	16	BrentOptimizer.java	doOptimize	e	double	0	0	1	OTHER_USE	1
1436	139	16	BrentOptimizer.java	doOptimize	fx	double	PREFIX_EXPR	0	1	-	0
1436	139	16	BrentOptimizer.java	doOptimize	fv	double	NAME	0	1	-	0
1436	139	16	BrentOptimizer.java	doOptimize	fw	double	NAME	0	1	-	0
1436	139	16	BrentOptimizer.java	doOptimize	previous	UnivariateRealPointValuePair	NULL	0	1	NO_USE	0
1436	139	16	BrentOptimizer.java	doOptimize	current	UnivariateRealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1436	139	16	BrentOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1436	139	16	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	p	double	-	0	3	-x	0
1437	145	20	BrentOptimizer.java	doOptimize	q	double	*	0	4	-x	1
1437	145	20	BrentOptimizer.java	doOptimize	r	double	*	0	1	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	u	double	0	0	4	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	m	double	*	0	3	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	tol1	double	+	0	2	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	tol2	double	*	0	2	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	a	double	NAME	0	2	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	b	double	NAME	0	2	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	x	double	NAME	0	9	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	v	double	NAME	0	2	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	w	double	NAME	0	2	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	d	double	0	0	2	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	e	double	0	0	1	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	fx	double	PREFIX_EXPR	0	1	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	fv	double	NAME	0	1	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	fw	double	NAME	0	1	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	previous	UnivariateRealPointValuePair	NULL	0	1	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	current	UnivariateRealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1437	145	20	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1438	154	20	BrentOptimizer.java	doOptimize	p	double	PREFIX_EXPR	0	3	/	1
1438	154	20	BrentOptimizer.java	doOptimize	q	double	PREFIX_EXPR	0	4	/	1
1438	154	20	BrentOptimizer.java	doOptimize	r	double	NAME	0	1	NO_USE	1
1438	154	20	BrentOptimizer.java	doOptimize	u	double	0	0	4	-	0
1438	154	20	BrentOptimizer.java	doOptimize	m	double	*	0	3	<=	0
1438	154	20	BrentOptimizer.java	doOptimize	tol1	double	+	0	2	OTHER_USE	0
1438	154	20	BrentOptimizer.java	doOptimize	tol2	double	*	0	2	<	0
1438	154	20	BrentOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	0
1438	154	20	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	NO_USE	0
1438	154	20	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	NO_USE	0
1438	154	20	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1438	154	20	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	NO_USE	0
1438	154	20	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1438	154	20	BrentOptimizer.java	doOptimize	a	double	NAME	0	2	-	1
1438	154	20	BrentOptimizer.java	doOptimize	b	double	NAME	0	2	-	1
1438	154	20	BrentOptimizer.java	doOptimize	x	double	NAME	0	9	+	1
1438	154	20	BrentOptimizer.java	doOptimize	v	double	NAME	0	2	NO_USE	0
1438	154	20	BrentOptimizer.java	doOptimize	w	double	NAME	0	2	NO_USE	0
1438	154	20	BrentOptimizer.java	doOptimize	d	double	0	0	2	+	0
1438	154	20	BrentOptimizer.java	doOptimize	e	double	NAME	0	1	*	0
1438	154	20	BrentOptimizer.java	doOptimize	fx	double	PREFIX_EXPR	0	1	NO_USE	0
1438	154	20	BrentOptimizer.java	doOptimize	fv	double	NAME	0	1	NO_USE	0
1438	154	20	BrentOptimizer.java	doOptimize	fw	double	NAME	0	1	NO_USE	0
1438	154	20	BrentOptimizer.java	doOptimize	previous	UnivariateRealPointValuePair	NULL	0	1	NO_USE	0
1438	154	20	BrentOptimizer.java	doOptimize	current	UnivariateRealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1438	154	20	BrentOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1438	154	20	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	p	double	PREFIX_EXPR	0	3	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	q	double	PREFIX_EXPR	0	4	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	r	double	NAME	0	1	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	u	double	+	0	4	NO_USE	1
1439	162	24	BrentOptimizer.java	doOptimize	m	double	*	0	3	<=	0
1439	162	24	BrentOptimizer.java	doOptimize	tol1	double	+	0	2	OTHER_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	tol2	double	*	0	2	NO_USE	1
1439	162	24	BrentOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	a	double	NAME	0	2	NO_USE	1
1439	162	24	BrentOptimizer.java	doOptimize	b	double	NAME	0	2	NO_USE	1
1439	162	24	BrentOptimizer.java	doOptimize	x	double	NAME	0	9	<=	0
1439	162	24	BrentOptimizer.java	doOptimize	v	double	NAME	0	2	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	w	double	NAME	0	2	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	d	double	/	0	2	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	e	double	NAME	0	1	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	fx	double	PREFIX_EXPR	0	1	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	fv	double	NAME	0	1	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	fw	double	NAME	0	1	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	previous	UnivariateRealPointValuePair	NULL	0	1	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	current	UnivariateRealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1439	162	24	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	p	double	PREFIX_EXPR	0	3	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	q	double	PREFIX_EXPR	0	4	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	r	double	NAME	0	1	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	u	double	+	0	4	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	m	double	*	0	3	NO_USE	1
1440	163	28	BrentOptimizer.java	doOptimize	tol1	double	+	0	2	OTHER_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	tol2	double	*	0	2	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	a	double	NAME	0	2	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	b	double	NAME	0	2	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	x	double	NAME	0	9	NO_USE	1
1440	163	28	BrentOptimizer.java	doOptimize	v	double	NAME	0	2	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	w	double	NAME	0	2	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	d	double	/	0	2	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	e	double	NAME	0	1	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	fx	double	PREFIX_EXPR	0	1	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	fv	double	NAME	0	1	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	fw	double	NAME	0	1	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	previous	UnivariateRealPointValuePair	NULL	0	1	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	current	UnivariateRealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1440	163	28	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	p	double	PREFIX_EXPR	0	3	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	q	double	PREFIX_EXPR	0	4	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	r	double	NAME	0	1	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	u	double	+	0	4	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	m	double	*	0	3	NO_USE	1
1441	171	24	BrentOptimizer.java	doOptimize	tol1	double	+	0	2	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	tol2	double	*	0	2	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	a	double	NAME	0	2	-	0
1441	171	24	BrentOptimizer.java	doOptimize	b	double	NAME	0	2	-	0
1441	171	24	BrentOptimizer.java	doOptimize	x	double	NAME	0	9	-	1
1441	171	24	BrentOptimizer.java	doOptimize	v	double	NAME	0	2	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	w	double	NAME	0	2	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	d	double	PREFIX_EXPR	0	2	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	e	double	NAME	0	1	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	fx	double	PREFIX_EXPR	0	1	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	fv	double	NAME	0	1	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	fw	double	NAME	0	1	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	previous	UnivariateRealPointValuePair	NULL	0	1	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	current	UnivariateRealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1441	171	24	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	p	double	PREFIX_EXPR	0	3	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	q	double	PREFIX_EXPR	0	4	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	r	double	NAME	0	1	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	u	double	+	0	4	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	m	double	*	0	3	NO_USE	1
1442	180	20	BrentOptimizer.java	doOptimize	tol1	double	+	0	2	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	tol2	double	*	0	2	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	a	double	NAME	0	2	-	0
1442	180	20	BrentOptimizer.java	doOptimize	b	double	NAME	0	2	-	0
1442	180	20	BrentOptimizer.java	doOptimize	x	double	NAME	0	9	-	1
1442	180	20	BrentOptimizer.java	doOptimize	v	double	NAME	0	2	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	w	double	NAME	0	2	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	d	double	*	0	2	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	e	double	-	0	1	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	fx	double	PREFIX_EXPR	0	1	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	fv	double	NAME	0	1	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	fw	double	NAME	0	1	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	previous	UnivariateRealPointValuePair	NULL	0	1	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	current	UnivariateRealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1442	180	20	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	p	double	PREFIX_EXPR	0	3	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	q	double	PREFIX_EXPR	0	4	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	r	double	NAME	0	1	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	u	double	+	0	4	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	m	double	*	0	3	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	tol1	double	+	0	2	+	1
1443	189	16	BrentOptimizer.java	doOptimize	tol2	double	*	0	2	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	a	double	NAME	0	2	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	b	double	NAME	0	2	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	x	double	NAME	0	9	+	0
1443	189	16	BrentOptimizer.java	doOptimize	v	double	NAME	0	2	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	w	double	NAME	0	2	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	d	double	*	0	2	>=	1
1443	189	16	BrentOptimizer.java	doOptimize	e	double	-	0	1	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	fx	double	PREFIX_EXPR	0	1	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	fv	double	NAME	0	1	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	fw	double	NAME	0	1	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	previous	UnivariateRealPointValuePair	NULL	0	1	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	current	UnivariateRealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1443	189	16	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	p	double	PREFIX_EXPR	0	3	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	q	double	PREFIX_EXPR	0	4	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	r	double	NAME	0	1	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	u	double	+	0	4	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	m	double	*	0	3	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	tol1	double	+	0	2	+	0
1444	190	20	BrentOptimizer.java	doOptimize	tol2	double	*	0	2	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	a	double	NAME	0	2	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	b	double	NAME	0	2	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	x	double	NAME	0	9	+	0
1444	190	20	BrentOptimizer.java	doOptimize	v	double	NAME	0	2	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	w	double	NAME	0	2	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	d	double	*	0	2	NO_USE	1
1444	190	20	BrentOptimizer.java	doOptimize	e	double	-	0	1	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	fx	double	PREFIX_EXPR	0	1	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	fv	double	NAME	0	1	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	fw	double	NAME	0	1	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	previous	UnivariateRealPointValuePair	NULL	0	1	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	current	UnivariateRealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1444	190	20	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	p	double	PREFIX_EXPR	0	3	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	q	double	PREFIX_EXPR	0	4	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	r	double	NAME	0	1	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	u	double	+	0	4	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	fu	double	computeObjectiveValue()	0	3	-x	0
1445	200	16	BrentOptimizer.java	doOptimize	m	double	*	0	3	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	tol1	double	+	0	2	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	tol2	double	*	0	2	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	NO_USE	1
1445	200	16	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	a	double	NAME	0	2	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	b	double	NAME	0	2	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	x	double	NAME	0	9	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	v	double	NAME	0	2	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	w	double	NAME	0	2	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	d	double	*	0	2	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	e	double	-	0	1	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	fx	double	PREFIX_EXPR	0	1	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	fv	double	NAME	0	1	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	fw	double	NAME	0	1	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	previous	UnivariateRealPointValuePair	NULL	0	1	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	current	UnivariateRealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1445	200	16	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	p	double	PREFIX_EXPR	0	3	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	q	double	PREFIX_EXPR	0	4	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	r	double	NAME	0	1	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	u	double	+	0	4	<	0
1446	205	16	BrentOptimizer.java	doOptimize	fu	double	PREFIX_EXPR	0	3	OTHER_USE	1
1446	205	16	BrentOptimizer.java	doOptimize	m	double	*	0	3	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	tol1	double	+	0	2	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	tol2	double	*	0	2	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	a	double	NAME	0	2	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	b	double	NAME	0	2	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	x	double	NAME	0	9	<	0
1446	205	16	BrentOptimizer.java	doOptimize	v	double	NAME	0	2	PARAM_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	w	double	NAME	0	2	OTHER_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	d	double	*	0	2	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	e	double	-	0	1	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	fx	double	PREFIX_EXPR	0	1	OTHER_USE	1
1446	205	16	BrentOptimizer.java	doOptimize	fv	double	NAME	0	1	<=	0
1446	205	16	BrentOptimizer.java	doOptimize	fw	double	NAME	0	1	OTHER_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	previous	UnivariateRealPointValuePair	NULL	0	1	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	current	UnivariateRealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1446	205	16	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	p	double	PREFIX_EXPR	0	3	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	q	double	PREFIX_EXPR	0	4	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	r	double	NAME	0	1	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	u	double	+	0	4	NO_USE	1
1447	206	20	BrentOptimizer.java	doOptimize	fu	double	PREFIX_EXPR	0	3	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	m	double	*	0	3	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	tol1	double	+	0	2	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	tol2	double	*	0	2	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	a	double	NAME	0	2	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	b	double	NAME	0	2	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	x	double	NAME	0	9	OTHER_USE	1
1447	206	20	BrentOptimizer.java	doOptimize	v	double	NAME	0	2	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	w	double	NAME	0	2	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	d	double	*	0	2	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	e	double	-	0	1	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	fx	double	PREFIX_EXPR	0	1	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	fv	double	NAME	0	1	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	fw	double	NAME	0	1	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	previous	UnivariateRealPointValuePair	NULL	0	1	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	current	UnivariateRealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1447	206	20	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	p	double	PREFIX_EXPR	0	3	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	q	double	PREFIX_EXPR	0	4	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	r	double	NAME	0	1	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	u	double	+	0	4	OTHER_USE	1
1448	218	20	BrentOptimizer.java	doOptimize	fu	double	PREFIX_EXPR	0	3	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	m	double	*	0	3	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	tol1	double	+	0	2	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	tol2	double	*	0	2	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	a	double	NAME	0	2	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	b	double	NAME	0	2	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	x	double	NAME	0	9	NO_USE	1
1448	218	20	BrentOptimizer.java	doOptimize	v	double	NAME	0	2	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	w	double	NAME	0	2	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	d	double	*	0	2	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	e	double	-	0	1	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	fx	double	NAME	0	1	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	fv	double	NAME	0	1	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	fw	double	NAME	0	1	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	previous	UnivariateRealPointValuePair	NULL	0	1	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	current	UnivariateRealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1448	218	20	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	p	double	PREFIX_EXPR	0	3	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	q	double	PREFIX_EXPR	0	4	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	r	double	NAME	0	1	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	u	double	+	0	4	OTHER_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	fu	double	PREFIX_EXPR	0	3	OTHER_USE	1
1449	223	20	BrentOptimizer.java	doOptimize	m	double	*	0	3	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	tol1	double	+	0	2	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	tol2	double	*	0	2	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	a	double	NAME	0	2	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	b	double	NAME	0	2	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	x	double	NAME	0	9	PARAM_USE	1
1449	223	20	BrentOptimizer.java	doOptimize	v	double	NAME	0	2	PARAM_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	w	double	NAME	0	2	OTHER_USE	1
1449	223	20	BrentOptimizer.java	doOptimize	d	double	*	0	2	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	e	double	-	0	1	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	fx	double	NAME	0	1	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	fv	double	NAME	0	1	<=	0
1449	223	20	BrentOptimizer.java	doOptimize	fw	double	NAME	0	1	OTHER_USE	1
1449	223	20	BrentOptimizer.java	doOptimize	previous	UnivariateRealPointValuePair	NULL	0	1	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	current	UnivariateRealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1449	223	20	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	p	double	PREFIX_EXPR	0	3	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	q	double	PREFIX_EXPR	0	4	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	r	double	NAME	0	1	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	u	double	+	0	4	OTHER_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	fu	double	PREFIX_EXPR	0	3	OTHER_USE	1
1450	229	27	BrentOptimizer.java	doOptimize	m	double	*	0	3	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	tol1	double	+	0	2	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	tol2	double	*	0	2	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	a	double	NAME	0	2	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	b	double	NAME	0	2	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	x	double	NAME	0	9	NO_USE	1
1450	229	27	BrentOptimizer.java	doOptimize	v	double	NAME	0	2	NO_USE	1
1450	229	27	BrentOptimizer.java	doOptimize	w	double	NAME	0	2	NO_USE	1
1450	229	27	BrentOptimizer.java	doOptimize	d	double	*	0	2	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	e	double	-	0	1	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	fx	double	NAME	0	1	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	fv	double	NAME	0	1	NO_USE	1
1450	229	27	BrentOptimizer.java	doOptimize	fw	double	NAME	0	1	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	previous	UnivariateRealPointValuePair	NULL	0	1	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	current	UnivariateRealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1450	229	27	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	p	double	PREFIX_EXPR	0	3	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	q	double	PREFIX_EXPR	0	4	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	r	double	NAME	0	1	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	u	double	+	0	4	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	fu	double	PREFIX_EXPR	0	3	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	m	double	*	0	3	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	tol1	double	+	0	2	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	tol2	double	*	0	2	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	CLALLER_USE	1
1451	241	16	BrentOptimizer.java	doOptimize	a	double	NAME	0	2	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	b	double	NAME	0	2	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	x	double	NAME	0	9	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	v	double	NAME	0	2	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	w	double	NAME	0	2	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	d	double	*	0	2	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	e	double	-	0	1	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	fx	double	NAME	0	1	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	fv	double	NAME	0	1	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	fw	double	NAME	0	1	NO_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	previous	UnivariateRealPointValuePair	NAME	0	1	PARAM_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	current	UnivariateRealPointValuePair	CLASS_INSTANCE_CREATION	0	1	PARAM_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	iter	int	0	0	1	PARAM_USE	0
1451	241	16	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	p	double	PREFIX_EXPR	0	3	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	q	double	PREFIX_EXPR	0	4	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	r	double	NAME	0	1	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	u	double	+	0	4	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	fu	double	PREFIX_EXPR	0	3	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	m	double	*	0	3	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	tol1	double	+	0	2	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	tol2	double	*	0	2	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	isMinim	boolean	==	0	2	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	lo	double	getMin()	0	1	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	mid	double	getStartValue()	0	0	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	hi	double	getMax()	0	1	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	checker	ConvergenceChecker<UnivariateRealPointValuePair>	getConvergenceChecker()	0	2	NO_USE	1
1452	242	20	BrentOptimizer.java	doOptimize	a	double	NAME	0	2	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	b	double	NAME	0	2	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	x	double	NAME	0	9	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	v	double	NAME	0	2	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	w	double	NAME	0	2	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	d	double	*	0	2	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	e	double	-	0	1	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	fx	double	NAME	0	1	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	fv	double	NAME	0	1	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	fw	double	NAME	0	1	NO_USE	0
1452	242	20	BrentOptimizer.java	doOptimize	previous	UnivariateRealPointValuePair	NAME	0	1	NO_USE	1
1452	242	20	BrentOptimizer.java	doOptimize	current	UnivariateRealPointValuePair	CLASS_INSTANCE_CREATION	0	1	RET_USE	1
1452	242	20	BrentOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	1
1452	242	20	BrentOptimizer.java	doOptimize	THIS	BrentOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1453	112	8	AbstractUnivariateRealOptimizer.java	optimize	maxEval	int	PARAM_AS	1	0	NO_USE	0
1453	112	8	AbstractUnivariateRealOptimizer.java	optimize	f	UnivariateRealFunction	PARAM_AS	1	1	NO_USE	1
1453	112	8	AbstractUnivariateRealOptimizer.java	optimize	goalType	GoalType	PARAM_AS	1	1	NO_USE	0
1453	112	8	AbstractUnivariateRealOptimizer.java	optimize	min	double	PARAM_AS	1	0	NO_USE	0
1453	112	8	AbstractUnivariateRealOptimizer.java	optimize	max	double	PARAM_AS	1	0	NO_USE	0
1453	112	8	AbstractUnivariateRealOptimizer.java	optimize	startValue	double	PARAM_AS	1	0	NO_USE	0
1453	112	8	AbstractUnivariateRealOptimizer.java	optimize	THIS	AbstractUnivariateRealOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1454	115	8	AbstractUnivariateRealOptimizer.java	optimize	maxEval	int	PARAM_AS	1	0	NO_USE	0
1454	115	8	AbstractUnivariateRealOptimizer.java	optimize	f	UnivariateRealFunction	PARAM_AS	1	1	NO_USE	0
1454	115	8	AbstractUnivariateRealOptimizer.java	optimize	goalType	GoalType	PARAM_AS	1	1	NO_USE	1
1454	115	8	AbstractUnivariateRealOptimizer.java	optimize	min	double	PARAM_AS	1	0	NO_USE	0
1454	115	8	AbstractUnivariateRealOptimizer.java	optimize	max	double	PARAM_AS	1	0	NO_USE	0
1454	115	8	AbstractUnivariateRealOptimizer.java	optimize	startValue	double	PARAM_AS	1	0	NO_USE	0
1454	115	8	AbstractUnivariateRealOptimizer.java	optimize	THIS	AbstractUnivariateRealOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1455	191	6	LinearConstraint.java	equals	other	Object	PARAM_AS	1	2	NO_USE	1
1455	191	6	LinearConstraint.java	equals	THIS	LinearConstraint	UNKNOWN_AS	0	1	NO_USE	1
1456	195	6	LinearConstraint.java	equals	other	Object	PARAM_AS	1	2	OTHER_USE	1
1456	195	6	LinearConstraint.java	equals	THIS	LinearConstraint	UNKNOWN_AS	0	1	FIELD_USE	0
1457	74	12	SimplexSolver.java	getPivotColumn	entry	double	getEntry()	0	1	OTHER_USE	1
1457	74	12	SimplexSolver.java	getPivotColumn	i	int	getNumObjectiveFunctions()	0	0	OTHER_USE	0
1457	74	12	SimplexSolver.java	getPivotColumn	minValue	double	0	0	1	NO_USE	1
1457	74	12	SimplexSolver.java	getPivotColumn	minPos	Integer	NULL	0	0	NO_USE	0
1457	74	12	SimplexSolver.java	getPivotColumn	tableau	SimplexTableau	PARAM_AS	1	0	NO_USE	0
1457	74	12	SimplexSolver.java	getPivotColumn	THIS	SimplexSolver	UNKNOWN_AS	0	1	NO_USE	1
1458	96	12	SimplexSolver.java	getPivotRow	rhs	double	getEntry()	0	0	/	0
1458	96	12	SimplexSolver.java	getPivotRow	entry	double	getEntry()	0	1	/	1
1458	96	12	SimplexSolver.java	getPivotRow	i	int	getNumObjectiveFunctions()	0	0	PARAM_USE	0
1458	96	12	SimplexSolver.java	getPivotRow	minRatioPositions	List<Integer>	CLASS_INSTANCE_CREATION	0	2	CLALLER_USE	0
1458	96	12	SimplexSolver.java	getPivotRow	minRatio	double	NAME	0	0	PARAM_USE	0
1458	96	12	SimplexSolver.java	getPivotRow	tableau	SimplexTableau	PARAM_AS	1	1	NO_USE	0
1458	96	12	SimplexSolver.java	getPivotRow	col	int	PARAM_AS	1	0	NO_USE	0
1458	96	12	SimplexSolver.java	getPivotRow	THIS	SimplexSolver	UNKNOWN_AS	0	2	FIELD_USE	1
1459	99	16	SimplexSolver.java	getPivotRow	ratio	double	/	0	0	OTHER_USE	0
1459	99	16	SimplexSolver.java	getPivotRow	cmp	int	compareTo()	0	2	<	1
1459	99	16	SimplexSolver.java	getPivotRow	rhs	double	getEntry()	0	0	NO_USE	0
1459	99	16	SimplexSolver.java	getPivotRow	entry	double	getEntry()	0	1	NO_USE	0
1459	99	16	SimplexSolver.java	getPivotRow	i	int	getNumObjectiveFunctions()	0	0	PARAM_USE	0
1459	99	16	SimplexSolver.java	getPivotRow	minRatioPositions	List<Integer>	CLASS_INSTANCE_CREATION	0	2	CLALLER_USE	0
1459	99	16	SimplexSolver.java	getPivotRow	minRatio	double	NAME	0	0	NO_USE	0
1459	99	16	SimplexSolver.java	getPivotRow	tableau	SimplexTableau	PARAM_AS	1	1	NO_USE	0
1459	99	16	SimplexSolver.java	getPivotRow	col	int	PARAM_AS	1	0	NO_USE	0
1459	99	16	SimplexSolver.java	getPivotRow	THIS	SimplexSolver	UNKNOWN_AS	0	2	NO_USE	0
1460	101	23	SimplexSolver.java	getPivotRow	ratio	double	/	0	0	OTHER_USE	0
1460	101	23	SimplexSolver.java	getPivotRow	cmp	int	compareTo()	0	2	NO_USE	1
1460	101	23	SimplexSolver.java	getPivotRow	rhs	double	getEntry()	0	0	NO_USE	0
1460	101	23	SimplexSolver.java	getPivotRow	entry	double	getEntry()	0	1	NO_USE	0
1460	101	23	SimplexSolver.java	getPivotRow	i	int	getNumObjectiveFunctions()	0	0	PARAM_USE	0
1460	101	23	SimplexSolver.java	getPivotRow	minRatioPositions	List<Integer>	CLASS_INSTANCE_CREATION	0	2	CLALLER_USE	0
1460	101	23	SimplexSolver.java	getPivotRow	minRatio	double	NAME	0	0	NO_USE	0
1460	101	23	SimplexSolver.java	getPivotRow	tableau	SimplexTableau	PARAM_AS	1	1	NO_USE	0
1460	101	23	SimplexSolver.java	getPivotRow	col	int	PARAM_AS	1	0	NO_USE	0
1460	101	23	SimplexSolver.java	getPivotRow	THIS	SimplexSolver	UNKNOWN_AS	0	2	NO_USE	0
1461	109	8	SimplexSolver.java	getPivotRow	minRatioPositions	List<Integer>	CLASS_INSTANCE_CREATION	0	2	CLALLER_USE	1
1461	109	8	SimplexSolver.java	getPivotRow	minRatio	double	NAME	0	0	NO_USE	0
1461	109	8	SimplexSolver.java	getPivotRow	tableau	SimplexTableau	PARAM_AS	1	1	CLALLER_USE	0
1461	109	8	SimplexSolver.java	getPivotRow	col	int	PARAM_AS	1	0	NO_USE	0
1461	109	8	SimplexSolver.java	getPivotRow	THIS	SimplexSolver	UNKNOWN_AS	0	2	FIELD_USE	0
1462	111	15	SimplexSolver.java	getPivotRow	minRatioPositions	List<Integer>	CLASS_INSTANCE_CREATION	0	2	OTHER_USE	1
1462	111	15	SimplexSolver.java	getPivotRow	minRatio	double	NAME	0	0	NO_USE	0
1462	111	15	SimplexSolver.java	getPivotRow	tableau	SimplexTableau	PARAM_AS	1	1	CLALLER_USE	0
1462	111	15	SimplexSolver.java	getPivotRow	col	int	PARAM_AS	1	0	NO_USE	0
1462	111	15	SimplexSolver.java	getPivotRow	THIS	SimplexSolver	UNKNOWN_AS	0	2	FIELD_USE	0
1463	118	14	SimplexSolver.java	getPivotRow	column	int	+	0	1	NO_USE	1
1463	118	14	SimplexSolver.java	getPivotRow	entry	double	getEntry()	0	1	NO_USE	1
1463	118	14	SimplexSolver.java	getPivotRow	i	int	0	0	0	NO_USE	0
1463	118	14	SimplexSolver.java	getPivotRow	minRatioPositions	List<Integer>	CLASS_INSTANCE_CREATION	0	2	NO_USE	0
1463	118	14	SimplexSolver.java	getPivotRow	minRatio	double	NAME	0	0	NO_USE	0
1463	118	14	SimplexSolver.java	getPivotRow	tableau	SimplexTableau	PARAM_AS	1	1	NO_USE	1
1463	118	14	SimplexSolver.java	getPivotRow	col	int	PARAM_AS	1	0	NO_USE	0
1463	118	14	SimplexSolver.java	getPivotRow	THIS	SimplexSolver	UNKNOWN_AS	0	2	NO_USE	1
1464	141	8	SimplexSolver.java	doIteration	pivotCol	Integer	getPivotColumn()	0	0	NO_USE	0
1464	141	8	SimplexSolver.java	doIteration	pivotRow	Integer	getPivotRow()	0	2	NO_USE	1
1464	141	8	SimplexSolver.java	doIteration	tableau	SimplexTableau	PARAM_AS	1	0	NO_USE	0
1464	141	8	SimplexSolver.java	doIteration	THIS	SimplexSolver	UNKNOWN_AS	0	0	NO_USE	0
1465	151	12	SimplexSolver.java	doIteration	i	int	0	0	1	PARAM_USE	1
1465	151	12	SimplexSolver.java	doIteration	pivotCol	Integer	getPivotColumn()	0	0	PARAM_USE	0
1465	151	12	SimplexSolver.java	doIteration	pivotRow	Integer	getPivotRow()	0	2	PARAM_USE	1
1465	151	12	SimplexSolver.java	doIteration	pivotVal	double	getEntry()	0	0	NO_USE	0
1465	151	12	SimplexSolver.java	doIteration	tableau	SimplexTableau	PARAM_AS	1	0	CLALLER_USE	0
1465	151	12	SimplexSolver.java	doIteration	THIS	SimplexSolver	UNKNOWN_AS	0	0	NO_USE	0
1466	168	8	SimplexSolver.java	solvePhase1	tableau	SimplexTableau	PARAM_AS	1	3	NO_USE	1
1466	168	8	SimplexSolver.java	solvePhase1	THIS	SimplexSolver	UNKNOWN_AS	0	1	NO_USE	0
1467	177	8	SimplexSolver.java	solvePhase1	tableau	SimplexTableau	PARAM_AS	1	3	NO_USE	1
1467	177	8	SimplexSolver.java	solvePhase1	THIS	SimplexSolver	UNKNOWN_AS	0	1	NO_USE	1
1468	98	8	AbstractLinearOptimizer.java	incrementIterationsCounter	THIS	AbstractLinearOptimizer	UNKNOWN_AS	0	2	FIELD_USE	1
1469	108	6	LinearObjectiveFunction.java	equals	other	Object	PARAM_AS	1	2	NO_USE	1
1469	108	6	LinearObjectiveFunction.java	equals	THIS	LinearObjectiveFunction	UNKNOWN_AS	0	1	NO_USE	1
1470	112	6	LinearObjectiveFunction.java	equals	other	Object	PARAM_AS	1	2	OTHER_USE	1
1470	112	6	LinearObjectiveFunction.java	equals	THIS	LinearObjectiveFunction	UNKNOWN_AS	0	1	FIELD_USE	0
1471	154	6	SimplexTableau.java	initializeColumnLabels	THIS	SimplexTableau	UNKNOWN_AS	0	2	FIELD_USE	1
1472	161	6	SimplexTableau.java	initializeColumnLabels	THIS	SimplexTableau	UNKNOWN_AS	0	2	FIELD_USE	1
1473	187	8	SimplexTableau.java	createTableau	width	int	+	0	0	NO_USE	0
1473	187	8	SimplexTableau.java	createTableau	height	int	+	0	0	NO_USE	0
1473	187	8	SimplexTableau.java	createTableau	matrix	Array2DRowRealMatrix	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1473	187	8	SimplexTableau.java	createTableau	maximize	boolean	PARAM_AS	1	0	NO_USE	0
1473	187	8	SimplexTableau.java	createTableau	THIS	SimplexTableau	UNKNOWN_AS	0	7	NO_USE	1
1474	198	8	SimplexTableau.java	createTableau	width	int	+	0	0	NO_USE	0
1474	198	8	SimplexTableau.java	createTableau	height	int	+	0	0	NO_USE	0
1474	198	8	SimplexTableau.java	createTableau	matrix	Array2DRowRealMatrix	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1474	198	8	SimplexTableau.java	createTableau	zIndex	int	OTHERS	0	0	PARAM_USE	0
1474	198	8	SimplexTableau.java	createTableau	objectiveCoefficients	RealVector	OTHERS	0	0	PARAM_USE	0
1474	198	8	SimplexTableau.java	createTableau	maximize	boolean	PARAM_AS	1	0	NO_USE	0
1474	198	8	SimplexTableau.java	createTableau	THIS	SimplexTableau	UNKNOWN_AS	0	7	CLALLER_USE	1
1475	214	12	SimplexTableau.java	createTableau	constraint	LinearConstraint	get()	0	4	CLALLER_USE	0
1475	214	12	SimplexTableau.java	createTableau	row	int	+	0	0	PARAM_USE	0
1475	214	12	SimplexTableau.java	createTableau	i	int	0	0	0	NO_USE	0
1475	214	12	SimplexTableau.java	createTableau	width	int	+	0	0	NO_USE	0
1475	214	12	SimplexTableau.java	createTableau	height	int	+	0	0	NO_USE	0
1475	214	12	SimplexTableau.java	createTableau	matrix	Array2DRowRealMatrix	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1475	214	12	SimplexTableau.java	createTableau	zIndex	int	OTHERS	0	0	NO_USE	0
1475	214	12	SimplexTableau.java	createTableau	objectiveCoefficients	RealVector	OTHERS	0	0	NO_USE	0
1475	214	12	SimplexTableau.java	createTableau	slackVar	int	0	0	0	NO_USE	0
1475	214	12	SimplexTableau.java	createTableau	artificialVar	int	0	0	0	NO_USE	0
1475	214	12	SimplexTableau.java	createTableau	maximize	boolean	PARAM_AS	1	0	NO_USE	0
1475	214	12	SimplexTableau.java	createTableau	THIS	SimplexTableau	UNKNOWN_AS	0	7	CLALLER_USE	1
1476	223	12	SimplexTableau.java	createTableau	constraint	LinearConstraint	get()	0	4	CLALLER_USE	1
1476	223	12	SimplexTableau.java	createTableau	row	int	+	0	0	PARAM_USE	0
1476	223	12	SimplexTableau.java	createTableau	i	int	0	0	0	NO_USE	0
1476	223	12	SimplexTableau.java	createTableau	width	int	+	0	0	NO_USE	0
1476	223	12	SimplexTableau.java	createTableau	height	int	+	0	0	NO_USE	0
1476	223	12	SimplexTableau.java	createTableau	matrix	Array2DRowRealMatrix	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1476	223	12	SimplexTableau.java	createTableau	zIndex	int	OTHERS	0	0	NO_USE	0
1476	223	12	SimplexTableau.java	createTableau	objectiveCoefficients	RealVector	OTHERS	0	0	NO_USE	0
1476	223	12	SimplexTableau.java	createTableau	slackVar	int	0	0	0	x++	0
1476	223	12	SimplexTableau.java	createTableau	artificialVar	int	0	0	0	NO_USE	0
1476	223	12	SimplexTableau.java	createTableau	maximize	boolean	PARAM_AS	1	0	NO_USE	0
1476	223	12	SimplexTableau.java	createTableau	THIS	SimplexTableau	UNKNOWN_AS	0	7	CLALLER_USE	1
1477	225	19	SimplexTableau.java	createTableau	constraint	LinearConstraint	get()	0	4	NO_USE	1
1477	225	19	SimplexTableau.java	createTableau	row	int	+	0	0	PARAM_USE	0
1477	225	19	SimplexTableau.java	createTableau	i	int	0	0	0	NO_USE	0
1477	225	19	SimplexTableau.java	createTableau	width	int	+	0	0	NO_USE	0
1477	225	19	SimplexTableau.java	createTableau	height	int	+	0	0	NO_USE	0
1477	225	19	SimplexTableau.java	createTableau	matrix	Array2DRowRealMatrix	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1477	225	19	SimplexTableau.java	createTableau	zIndex	int	OTHERS	0	0	NO_USE	0
1477	225	19	SimplexTableau.java	createTableau	objectiveCoefficients	RealVector	OTHERS	0	0	NO_USE	0
1477	225	19	SimplexTableau.java	createTableau	slackVar	int	0	0	0	x++	0
1477	225	19	SimplexTableau.java	createTableau	artificialVar	int	0	0	0	NO_USE	0
1477	225	19	SimplexTableau.java	createTableau	maximize	boolean	PARAM_AS	1	0	NO_USE	0
1477	225	19	SimplexTableau.java	createTableau	THIS	SimplexTableau	UNKNOWN_AS	0	7	CLALLER_USE	1
1478	230	12	SimplexTableau.java	createTableau	constraint	LinearConstraint	get()	0	4	NO_USE	1
1478	230	12	SimplexTableau.java	createTableau	row	int	+	0	0	PARAM_USE	0
1478	230	12	SimplexTableau.java	createTableau	i	int	0	0	0	NO_USE	0
1478	230	12	SimplexTableau.java	createTableau	width	int	+	0	0	NO_USE	0
1478	230	12	SimplexTableau.java	createTableau	height	int	+	0	0	NO_USE	0
1478	230	12	SimplexTableau.java	createTableau	matrix	Array2DRowRealMatrix	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1478	230	12	SimplexTableau.java	createTableau	zIndex	int	OTHERS	0	0	NO_USE	0
1478	230	12	SimplexTableau.java	createTableau	objectiveCoefficients	RealVector	OTHERS	0	0	NO_USE	0
1478	230	12	SimplexTableau.java	createTableau	slackVar	int	0	0	0	NO_USE	0
1478	230	12	SimplexTableau.java	createTableau	artificialVar	int	0	0	0	+	0
1478	230	12	SimplexTableau.java	createTableau	maximize	boolean	PARAM_AS	1	0	NO_USE	0
1478	230	12	SimplexTableau.java	createTableau	THIS	SimplexTableau	UNKNOWN_AS	0	7	CLALLER_USE	1
1479	260	8	SimplexTableau.java	normalize	constraint	LinearConstraint	PARAM_AS	1	1	CLALLER_USE	1
1479	260	8	SimplexTableau.java	normalize	THIS	SimplexTableau	UNKNOWN_AS	0	0	NO_USE	0
1480	285	12	SimplexTableau.java	getConstraintTypeCounts	count	int	0	0	0	++x	0
1480	285	12	SimplexTableau.java	getConstraintTypeCounts	relationship	Relationship	PARAM_AS	1	1	NO_USE	1
1480	285	12	SimplexTableau.java	getConstraintTypeCounts	THIS	SimplexTableau	UNKNOWN_AS	0	0	NO_USE	1
1481	314	12	SimplexTableau.java	getBasicRow	entry	double	getEntry()	0	2	PARAM_USE	1
1481	314	12	SimplexTableau.java	getBasicRow	i	int	0	0	0	OTHER_USE	0
1481	314	12	SimplexTableau.java	getBasicRow	row	Integer	NULL	0	1	NO_USE	1
1481	314	12	SimplexTableau.java	getBasicRow	col	int	PARAM_AS	1	0	NO_USE	0
1481	314	12	SimplexTableau.java	getBasicRow	THIS	SimplexTableau	UNKNOWN_AS	0	2	FIELD_USE	1
1482	316	19	SimplexTableau.java	getBasicRow	entry	double	getEntry()	0	2	NO_USE	1
1482	316	19	SimplexTableau.java	getBasicRow	i	int	0	0	0	NO_USE	0
1482	316	19	SimplexTableau.java	getBasicRow	row	Integer	NAME	0	1	NO_USE	0
1482	316	19	SimplexTableau.java	getBasicRow	col	int	PARAM_AS	1	0	NO_USE	0
1482	316	19	SimplexTableau.java	getBasicRow	THIS	SimplexTableau	UNKNOWN_AS	0	2	NO_USE	1
1483	328	8	SimplexTableau.java	dropPhase1Objective	THIS	SimplexTableau	UNKNOWN_AS	0	3	NO_USE	1
1484	338	12	SimplexTableau.java	dropPhase1Objective	entry	double	getEntry()	0	1	NO_USE	1
1484	338	12	SimplexTableau.java	dropPhase1Objective	i	int	getNumObjectiveFunctions()	0	0	PARAM_USE	0
1484	338	12	SimplexTableau.java	dropPhase1Objective	columnsToDrop	List<Integer>	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	0
1484	338	12	SimplexTableau.java	dropPhase1Objective	THIS	SimplexTableau	UNKNOWN_AS	0	3	NO_USE	1
1485	346	10	SimplexTableau.java	dropPhase1Objective	col	int	+	0	1	PARAM_USE	1
1485	346	10	SimplexTableau.java	dropPhase1Objective	i	int	0	0	0	NO_USE	0
1485	346	10	SimplexTableau.java	dropPhase1Objective	columnsToDrop	List<Integer>	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	0
1485	346	10	SimplexTableau.java	dropPhase1Objective	THIS	SimplexTableau	UNKNOWN_AS	0	3	NO_USE	1
1486	355	12	SimplexTableau.java	dropPhase1Objective	j	int	0	0	1	PARAM_USE	1
1486	355	12	SimplexTableau.java	dropPhase1Objective	col	int	0	0	0	x++	0
1486	355	12	SimplexTableau.java	dropPhase1Objective	i	int	1	0	0	-	0
1486	355	12	SimplexTableau.java	dropPhase1Objective	columnsToDrop	List<Integer>	CLASS_INSTANCE_CREATION	0	1	NO_USE	1
1486	355	12	SimplexTableau.java	dropPhase1Objective	matrix	double[][]	ARRAY_CREATION	0	0	ARR_USE	0
1486	355	12	SimplexTableau.java	dropPhase1Objective	THIS	SimplexTableau	UNKNOWN_AS	0	3	FIELD_USE	0
1487	384	12	SimplexTableau.java	isOptimal	entry	double	getEntry()	0	1	NO_USE	1
1487	384	12	SimplexTableau.java	isOptimal	i	int	getNumObjectiveFunctions()	0	0	NO_USE	0
1487	384	12	SimplexTableau.java	isOptimal	THIS	SimplexTableau	UNKNOWN_AS	0	1	NO_USE	1
1488	405	10	SimplexTableau.java	getSolution	colIndex	int	indexOf()	0	1	NO_USE	1
1488	405	10	SimplexTableau.java	getSolution	i	int	0	0	0	ARRIDX_USE	0
1488	405	10	SimplexTableau.java	getSolution	negativeVarColumn	int	indexOf()	0	0	NO_USE	0
1488	405	10	SimplexTableau.java	getSolution	negativeVarBasicRow	Integer	OTHERS	0	0	NO_USE	0
1488	405	10	SimplexTableau.java	getSolution	mostNegative	double	OTHERS	0	0	NO_USE	0
1488	405	10	SimplexTableau.java	getSolution	basicRows	Set<Integer>	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1488	405	10	SimplexTableau.java	getSolution	coefficients	double[]	ARRAY_CREATION	0	0	ARR_USE	0
1488	405	10	SimplexTableau.java	getSolution	THIS	SimplexTableau	UNKNOWN_AS	0	0	NO_USE	0
1489	410	10	SimplexTableau.java	getSolution	colIndex	int	indexOf()	0	1	NO_USE	0
1489	410	10	SimplexTableau.java	getSolution	basicRow	Integer	getBasicRow()	0	1	PARAM_USE	1
1489	410	10	SimplexTableau.java	getSolution	i	int	0	0	0	ARRIDX_USE	0
1489	410	10	SimplexTableau.java	getSolution	negativeVarColumn	int	indexOf()	0	0	NO_USE	0
1489	410	10	SimplexTableau.java	getSolution	negativeVarBasicRow	Integer	OTHERS	0	0	NO_USE	0
1489	410	10	SimplexTableau.java	getSolution	mostNegative	double	OTHERS	0	0	OTHER_USE	0
1489	410	10	SimplexTableau.java	getSolution	basicRows	Set<Integer>	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	1
1489	410	10	SimplexTableau.java	getSolution	coefficients	double[]	0	0	0	ARR_USE	0
1489	410	10	SimplexTableau.java	getSolution	THIS	SimplexTableau	UNKNOWN_AS	0	0	FIELD_USE	0
1490	565	6	SimplexTableau.java	equals	other	Object	PARAM_AS	1	2	NO_USE	1
1490	565	6	SimplexTableau.java	equals	THIS	SimplexTableau	UNKNOWN_AS	0	1	NO_USE	1
1491	569	6	SimplexTableau.java	equals	other	Object	PARAM_AS	1	2	OTHER_USE	1
1491	569	6	SimplexTableau.java	equals	THIS	SimplexTableau	UNKNOWN_AS	0	1	FIELD_USE	0
1492	113	8	LeastSquaresConverter.java	LeastSquaresConverter	function	MultivariateVectorialFunction	PARAM_AS	1	0	NO_USE	0
1492	113	8	LeastSquaresConverter.java	LeastSquaresConverter	observations	double[]	PARAM_AS	1	1	OTHER_USE	1
1492	113	8	LeastSquaresConverter.java	LeastSquaresConverter	weights	double[]	PARAM_AS	1	1	OTHER_USE	1
1492	113	8	LeastSquaresConverter.java	LeastSquaresConverter	THIS	LeastSquaresConverter	UNKNOWN_AS	0	2	FIELD_USE	1
1493	143	8	LeastSquaresConverter.java	LeastSquaresConverter	function	MultivariateVectorialFunction	PARAM_AS	1	0	NO_USE	0
1493	143	8	LeastSquaresConverter.java	LeastSquaresConverter	observations	double[]	PARAM_AS	1	1	OTHER_USE	1
1493	143	8	LeastSquaresConverter.java	LeastSquaresConverter	scale	RealMatrix	PARAM_AS	1	1	CLALLER_USE	1
1493	143	8	LeastSquaresConverter.java	LeastSquaresConverter	THIS	LeastSquaresConverter	UNKNOWN_AS	0	1	FIELD_USE	1
1494	156	8	LeastSquaresConverter.java	value	residuals	double[]	value()	0	1	OTHER_USE	1
1494	156	8	LeastSquaresConverter.java	value	point	double[]	PARAM_AS	1	0	NO_USE	0
1494	156	8	LeastSquaresConverter.java	value	THIS	LeastSquaresConverter	UNKNOWN_AS	0	5	FIELD_USE	1
1495	165	8	LeastSquaresConverter.java	value	residuals	double[]	ARRAY_ACCESS	0	1	OTHER_USE	0
1495	165	8	LeastSquaresConverter.java	value	sumSquares	double	0	0	0	NO_USE	0
1495	165	8	LeastSquaresConverter.java	value	point	double[]	PARAM_AS	1	0	NO_USE	0
1495	165	8	LeastSquaresConverter.java	value	THIS	LeastSquaresConverter	UNKNOWN_AS	0	5	FIELD_USE	1
1496	170	15	LeastSquaresConverter.java	value	residuals	double[]	ARRAY_ACCESS	0	1	PARAM_USE	0
1496	170	15	LeastSquaresConverter.java	value	sumSquares	double	*	0	0	NO_USE	0
1496	170	15	LeastSquaresConverter.java	value	point	double[]	PARAM_AS	1	0	NO_USE	0
1496	170	15	LeastSquaresConverter.java	value	THIS	LeastSquaresConverter	UNKNOWN_AS	0	5	FIELD_USE	1
1497	83	12	SimpleVectorialValueChecker.java	converged	pi	double	ARRAY_ACCESS	0	0	NO_USE	0
1497	83	12	SimpleVectorialValueChecker.java	converged	ci	double	ARRAY_ACCESS	0	0	NO_USE	0
1497	83	12	SimpleVectorialValueChecker.java	converged	difference	double	abs()	0	2	NO_USE	1
1497	83	12	SimpleVectorialValueChecker.java	converged	size	double	max()	0	1	NO_USE	1
1497	83	12	SimpleVectorialValueChecker.java	converged	i	int	0	0	0	NO_USE	0
1497	83	12	SimpleVectorialValueChecker.java	converged	p	double[]	getValueRef()	0	0	NO_USE	0
1497	83	12	SimpleVectorialValueChecker.java	converged	c	double[]	getValueRef()	0	0	NO_USE	0
1497	83	12	SimpleVectorialValueChecker.java	converged	iteration	int	PARAM_AS	1	0	NO_USE	0
1497	83	12	SimpleVectorialValueChecker.java	converged	previous	VectorialPointValuePair	PARAM_AS	1	0	NO_USE	0
1497	83	12	SimpleVectorialValueChecker.java	converged	current	VectorialPointValuePair	PARAM_AS	1	0	NO_USE	0
1497	83	12	SimpleVectorialValueChecker.java	converged	THIS	SimpleVectorialValueChecker	UNKNOWN_AS	0	2	NO_USE	1
1498	269	12	LevenbergMarquardtOptimizer.java	doOptimize	previous	VectorialPointValuePair	NAME	0	1	NO_USE	0
1498	269	12	LevenbergMarquardtOptimizer.java	doOptimize	delta	double	0	0	2	NO_USE	0
1498	269	12	LevenbergMarquardtOptimizer.java	doOptimize	xNorm	double	0	0	2	PARAM_USE	0
1498	269	12	LevenbergMarquardtOptimizer.java	doOptimize	diag	double[]	ARRAY_CREATION	0	0	ARR_USE	0
1498	269	12	LevenbergMarquardtOptimizer.java	doOptimize	oldX	double[]	ARRAY_CREATION	0	0	NO_USE	0
1498	269	12	LevenbergMarquardtOptimizer.java	doOptimize	oldRes	double[]	ARRAY_CREATION	0	0	NO_USE	0
1498	269	12	LevenbergMarquardtOptimizer.java	doOptimize	oldObj	double[]	ARRAY_CREATION	0	0	NO_USE	0
1498	269	12	LevenbergMarquardtOptimizer.java	doOptimize	qtf	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1498	269	12	LevenbergMarquardtOptimizer.java	doOptimize	work1	double[]	ARRAY_CREATION	0	0	NO_USE	0
1498	269	12	LevenbergMarquardtOptimizer.java	doOptimize	work2	double[]	ARRAY_CREATION	0	0	NO_USE	0
1498	269	12	LevenbergMarquardtOptimizer.java	doOptimize	work3	double[]	ARRAY_CREATION	0	0	NO_USE	0
1498	269	12	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	LITERAL	0	0	NO_USE	1
1498	269	12	LevenbergMarquardtOptimizer.java	doOptimize	current	VectorialPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1498	269	12	LevenbergMarquardtOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1498	269	12	LevenbergMarquardtOptimizer.java	doOptimize	checker	ConvergenceChecker<VectorialPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1498	269	12	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	ARRAY_ACCESS	0	8	FIELD_USE	0
1499	275	20	LevenbergMarquardtOptimizer.java	doOptimize	dk	double	ARRAY_ACCESS	0	1	NO_USE	1
1499	275	20	LevenbergMarquardtOptimizer.java	doOptimize	k	int	0	0	0	NO_USE	0
1499	275	20	LevenbergMarquardtOptimizer.java	doOptimize	previous	VectorialPointValuePair	NAME	0	1	NO_USE	0
1499	275	20	LevenbergMarquardtOptimizer.java	doOptimize	delta	double	0	0	2	NO_USE	0
1499	275	20	LevenbergMarquardtOptimizer.java	doOptimize	xNorm	double	0	0	2	NO_USE	0
1499	275	20	LevenbergMarquardtOptimizer.java	doOptimize	diag	double[]	ARRAY_CREATION	0	0	NO_USE	0
1499	275	20	LevenbergMarquardtOptimizer.java	doOptimize	oldX	double[]	ARRAY_CREATION	0	0	NO_USE	0
1499	275	20	LevenbergMarquardtOptimizer.java	doOptimize	oldRes	double[]	ARRAY_CREATION	0	0	NO_USE	0
1499	275	20	LevenbergMarquardtOptimizer.java	doOptimize	oldObj	double[]	ARRAY_CREATION	0	0	NO_USE	0
1499	275	20	LevenbergMarquardtOptimizer.java	doOptimize	qtf	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1499	275	20	LevenbergMarquardtOptimizer.java	doOptimize	work1	double[]	ARRAY_CREATION	0	0	NO_USE	0
1499	275	20	LevenbergMarquardtOptimizer.java	doOptimize	work2	double[]	ARRAY_CREATION	0	0	NO_USE	0
1499	275	20	LevenbergMarquardtOptimizer.java	doOptimize	work3	double[]	ARRAY_CREATION	0	0	NO_USE	0
1499	275	20	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	LITERAL	0	0	NO_USE	0
1499	275	20	LevenbergMarquardtOptimizer.java	doOptimize	current	VectorialPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1499	275	20	LevenbergMarquardtOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1499	275	20	LevenbergMarquardtOptimizer.java	doOptimize	checker	ConvergenceChecker<VectorialPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1499	275	20	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	ARRAY_ACCESS	0	8	NO_USE	0
1500	290	12	LevenbergMarquardtOptimizer.java	doOptimize	previous	VectorialPointValuePair	NAME	0	1	NO_USE	0
1500	290	12	LevenbergMarquardtOptimizer.java	doOptimize	maxCosine	double	0	0	2	PARAM_USE	0
1500	290	12	LevenbergMarquardtOptimizer.java	doOptimize	delta	double	OTHERS	0	2	NO_USE	0
1500	290	12	LevenbergMarquardtOptimizer.java	doOptimize	xNorm	double	sqrt()	0	2	NO_USE	0
1500	290	12	LevenbergMarquardtOptimizer.java	doOptimize	diag	double[]	NAME	0	0	NO_USE	0
1500	290	12	LevenbergMarquardtOptimizer.java	doOptimize	oldX	double[]	ARRAY_CREATION	0	0	NO_USE	0
1500	290	12	LevenbergMarquardtOptimizer.java	doOptimize	oldRes	double[]	ARRAY_CREATION	0	0	NO_USE	0
1500	290	12	LevenbergMarquardtOptimizer.java	doOptimize	oldObj	double[]	ARRAY_CREATION	0	0	NO_USE	0
1500	290	12	LevenbergMarquardtOptimizer.java	doOptimize	qtf	double[]	ARRAY_ACCESS	0	0	ARR_USE	0
1500	290	12	LevenbergMarquardtOptimizer.java	doOptimize	work1	double[]	ARRAY_CREATION	0	0	NO_USE	0
1500	290	12	LevenbergMarquardtOptimizer.java	doOptimize	work2	double[]	ARRAY_CREATION	0	0	NO_USE	0
1500	290	12	LevenbergMarquardtOptimizer.java	doOptimize	work3	double[]	ARRAY_CREATION	0	0	NO_USE	0
1500	290	12	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	LITERAL	0	0	NO_USE	0
1500	290	12	LevenbergMarquardtOptimizer.java	doOptimize	current	VectorialPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1500	290	12	LevenbergMarquardtOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1500	290	12	LevenbergMarquardtOptimizer.java	doOptimize	checker	ConvergenceChecker<VectorialPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1500	290	12	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	ARRAY_ACCESS	0	8	FIELD_USE	1
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	pj	int	ARRAY_ACCESS	0	0	ARRIDX_USE	0
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	s	double	ARRAY_ACCESS	0	1	*	1
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	j	int	0	0	0	<=	0
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	previous	VectorialPointValuePair	NAME	0	1	NO_USE	0
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	maxCosine	double	0	0	2	PARAM_USE	0
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	delta	double	OTHERS	0	2	NO_USE	0
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	xNorm	double	sqrt()	0	2	NO_USE	0
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	diag	double[]	NAME	0	0	NO_USE	0
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	oldX	double[]	ARRAY_CREATION	0	0	NO_USE	0
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	oldRes	double[]	ARRAY_CREATION	0	0	NO_USE	0
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	oldObj	double[]	ARRAY_CREATION	0	0	NO_USE	0
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	qtf	double[]	ARRAY_ACCESS	0	0	ARR_USE	0
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	work1	double[]	ARRAY_CREATION	0	0	NO_USE	0
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	work2	double[]	ARRAY_CREATION	0	0	NO_USE	0
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	work3	double[]	ARRAY_CREATION	0	0	NO_USE	0
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	LITERAL	0	0	NO_USE	0
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	current	VectorialPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	checker	ConvergenceChecker<VectorialPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1501	294	20	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	ARRAY_ACCESS	0	8	FIELD_USE	0
1502	303	12	LevenbergMarquardtOptimizer.java	doOptimize	previous	VectorialPointValuePair	NAME	0	1	NO_USE	0
1502	303	12	LevenbergMarquardtOptimizer.java	doOptimize	maxCosine	double	max()	0	2	NO_USE	1
1502	303	12	LevenbergMarquardtOptimizer.java	doOptimize	delta	double	OTHERS	0	2	NO_USE	0
1502	303	12	LevenbergMarquardtOptimizer.java	doOptimize	xNorm	double	sqrt()	0	2	NO_USE	0
1502	303	12	LevenbergMarquardtOptimizer.java	doOptimize	diag	double[]	NAME	0	0	NO_USE	0
1502	303	12	LevenbergMarquardtOptimizer.java	doOptimize	oldX	double[]	ARRAY_CREATION	0	0	NO_USE	0
1502	303	12	LevenbergMarquardtOptimizer.java	doOptimize	oldRes	double[]	ARRAY_CREATION	0	0	NO_USE	0
1502	303	12	LevenbergMarquardtOptimizer.java	doOptimize	oldObj	double[]	ARRAY_CREATION	0	0	NO_USE	0
1502	303	12	LevenbergMarquardtOptimizer.java	doOptimize	qtf	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1502	303	12	LevenbergMarquardtOptimizer.java	doOptimize	work1	double[]	ARRAY_CREATION	0	0	NO_USE	0
1502	303	12	LevenbergMarquardtOptimizer.java	doOptimize	work2	double[]	ARRAY_CREATION	0	0	NO_USE	0
1502	303	12	LevenbergMarquardtOptimizer.java	doOptimize	work3	double[]	ARRAY_CREATION	0	0	NO_USE	0
1502	303	12	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	LITERAL	0	0	NO_USE	0
1502	303	12	LevenbergMarquardtOptimizer.java	doOptimize	current	VectorialPointValuePair	CLASS_INSTANCE_CREATION	0	1	RET_USE	0
1502	303	12	LevenbergMarquardtOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1502	303	12	LevenbergMarquardtOptimizer.java	doOptimize	checker	ConvergenceChecker<VectorialPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1502	303	12	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	ARRAY_ACCESS	0	8	CLALLER_USE	1
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	previousCost	double	NAME	0	2	NO_USE	0
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	tmpVec	double[]	NAME	0	0	NO_USE	0
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	lmNorm	double	sqrt()	0	0	PARAM_USE	0
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	ratio	double	0	0	5	NO_USE	0
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	previous	VectorialPointValuePair	NAME	0	1	NO_USE	0
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	maxCosine	double	max()	0	2	NO_USE	0
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	delta	double	OTHERS	0	2	PARAM_USE	0
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	xNorm	double	sqrt()	0	2	NO_USE	0
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	diag	double[]	max()	0	0	NO_USE	0
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	oldX	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	oldRes	double[]	NAME	0	0	NO_USE	0
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	oldObj	double[]	NAME	0	0	NO_USE	0
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	qtf	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	work1	double[]	ARRAY_CREATION	0	0	NO_USE	0
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	work2	double[]	ARRAY_CREATION	0	0	NO_USE	0
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	work3	double[]	ARRAY_CREATION	0	0	NO_USE	0
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	LITERAL	0	0	NO_USE	1
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	current	VectorialPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	checker	ConvergenceChecker<VectorialPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1503	345	16	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	+	0	8	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	previousCost	double	NAME	0	2	/	1
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	tmpVec	double[]	NAME	0	0	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	lmNorm	double	sqrt()	0	0	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	actRed	double	PREFIX_EXPR	0	2	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	ratio	double	0	0	5	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	previous	VectorialPointValuePair	NAME	0	1	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	maxCosine	double	max()	0	2	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	delta	double	min()	0	2	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	xNorm	double	sqrt()	0	2	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	diag	double[]	max()	0	0	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	oldX	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	oldRes	double[]	NAME	0	0	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	oldObj	double[]	NAME	0	0	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	qtf	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	work1	double[]	ARRAY_CREATION	0	0	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	work2	double[]	ARRAY_CREATION	0	0	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	work3	double[]	ARRAY_CREATION	0	0	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	LITERAL	0	0	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	current	VectorialPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	checker	ConvergenceChecker<VectorialPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1504	354	16	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	+	0	8	FIELD_USE	1
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	previousCost	double	NAME	0	2	>=	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	tmpVec	double[]	NAME	0	0	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	lmNorm	double	sqrt()	0	0	*	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	actRed	double	-	0	2	<	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	coeff1	double	/	0	0	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	pc2	double	*	0	0	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	coeff2	double	/	0	0	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	preRed	double	+	0	2	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	dirDer	double	PREFIX_EXPR	0	0	*	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	ratio	double	OTHERS	0	5	>=	1
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	previous	VectorialPointValuePair	NAME	0	1	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	maxCosine	double	max()	0	2	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	delta	double	min()	0	2	PARAM_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	xNorm	double	sqrt()	0	2	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	diag	double[]	max()	0	0	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	oldX	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	oldRes	double[]	NAME	0	0	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	oldObj	double[]	NAME	0	0	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	qtf	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	work1	double[]	*	0	0	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	work2	double[]	ARRAY_CREATION	0	0	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	work3	double[]	ARRAY_CREATION	0	0	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	LITERAL	0	0	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	current	VectorialPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	checker	ConvergenceChecker<VectorialPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1505	383	16	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	+	0	8	FIELD_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	tmp	double	OTHERS	0	1	NO_USE	1
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	previousCost	double	NAME	0	2	NO_USE	1
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	tmpVec	double[]	NAME	0	0	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	lmNorm	double	sqrt()	0	0	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	actRed	double	-	0	2	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	coeff1	double	/	0	0	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	pc2	double	*	0	0	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	coeff2	double	/	0	0	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	preRed	double	+	0	2	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	dirDer	double	PREFIX_EXPR	0	0	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	ratio	double	OTHERS	0	5	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	previous	VectorialPointValuePair	NAME	0	1	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	maxCosine	double	max()	0	2	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	delta	double	min()	0	2	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	xNorm	double	sqrt()	0	2	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	diag	double[]	max()	0	0	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	oldX	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	oldRes	double[]	NAME	0	0	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	oldObj	double[]	NAME	0	0	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	qtf	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	work1	double[]	*	0	0	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	work2	double[]	ARRAY_CREATION	0	0	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	work3	double[]	ARRAY_CREATION	0	0	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	LITERAL	0	0	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	current	VectorialPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	checker	ConvergenceChecker<VectorialPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1506	386	24	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	+	0	8	NO_USE	1
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	previousCost	double	NAME	0	2	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	tmpVec	double[]	NAME	0	0	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	lmNorm	double	sqrt()	0	0	*	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	actRed	double	-	0	2	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	coeff1	double	/	0	0	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	pc2	double	*	0	0	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	coeff2	double	/	0	0	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	preRed	double	+	0	2	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	dirDer	double	PREFIX_EXPR	0	0	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	ratio	double	OTHERS	0	5	NO_USE	1
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	previous	VectorialPointValuePair	NAME	0	1	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	maxCosine	double	max()	0	2	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	delta	double	*	0	2	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	xNorm	double	sqrt()	0	2	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	diag	double[]	max()	0	0	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	oldX	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	oldRes	double[]	NAME	0	0	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	oldObj	double[]	NAME	0	0	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	qtf	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	work1	double[]	*	0	0	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	work2	double[]	ARRAY_CREATION	0	0	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	work3	double[]	ARRAY_CREATION	0	0	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	LITERAL	0	0	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	current	VectorialPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	checker	ConvergenceChecker<VectorialPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1507	391	23	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	NAME	0	8	NO_USE	1
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	previousCost	double	NAME	0	2	OTHER_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	tmpVec	double[]	NAME	0	0	OTHER_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	lmNorm	double	sqrt()	0	0	NO_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	actRed	double	-	0	2	NO_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	coeff1	double	/	0	0	NO_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	pc2	double	*	0	0	NO_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	coeff2	double	/	0	0	NO_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	preRed	double	+	0	2	NO_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	dirDer	double	PREFIX_EXPR	0	0	NO_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	ratio	double	OTHERS	0	5	NO_USE	1
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	previous	VectorialPointValuePair	NAME	0	1	PARAM_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	maxCosine	double	max()	0	2	NO_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	delta	double	*	0	2	NO_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	xNorm	double	sqrt()	0	2	PARAM_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	diag	double[]	max()	0	0	ARR_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	oldX	double[]	ARRAY_ACCESS	0	0	ARR_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	oldRes	double[]	NAME	0	0	OTHER_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	oldObj	double[]	NAME	0	0	OTHER_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	qtf	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	work1	double[]	*	0	0	NO_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	work2	double[]	ARRAY_CREATION	0	0	NO_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	work3	double[]	ARRAY_CREATION	0	0	NO_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	LITERAL	0	0	NO_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	current	VectorialPointValuePair	CLASS_INSTANCE_CREATION	0	1	PARAM_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	iter	int	0	0	1	PARAM_USE	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	checker	ConvergenceChecker<VectorialPointValuePair>	getConvergenceChecker()	0	2	!=	0
1508	397	16	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	0.5	0	8	FIELD_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	previousCost	double	NAME	0	2	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	tmpVec	double[]	NAME	0	0	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	lmNorm	double	sqrt()	0	0	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	actRed	double	-	0	2	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	coeff1	double	/	0	0	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	pc2	double	*	0	0	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	coeff2	double	/	0	0	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	preRed	double	+	0	2	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	dirDer	double	PREFIX_EXPR	0	0	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	ratio	double	OTHERS	0	5	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	previous	VectorialPointValuePair	NAME	0	1	PARAM_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	maxCosine	double	max()	0	2	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	delta	double	*	0	2	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	xNorm	double	sqrt()	0	2	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	diag	double[]	max()	0	0	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	oldX	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	oldRes	double[]	NAME	0	0	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	oldObj	double[]	NAME	0	0	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	qtf	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	work1	double[]	*	0	0	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	work2	double[]	ARRAY_CREATION	0	0	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	work3	double[]	ARRAY_CREATION	0	0	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	LITERAL	0	0	NO_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	current	VectorialPointValuePair	CLASS_INSTANCE_CREATION	0	1	PARAM_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	iter	int	0	0	1	PARAM_USE	0
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	checker	ConvergenceChecker<VectorialPointValuePair>	getConvergenceChecker()	0	2	CLALLER_USE	1
1509	409	20	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	0.5	0	8	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	previousCost	double	NAME	0	2	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	tmpVec	double[]	NAME	0	0	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	lmNorm	double	sqrt()	0	0	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	actRed	double	-	0	2	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	coeff1	double	/	0	0	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	pc2	double	*	0	0	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	coeff2	double	/	0	0	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	preRed	double	+	0	2	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	dirDer	double	PREFIX_EXPR	0	0	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	ratio	double	OTHERS	0	5	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	previous	VectorialPointValuePair	NAME	0	1	NO_USE	1
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	maxCosine	double	max()	0	2	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	delta	double	*	0	2	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	xNorm	double	sqrt()	0	2	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	diag	double[]	max()	0	0	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	oldX	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	oldRes	double[]	NAME	0	0	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	oldObj	double[]	NAME	0	0	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	qtf	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	work1	double[]	*	0	0	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	work2	double[]	ARRAY_CREATION	0	0	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	work3	double[]	ARRAY_CREATION	0	0	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	LITERAL	0	0	NO_USE	0
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	current	VectorialPointValuePair	CLASS_INSTANCE_CREATION	0	1	RET_USE	1
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	1
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	checker	ConvergenceChecker<VectorialPointValuePair>	getConvergenceChecker()	0	2	NO_USE	1
1510	411	24	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	0.5	0	8	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	previousCost	double	NAME	0	2	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	tmpVec	double[]	NAME	0	0	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	lmNorm	double	sqrt()	0	0	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	actRed	double	-	0	2	NO_USE	1
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	coeff1	double	/	0	0	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	pc2	double	*	0	0	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	coeff2	double	/	0	0	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	preRed	double	+	0	2	NO_USE	1
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	dirDer	double	PREFIX_EXPR	0	0	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	ratio	double	OTHERS	0	5	NO_USE	1
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	previous	VectorialPointValuePair	NAME	0	1	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	maxCosine	double	max()	0	2	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	delta	double	*	0	2	NO_USE	1
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	xNorm	double	sqrt()	0	2	NO_USE	1
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	diag	double[]	max()	0	0	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	oldX	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	oldRes	double[]	NAME	0	0	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	oldObj	double[]	NAME	0	0	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	qtf	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	work1	double[]	*	0	0	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	work2	double[]	ARRAY_CREATION	0	0	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	work3	double[]	ARRAY_CREATION	0	0	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	LITERAL	0	0	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	current	VectorialPointValuePair	CLASS_INSTANCE_CREATION	0	1	RET_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	checker	ConvergenceChecker<VectorialPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1511	431	16	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	NAME	0	8	NO_USE	1
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	previousCost	double	NAME	0	2	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	tmpVec	double[]	NAME	0	0	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	lmNorm	double	sqrt()	0	0	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	actRed	double	-	0	2	NO_USE	1
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	coeff1	double	/	0	0	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	pc2	double	*	0	0	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	coeff2	double	/	0	0	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	preRed	double	+	0	2	NO_USE	1
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	dirDer	double	PREFIX_EXPR	0	0	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	ratio	double	OTHERS	0	5	NO_USE	1
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	previous	VectorialPointValuePair	NAME	0	1	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	maxCosine	double	max()	0	2	<=	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	delta	double	*	0	2	<=	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	xNorm	double	sqrt()	0	2	*	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	diag	double[]	max()	0	0	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	oldX	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	oldRes	double[]	NAME	0	0	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	oldObj	double[]	NAME	0	0	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	qtf	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	work1	double[]	*	0	0	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	work2	double[]	ARRAY_CREATION	0	0	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	work3	double[]	ARRAY_CREATION	0	0	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	LITERAL	0	0	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	current	VectorialPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	checker	ConvergenceChecker<VectorialPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1512	440	16	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	NAME	0	8	FIELD_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	previousCost	double	NAME	0	2	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	tmpVec	double[]	NAME	0	0	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	lmNorm	double	sqrt()	0	0	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	actRed	double	-	0	2	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	coeff1	double	/	0	0	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	pc2	double	*	0	0	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	coeff2	double	/	0	0	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	preRed	double	+	0	2	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	dirDer	double	PREFIX_EXPR	0	0	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	ratio	double	OTHERS	0	5	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	previous	VectorialPointValuePair	NAME	0	1	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	maxCosine	double	max()	0	2	<=	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	delta	double	*	0	2	NO_USE	1
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	xNorm	double	sqrt()	0	2	NO_USE	1
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	diag	double[]	max()	0	0	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	oldX	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	oldRes	double[]	NAME	0	0	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	oldObj	double[]	NAME	0	0	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	qtf	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	work1	double[]	*	0	0	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	work2	double[]	ARRAY_CREATION	0	0	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	work3	double[]	ARRAY_CREATION	0	0	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	LITERAL	0	0	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	current	VectorialPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	checker	ConvergenceChecker<VectorialPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1513	443	23	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	NAME	0	8	FIELD_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	previousCost	double	NAME	0	2	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	tmpVec	double[]	NAME	0	0	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	lmNorm	double	sqrt()	0	0	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	actRed	double	-	0	2	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	coeff1	double	/	0	0	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	pc2	double	*	0	0	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	coeff2	double	/	0	0	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	preRed	double	+	0	2	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	dirDer	double	PREFIX_EXPR	0	0	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	ratio	double	OTHERS	0	5	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	previous	VectorialPointValuePair	NAME	0	1	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	maxCosine	double	max()	0	2	NO_USE	1
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	delta	double	*	0	2	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	xNorm	double	sqrt()	0	2	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	diag	double[]	max()	0	0	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	oldX	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	oldRes	double[]	NAME	0	0	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	oldObj	double[]	NAME	0	0	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	qtf	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	work1	double[]	*	0	0	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	work2	double[]	ARRAY_CREATION	0	0	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	work3	double[]	ARRAY_CREATION	0	0	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	firstIteration	boolean	LITERAL	0	0	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	current	VectorialPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	iter	int	0	0	1	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	checker	ConvergenceChecker<VectorialPointValuePair>	getConvergenceChecker()	0	2	NO_USE	0
1514	446	23	LevenbergMarquardtOptimizer.java	doOptimize	THIS	LevenbergMarquardtOptimizer	NAME	0	8	FIELD_USE	0
1515	507	8	LevenbergMarquardtOptimizer.java	determineLMParameter	dxNorm	double	sqrt()	0	0	NO_USE	0
1515	507	8	LevenbergMarquardtOptimizer.java	determineLMParameter	fp	double	-	0	5	NO_USE	1
1515	507	8	LevenbergMarquardtOptimizer.java	determineLMParameter	qy	double[]	PARAM_AS	1	0	NO_USE	0
1515	507	8	LevenbergMarquardtOptimizer.java	determineLMParameter	delta	double	PARAM_AS	1	2	NO_USE	1
1515	507	8	LevenbergMarquardtOptimizer.java	determineLMParameter	diag	double[]	PARAM_AS	1	0	NO_USE	0
1515	507	8	LevenbergMarquardtOptimizer.java	determineLMParameter	work1	double[]	NAME	1	0	NO_USE	0
1515	507	8	LevenbergMarquardtOptimizer.java	determineLMParameter	work2	double[]	PARAM_AS	1	0	NO_USE	0
1515	507	8	LevenbergMarquardtOptimizer.java	determineLMParameter	work3	double[]	PARAM_AS	1	0	NO_USE	0
1515	507	8	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	NAME	0	4	NO_USE	0
1516	517	8	LevenbergMarquardtOptimizer.java	determineLMParameter	dxNorm	double	sqrt()	0	0	/	0
1516	517	8	LevenbergMarquardtOptimizer.java	determineLMParameter	fp	double	-	0	5	/	0
1516	517	8	LevenbergMarquardtOptimizer.java	determineLMParameter	sum2	double	UNKNOWN_AS	0	0	*	0
1516	517	8	LevenbergMarquardtOptimizer.java	determineLMParameter	parl	double	0	0	1	NO_USE	0
1516	517	8	LevenbergMarquardtOptimizer.java	determineLMParameter	qy	double[]	PARAM_AS	1	0	NO_USE	0
1516	517	8	LevenbergMarquardtOptimizer.java	determineLMParameter	delta	double	PARAM_AS	1	2	*	0
1516	517	8	LevenbergMarquardtOptimizer.java	determineLMParameter	diag	double[]	PARAM_AS	1	0	ARR_USE	0
1516	517	8	LevenbergMarquardtOptimizer.java	determineLMParameter	work1	double[]	NAME	1	0	ARR_USE	0
1516	517	8	LevenbergMarquardtOptimizer.java	determineLMParameter	work2	double[]	PARAM_AS	1	0	NO_USE	0
1516	517	8	LevenbergMarquardtOptimizer.java	determineLMParameter	work3	double[]	PARAM_AS	1	0	NO_USE	0
1516	517	8	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	0	4	FIELD_USE	1
1517	549	8	LevenbergMarquardtOptimizer.java	determineLMParameter	dxNorm	double	sqrt()	0	0	NO_USE	0
1517	549	8	LevenbergMarquardtOptimizer.java	determineLMParameter	fp	double	-	0	5	NO_USE	0
1517	549	8	LevenbergMarquardtOptimizer.java	determineLMParameter	sum2	double	*	0	0	NO_USE	0
1517	549	8	LevenbergMarquardtOptimizer.java	determineLMParameter	parl	double	/	0	1	NO_USE	0
1517	549	8	LevenbergMarquardtOptimizer.java	determineLMParameter	gNorm	double	sqrt()	0	0	NO_USE	0
1517	549	8	LevenbergMarquardtOptimizer.java	determineLMParameter	paru	double	/	0	1	NO_USE	1
1517	549	8	LevenbergMarquardtOptimizer.java	determineLMParameter	qy	double[]	PARAM_AS	1	0	NO_USE	0
1517	549	8	LevenbergMarquardtOptimizer.java	determineLMParameter	delta	double	PARAM_AS	1	2	PARAM_USE	0
1517	549	8	LevenbergMarquardtOptimizer.java	determineLMParameter	diag	double[]	PARAM_AS	1	0	NO_USE	0
1517	549	8	LevenbergMarquardtOptimizer.java	determineLMParameter	work1	double[]	NAME	1	0	NO_USE	0
1517	549	8	LevenbergMarquardtOptimizer.java	determineLMParameter	work2	double[]	PARAM_AS	1	0	NO_USE	0
1517	549	8	LevenbergMarquardtOptimizer.java	determineLMParameter	work3	double[]	PARAM_AS	1	0	NO_USE	0
1517	549	8	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	0	0	4	NO_USE	0
1518	557	8	LevenbergMarquardtOptimizer.java	determineLMParameter	dxNorm	double	sqrt()	0	0	/	0
1518	557	8	LevenbergMarquardtOptimizer.java	determineLMParameter	fp	double	-	0	5	NO_USE	0
1518	557	8	LevenbergMarquardtOptimizer.java	determineLMParameter	sum2	double	*	0	0	NO_USE	0
1518	557	8	LevenbergMarquardtOptimizer.java	determineLMParameter	parl	double	/	0	1	NO_USE	0
1518	557	8	LevenbergMarquardtOptimizer.java	determineLMParameter	gNorm	double	sqrt()	0	0	/	0
1518	557	8	LevenbergMarquardtOptimizer.java	determineLMParameter	paru	double	/	0	1	NO_USE	0
1518	557	8	LevenbergMarquardtOptimizer.java	determineLMParameter	qy	double[]	PARAM_AS	1	0	NO_USE	0
1518	557	8	LevenbergMarquardtOptimizer.java	determineLMParameter	delta	double	PARAM_AS	1	2	NO_USE	0
1518	557	8	LevenbergMarquardtOptimizer.java	determineLMParameter	diag	double[]	PARAM_AS	1	0	NO_USE	0
1518	557	8	LevenbergMarquardtOptimizer.java	determineLMParameter	work1	double[]	NAME	1	0	NO_USE	0
1518	557	8	LevenbergMarquardtOptimizer.java	determineLMParameter	work2	double[]	PARAM_AS	1	0	NO_USE	0
1518	557	8	LevenbergMarquardtOptimizer.java	determineLMParameter	work3	double[]	PARAM_AS	1	0	NO_USE	0
1518	557	8	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	min()	0	4	NO_USE	1
1519	564	12	LevenbergMarquardtOptimizer.java	determineLMParameter	countdown	int	10	0	0	NO_USE	0
1519	564	12	LevenbergMarquardtOptimizer.java	determineLMParameter	dxNorm	double	sqrt()	0	0	NO_USE	0
1519	564	12	LevenbergMarquardtOptimizer.java	determineLMParameter	fp	double	-	0	5	NO_USE	0
1519	564	12	LevenbergMarquardtOptimizer.java	determineLMParameter	sum2	double	*	0	0	NO_USE	0
1519	564	12	LevenbergMarquardtOptimizer.java	determineLMParameter	parl	double	/	0	1	NO_USE	0
1519	564	12	LevenbergMarquardtOptimizer.java	determineLMParameter	gNorm	double	sqrt()	0	0	NO_USE	0
1519	564	12	LevenbergMarquardtOptimizer.java	determineLMParameter	paru	double	/	0	1	*	0
1519	564	12	LevenbergMarquardtOptimizer.java	determineLMParameter	qy	double[]	PARAM_AS	1	0	NO_USE	0
1519	564	12	LevenbergMarquardtOptimizer.java	determineLMParameter	delta	double	PARAM_AS	1	2	NO_USE	0
1519	564	12	LevenbergMarquardtOptimizer.java	determineLMParameter	diag	double[]	PARAM_AS	1	0	NO_USE	0
1519	564	12	LevenbergMarquardtOptimizer.java	determineLMParameter	work1	double[]	NAME	1	0	NO_USE	0
1519	564	12	LevenbergMarquardtOptimizer.java	determineLMParameter	work2	double[]	PARAM_AS	1	0	NO_USE	0
1519	564	12	LevenbergMarquardtOptimizer.java	determineLMParameter	work3	double[]	PARAM_AS	1	0	NO_USE	0
1519	564	12	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	/	0	4	NO_USE	1
1520	587	12	LevenbergMarquardtOptimizer.java	determineLMParameter	sPar	double	sqrt()	0	0	NO_USE	0
1520	587	12	LevenbergMarquardtOptimizer.java	determineLMParameter	previousFP	double	NAME	0	2	NO_USE	1
1520	587	12	LevenbergMarquardtOptimizer.java	determineLMParameter	countdown	int	10	0	0	NO_USE	0
1520	587	12	LevenbergMarquardtOptimizer.java	determineLMParameter	dxNorm	double	sqrt()	0	0	NO_USE	0
1520	587	12	LevenbergMarquardtOptimizer.java	determineLMParameter	fp	double	-	0	5	NO_USE	1
1520	587	12	LevenbergMarquardtOptimizer.java	determineLMParameter	sum2	double	*	0	0	NO_USE	0
1520	587	12	LevenbergMarquardtOptimizer.java	determineLMParameter	parl	double	/	0	1	NO_USE	1
1520	587	12	LevenbergMarquardtOptimizer.java	determineLMParameter	gNorm	double	sqrt()	0	0	NO_USE	0
1520	587	12	LevenbergMarquardtOptimizer.java	determineLMParameter	paru	double	/	0	1	NO_USE	0
1520	587	12	LevenbergMarquardtOptimizer.java	determineLMParameter	qy	double[]	PARAM_AS	1	0	NO_USE	0
1520	587	12	LevenbergMarquardtOptimizer.java	determineLMParameter	delta	double	PARAM_AS	1	2	NO_USE	1
1520	587	12	LevenbergMarquardtOptimizer.java	determineLMParameter	diag	double[]	PARAM_AS	1	0	NO_USE	0
1520	587	12	LevenbergMarquardtOptimizer.java	determineLMParameter	work1	double[]	*	1	0	NO_USE	0
1520	587	12	LevenbergMarquardtOptimizer.java	determineLMParameter	work2	double[]	PARAM_AS	1	0	NO_USE	0
1520	587	12	LevenbergMarquardtOptimizer.java	determineLMParameter	work3	double[]	NAME	1	0	NO_USE	0
1520	587	12	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	max()	0	4	NO_USE	0
1521	613	12	LevenbergMarquardtOptimizer.java	determineLMParameter	sPar	double	sqrt()	0	0	NO_USE	0
1521	613	12	LevenbergMarquardtOptimizer.java	determineLMParameter	previousFP	double	NAME	0	2	NO_USE	0
1521	613	12	LevenbergMarquardtOptimizer.java	determineLMParameter	correction	double	/	0	0	NO_USE	0
1521	613	12	LevenbergMarquardtOptimizer.java	determineLMParameter	countdown	int	10	0	0	NO_USE	0
1521	613	12	LevenbergMarquardtOptimizer.java	determineLMParameter	dxNorm	double	sqrt()	0	0	NO_USE	0
1521	613	12	LevenbergMarquardtOptimizer.java	determineLMParameter	fp	double	-	0	5	<	1
1521	613	12	LevenbergMarquardtOptimizer.java	determineLMParameter	sum2	double	*	0	0	NO_USE	0
1521	613	12	LevenbergMarquardtOptimizer.java	determineLMParameter	parl	double	/	0	1	PARAM_USE	0
1521	613	12	LevenbergMarquardtOptimizer.java	determineLMParameter	gNorm	double	sqrt()	0	0	NO_USE	0
1521	613	12	LevenbergMarquardtOptimizer.java	determineLMParameter	paru	double	/	0	1	PARAM_USE	0
1521	613	12	LevenbergMarquardtOptimizer.java	determineLMParameter	qy	double[]	PARAM_AS	1	0	NO_USE	0
1521	613	12	LevenbergMarquardtOptimizer.java	determineLMParameter	delta	double	PARAM_AS	1	2	NO_USE	0
1521	613	12	LevenbergMarquardtOptimizer.java	determineLMParameter	diag	double[]	PARAM_AS	1	0	NO_USE	0
1521	613	12	LevenbergMarquardtOptimizer.java	determineLMParameter	work1	double[]	*	1	0	NO_USE	0
1521	613	12	LevenbergMarquardtOptimizer.java	determineLMParameter	work2	double[]	PARAM_AS	1	0	NO_USE	0
1521	613	12	LevenbergMarquardtOptimizer.java	determineLMParameter	work3	double[]	NAME	1	0	NO_USE	0
1521	613	12	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	*	0	4	FIELD_USE	0
1522	615	19	LevenbergMarquardtOptimizer.java	determineLMParameter	sPar	double	sqrt()	0	0	NO_USE	0
1522	615	19	LevenbergMarquardtOptimizer.java	determineLMParameter	previousFP	double	NAME	0	2	NO_USE	0
1522	615	19	LevenbergMarquardtOptimizer.java	determineLMParameter	correction	double	/	0	0	NO_USE	0
1522	615	19	LevenbergMarquardtOptimizer.java	determineLMParameter	countdown	int	10	0	0	NO_USE	0
1522	615	19	LevenbergMarquardtOptimizer.java	determineLMParameter	dxNorm	double	sqrt()	0	0	NO_USE	0
1522	615	19	LevenbergMarquardtOptimizer.java	determineLMParameter	fp	double	-	0	5	NO_USE	1
1522	615	19	LevenbergMarquardtOptimizer.java	determineLMParameter	sum2	double	*	0	0	NO_USE	0
1522	615	19	LevenbergMarquardtOptimizer.java	determineLMParameter	parl	double	max()	0	1	NO_USE	0
1522	615	19	LevenbergMarquardtOptimizer.java	determineLMParameter	gNorm	double	sqrt()	0	0	NO_USE	0
1522	615	19	LevenbergMarquardtOptimizer.java	determineLMParameter	paru	double	/	0	1	PARAM_USE	0
1522	615	19	LevenbergMarquardtOptimizer.java	determineLMParameter	qy	double[]	PARAM_AS	1	0	NO_USE	0
1522	615	19	LevenbergMarquardtOptimizer.java	determineLMParameter	delta	double	PARAM_AS	1	2	NO_USE	0
1522	615	19	LevenbergMarquardtOptimizer.java	determineLMParameter	diag	double[]	PARAM_AS	1	0	NO_USE	0
1522	615	19	LevenbergMarquardtOptimizer.java	determineLMParameter	work1	double[]	*	1	0	NO_USE	0
1522	615	19	LevenbergMarquardtOptimizer.java	determineLMParameter	work2	double[]	PARAM_AS	1	0	NO_USE	0
1522	615	19	LevenbergMarquardtOptimizer.java	determineLMParameter	work3	double[]	NAME	1	0	NO_USE	0
1522	615	19	LevenbergMarquardtOptimizer.java	determineLMParameter	THIS	LevenbergMarquardtOptimizer	*	0	4	FIELD_USE	0
1523	666	12	LevenbergMarquardtOptimizer.java	determineLMDirection	pj	int	ARRAY_ACCESS	0	0	NO_USE	0
1523	666	12	LevenbergMarquardtOptimizer.java	determineLMDirection	dpj	double	ARRAY_ACCESS	0	1	NO_USE	1
1523	666	12	LevenbergMarquardtOptimizer.java	determineLMDirection	j	int	0	0	0	+	0
1523	666	12	LevenbergMarquardtOptimizer.java	determineLMDirection	qy	double[]	PARAM_AS	1	0	NO_USE	0
1523	666	12	LevenbergMarquardtOptimizer.java	determineLMDirection	diag	double[]	PARAM_AS	1	0	NO_USE	0
1523	666	12	LevenbergMarquardtOptimizer.java	determineLMDirection	lmDiag	double[]	PARAM_AS	1	3	PARAM_USE	0
1523	666	12	LevenbergMarquardtOptimizer.java	determineLMDirection	work	double[]	ARRAY_ACCESS	1	0	NO_USE	0
1523	666	12	LevenbergMarquardtOptimizer.java	determineLMDirection	THIS	LevenbergMarquardtOptimizer	ARRAY_ACCESS	0	2	FIELD_USE	0
1524	680	16	LevenbergMarquardtOptimizer.java	determineLMDirection	pk	int	ARRAY_ACCESS	0	0	ARRIDX_USE	0
1524	680	16	LevenbergMarquardtOptimizer.java	determineLMDirection	k	int	NAME	0	2	ARRIDX_USE	1
1524	680	16	LevenbergMarquardtOptimizer.java	determineLMDirection	pj	int	ARRAY_ACCESS	0	0	NO_USE	0
1524	680	16	LevenbergMarquardtOptimizer.java	determineLMDirection	dpj	double	ARRAY_ACCESS	0	1	NO_USE	0
1524	680	16	LevenbergMarquardtOptimizer.java	determineLMDirection	qtbpj	double	0	0	0	*	0
1524	680	16	LevenbergMarquardtOptimizer.java	determineLMDirection	j	int	NAME	0	0	NO_USE	0
1524	680	16	LevenbergMarquardtOptimizer.java	determineLMDirection	qy	double[]	PARAM_AS	1	0	NO_USE	0
1524	680	16	LevenbergMarquardtOptimizer.java	determineLMDirection	diag	double[]	PARAM_AS	1	0	NO_USE	0
1524	680	16	LevenbergMarquardtOptimizer.java	determineLMDirection	lmDiag	double[]	NAME	1	3	ARR_USE	1
1524	680	16	LevenbergMarquardtOptimizer.java	determineLMDirection	work	double[]	ARRAY_ACCESS	1	0	ARR_USE	0
1524	680	16	LevenbergMarquardtOptimizer.java	determineLMDirection	THIS	LevenbergMarquardtOptimizer	ARRAY_ACCESS	0	2	FIELD_USE	0
1525	685	20	LevenbergMarquardtOptimizer.java	determineLMDirection	sin	double	UNKNOWN_AS	0	0	*	0
1525	685	20	LevenbergMarquardtOptimizer.java	determineLMDirection	cos	double	UNKNOWN_AS	0	0	*	0
1525	685	20	LevenbergMarquardtOptimizer.java	determineLMDirection	rkk	double	ARRAY_ACCESS	0	1	/	1
1525	685	20	LevenbergMarquardtOptimizer.java	determineLMDirection	pk	int	ARRAY_ACCESS	0	0	NO_USE	0
1525	685	20	LevenbergMarquardtOptimizer.java	determineLMDirection	k	int	NAME	0	2	ARRIDX_USE	1
1525	685	20	LevenbergMarquardtOptimizer.java	determineLMDirection	pj	int	ARRAY_ACCESS	0	0	NO_USE	0
1525	685	20	LevenbergMarquardtOptimizer.java	determineLMDirection	dpj	double	ARRAY_ACCESS	0	1	NO_USE	0
1525	685	20	LevenbergMarquardtOptimizer.java	determineLMDirection	qtbpj	double	0	0	0	NO_USE	0
1525	685	20	LevenbergMarquardtOptimizer.java	determineLMDirection	j	int	NAME	0	0	NO_USE	0
1525	685	20	LevenbergMarquardtOptimizer.java	determineLMDirection	qy	double[]	PARAM_AS	1	0	NO_USE	0
1525	685	20	LevenbergMarquardtOptimizer.java	determineLMDirection	diag	double[]	PARAM_AS	1	0	NO_USE	0
1525	685	20	LevenbergMarquardtOptimizer.java	determineLMDirection	lmDiag	double[]	NAME	1	3	ARR_USE	1
1525	685	20	LevenbergMarquardtOptimizer.java	determineLMDirection	work	double[]	ARRAY_ACCESS	1	0	NO_USE	0
1525	685	20	LevenbergMarquardtOptimizer.java	determineLMDirection	THIS	LevenbergMarquardtOptimizer	ARRAY_ACCESS	0	2	NO_USE	0
1526	722	12	LevenbergMarquardtOptimizer.java	determineLMDirection	j	int	0	0	1	OTHER_USE	1
1526	722	12	LevenbergMarquardtOptimizer.java	determineLMDirection	nSing	int	NAME	0	3	NO_USE	1
1526	722	12	LevenbergMarquardtOptimizer.java	determineLMDirection	qy	double[]	PARAM_AS	1	0	NO_USE	0
1526	722	12	LevenbergMarquardtOptimizer.java	determineLMDirection	diag	double[]	PARAM_AS	1	0	NO_USE	0
1526	722	12	LevenbergMarquardtOptimizer.java	determineLMDirection	lmDiag	double[]	ARRAY_ACCESS	1	3	NO_USE	1
1526	722	12	LevenbergMarquardtOptimizer.java	determineLMDirection	work	double[]	NAME	1	0	NO_USE	0
1526	722	12	LevenbergMarquardtOptimizer.java	determineLMDirection	THIS	LevenbergMarquardtOptimizer	ARRAY_ACCESS	0	2	NO_USE	1
1527	725	12	LevenbergMarquardtOptimizer.java	determineLMDirection	j	int	0	0	1	ARRIDX_USE	0
1527	725	12	LevenbergMarquardtOptimizer.java	determineLMDirection	nSing	int	NAME	0	3	NO_USE	1
1527	725	12	LevenbergMarquardtOptimizer.java	determineLMDirection	qy	double[]	PARAM_AS	1	0	NO_USE	0
1527	725	12	LevenbergMarquardtOptimizer.java	determineLMDirection	diag	double[]	PARAM_AS	1	0	NO_USE	0
1527	725	12	LevenbergMarquardtOptimizer.java	determineLMDirection	lmDiag	double[]	ARRAY_ACCESS	1	3	NO_USE	0
1527	725	12	LevenbergMarquardtOptimizer.java	determineLMDirection	work	double[]	NAME	1	0	ARR_USE	0
1527	725	12	LevenbergMarquardtOptimizer.java	determineLMDirection	THIS	LevenbergMarquardtOptimizer	ARRAY_ACCESS	0	2	NO_USE	1
1528	729	8	LevenbergMarquardtOptimizer.java	determineLMDirection	nSing	int	NAME	0	3	-	1
1528	729	8	LevenbergMarquardtOptimizer.java	determineLMDirection	qy	double[]	PARAM_AS	1	0	NO_USE	0
1528	729	8	LevenbergMarquardtOptimizer.java	determineLMDirection	diag	double[]	PARAM_AS	1	0	NO_USE	0
1528	729	8	LevenbergMarquardtOptimizer.java	determineLMDirection	lmDiag	double[]	ARRAY_ACCESS	1	3	ARR_USE	0
1528	729	8	LevenbergMarquardtOptimizer.java	determineLMDirection	work	double[]	0	1	0	ARR_USE	0
1528	729	8	LevenbergMarquardtOptimizer.java	determineLMDirection	THIS	LevenbergMarquardtOptimizer	ARRAY_ACCESS	0	2	FIELD_USE	0
1529	793	16	LevenbergMarquardtOptimizer.java	qrDecomposition	norm2	double	*	0	3	NO_USE	1
1529	793	16	LevenbergMarquardtOptimizer.java	qrDecomposition	i	int	NAME	0	0	NO_USE	0
1529	793	16	LevenbergMarquardtOptimizer.java	qrDecomposition	nextColumn	int	PREFIX_EXPR	0	0	NO_USE	0
1529	793	16	LevenbergMarquardtOptimizer.java	qrDecomposition	ak2	double	NAME	0	2	NO_USE	0
1529	793	16	LevenbergMarquardtOptimizer.java	qrDecomposition	k	int	0	0	0	NO_USE	0
1529	793	16	LevenbergMarquardtOptimizer.java	qrDecomposition	THIS	LevenbergMarquardtOptimizer	sqrt()	0	1	FIELD_USE	0
1530	797	16	LevenbergMarquardtOptimizer.java	qrDecomposition	norm2	double	*	0	3	OTHER_USE	1
1530	797	16	LevenbergMarquardtOptimizer.java	qrDecomposition	i	int	NAME	0	0	OTHER_USE	0
1530	797	16	LevenbergMarquardtOptimizer.java	qrDecomposition	nextColumn	int	PREFIX_EXPR	0	0	NO_USE	0
1530	797	16	LevenbergMarquardtOptimizer.java	qrDecomposition	ak2	double	NAME	0	2	NO_USE	1
1530	797	16	LevenbergMarquardtOptimizer.java	qrDecomposition	k	int	0	0	0	NO_USE	0
1530	797	16	LevenbergMarquardtOptimizer.java	qrDecomposition	THIS	LevenbergMarquardtOptimizer	sqrt()	0	1	NO_USE	0
1531	802	12	LevenbergMarquardtOptimizer.java	qrDecomposition	nextColumn	int	NAME	0	0	NO_USE	0
1531	802	12	LevenbergMarquardtOptimizer.java	qrDecomposition	ak2	double	NAME	0	2	NO_USE	1
1531	802	12	LevenbergMarquardtOptimizer.java	qrDecomposition	k	int	0	0	0	OTHER_USE	0
1531	802	12	LevenbergMarquardtOptimizer.java	qrDecomposition	THIS	LevenbergMarquardtOptimizer	sqrt()	0	1	NO_USE	1
1532	104	8	AbstractLeastSquaresOptimizer.java	updateJacobian	THIS	AbstractLeastSquaresOptimizer	value()	0	3	FIELD_USE	1
1533	129	8	AbstractLeastSquaresOptimizer.java	updateResidualsAndCost	THIS	AbstractLeastSquaresOptimizer	computeObjectiveValue()	0	3	FIELD_USE	1
1534	215	8	AbstractLeastSquaresOptimizer.java	guessParametersErrors	THIS	AbstractLeastSquaresOptimizer	UNKNOWN_AS	0	2	FIELD_USE	1
1535	100	8	NonLinearConjugateGradientOptimizer.java	setInitialStep	initialStep	double	PARAM_AS	1	1	OTHER_USE	1
1535	100	8	NonLinearConjugateGradientOptimizer.java	setInitialStep	THIS	NonLinearConjugateGradientOptimizer	UNKNOWN_AS	0	0	FIELD_USE	0
1536	111	8	NonLinearConjugateGradientOptimizer.java	doOptimize	THIS	NonLinearConjugateGradientOptimizer	UNKNOWN_AS	0	7	NO_USE	1
1537	114	8	NonLinearConjugateGradientOptimizer.java	doOptimize	THIS	NonLinearConjugateGradientOptimizer	CLASS_INSTANCE_CREATION	0	7	NO_USE	1
1538	121	8	NonLinearConjugateGradientOptimizer.java	doOptimize	goal	GoalType	getGoalType()	0	2	NO_USE	1
1538	121	8	NonLinearConjugateGradientOptimizer.java	doOptimize	n	int	NAME	0	1	<	0
1538	121	8	NonLinearConjugateGradientOptimizer.java	doOptimize	r	double[]	computeObjectiveGradient()	0	0	ARR_USE	0
1538	121	8	NonLinearConjugateGradientOptimizer.java	doOptimize	THIS	NonLinearConjugateGradientOptimizer	getStartPoint()	0	7	NO_USE	1
1539	145	12	NonLinearConjugateGradientOptimizer.java	doOptimize	objective	double	computeObjectiveValue()	0	0	NO_USE	0
1539	145	12	NonLinearConjugateGradientOptimizer.java	doOptimize	previous	RealPointValuePair	NAME	0	2	PARAM_USE	1
1539	145	12	NonLinearConjugateGradientOptimizer.java	doOptimize	goal	GoalType	getGoalType()	0	2	NO_USE	0
1539	145	12	NonLinearConjugateGradientOptimizer.java	doOptimize	n	int	NAME	0	1	NO_USE	0
1539	145	12	NonLinearConjugateGradientOptimizer.java	doOptimize	r	double[]	PREFIX_EXPR	0	0	NO_USE	0
1539	145	12	NonLinearConjugateGradientOptimizer.java	doOptimize	steepestDescent	double[]	precondition()	0	0	NO_USE	0
1539	145	12	NonLinearConjugateGradientOptimizer.java	doOptimize	searchDirection	double[]	clone()	0	0	NO_USE	0
1539	145	12	NonLinearConjugateGradientOptimizer.java	doOptimize	delta	double	*	0	0	NO_USE	0
1539	145	12	NonLinearConjugateGradientOptimizer.java	doOptimize	current	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	PARAM_USE	0
1539	145	12	NonLinearConjugateGradientOptimizer.java	doOptimize	iter	int	0	0	2	PARAM_USE	0
1539	145	12	NonLinearConjugateGradientOptimizer.java	doOptimize	maxEval	int	getMaxEvaluations()	0	0	NO_USE	0
1539	145	12	NonLinearConjugateGradientOptimizer.java	doOptimize	THIS	NonLinearConjugateGradientOptimizer	getStartPoint()	0	7	CLALLER_USE	0
1540	146	16	NonLinearConjugateGradientOptimizer.java	doOptimize	objective	double	computeObjectiveValue()	0	0	NO_USE	0
1540	146	16	NonLinearConjugateGradientOptimizer.java	doOptimize	previous	RealPointValuePair	NAME	0	2	NO_USE	1
1540	146	16	NonLinearConjugateGradientOptimizer.java	doOptimize	goal	GoalType	getGoalType()	0	2	NO_USE	0
1540	146	16	NonLinearConjugateGradientOptimizer.java	doOptimize	n	int	NAME	0	1	NO_USE	0
1540	146	16	NonLinearConjugateGradientOptimizer.java	doOptimize	r	double[]	PREFIX_EXPR	0	0	NO_USE	0
1540	146	16	NonLinearConjugateGradientOptimizer.java	doOptimize	steepestDescent	double[]	precondition()	0	0	NO_USE	0
1540	146	16	NonLinearConjugateGradientOptimizer.java	doOptimize	searchDirection	double[]	clone()	0	0	NO_USE	0
1540	146	16	NonLinearConjugateGradientOptimizer.java	doOptimize	delta	double	*	0	0	NO_USE	0
1540	146	16	NonLinearConjugateGradientOptimizer.java	doOptimize	current	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	RET_USE	1
1540	146	16	NonLinearConjugateGradientOptimizer.java	doOptimize	iter	int	0	0	2	NO_USE	1
1540	146	16	NonLinearConjugateGradientOptimizer.java	doOptimize	maxEval	int	getMaxEvaluations()	0	0	NO_USE	0
1540	146	16	NonLinearConjugateGradientOptimizer.java	doOptimize	THIS	NonLinearConjugateGradientOptimizer	getStartPoint()	0	7	NO_USE	1
1541	167	12	NonLinearConjugateGradientOptimizer.java	doOptimize	objective	double	computeObjectiveValue()	0	0	NO_USE	0
1541	167	12	NonLinearConjugateGradientOptimizer.java	doOptimize	previous	RealPointValuePair	NAME	0	2	NO_USE	0
1541	167	12	NonLinearConjugateGradientOptimizer.java	doOptimize	lsf	UnivariateRealFunction	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1541	167	12	NonLinearConjugateGradientOptimizer.java	doOptimize	uB	double	findUpperBound()	0	0	NO_USE	0
1541	167	12	NonLinearConjugateGradientOptimizer.java	doOptimize	step	double	solve()	0	0	NO_USE	0
1541	167	12	NonLinearConjugateGradientOptimizer.java	doOptimize	goal	GoalType	getGoalType()	0	2	NO_USE	1
1541	167	12	NonLinearConjugateGradientOptimizer.java	doOptimize	n	int	NAME	0	1	<	0
1541	167	12	NonLinearConjugateGradientOptimizer.java	doOptimize	r	double[]	computeObjectiveGradient()	0	0	ARR_USE	0
1541	167	12	NonLinearConjugateGradientOptimizer.java	doOptimize	steepestDescent	double[]	precondition()	0	0	NO_USE	0
1541	167	12	NonLinearConjugateGradientOptimizer.java	doOptimize	searchDirection	double[]	clone()	0	0	NO_USE	0
1541	167	12	NonLinearConjugateGradientOptimizer.java	doOptimize	delta	double	*	0	0	NO_USE	0
1541	167	12	NonLinearConjugateGradientOptimizer.java	doOptimize	current	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1541	167	12	NonLinearConjugateGradientOptimizer.java	doOptimize	iter	int	0	0	2	NO_USE	0
1541	167	12	NonLinearConjugateGradientOptimizer.java	doOptimize	maxEval	int	getEvaluations()	0	0	NO_USE	0
1541	167	12	NonLinearConjugateGradientOptimizer.java	doOptimize	THIS	NonLinearConjugateGradientOptimizer	*	0	7	NO_USE	1
1542	182	12	NonLinearConjugateGradientOptimizer.java	doOptimize	objective	double	computeObjectiveValue()	0	0	NO_USE	0
1542	182	12	NonLinearConjugateGradientOptimizer.java	doOptimize	previous	RealPointValuePair	NAME	0	2	NO_USE	0
1542	182	12	NonLinearConjugateGradientOptimizer.java	doOptimize	lsf	UnivariateRealFunction	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1542	182	12	NonLinearConjugateGradientOptimizer.java	doOptimize	uB	double	findUpperBound()	0	0	NO_USE	0
1542	182	12	NonLinearConjugateGradientOptimizer.java	doOptimize	step	double	solve()	0	0	NO_USE	0
1542	182	12	NonLinearConjugateGradientOptimizer.java	doOptimize	deltaOld	double	NAME	0	0	/	0
1542	182	12	NonLinearConjugateGradientOptimizer.java	doOptimize	newSteepestDescent	double[]	precondition()	0	0	NO_USE	0
1542	182	12	NonLinearConjugateGradientOptimizer.java	doOptimize	beta	double	UNKNOWN_AS	0	1	NO_USE	0
1542	182	12	NonLinearConjugateGradientOptimizer.java	doOptimize	goal	GoalType	getGoalType()	0	2	NO_USE	0
1542	182	12	NonLinearConjugateGradientOptimizer.java	doOptimize	n	int	NAME	0	1	NO_USE	0
1542	182	12	NonLinearConjugateGradientOptimizer.java	doOptimize	r	double[]	PREFIX_EXPR	0	0	OTHER_USE	0
1542	182	12	NonLinearConjugateGradientOptimizer.java	doOptimize	steepestDescent	double[]	precondition()	0	0	ARR_USE	0
1542	182	12	NonLinearConjugateGradientOptimizer.java	doOptimize	searchDirection	double[]	clone()	0	0	NO_USE	0
1542	182	12	NonLinearConjugateGradientOptimizer.java	doOptimize	delta	double	*	0	0	/	0
1542	182	12	NonLinearConjugateGradientOptimizer.java	doOptimize	current	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1542	182	12	NonLinearConjugateGradientOptimizer.java	doOptimize	iter	int	0	0	2	NO_USE	0
1542	182	12	NonLinearConjugateGradientOptimizer.java	doOptimize	maxEval	int	getEvaluations()	0	0	NO_USE	0
1542	182	12	NonLinearConjugateGradientOptimizer.java	doOptimize	THIS	NonLinearConjugateGradientOptimizer	*	0	7	FIELD_USE	1
1543	194	12	NonLinearConjugateGradientOptimizer.java	doOptimize	objective	double	computeObjectiveValue()	0	0	NO_USE	0
1543	194	12	NonLinearConjugateGradientOptimizer.java	doOptimize	previous	RealPointValuePair	NAME	0	2	NO_USE	0
1543	194	12	NonLinearConjugateGradientOptimizer.java	doOptimize	lsf	UnivariateRealFunction	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1543	194	12	NonLinearConjugateGradientOptimizer.java	doOptimize	uB	double	findUpperBound()	0	0	NO_USE	0
1543	194	12	NonLinearConjugateGradientOptimizer.java	doOptimize	step	double	solve()	0	0	NO_USE	0
1543	194	12	NonLinearConjugateGradientOptimizer.java	doOptimize	deltaOld	double	NAME	0	0	NO_USE	0
1543	194	12	NonLinearConjugateGradientOptimizer.java	doOptimize	newSteepestDescent	double[]	precondition()	0	0	NO_USE	0
1543	194	12	NonLinearConjugateGradientOptimizer.java	doOptimize	beta	double	/	0	1	*	1
1543	194	12	NonLinearConjugateGradientOptimizer.java	doOptimize	goal	GoalType	getGoalType()	0	2	NO_USE	0
1543	194	12	NonLinearConjugateGradientOptimizer.java	doOptimize	n	int	NAME	0	1	<	1
1543	194	12	NonLinearConjugateGradientOptimizer.java	doOptimize	r	double[]	PREFIX_EXPR	0	0	NO_USE	0
1543	194	12	NonLinearConjugateGradientOptimizer.java	doOptimize	steepestDescent	double[]	NAME	0	0	CLALLER_USE	0
1543	194	12	NonLinearConjugateGradientOptimizer.java	doOptimize	searchDirection	double[]	clone()	0	0	ARR_USE	0
1543	194	12	NonLinearConjugateGradientOptimizer.java	doOptimize	delta	double	*	0	0	NO_USE	0
1543	194	12	NonLinearConjugateGradientOptimizer.java	doOptimize	current	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1543	194	12	NonLinearConjugateGradientOptimizer.java	doOptimize	iter	int	0	0	2	NO_USE	1
1543	194	12	NonLinearConjugateGradientOptimizer.java	doOptimize	maxEval	int	getEvaluations()	0	0	NO_USE	0
1543	194	12	NonLinearConjugateGradientOptimizer.java	doOptimize	THIS	NonLinearConjugateGradientOptimizer	*	0	7	NO_USE	0
1544	225	12	NonLinearConjugateGradientOptimizer.java	findUpperBound	b	double	+	0	0	RET_USE	0
1544	225	12	NonLinearConjugateGradientOptimizer.java	findUpperBound	step	double	max()	0	0	NO_USE	0
1544	225	12	NonLinearConjugateGradientOptimizer.java	findUpperBound	yA	double	value()	0	1	NO_USE	1
1544	225	12	NonLinearConjugateGradientOptimizer.java	findUpperBound	yB	double	value()	0	1	NO_USE	1
1544	225	12	NonLinearConjugateGradientOptimizer.java	findUpperBound	f	UnivariateRealFunction	PARAM_AS	1	0	NO_USE	0
1544	225	12	NonLinearConjugateGradientOptimizer.java	findUpperBound	a	double	PARAM_AS	1	0	NO_USE	0
1544	225	12	NonLinearConjugateGradientOptimizer.java	findUpperBound	h	double	PARAM_AS	1	0	NO_USE	0
1544	225	12	NonLinearConjugateGradientOptimizer.java	findUpperBound	THIS	NonLinearConjugateGradientOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1545	127	12	GaussNewtonOptimizer.java	doOptimize	previous	VectorialPointValuePair	NAME	0	1	!=	0
1545	127	12	GaussNewtonOptimizer.java	doOptimize	targetValues	double[]	getTargetRef()	0	0	NO_USE	0
1545	127	12	GaussNewtonOptimizer.java	doOptimize	residualsWeights	double[]	getWeightRef()	0	0	NO_USE	0
1545	127	12	GaussNewtonOptimizer.java	doOptimize	b	double[]	*	0	0	NO_USE	0
1545	127	12	GaussNewtonOptimizer.java	doOptimize	a	double[][]	ARRAY_CREATION	0	0	NO_USE	0
1545	127	12	GaussNewtonOptimizer.java	doOptimize	converged	boolean	LITERAL	0	0	NO_USE	0
1545	127	12	GaussNewtonOptimizer.java	doOptimize	checker	ConvergenceChecker<VectorialPointValuePair>	getConvergenceChecker()	0	1	CLALLER_USE	1
1545	127	12	GaussNewtonOptimizer.java	doOptimize	current	VectorialPointValuePair	CLASS_INSTANCE_CREATION	0	0	PARAM_USE	0
1545	127	12	GaussNewtonOptimizer.java	doOptimize	iter	int	0	0	0	PARAM_USE	0
1545	127	12	GaussNewtonOptimizer.java	doOptimize	THIS	GaussNewtonOptimizer	ARRAY_ACCESS	0	0	NO_USE	0
1546	128	16	GaussNewtonOptimizer.java	doOptimize	previous	VectorialPointValuePair	NAME	0	1	PARAM_USE	1
1546	128	16	GaussNewtonOptimizer.java	doOptimize	targetValues	double[]	getTargetRef()	0	0	NO_USE	0
1546	128	16	GaussNewtonOptimizer.java	doOptimize	residualsWeights	double[]	getWeightRef()	0	0	NO_USE	0
1546	128	16	GaussNewtonOptimizer.java	doOptimize	b	double[]	*	0	0	NO_USE	0
1546	128	16	GaussNewtonOptimizer.java	doOptimize	a	double[][]	ARRAY_CREATION	0	0	NO_USE	0
1546	128	16	GaussNewtonOptimizer.java	doOptimize	converged	boolean	LITERAL	0	0	NO_USE	0
1546	128	16	GaussNewtonOptimizer.java	doOptimize	checker	ConvergenceChecker<VectorialPointValuePair>	getConvergenceChecker()	0	1	CLALLER_USE	0
1546	128	16	GaussNewtonOptimizer.java	doOptimize	current	VectorialPointValuePair	CLASS_INSTANCE_CREATION	0	0	PARAM_USE	0
1546	128	16	GaussNewtonOptimizer.java	doOptimize	iter	int	0	0	0	PARAM_USE	0
1546	128	16	GaussNewtonOptimizer.java	doOptimize	THIS	GaussNewtonOptimizer	ARRAY_ACCESS	0	0	NO_USE	0
1547	98	8	AbstractSimplex.java	AbstractSimplex	steps	double[]	PARAM_AS	1	3	NO_USE	1
1547	98	8	AbstractSimplex.java	AbstractSimplex	THIS	AbstractSimplex	UNKNOWN_AS	0	1	NO_USE	0
1548	101	8	AbstractSimplex.java	AbstractSimplex	steps	double[]	PARAM_AS	1	3	NO_USE	1
1548	101	8	AbstractSimplex.java	AbstractSimplex	THIS	AbstractSimplex	UNKNOWN_AS	0	1	NO_USE	1
1549	112	16	AbstractSimplex.java	AbstractSimplex	j	int	0	0	1	NO_USE	1
1549	112	16	AbstractSimplex.java	AbstractSimplex	vertexI	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1549	112	16	AbstractSimplex.java	AbstractSimplex	i	int	0	0	0	NO_USE	0
1549	112	16	AbstractSimplex.java	AbstractSimplex	steps	double[]	PARAM_AS	1	3	NO_USE	1
1549	112	16	AbstractSimplex.java	AbstractSimplex	THIS	AbstractSimplex	ARRAY_CREATION	0	1	FIELD_USE	0
1550	133	8	AbstractSimplex.java	AbstractSimplex	referenceSimplex	double[][]	PARAM_AS	1	1	OTHER_USE	1
1550	133	8	AbstractSimplex.java	AbstractSimplex	THIS	AbstractSimplex	UNKNOWN_AS	0	3	FIELD_USE	1
1551	149	12	AbstractSimplex.java	AbstractSimplex	refI	double[]	ARRAY_ACCESS	0	2	OTHER_USE	1
1551	149	12	AbstractSimplex.java	AbstractSimplex	i	int	0	0	1	NO_USE	0
1551	149	12	AbstractSimplex.java	AbstractSimplex	ref0	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1551	149	12	AbstractSimplex.java	AbstractSimplex	referenceSimplex	double[][]	PARAM_AS	1	1	NO_USE	0
1551	149	12	AbstractSimplex.java	AbstractSimplex	THIS	AbstractSimplex	ARRAY_CREATION	0	3	FIELD_USE	1
1552	156	20	AbstractSimplex.java	AbstractSimplex	k	int	0	0	2	NO_USE	1
1552	156	20	AbstractSimplex.java	AbstractSimplex	refJ	double[]	ARRAY_ACCESS	0	1	NO_USE	1
1552	156	20	AbstractSimplex.java	AbstractSimplex	allEquals	boolean	LITERAL	0	0	NO_USE	0
1552	156	20	AbstractSimplex.java	AbstractSimplex	j	int	0	0	0	NO_USE	0
1552	156	20	AbstractSimplex.java	AbstractSimplex	refI	double[]	ARRAY_ACCESS	0	2	NO_USE	1
1552	156	20	AbstractSimplex.java	AbstractSimplex	i	int	0	0	1	NO_USE	0
1552	156	20	AbstractSimplex.java	AbstractSimplex	ref0	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1552	156	20	AbstractSimplex.java	AbstractSimplex	referenceSimplex	double[][]	PARAM_AS	1	1	NO_USE	0
1552	156	20	AbstractSimplex.java	AbstractSimplex	THIS	AbstractSimplex	ARRAY_CREATION	0	3	NO_USE	0
1553	161	16	AbstractSimplex.java	AbstractSimplex	refJ	double[]	ARRAY_ACCESS	0	1	NO_USE	0
1553	161	16	AbstractSimplex.java	AbstractSimplex	allEquals	boolean	LITERAL	0	0	NO_USE	1
1553	161	16	AbstractSimplex.java	AbstractSimplex	j	int	0	0	0	OTHER_USE	0
1553	161	16	AbstractSimplex.java	AbstractSimplex	refI	double[]	ARRAY_ACCESS	0	2	NO_USE	0
1553	161	16	AbstractSimplex.java	AbstractSimplex	i	int	0	0	1	OTHER_USE	0
1553	161	16	AbstractSimplex.java	AbstractSimplex	ref0	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1553	161	16	AbstractSimplex.java	AbstractSimplex	referenceSimplex	double[][]	PARAM_AS	1	1	NO_USE	0
1553	161	16	AbstractSimplex.java	AbstractSimplex	THIS	AbstractSimplex	ARRAY_CREATION	0	3	FIELD_USE	0
1554	168	12	AbstractSimplex.java	AbstractSimplex	refI	double[]	ARRAY_ACCESS	0	2	ARR_USE	0
1554	168	12	AbstractSimplex.java	AbstractSimplex	i	int	0	0	1	-	1
1554	168	12	AbstractSimplex.java	AbstractSimplex	ref0	double[]	ARRAY_ACCESS	0	0	ARR_USE	0
1554	168	12	AbstractSimplex.java	AbstractSimplex	referenceSimplex	double[][]	PARAM_AS	1	1	NO_USE	0
1554	168	12	AbstractSimplex.java	AbstractSimplex	THIS	AbstractSimplex	ARRAY_CREATION	0	3	FIELD_USE	0
1555	219	8	AbstractSimplex.java	build	startPoint	double[]	PARAM_AS	1	1	OTHER_USE	1
1555	219	8	AbstractSimplex.java	build	THIS	AbstractSimplex	UNKNOWN_AS	0	2	FIELD_USE	1
1556	254	12	AbstractSimplex.java	evaluate	vertex	RealPointValuePair	ARRAY_ACCESS	0	1	NO_USE	1
1556	254	12	AbstractSimplex.java	evaluate	point	double[]	getPointRef()	0	0	OTHER_USE	0
1556	254	12	AbstractSimplex.java	evaluate	i	int	0	0	0	ARRIDX_USE	0
1556	254	12	AbstractSimplex.java	evaluate	evaluationFunction	MultivariateRealFunction	PARAM_AS	1	0	CLALLER_USE	0
1556	254	12	AbstractSimplex.java	evaluate	comparator	Comparator<RealPointValuePair>	PARAM_AS	1	0	NO_USE	0
1556	254	12	AbstractSimplex.java	evaluate	THIS	AbstractSimplex	UNKNOWN_AS	0	0	FIELD_USE	0
1557	273	12	AbstractSimplex.java	replaceWorstPoint	i	int	0	0	1	ARRIDX_USE	1
1557	273	12	AbstractSimplex.java	replaceWorstPoint	pointValuePair	RealPointValuePair	PARAM_AS	1	1	OTHER_USE	1
1557	273	12	AbstractSimplex.java	replaceWorstPoint	comparator	Comparator<RealPointValuePair>	PARAM_AS	1	1	NO_USE	1
1557	273	12	AbstractSimplex.java	replaceWorstPoint	THIS	AbstractSimplex	UNKNOWN_AS	0	1	FIELD_USE	1
1558	300	8	AbstractSimplex.java	getPoint	index	int	PARAM_AS	1	2	OTHER_USE	1
1558	300	8	AbstractSimplex.java	getPoint	THIS	AbstractSimplex	UNKNOWN_AS	0	2	FIELD_USE	1
1559	315	8	AbstractSimplex.java	setPoint	index	int	PARAM_AS	1	2	OTHER_USE	1
1559	315	8	AbstractSimplex.java	setPoint	point	RealPointValuePair	PARAM_AS	1	0	NO_USE	0
1559	315	8	AbstractSimplex.java	setPoint	THIS	AbstractSimplex	UNKNOWN_AS	0	2	FIELD_USE	1
1560	329	8	AbstractSimplex.java	setPoints	points	RealPointValuePair[]	PARAM_AS	1	1	OTHER_USE	1
1560	329	8	AbstractSimplex.java	setPoints	THIS	AbstractSimplex	UNKNOWN_AS	0	3	FIELD_USE	1
1561	166	8	MultiDirectionalSimplex.java	iterate	original	RealPointValuePair[]	getPoints()	0	0	PARAM_USE	0
1561	166	8	MultiDirectionalSimplex.java	iterate	best	RealPointValuePair	ARRAY_ACCESS	0	1	NO_USE	1
1561	166	8	MultiDirectionalSimplex.java	iterate	reflected	RealPointValuePair	evaluateNewSimplex()	0	2	PARAM_USE	1
1561	166	8	MultiDirectionalSimplex.java	iterate	evaluationFunction	MultivariateRealFunction	PARAM_AS	1	0	PARAM_USE	0
1561	166	8	MultiDirectionalSimplex.java	iterate	comparator	Comparator<RealPointValuePair>	PARAM_AS	1	2	PARAM_USE	1
1561	166	8	MultiDirectionalSimplex.java	iterate	THIS	MultiDirectionalSimplex	UNKNOWN_AS	0	0	CLALLER_USE	0
1562	171	12	MultiDirectionalSimplex.java	iterate	reflectedSimplex	RealPointValuePair[]	getPoints()	0	0	PARAM_USE	0
1562	171	12	MultiDirectionalSimplex.java	iterate	expanded	RealPointValuePair	evaluateNewSimplex()	0	1	NO_USE	1
1562	171	12	MultiDirectionalSimplex.java	iterate	original	RealPointValuePair[]	getPoints()	0	0	NO_USE	0
1562	171	12	MultiDirectionalSimplex.java	iterate	best	RealPointValuePair	ARRAY_ACCESS	0	1	NO_USE	0
1562	171	12	MultiDirectionalSimplex.java	iterate	reflected	RealPointValuePair	evaluateNewSimplex()	0	2	NO_USE	1
1562	171	12	MultiDirectionalSimplex.java	iterate	evaluationFunction	MultivariateRealFunction	PARAM_AS	1	0	NO_USE	0
1562	171	12	MultiDirectionalSimplex.java	iterate	comparator	Comparator<RealPointValuePair>	PARAM_AS	1	2	NO_USE	1
1562	171	12	MultiDirectionalSimplex.java	iterate	THIS	MultiDirectionalSimplex	UNKNOWN_AS	0	0	CLALLER_USE	0
1563	112	8	BaseAbstractScalarOptimizer.java	optimize	maxEval	int	PARAM_AS	1	0	NO_USE	0
1563	112	8	BaseAbstractScalarOptimizer.java	optimize	f	FUNC	PARAM_AS	1	1	NO_USE	1
1563	112	8	BaseAbstractScalarOptimizer.java	optimize	goalType	GoalType	PARAM_AS	1	1	NO_USE	0
1563	112	8	BaseAbstractScalarOptimizer.java	optimize	startPoint	double[]	PARAM_AS	1	1	NO_USE	0
1563	112	8	BaseAbstractScalarOptimizer.java	optimize	THIS	BaseAbstractScalarOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1564	115	8	BaseAbstractScalarOptimizer.java	optimize	maxEval	int	PARAM_AS	1	0	NO_USE	0
1564	115	8	BaseAbstractScalarOptimizer.java	optimize	f	FUNC	PARAM_AS	1	1	NO_USE	0
1564	115	8	BaseAbstractScalarOptimizer.java	optimize	goalType	GoalType	PARAM_AS	1	1	NO_USE	1
1564	115	8	BaseAbstractScalarOptimizer.java	optimize	startPoint	double[]	PARAM_AS	1	1	NO_USE	0
1564	115	8	BaseAbstractScalarOptimizer.java	optimize	THIS	BaseAbstractScalarOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1565	118	8	BaseAbstractScalarOptimizer.java	optimize	maxEval	int	PARAM_AS	1	0	NO_USE	0
1565	118	8	BaseAbstractScalarOptimizer.java	optimize	f	FUNC	PARAM_AS	1	1	NO_USE	0
1565	118	8	BaseAbstractScalarOptimizer.java	optimize	goalType	GoalType	PARAM_AS	1	1	NO_USE	0
1565	118	8	BaseAbstractScalarOptimizer.java	optimize	startPoint	double[]	PARAM_AS	1	1	NO_USE	1
1565	118	8	BaseAbstractScalarOptimizer.java	optimize	THIS	BaseAbstractScalarOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1566	298	8	CMAESOptimizer.java	CMAESOptimizer	lambda	int	PARAM_AS	1	0	NO_USE	0
1566	298	8	CMAESOptimizer.java	CMAESOptimizer	inputSigma	double[]	PARAM_AS	1	0	NO_USE	0
1566	298	8	CMAESOptimizer.java	CMAESOptimizer	boundaries	double[][]	PARAM_AS	1	1	OTHER_USE	1
1566	298	8	CMAESOptimizer.java	CMAESOptimizer	maxIterations	int	PARAM_AS	1	0	NO_USE	0
1566	298	8	CMAESOptimizer.java	CMAESOptimizer	stopfitness	double	PARAM_AS	1	0	NO_USE	0
1566	298	8	CMAESOptimizer.java	CMAESOptimizer	isActiveCMA	boolean	PARAM_AS	1	0	NO_USE	0
1566	298	8	CMAESOptimizer.java	CMAESOptimizer	diagonalOnly	int	PARAM_AS	1	0	NO_USE	0
1566	298	8	CMAESOptimizer.java	CMAESOptimizer	checkFeasableCount	int	PARAM_AS	1	0	NO_USE	0
1566	298	8	CMAESOptimizer.java	CMAESOptimizer	random	RandomGenerator	PARAM_AS	1	0	NO_USE	0
1566	298	8	CMAESOptimizer.java	CMAESOptimizer	generateStatistics	boolean	PARAM_AS	1	0	NO_USE	0
1566	298	8	CMAESOptimizer.java	CMAESOptimizer	THIS	CMAESOptimizer	OTHERS	0	0	FIELD_USE	0
1567	375	24	CMAESOptimizer.java	doOptimize	i	int	0	0	1	NO_USE	0
1567	375	24	CMAESOptimizer.java	doOptimize	arxk	RealMatrix	NULL	0	1	NO_USE	0
1567	375	24	CMAESOptimizer.java	doOptimize	k	int	0	0	0	PARAM_USE	0
1567	375	24	CMAESOptimizer.java	doOptimize	arz	RealMatrix	randn1()	0	0	CLALLER_USE	0
1567	375	24	CMAESOptimizer.java	doOptimize	arx	RealMatrix	zeros()	0	0	NO_USE	0
1567	375	24	CMAESOptimizer.java	doOptimize	fitness	double[]	ARRAY_CREATION	0	1	NO_USE	0
1567	375	24	CMAESOptimizer.java	doOptimize	fitfun	FitnessFunction	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1567	375	24	CMAESOptimizer.java	doOptimize	guess	double[]	encode()	0	0	NO_USE	0
1567	375	24	CMAESOptimizer.java	doOptimize	bestValue	double	value()	0	2	NO_USE	0
1567	375	24	CMAESOptimizer.java	doOptimize	optimum	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1567	375	24	CMAESOptimizer.java	doOptimize	lastResult	RealPointValuePair	NULL	0	4	NO_USE	0
1567	375	24	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	1	0	30	FIELD_USE	1
1568	382	24	CMAESOptimizer.java	doOptimize	i	int	0	0	1	NO_USE	1
1568	382	24	CMAESOptimizer.java	doOptimize	arxk	RealMatrix	add()	0	1	NO_USE	1
1568	382	24	CMAESOptimizer.java	doOptimize	k	int	0	0	0	NO_USE	0
1568	382	24	CMAESOptimizer.java	doOptimize	arz	RealMatrix	randn1()	0	0	NO_USE	0
1568	382	24	CMAESOptimizer.java	doOptimize	arx	RealMatrix	zeros()	0	0	NO_USE	0
1568	382	24	CMAESOptimizer.java	doOptimize	fitness	double[]	ARRAY_CREATION	0	1	NO_USE	0
1568	382	24	CMAESOptimizer.java	doOptimize	fitfun	FitnessFunction	CLASS_INSTANCE_CREATION	0	1	NO_USE	1
1568	382	24	CMAESOptimizer.java	doOptimize	guess	double[]	encode()	0	0	NO_USE	0
1568	382	24	CMAESOptimizer.java	doOptimize	bestValue	double	value()	0	2	NO_USE	0
1568	382	24	CMAESOptimizer.java	doOptimize	optimum	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1568	382	24	CMAESOptimizer.java	doOptimize	lastResult	RealPointValuePair	NULL	0	4	NO_USE	0
1568	382	24	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	1	0	30	NO_USE	1
1569	404	16	CMAESOptimizer.java	doOptimize	arz	RealMatrix	randn1()	0	0	PARAM_USE	0
1569	404	16	CMAESOptimizer.java	doOptimize	arx	RealMatrix	zeros()	0	0	NO_USE	0
1569	404	16	CMAESOptimizer.java	doOptimize	fitness	double[]	value()	0	1	NO_USE	0
1569	404	16	CMAESOptimizer.java	doOptimize	arindex	int[]	sortedIndices()	0	1	PARAM_USE	0
1569	404	16	CMAESOptimizer.java	doOptimize	xold	RealMatrix	NAME	0	0	PARAM_USE	0
1569	404	16	CMAESOptimizer.java	doOptimize	bestArx	RealMatrix	selectColumns()	0	0	PARAM_USE	0
1569	404	16	CMAESOptimizer.java	doOptimize	bestArz	RealMatrix	selectColumns()	0	0	PARAM_USE	0
1569	404	16	CMAESOptimizer.java	doOptimize	zmean	RealMatrix	multiply()	0	0	NO_USE	0
1569	404	16	CMAESOptimizer.java	doOptimize	hsig	boolean	updateEvolutionPaths()	0	0	PARAM_USE	0
1569	404	16	CMAESOptimizer.java	doOptimize	fitfun	FitnessFunction	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1569	404	16	CMAESOptimizer.java	doOptimize	guess	double[]	encode()	0	0	NO_USE	0
1569	404	16	CMAESOptimizer.java	doOptimize	bestValue	double	value()	0	2	NO_USE	0
1569	404	16	CMAESOptimizer.java	doOptimize	optimum	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1569	404	16	CMAESOptimizer.java	doOptimize	lastResult	RealPointValuePair	NULL	0	4	NO_USE	0
1569	404	16	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	multiply()	0	30	CLALLER_USE	1
1570	413	16	CMAESOptimizer.java	doOptimize	arz	RealMatrix	randn1()	0	0	NO_USE	0
1570	413	16	CMAESOptimizer.java	doOptimize	arx	RealMatrix	zeros()	0	0	NO_USE	0
1570	413	16	CMAESOptimizer.java	doOptimize	fitness	double[]	value()	0	1	NO_USE	0
1570	413	16	CMAESOptimizer.java	doOptimize	arindex	int[]	sortedIndices()	0	1	NO_USE	0
1570	413	16	CMAESOptimizer.java	doOptimize	xold	RealMatrix	NAME	0	0	NO_USE	0
1570	413	16	CMAESOptimizer.java	doOptimize	bestArx	RealMatrix	selectColumns()	0	0	CLALLER_USE	0
1570	413	16	CMAESOptimizer.java	doOptimize	bestArz	RealMatrix	selectColumns()	0	0	NO_USE	0
1570	413	16	CMAESOptimizer.java	doOptimize	zmean	RealMatrix	multiply()	0	0	NO_USE	0
1570	413	16	CMAESOptimizer.java	doOptimize	hsig	boolean	updateEvolutionPaths()	0	0	NO_USE	0
1570	413	16	CMAESOptimizer.java	doOptimize	bestFitness	double	ARRAY_ACCESS	0	5	OTHER_USE	1
1570	413	16	CMAESOptimizer.java	doOptimize	worstFitness	double	ARRAY_ACCESS	0	1	NO_USE	0
1570	413	16	CMAESOptimizer.java	doOptimize	fitfun	FitnessFunction	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	0
1570	413	16	CMAESOptimizer.java	doOptimize	guess	double[]	encode()	0	0	NO_USE	0
1570	413	16	CMAESOptimizer.java	doOptimize	bestValue	double	value()	0	2	NO_USE	1
1570	413	16	CMAESOptimizer.java	doOptimize	optimum	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	OTHER_USE	0
1570	413	16	CMAESOptimizer.java	doOptimize	lastResult	RealPointValuePair	NULL	0	4	!=	0
1570	413	16	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	exp()	0	30	FIELD_USE	0
1571	419	20	CMAESOptimizer.java	doOptimize	arz	RealMatrix	randn1()	0	0	NO_USE	0
1571	419	20	CMAESOptimizer.java	doOptimize	arx	RealMatrix	zeros()	0	0	NO_USE	0
1571	419	20	CMAESOptimizer.java	doOptimize	fitness	double[]	value()	0	1	NO_USE	0
1571	419	20	CMAESOptimizer.java	doOptimize	arindex	int[]	sortedIndices()	0	1	NO_USE	0
1571	419	20	CMAESOptimizer.java	doOptimize	xold	RealMatrix	NAME	0	0	NO_USE	0
1571	419	20	CMAESOptimizer.java	doOptimize	bestArx	RealMatrix	selectColumns()	0	0	NO_USE	0
1571	419	20	CMAESOptimizer.java	doOptimize	bestArz	RealMatrix	selectColumns()	0	0	NO_USE	0
1571	419	20	CMAESOptimizer.java	doOptimize	zmean	RealMatrix	multiply()	0	0	NO_USE	0
1571	419	20	CMAESOptimizer.java	doOptimize	hsig	boolean	updateEvolutionPaths()	0	0	NO_USE	0
1571	419	20	CMAESOptimizer.java	doOptimize	bestFitness	double	ARRAY_ACCESS	0	5	NO_USE	0
1571	419	20	CMAESOptimizer.java	doOptimize	worstFitness	double	ARRAY_ACCESS	0	1	NO_USE	0
1571	419	20	CMAESOptimizer.java	doOptimize	fitfun	FitnessFunction	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1571	419	20	CMAESOptimizer.java	doOptimize	guess	double[]	encode()	0	0	NO_USE	0
1571	419	20	CMAESOptimizer.java	doOptimize	bestValue	double	NAME	0	2	NO_USE	0
1571	419	20	CMAESOptimizer.java	doOptimize	optimum	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	PARAM_USE	0
1571	419	20	CMAESOptimizer.java	doOptimize	lastResult	RealPointValuePair	NAME	0	4	PARAM_USE	1
1571	419	20	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	exp()	0	30	CLALLER_USE	1
1572	420	24	CMAESOptimizer.java	doOptimize	arz	RealMatrix	randn1()	0	0	NO_USE	0
1572	420	24	CMAESOptimizer.java	doOptimize	arx	RealMatrix	zeros()	0	0	NO_USE	0
1572	420	24	CMAESOptimizer.java	doOptimize	fitness	double[]	value()	0	1	NO_USE	0
1572	420	24	CMAESOptimizer.java	doOptimize	arindex	int[]	sortedIndices()	0	1	NO_USE	0
1572	420	24	CMAESOptimizer.java	doOptimize	xold	RealMatrix	NAME	0	0	NO_USE	0
1572	420	24	CMAESOptimizer.java	doOptimize	bestArx	RealMatrix	selectColumns()	0	0	NO_USE	0
1572	420	24	CMAESOptimizer.java	doOptimize	bestArz	RealMatrix	selectColumns()	0	0	NO_USE	0
1572	420	24	CMAESOptimizer.java	doOptimize	zmean	RealMatrix	multiply()	0	0	NO_USE	0
1572	420	24	CMAESOptimizer.java	doOptimize	hsig	boolean	updateEvolutionPaths()	0	0	NO_USE	0
1572	420	24	CMAESOptimizer.java	doOptimize	bestFitness	double	ARRAY_ACCESS	0	5	NO_USE	0
1572	420	24	CMAESOptimizer.java	doOptimize	worstFitness	double	ARRAY_ACCESS	0	1	NO_USE	0
1572	420	24	CMAESOptimizer.java	doOptimize	fitfun	FitnessFunction	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1572	420	24	CMAESOptimizer.java	doOptimize	guess	double[]	encode()	0	0	NO_USE	0
1572	420	24	CMAESOptimizer.java	doOptimize	bestValue	double	NAME	0	2	NO_USE	0
1572	420	24	CMAESOptimizer.java	doOptimize	optimum	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	1
1572	420	24	CMAESOptimizer.java	doOptimize	lastResult	RealPointValuePair	NAME	0	4	NO_USE	1
1572	420	24	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	exp()	0	30	FIELD_USE	1
1573	427	16	CMAESOptimizer.java	doOptimize	arz	RealMatrix	randn1()	0	0	NO_USE	0
1573	427	16	CMAESOptimizer.java	doOptimize	arx	RealMatrix	zeros()	0	0	NO_USE	0
1573	427	16	CMAESOptimizer.java	doOptimize	fitness	double[]	value()	0	1	NO_USE	0
1573	427	16	CMAESOptimizer.java	doOptimize	arindex	int[]	sortedIndices()	0	1	NO_USE	0
1573	427	16	CMAESOptimizer.java	doOptimize	xold	RealMatrix	NAME	0	0	NO_USE	0
1573	427	16	CMAESOptimizer.java	doOptimize	bestArx	RealMatrix	selectColumns()	0	0	NO_USE	0
1573	427	16	CMAESOptimizer.java	doOptimize	bestArz	RealMatrix	selectColumns()	0	0	NO_USE	0
1573	427	16	CMAESOptimizer.java	doOptimize	zmean	RealMatrix	multiply()	0	0	NO_USE	0
1573	427	16	CMAESOptimizer.java	doOptimize	hsig	boolean	updateEvolutionPaths()	0	0	NO_USE	0
1573	427	16	CMAESOptimizer.java	doOptimize	bestFitness	double	ARRAY_ACCESS	0	5	<	0
1573	427	16	CMAESOptimizer.java	doOptimize	worstFitness	double	ARRAY_ACCESS	0	1	NO_USE	0
1573	427	16	CMAESOptimizer.java	doOptimize	fitfun	FitnessFunction	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1573	427	16	CMAESOptimizer.java	doOptimize	guess	double[]	encode()	0	0	NO_USE	0
1573	427	16	CMAESOptimizer.java	doOptimize	bestValue	double	NAME	0	2	NO_USE	0
1573	427	16	CMAESOptimizer.java	doOptimize	optimum	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1573	427	16	CMAESOptimizer.java	doOptimize	lastResult	RealPointValuePair	NAME	0	4	NO_USE	0
1573	427	16	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	exp()	0	30	FIELD_USE	1
1574	428	20	CMAESOptimizer.java	doOptimize	arz	RealMatrix	randn1()	0	0	NO_USE	0
1574	428	20	CMAESOptimizer.java	doOptimize	arx	RealMatrix	zeros()	0	0	NO_USE	0
1574	428	20	CMAESOptimizer.java	doOptimize	fitness	double[]	value()	0	1	NO_USE	0
1574	428	20	CMAESOptimizer.java	doOptimize	arindex	int[]	sortedIndices()	0	1	NO_USE	0
1574	428	20	CMAESOptimizer.java	doOptimize	xold	RealMatrix	NAME	0	0	NO_USE	0
1574	428	20	CMAESOptimizer.java	doOptimize	bestArx	RealMatrix	selectColumns()	0	0	NO_USE	0
1574	428	20	CMAESOptimizer.java	doOptimize	bestArz	RealMatrix	selectColumns()	0	0	NO_USE	0
1574	428	20	CMAESOptimizer.java	doOptimize	zmean	RealMatrix	multiply()	0	0	NO_USE	0
1574	428	20	CMAESOptimizer.java	doOptimize	hsig	boolean	updateEvolutionPaths()	0	0	NO_USE	0
1574	428	20	CMAESOptimizer.java	doOptimize	bestFitness	double	ARRAY_ACCESS	0	5	NO_USE	1
1574	428	20	CMAESOptimizer.java	doOptimize	worstFitness	double	ARRAY_ACCESS	0	1	NO_USE	0
1574	428	20	CMAESOptimizer.java	doOptimize	fitfun	FitnessFunction	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1574	428	20	CMAESOptimizer.java	doOptimize	guess	double[]	encode()	0	0	NO_USE	0
1574	428	20	CMAESOptimizer.java	doOptimize	bestValue	double	NAME	0	2	NO_USE	0
1574	428	20	CMAESOptimizer.java	doOptimize	optimum	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1574	428	20	CMAESOptimizer.java	doOptimize	lastResult	RealPointValuePair	NAME	0	4	NO_USE	0
1574	428	20	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	exp()	0	30	FIELD_USE	1
1575	435	20	CMAESOptimizer.java	doOptimize	i	int	0	0	3	NO_USE	1
1575	435	20	CMAESOptimizer.java	doOptimize	arz	RealMatrix	randn1()	0	0	NO_USE	0
1575	435	20	CMAESOptimizer.java	doOptimize	arx	RealMatrix	zeros()	0	0	NO_USE	0
1575	435	20	CMAESOptimizer.java	doOptimize	fitness	double[]	value()	0	1	NO_USE	0
1575	435	20	CMAESOptimizer.java	doOptimize	arindex	int[]	sortedIndices()	0	1	NO_USE	0
1575	435	20	CMAESOptimizer.java	doOptimize	xold	RealMatrix	NAME	0	0	NO_USE	0
1575	435	20	CMAESOptimizer.java	doOptimize	bestArx	RealMatrix	selectColumns()	0	0	NO_USE	0
1575	435	20	CMAESOptimizer.java	doOptimize	bestArz	RealMatrix	selectColumns()	0	0	NO_USE	0
1575	435	20	CMAESOptimizer.java	doOptimize	zmean	RealMatrix	multiply()	0	0	NO_USE	0
1575	435	20	CMAESOptimizer.java	doOptimize	hsig	boolean	updateEvolutionPaths()	0	0	NO_USE	0
1575	435	20	CMAESOptimizer.java	doOptimize	bestFitness	double	ARRAY_ACCESS	0	5	NO_USE	0
1575	435	20	CMAESOptimizer.java	doOptimize	worstFitness	double	ARRAY_ACCESS	0	1	NO_USE	0
1575	435	20	CMAESOptimizer.java	doOptimize	sqrtDiagC	double[]	getColumn()	0	2	NO_USE	1
1575	435	20	CMAESOptimizer.java	doOptimize	pcCol	double[]	getColumn()	0	1	NO_USE	1
1575	435	20	CMAESOptimizer.java	doOptimize	fitfun	FitnessFunction	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1575	435	20	CMAESOptimizer.java	doOptimize	guess	double[]	encode()	0	0	NO_USE	0
1575	435	20	CMAESOptimizer.java	doOptimize	bestValue	double	NAME	0	2	NO_USE	0
1575	435	20	CMAESOptimizer.java	doOptimize	optimum	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1575	435	20	CMAESOptimizer.java	doOptimize	lastResult	RealPointValuePair	NAME	0	4	NO_USE	0
1575	435	20	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	exp()	0	30	NO_USE	1
1576	438	20	CMAESOptimizer.java	doOptimize	i	int	0	0	3	NO_USE	1
1576	438	20	CMAESOptimizer.java	doOptimize	arz	RealMatrix	randn1()	0	0	NO_USE	0
1576	438	20	CMAESOptimizer.java	doOptimize	arx	RealMatrix	zeros()	0	0	NO_USE	0
1576	438	20	CMAESOptimizer.java	doOptimize	fitness	double[]	value()	0	1	NO_USE	0
1576	438	20	CMAESOptimizer.java	doOptimize	arindex	int[]	sortedIndices()	0	1	NO_USE	0
1576	438	20	CMAESOptimizer.java	doOptimize	xold	RealMatrix	NAME	0	0	NO_USE	0
1576	438	20	CMAESOptimizer.java	doOptimize	bestArx	RealMatrix	selectColumns()	0	0	NO_USE	0
1576	438	20	CMAESOptimizer.java	doOptimize	bestArz	RealMatrix	selectColumns()	0	0	NO_USE	0
1576	438	20	CMAESOptimizer.java	doOptimize	zmean	RealMatrix	multiply()	0	0	NO_USE	0
1576	438	20	CMAESOptimizer.java	doOptimize	hsig	boolean	updateEvolutionPaths()	0	0	NO_USE	0
1576	438	20	CMAESOptimizer.java	doOptimize	bestFitness	double	ARRAY_ACCESS	0	5	NO_USE	0
1576	438	20	CMAESOptimizer.java	doOptimize	worstFitness	double	ARRAY_ACCESS	0	1	NO_USE	0
1576	438	20	CMAESOptimizer.java	doOptimize	sqrtDiagC	double[]	getColumn()	0	2	NO_USE	0
1576	438	20	CMAESOptimizer.java	doOptimize	pcCol	double[]	getColumn()	0	1	NO_USE	0
1576	438	20	CMAESOptimizer.java	doOptimize	fitfun	FitnessFunction	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1576	438	20	CMAESOptimizer.java	doOptimize	guess	double[]	encode()	0	0	NO_USE	0
1576	438	20	CMAESOptimizer.java	doOptimize	bestValue	double	NAME	0	2	NO_USE	0
1576	438	20	CMAESOptimizer.java	doOptimize	optimum	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1576	438	20	CMAESOptimizer.java	doOptimize	lastResult	RealPointValuePair	NAME	0	4	NO_USE	0
1576	438	20	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	exp()	0	30	FIELD_USE	1
1577	443	20	CMAESOptimizer.java	doOptimize	i	int	0	0	1	NO_USE	1
1577	443	20	CMAESOptimizer.java	doOptimize	arz	RealMatrix	randn1()	0	0	NO_USE	0
1577	443	20	CMAESOptimizer.java	doOptimize	arx	RealMatrix	zeros()	0	0	NO_USE	0
1577	443	20	CMAESOptimizer.java	doOptimize	fitness	double[]	value()	0	1	NO_USE	0
1577	443	20	CMAESOptimizer.java	doOptimize	arindex	int[]	sortedIndices()	0	1	NO_USE	0
1577	443	20	CMAESOptimizer.java	doOptimize	xold	RealMatrix	NAME	0	0	NO_USE	0
1577	443	20	CMAESOptimizer.java	doOptimize	bestArx	RealMatrix	selectColumns()	0	0	NO_USE	0
1577	443	20	CMAESOptimizer.java	doOptimize	bestArz	RealMatrix	selectColumns()	0	0	NO_USE	0
1577	443	20	CMAESOptimizer.java	doOptimize	zmean	RealMatrix	multiply()	0	0	NO_USE	0
1577	443	20	CMAESOptimizer.java	doOptimize	hsig	boolean	updateEvolutionPaths()	0	0	NO_USE	0
1577	443	20	CMAESOptimizer.java	doOptimize	bestFitness	double	ARRAY_ACCESS	0	5	NO_USE	0
1577	443	20	CMAESOptimizer.java	doOptimize	worstFitness	double	ARRAY_ACCESS	0	1	NO_USE	0
1577	443	20	CMAESOptimizer.java	doOptimize	sqrtDiagC	double[]	getColumn()	0	2	NO_USE	1
1577	443	20	CMAESOptimizer.java	doOptimize	pcCol	double[]	getColumn()	0	1	NO_USE	0
1577	443	20	CMAESOptimizer.java	doOptimize	fitfun	FitnessFunction	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1577	443	20	CMAESOptimizer.java	doOptimize	guess	double[]	encode()	0	0	NO_USE	0
1577	443	20	CMAESOptimizer.java	doOptimize	bestValue	double	NAME	0	2	NO_USE	0
1577	443	20	CMAESOptimizer.java	doOptimize	optimum	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1577	443	20	CMAESOptimizer.java	doOptimize	lastResult	RealPointValuePair	NAME	0	4	NO_USE	0
1577	443	20	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	exp()	0	30	FIELD_USE	1
1578	449	16	CMAESOptimizer.java	doOptimize	arz	RealMatrix	randn1()	0	0	NO_USE	0
1578	449	16	CMAESOptimizer.java	doOptimize	arx	RealMatrix	zeros()	0	0	NO_USE	0
1578	449	16	CMAESOptimizer.java	doOptimize	fitness	double[]	value()	0	1	NO_USE	0
1578	449	16	CMAESOptimizer.java	doOptimize	arindex	int[]	sortedIndices()	0	1	NO_USE	0
1578	449	16	CMAESOptimizer.java	doOptimize	xold	RealMatrix	NAME	0	0	NO_USE	0
1578	449	16	CMAESOptimizer.java	doOptimize	bestArx	RealMatrix	selectColumns()	0	0	NO_USE	0
1578	449	16	CMAESOptimizer.java	doOptimize	bestArz	RealMatrix	selectColumns()	0	0	NO_USE	0
1578	449	16	CMAESOptimizer.java	doOptimize	zmean	RealMatrix	multiply()	0	0	NO_USE	0
1578	449	16	CMAESOptimizer.java	doOptimize	hsig	boolean	updateEvolutionPaths()	0	0	NO_USE	0
1578	449	16	CMAESOptimizer.java	doOptimize	bestFitness	double	ARRAY_ACCESS	0	5	NO_USE	1
1578	449	16	CMAESOptimizer.java	doOptimize	worstFitness	double	ARRAY_ACCESS	0	1	NO_USE	1
1578	449	16	CMAESOptimizer.java	doOptimize	sqrtDiagC	double[]	getColumn()	0	2	NO_USE	0
1578	449	16	CMAESOptimizer.java	doOptimize	pcCol	double[]	getColumn()	0	1	NO_USE	0
1578	449	16	CMAESOptimizer.java	doOptimize	historyBest	double	min()	0	3	NO_USE	1
1578	449	16	CMAESOptimizer.java	doOptimize	historyWorst	double	max()	0	3	NO_USE	1
1578	449	16	CMAESOptimizer.java	doOptimize	fitfun	FitnessFunction	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1578	449	16	CMAESOptimizer.java	doOptimize	guess	double[]	encode()	0	0	NO_USE	0
1578	449	16	CMAESOptimizer.java	doOptimize	bestValue	double	NAME	0	2	NO_USE	0
1578	449	16	CMAESOptimizer.java	doOptimize	optimum	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1578	449	16	CMAESOptimizer.java	doOptimize	lastResult	RealPointValuePair	NAME	0	4	NO_USE	0
1578	449	16	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	exp()	0	30	FIELD_USE	1
1579	453	16	CMAESOptimizer.java	doOptimize	arz	RealMatrix	randn1()	0	0	NO_USE	0
1579	453	16	CMAESOptimizer.java	doOptimize	arx	RealMatrix	zeros()	0	0	NO_USE	0
1579	453	16	CMAESOptimizer.java	doOptimize	fitness	double[]	value()	0	1	NO_USE	0
1579	453	16	CMAESOptimizer.java	doOptimize	arindex	int[]	sortedIndices()	0	1	NO_USE	0
1579	453	16	CMAESOptimizer.java	doOptimize	xold	RealMatrix	NAME	0	0	NO_USE	0
1579	453	16	CMAESOptimizer.java	doOptimize	bestArx	RealMatrix	selectColumns()	0	0	NO_USE	0
1579	453	16	CMAESOptimizer.java	doOptimize	bestArz	RealMatrix	selectColumns()	0	0	NO_USE	0
1579	453	16	CMAESOptimizer.java	doOptimize	zmean	RealMatrix	multiply()	0	0	NO_USE	0
1579	453	16	CMAESOptimizer.java	doOptimize	hsig	boolean	updateEvolutionPaths()	0	0	NO_USE	0
1579	453	16	CMAESOptimizer.java	doOptimize	bestFitness	double	ARRAY_ACCESS	0	5	NO_USE	0
1579	453	16	CMAESOptimizer.java	doOptimize	worstFitness	double	ARRAY_ACCESS	0	1	NO_USE	0
1579	453	16	CMAESOptimizer.java	doOptimize	sqrtDiagC	double[]	getColumn()	0	2	NO_USE	0
1579	453	16	CMAESOptimizer.java	doOptimize	pcCol	double[]	getColumn()	0	1	NO_USE	0
1579	453	16	CMAESOptimizer.java	doOptimize	historyBest	double	min()	0	3	NO_USE	1
1579	453	16	CMAESOptimizer.java	doOptimize	historyWorst	double	max()	0	3	NO_USE	1
1579	453	16	CMAESOptimizer.java	doOptimize	fitfun	FitnessFunction	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1579	453	16	CMAESOptimizer.java	doOptimize	guess	double[]	encode()	0	0	NO_USE	0
1579	453	16	CMAESOptimizer.java	doOptimize	bestValue	double	NAME	0	2	NO_USE	0
1579	453	16	CMAESOptimizer.java	doOptimize	optimum	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1579	453	16	CMAESOptimizer.java	doOptimize	lastResult	RealPointValuePair	NAME	0	4	NO_USE	0
1579	453	16	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	exp()	0	30	FIELD_USE	1
1580	458	16	CMAESOptimizer.java	doOptimize	arz	RealMatrix	randn1()	0	0	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	arx	RealMatrix	zeros()	0	0	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	fitness	double[]	value()	0	1	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	arindex	int[]	sortedIndices()	0	1	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	xold	RealMatrix	NAME	0	0	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	bestArx	RealMatrix	selectColumns()	0	0	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	bestArz	RealMatrix	selectColumns()	0	0	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	zmean	RealMatrix	multiply()	0	0	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	hsig	boolean	updateEvolutionPaths()	0	0	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	bestFitness	double	ARRAY_ACCESS	0	5	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	worstFitness	double	ARRAY_ACCESS	0	1	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	sqrtDiagC	double[]	getColumn()	0	2	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	pcCol	double[]	getColumn()	0	1	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	historyBest	double	min()	0	3	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	historyWorst	double	max()	0	3	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	fitfun	FitnessFunction	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	guess	double[]	encode()	0	0	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	bestValue	double	NAME	0	2	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	optimum	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	lastResult	RealPointValuePair	NAME	0	4	NO_USE	0
1580	458	16	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	exp()	0	30	FIELD_USE	1
1581	462	16	CMAESOptimizer.java	doOptimize	arz	RealMatrix	randn1()	0	0	NO_USE	0
1581	462	16	CMAESOptimizer.java	doOptimize	arx	RealMatrix	zeros()	0	0	NO_USE	0
1581	462	16	CMAESOptimizer.java	doOptimize	fitness	double[]	value()	0	1	NO_USE	0
1581	462	16	CMAESOptimizer.java	doOptimize	arindex	int[]	sortedIndices()	0	1	NO_USE	0
1581	462	16	CMAESOptimizer.java	doOptimize	xold	RealMatrix	NAME	0	0	NO_USE	0
1581	462	16	CMAESOptimizer.java	doOptimize	bestArx	RealMatrix	selectColumns()	0	0	CLALLER_USE	0
1581	462	16	CMAESOptimizer.java	doOptimize	bestArz	RealMatrix	selectColumns()	0	0	NO_USE	0
1581	462	16	CMAESOptimizer.java	doOptimize	zmean	RealMatrix	multiply()	0	0	NO_USE	0
1581	462	16	CMAESOptimizer.java	doOptimize	hsig	boolean	updateEvolutionPaths()	0	0	NO_USE	0
1581	462	16	CMAESOptimizer.java	doOptimize	bestFitness	double	ARRAY_ACCESS	0	5	OTHER_USE	0
1581	462	16	CMAESOptimizer.java	doOptimize	worstFitness	double	ARRAY_ACCESS	0	1	NO_USE	0
1581	462	16	CMAESOptimizer.java	doOptimize	sqrtDiagC	double[]	getColumn()	0	2	NO_USE	0
1581	462	16	CMAESOptimizer.java	doOptimize	pcCol	double[]	getColumn()	0	1	NO_USE	0
1581	462	16	CMAESOptimizer.java	doOptimize	historyBest	double	min()	0	3	NO_USE	0
1581	462	16	CMAESOptimizer.java	doOptimize	historyWorst	double	max()	0	3	NO_USE	0
1581	462	16	CMAESOptimizer.java	doOptimize	fitfun	FitnessFunction	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1581	462	16	CMAESOptimizer.java	doOptimize	guess	double[]	encode()	0	0	NO_USE	0
1581	462	16	CMAESOptimizer.java	doOptimize	bestValue	double	NAME	0	2	NO_USE	0
1581	462	16	CMAESOptimizer.java	doOptimize	optimum	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1581	462	16	CMAESOptimizer.java	doOptimize	lastResult	RealPointValuePair	NAME	0	4	!=	0
1581	462	16	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	exp()	0	30	FIELD_USE	1
1582	466	20	CMAESOptimizer.java	doOptimize	current	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	1
1582	466	20	CMAESOptimizer.java	doOptimize	arz	RealMatrix	randn1()	0	0	NO_USE	0
1582	466	20	CMAESOptimizer.java	doOptimize	arx	RealMatrix	zeros()	0	0	NO_USE	0
1582	466	20	CMAESOptimizer.java	doOptimize	fitness	double[]	value()	0	1	NO_USE	0
1582	466	20	CMAESOptimizer.java	doOptimize	arindex	int[]	sortedIndices()	0	1	NO_USE	0
1582	466	20	CMAESOptimizer.java	doOptimize	xold	RealMatrix	NAME	0	0	NO_USE	0
1582	466	20	CMAESOptimizer.java	doOptimize	bestArx	RealMatrix	selectColumns()	0	0	NO_USE	0
1582	466	20	CMAESOptimizer.java	doOptimize	bestArz	RealMatrix	selectColumns()	0	0	NO_USE	0
1582	466	20	CMAESOptimizer.java	doOptimize	zmean	RealMatrix	multiply()	0	0	NO_USE	0
1582	466	20	CMAESOptimizer.java	doOptimize	hsig	boolean	updateEvolutionPaths()	0	0	NO_USE	0
1582	466	20	CMAESOptimizer.java	doOptimize	bestFitness	double	ARRAY_ACCESS	0	5	NO_USE	0
1582	466	20	CMAESOptimizer.java	doOptimize	worstFitness	double	ARRAY_ACCESS	0	1	NO_USE	0
1582	466	20	CMAESOptimizer.java	doOptimize	sqrtDiagC	double[]	getColumn()	0	2	NO_USE	0
1582	466	20	CMAESOptimizer.java	doOptimize	pcCol	double[]	getColumn()	0	1	NO_USE	0
1582	466	20	CMAESOptimizer.java	doOptimize	historyBest	double	min()	0	3	NO_USE	0
1582	466	20	CMAESOptimizer.java	doOptimize	historyWorst	double	max()	0	3	NO_USE	0
1582	466	20	CMAESOptimizer.java	doOptimize	fitfun	FitnessFunction	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1582	466	20	CMAESOptimizer.java	doOptimize	guess	double[]	encode()	0	0	NO_USE	0
1582	466	20	CMAESOptimizer.java	doOptimize	bestValue	double	NAME	0	2	NO_USE	0
1582	466	20	CMAESOptimizer.java	doOptimize	optimum	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1582	466	20	CMAESOptimizer.java	doOptimize	lastResult	RealPointValuePair	NAME	0	4	NO_USE	1
1582	466	20	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	exp()	0	30	FIELD_USE	1
1583	473	16	CMAESOptimizer.java	doOptimize	arz	RealMatrix	randn1()	0	0	NO_USE	0
1583	473	16	CMAESOptimizer.java	doOptimize	arx	RealMatrix	zeros()	0	0	NO_USE	0
1583	473	16	CMAESOptimizer.java	doOptimize	fitness	double[]	value()	0	1	NO_USE	1
1583	473	16	CMAESOptimizer.java	doOptimize	arindex	int[]	sortedIndices()	0	1	NO_USE	1
1583	473	16	CMAESOptimizer.java	doOptimize	xold	RealMatrix	NAME	0	0	NO_USE	0
1583	473	16	CMAESOptimizer.java	doOptimize	bestArx	RealMatrix	selectColumns()	0	0	NO_USE	0
1583	473	16	CMAESOptimizer.java	doOptimize	bestArz	RealMatrix	selectColumns()	0	0	NO_USE	0
1583	473	16	CMAESOptimizer.java	doOptimize	zmean	RealMatrix	multiply()	0	0	NO_USE	0
1583	473	16	CMAESOptimizer.java	doOptimize	hsig	boolean	updateEvolutionPaths()	0	0	NO_USE	0
1583	473	16	CMAESOptimizer.java	doOptimize	bestFitness	double	ARRAY_ACCESS	0	5	NO_USE	0
1583	473	16	CMAESOptimizer.java	doOptimize	worstFitness	double	ARRAY_ACCESS	0	1	NO_USE	0
1583	473	16	CMAESOptimizer.java	doOptimize	sqrtDiagC	double[]	getColumn()	0	2	NO_USE	0
1583	473	16	CMAESOptimizer.java	doOptimize	pcCol	double[]	getColumn()	0	1	NO_USE	0
1583	473	16	CMAESOptimizer.java	doOptimize	historyBest	double	min()	0	3	NO_USE	0
1583	473	16	CMAESOptimizer.java	doOptimize	historyWorst	double	max()	0	3	NO_USE	0
1583	473	16	CMAESOptimizer.java	doOptimize	fitfun	FitnessFunction	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1583	473	16	CMAESOptimizer.java	doOptimize	guess	double[]	encode()	0	0	NO_USE	0
1583	473	16	CMAESOptimizer.java	doOptimize	bestValue	double	NAME	0	2	NO_USE	1
1583	473	16	CMAESOptimizer.java	doOptimize	optimum	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1583	473	16	CMAESOptimizer.java	doOptimize	lastResult	RealPointValuePair	NAME	0	4	NO_USE	0
1583	473	16	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	exp()	0	30	FIELD_USE	1
1584	476	16	CMAESOptimizer.java	doOptimize	arz	RealMatrix	randn1()	0	0	NO_USE	0
1584	476	16	CMAESOptimizer.java	doOptimize	arx	RealMatrix	zeros()	0	0	NO_USE	0
1584	476	16	CMAESOptimizer.java	doOptimize	fitness	double[]	value()	0	1	NO_USE	0
1584	476	16	CMAESOptimizer.java	doOptimize	arindex	int[]	sortedIndices()	0	1	NO_USE	0
1584	476	16	CMAESOptimizer.java	doOptimize	xold	RealMatrix	NAME	0	0	NO_USE	0
1584	476	16	CMAESOptimizer.java	doOptimize	bestArx	RealMatrix	selectColumns()	0	0	NO_USE	0
1584	476	16	CMAESOptimizer.java	doOptimize	bestArz	RealMatrix	selectColumns()	0	0	NO_USE	0
1584	476	16	CMAESOptimizer.java	doOptimize	zmean	RealMatrix	multiply()	0	0	NO_USE	0
1584	476	16	CMAESOptimizer.java	doOptimize	hsig	boolean	updateEvolutionPaths()	0	0	NO_USE	0
1584	476	16	CMAESOptimizer.java	doOptimize	bestFitness	double	ARRAY_ACCESS	0	5	NO_USE	1
1584	476	16	CMAESOptimizer.java	doOptimize	worstFitness	double	ARRAY_ACCESS	0	1	NO_USE	0
1584	476	16	CMAESOptimizer.java	doOptimize	sqrtDiagC	double[]	getColumn()	0	2	NO_USE	0
1584	476	16	CMAESOptimizer.java	doOptimize	pcCol	double[]	getColumn()	0	1	NO_USE	0
1584	476	16	CMAESOptimizer.java	doOptimize	historyBest	double	min()	0	3	NO_USE	1
1584	476	16	CMAESOptimizer.java	doOptimize	historyWorst	double	max()	0	3	NO_USE	1
1584	476	16	CMAESOptimizer.java	doOptimize	fitfun	FitnessFunction	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1584	476	16	CMAESOptimizer.java	doOptimize	guess	double[]	encode()	0	0	NO_USE	0
1584	476	16	CMAESOptimizer.java	doOptimize	bestValue	double	NAME	0	2	NO_USE	0
1584	476	16	CMAESOptimizer.java	doOptimize	optimum	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1584	476	16	CMAESOptimizer.java	doOptimize	lastResult	RealPointValuePair	NAME	0	4	NO_USE	0
1584	476	16	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	*	0	30	FIELD_USE	1
1585	483	16	CMAESOptimizer.java	doOptimize	arz	RealMatrix	randn1()	0	0	NO_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	arx	RealMatrix	zeros()	0	0	NO_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	fitness	double[]	value()	0	1	NO_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	arindex	int[]	sortedIndices()	0	1	NO_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	xold	RealMatrix	NAME	0	0	NO_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	bestArx	RealMatrix	selectColumns()	0	0	NO_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	bestArz	RealMatrix	selectColumns()	0	0	NO_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	zmean	RealMatrix	multiply()	0	0	NO_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	hsig	boolean	updateEvolutionPaths()	0	0	NO_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	bestFitness	double	ARRAY_ACCESS	0	5	PARAM_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	worstFitness	double	ARRAY_ACCESS	0	1	NO_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	sqrtDiagC	double[]	getColumn()	0	2	NO_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	pcCol	double[]	getColumn()	0	1	NO_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	historyBest	double	min()	0	3	NO_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	historyWorst	double	max()	0	3	NO_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	fitfun	FitnessFunction	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	guess	double[]	encode()	0	0	NO_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	bestValue	double	NAME	0	2	NO_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	optimum	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	lastResult	RealPointValuePair	NAME	0	4	NO_USE	0
1585	483	16	CMAESOptimizer.java	doOptimize	THIS	CMAESOptimizer	*	0	30	FIELD_USE	1
1586	498	8	CMAESOptimizer.java	checkParameters	init	double[]	getStartPoint()	0	5	OTHER_USE	0
1586	498	8	CMAESOptimizer.java	checkParameters	THIS	CMAESOptimizer	UNKNOWN_AS	0	20	FIELD_USE	1
1587	499	12	CMAESOptimizer.java	checkParameters	init	double[]	getStartPoint()	0	5	NO_USE	0
1587	499	12	CMAESOptimizer.java	checkParameters	THIS	CMAESOptimizer	UNKNOWN_AS	0	20	FIELD_USE	1
1588	504	12	CMAESOptimizer.java	checkParameters	init	double[]	getStartPoint()	0	5	NO_USE	0
1588	504	12	CMAESOptimizer.java	checkParameters	THIS	CMAESOptimizer	UNKNOWN_AS	0	20	NO_USE	1
1589	507	12	CMAESOptimizer.java	checkParameters	init	double[]	getStartPoint()	0	5	OTHER_USE	1
1589	507	12	CMAESOptimizer.java	checkParameters	THIS	CMAESOptimizer	UNKNOWN_AS	0	20	FIELD_USE	1
1590	512	12	CMAESOptimizer.java	checkParameters	init	double[]	getStartPoint()	0	5	OTHER_USE	1
1590	512	12	CMAESOptimizer.java	checkParameters	THIS	CMAESOptimizer	UNKNOWN_AS	0	20	FIELD_USE	1
1591	518	16	CMAESOptimizer.java	checkParameters	i	int	0	0	4	ARRIDX_USE	1
1591	518	16	CMAESOptimizer.java	checkParameters	init	double[]	getStartPoint()	0	5	ARR_USE	1
1591	518	16	CMAESOptimizer.java	checkParameters	THIS	CMAESOptimizer	UNKNOWN_AS	0	20	FIELD_USE	1
1592	524	8	CMAESOptimizer.java	checkParameters	init	double[]	getStartPoint()	0	5	OTHER_USE	0
1592	524	8	CMAESOptimizer.java	checkParameters	THIS	CMAESOptimizer	UNKNOWN_AS	0	20	FIELD_USE	1
1593	525	12	CMAESOptimizer.java	checkParameters	init	double[]	getStartPoint()	0	5	OTHER_USE	1
1593	525	12	CMAESOptimizer.java	checkParameters	THIS	CMAESOptimizer	UNKNOWN_AS	0	20	FIELD_USE	1
1594	531	16	CMAESOptimizer.java	checkParameters	i	int	0	0	2	ARRIDX_USE	1
1594	531	16	CMAESOptimizer.java	checkParameters	init	double[]	getStartPoint()	0	5	NO_USE	0
1594	531	16	CMAESOptimizer.java	checkParameters	THIS	CMAESOptimizer	UNKNOWN_AS	0	20	FIELD_USE	1
1595	534	16	CMAESOptimizer.java	checkParameters	i	int	0	0	2	ARRIDX_USE	0
1595	534	16	CMAESOptimizer.java	checkParameters	init	double[]	getStartPoint()	0	5	NO_USE	0
1595	534	16	CMAESOptimizer.java	checkParameters	THIS	CMAESOptimizer	UNKNOWN_AS	0	20	FIELD_USE	1
1596	535	20	CMAESOptimizer.java	checkParameters	i	int	0	0	2	ARRIDX_USE	1
1596	535	20	CMAESOptimizer.java	checkParameters	init	double[]	getStartPoint()	0	5	NO_USE	0
1596	535	20	CMAESOptimizer.java	checkParameters	THIS	CMAESOptimizer	UNKNOWN_AS	0	20	FIELD_USE	1
1597	551	8	CMAESOptimizer.java	initializeCMA	guess	double[]	PARAM_AS	1	0	NO_USE	0
1597	551	8	CMAESOptimizer.java	initializeCMA	THIS	CMAESOptimizer	UNKNOWN_AS	0	1	FIELD_USE	1
1598	637	8	CMAESOptimizer.java	updateEvolutionPaths	hsig	boolean	<	0	0	NO_USE	1
1598	637	8	CMAESOptimizer.java	updateEvolutionPaths	zmean	RealMatrix	PARAM_AS	1	0	NO_USE	0
1598	637	8	CMAESOptimizer.java	updateEvolutionPaths	xold	RealMatrix	PARAM_AS	1	0	PARAM_USE	0
1598	637	8	CMAESOptimizer.java	updateEvolutionPaths	THIS	CMAESOptimizer	scalarMultiply()	0	0	FIELD_USE	0
1599	667	8	CMAESOptimizer.java	updateCovarianceDiagonalOnly	oldFac	double	-	0	0	NO_USE	0
1599	667	8	CMAESOptimizer.java	updateCovarianceDiagonalOnly	hsig	boolean	PARAM_AS	1	0	NO_USE	0
1599	667	8	CMAESOptimizer.java	updateCovarianceDiagonalOnly	bestArz	RealMatrix	PARAM_AS	1	0	NO_USE	0
1599	667	8	CMAESOptimizer.java	updateCovarianceDiagonalOnly	xold	RealMatrix	PARAM_AS	1	0	NO_USE	0
1599	667	8	CMAESOptimizer.java	updateCovarianceDiagonalOnly	THIS	CMAESOptimizer	sqrt()	0	3	CLALLER_USE	1
1600	695	8	CMAESOptimizer.java	updateCovariance	negccov	double	0	0	1	>	0
1600	695	8	CMAESOptimizer.java	updateCovariance	hsig	boolean	PARAM_AS	1	0	OTHER_USE	0
1600	695	8	CMAESOptimizer.java	updateCovariance	bestArx	RealMatrix	PARAM_AS	1	0	CLALLER_USE	0
1600	695	8	CMAESOptimizer.java	updateCovariance	arz	RealMatrix	PARAM_AS	1	0	PARAM_USE	0
1600	695	8	CMAESOptimizer.java	updateCovariance	arindex	int[]	PARAM_AS	1	0	PARAM_USE	0
1600	695	8	CMAESOptimizer.java	updateCovariance	xold	RealMatrix	PARAM_AS	1	0	PARAM_USE	0
1600	695	8	CMAESOptimizer.java	updateCovariance	THIS	CMAESOptimizer	UNKNOWN_AS	0	2	CLALLER_USE	1
1601	703	12	CMAESOptimizer.java	updateCovariance	arpos	RealMatrix	scalarMultiply()	0	0	CLALLER_USE	0
1601	703	12	CMAESOptimizer.java	updateCovariance	roneu	RealMatrix	scalarMultiply()	0	0	PARAM_USE	0
1601	703	12	CMAESOptimizer.java	updateCovariance	oldFac	double	-	0	0	PARAM_USE	0
1601	703	12	CMAESOptimizer.java	updateCovariance	negccov	double	0	0	1	>	0
1601	703	12	CMAESOptimizer.java	updateCovariance	hsig	boolean	PARAM_AS	1	0	NO_USE	0
1601	703	12	CMAESOptimizer.java	updateCovariance	bestArx	RealMatrix	PARAM_AS	1	0	NO_USE	0
1601	703	12	CMAESOptimizer.java	updateCovariance	arz	RealMatrix	PARAM_AS	1	0	PARAM_USE	0
1601	703	12	CMAESOptimizer.java	updateCovariance	arindex	int[]	PARAM_AS	1	0	PARAM_USE	0
1601	703	12	CMAESOptimizer.java	updateCovariance	xold	RealMatrix	PARAM_AS	1	0	NO_USE	0
1601	703	12	CMAESOptimizer.java	updateCovariance	THIS	CMAESOptimizer	UNKNOWN_AS	0	2	FIELD_USE	1
1602	727	16	CMAESOptimizer.java	updateCovariance	negminresidualvariance	double	0.66	0	0	NO_USE	0
1602	727	16	CMAESOptimizer.java	updateCovariance	negalphaold	double	0.5	0	0	NO_USE	0
1602	727	16	CMAESOptimizer.java	updateCovariance	arReverseIndex	int[]	reverse()	0	0	NO_USE	0
1602	727	16	CMAESOptimizer.java	updateCovariance	arzneg	RealMatrix	selectColumns()	0	0	NO_USE	0
1602	727	16	CMAESOptimizer.java	updateCovariance	arnorms	RealMatrix	divide()	0	0	NO_USE	0
1602	727	16	CMAESOptimizer.java	updateCovariance	idxnorms	int[]	sortedIndices()	0	0	NO_USE	0
1602	727	16	CMAESOptimizer.java	updateCovariance	arnormsSorted	RealMatrix	selectColumns()	0	0	NO_USE	0
1602	727	16	CMAESOptimizer.java	updateCovariance	idxReverse	int[]	reverse()	0	0	NO_USE	0
1602	727	16	CMAESOptimizer.java	updateCovariance	arnormsReverse	RealMatrix	selectColumns()	0	0	NO_USE	0
1602	727	16	CMAESOptimizer.java	updateCovariance	idxInv	int[]	inverse()	0	0	NO_USE	0
1602	727	16	CMAESOptimizer.java	updateCovariance	arnormsInv	RealMatrix	selectColumns()	0	0	NO_USE	0
1602	727	16	CMAESOptimizer.java	updateCovariance	negcovMax	double	/	0	1	OTHER_USE	1
1602	727	16	CMAESOptimizer.java	updateCovariance	arpos	RealMatrix	scalarMultiply()	0	0	NO_USE	0
1602	727	16	CMAESOptimizer.java	updateCovariance	roneu	RealMatrix	scalarMultiply()	0	0	NO_USE	0
1602	727	16	CMAESOptimizer.java	updateCovariance	oldFac	double	-	0	0	NO_USE	0
1602	727	16	CMAESOptimizer.java	updateCovariance	negccov	double	/	0	1	NO_USE	1
1602	727	16	CMAESOptimizer.java	updateCovariance	hsig	boolean	PARAM_AS	1	0	NO_USE	0
1602	727	16	CMAESOptimizer.java	updateCovariance	bestArx	RealMatrix	PARAM_AS	1	0	NO_USE	0
1602	727	16	CMAESOptimizer.java	updateCovariance	arz	RealMatrix	PARAM_AS	1	0	NO_USE	0
1602	727	16	CMAESOptimizer.java	updateCovariance	arindex	int[]	PARAM_AS	1	0	NO_USE	0
1602	727	16	CMAESOptimizer.java	updateCovariance	xold	RealMatrix	PARAM_AS	1	0	NO_USE	0
1602	727	16	CMAESOptimizer.java	updateCovariance	THIS	CMAESOptimizer	UNKNOWN_AS	0	2	NO_USE	0
1603	767	8	CMAESOptimizer.java	updateBD	negccov	double	PARAM_AS	1	2	NO_USE	1
1603	767	8	CMAESOptimizer.java	updateBD	THIS	CMAESOptimizer	UNKNOWN_AS	0	13	CLALLER_USE	1
1604	776	12	CMAESOptimizer.java	updateBD	eig	EigenDecomposition	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1604	776	12	CMAESOptimizer.java	updateBD	negccov	double	PARAM_AS	1	2	NO_USE	0
1604	776	12	CMAESOptimizer.java	updateBD	THIS	CMAESOptimizer	diag()	0	13	FIELD_USE	1
1605	778	20	CMAESOptimizer.java	updateBD	i	int	0	0	1	PARAM_USE	1
1605	778	20	CMAESOptimizer.java	updateBD	eig	EigenDecomposition	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1605	778	20	CMAESOptimizer.java	updateBD	negccov	double	PARAM_AS	1	2	NO_USE	0
1605	778	20	CMAESOptimizer.java	updateBD	THIS	CMAESOptimizer	diag()	0	13	FIELD_USE	1
1606	786	12	CMAESOptimizer.java	updateBD	eig	EigenDecomposition	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1606	786	12	CMAESOptimizer.java	updateBD	negccov	double	PARAM_AS	1	2	NO_USE	0
1606	786	12	CMAESOptimizer.java	updateBD	THIS	CMAESOptimizer	add()	0	13	CLALLER_USE	1
1607	1158	8	CMAESOptimizer.java	diag	m	RealMatrix	PARAM_AS	1	1	CLALLER_USE	1
1607	1158	8	CMAESOptimizer.java	diag	THIS	CMAESOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1608	1216	12	CMAESOptimizer.java	eye	r	int	0	0	1	ARRIDX_USE	1
1608	1216	12	CMAESOptimizer.java	eye	d	double[][]	ARRAY_CREATION	0	0	ARR_USE	0
1608	1216	12	CMAESOptimizer.java	eye	n	int	PARAM_AS	1	0	NO_USE	0
1608	1216	12	CMAESOptimizer.java	eye	m	int	PARAM_AS	1	1	NO_USE	1
1608	1216	12	CMAESOptimizer.java	eye	THIS	CMAESOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1609	1285	16	CMAESOptimizer.java	max	e	double	getEntry()	0	1	OTHER_USE	1
1609	1285	16	CMAESOptimizer.java	max	c	int	0	0	0	NO_USE	0
1609	1285	16	CMAESOptimizer.java	max	r	int	0	0	0	NO_USE	0
1609	1285	16	CMAESOptimizer.java	max	max	double	PREFIX_EXPR	0	1	NO_USE	1
1609	1285	16	CMAESOptimizer.java	max	m	RealMatrix	PARAM_AS	1	0	NO_USE	0
1609	1285	16	CMAESOptimizer.java	max	THIS	CMAESOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1610	1303	16	CMAESOptimizer.java	min	e	double	getEntry()	0	1	OTHER_USE	1
1610	1303	16	CMAESOptimizer.java	min	c	int	0	0	0	NO_USE	0
1610	1303	16	CMAESOptimizer.java	min	r	int	0	0	0	NO_USE	0
1610	1303	16	CMAESOptimizer.java	min	min	double	NAME	0	1	NO_USE	1
1610	1303	16	CMAESOptimizer.java	min	m	RealMatrix	PARAM_AS	1	0	NO_USE	0
1610	1303	16	CMAESOptimizer.java	min	THIS	CMAESOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1611	1319	12	CMAESOptimizer.java	max	r	int	0	0	1	ARRIDX_USE	1
1611	1319	12	CMAESOptimizer.java	max	max	double	PREFIX_EXPR	0	1	NO_USE	1
1611	1319	12	CMAESOptimizer.java	max	m	double[]	PARAM_AS	1	1	ARR_USE	1
1611	1319	12	CMAESOptimizer.java	max	THIS	CMAESOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1612	1334	12	CMAESOptimizer.java	min	r	int	0	0	1	ARRIDX_USE	1
1612	1334	12	CMAESOptimizer.java	min	min	double	NAME	0	1	NO_USE	1
1612	1334	12	CMAESOptimizer.java	min	m	double[]	PARAM_AS	1	1	ARR_USE	1
1612	1334	12	CMAESOptimizer.java	min	THIS	CMAESOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1613	114	8	BaseAbstractVectorialOptimizer.java	optimize	maxEval	int	PARAM_AS	1	0	NO_USE	0
1613	114	8	BaseAbstractVectorialOptimizer.java	optimize	f	FUNC	PARAM_AS	1	1	NO_USE	1
1613	114	8	BaseAbstractVectorialOptimizer.java	optimize	t	double[]	PARAM_AS	1	2	NO_USE	0
1613	114	8	BaseAbstractVectorialOptimizer.java	optimize	w	double[]	PARAM_AS	1	2	NO_USE	0
1613	114	8	BaseAbstractVectorialOptimizer.java	optimize	startPoint	double[]	PARAM_AS	1	1	NO_USE	0
1613	114	8	BaseAbstractVectorialOptimizer.java	optimize	THIS	BaseAbstractVectorialOptimizer	UNKNOWN_AS	0	2	NO_USE	0
1614	117	8	BaseAbstractVectorialOptimizer.java	optimize	maxEval	int	PARAM_AS	1	0	NO_USE	0
1614	117	8	BaseAbstractVectorialOptimizer.java	optimize	f	FUNC	PARAM_AS	1	1	NO_USE	0
1614	117	8	BaseAbstractVectorialOptimizer.java	optimize	t	double[]	PARAM_AS	1	2	NO_USE	1
1614	117	8	BaseAbstractVectorialOptimizer.java	optimize	w	double[]	PARAM_AS	1	2	NO_USE	0
1614	117	8	BaseAbstractVectorialOptimizer.java	optimize	startPoint	double[]	PARAM_AS	1	1	NO_USE	0
1614	117	8	BaseAbstractVectorialOptimizer.java	optimize	THIS	BaseAbstractVectorialOptimizer	UNKNOWN_AS	0	2	NO_USE	0
1615	120	8	BaseAbstractVectorialOptimizer.java	optimize	maxEval	int	PARAM_AS	1	0	NO_USE	0
1615	120	8	BaseAbstractVectorialOptimizer.java	optimize	f	FUNC	PARAM_AS	1	1	NO_USE	0
1615	120	8	BaseAbstractVectorialOptimizer.java	optimize	t	double[]	PARAM_AS	1	2	NO_USE	0
1615	120	8	BaseAbstractVectorialOptimizer.java	optimize	w	double[]	PARAM_AS	1	2	NO_USE	1
1615	120	8	BaseAbstractVectorialOptimizer.java	optimize	startPoint	double[]	PARAM_AS	1	1	NO_USE	0
1615	120	8	BaseAbstractVectorialOptimizer.java	optimize	THIS	BaseAbstractVectorialOptimizer	UNKNOWN_AS	0	2	NO_USE	0
1616	123	8	BaseAbstractVectorialOptimizer.java	optimize	maxEval	int	PARAM_AS	1	0	NO_USE	0
1616	123	8	BaseAbstractVectorialOptimizer.java	optimize	f	FUNC	PARAM_AS	1	1	NO_USE	0
1616	123	8	BaseAbstractVectorialOptimizer.java	optimize	t	double[]	PARAM_AS	1	2	NO_USE	0
1616	123	8	BaseAbstractVectorialOptimizer.java	optimize	w	double[]	PARAM_AS	1	2	NO_USE	0
1616	123	8	BaseAbstractVectorialOptimizer.java	optimize	startPoint	double[]	PARAM_AS	1	1	NO_USE	1
1616	123	8	BaseAbstractVectorialOptimizer.java	optimize	THIS	BaseAbstractVectorialOptimizer	UNKNOWN_AS	0	2	NO_USE	0
1617	126	8	BaseAbstractVectorialOptimizer.java	optimize	maxEval	int	PARAM_AS	1	0	NO_USE	0
1617	126	8	BaseAbstractVectorialOptimizer.java	optimize	f	FUNC	PARAM_AS	1	1	NO_USE	0
1617	126	8	BaseAbstractVectorialOptimizer.java	optimize	t	double[]	PARAM_AS	1	2	OTHER_USE	1
1617	126	8	BaseAbstractVectorialOptimizer.java	optimize	w	double[]	PARAM_AS	1	2	OTHER_USE	1
1617	126	8	BaseAbstractVectorialOptimizer.java	optimize	startPoint	double[]	PARAM_AS	1	1	NO_USE	0
1617	126	8	BaseAbstractVectorialOptimizer.java	optimize	THIS	BaseAbstractVectorialOptimizer	UNKNOWN_AS	0	2	FIELD_USE	1
1618	80	8	PowellOptimizer.java	PowellOptimizer	rel	double	PARAM_AS	1	1	OTHER_USE	1
1618	80	8	PowellOptimizer.java	PowellOptimizer	abs	double	PARAM_AS	1	1	NO_USE	0
1618	80	8	PowellOptimizer.java	PowellOptimizer	THIS	PowellOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1619	83	8	PowellOptimizer.java	PowellOptimizer	rel	double	PARAM_AS	1	1	NO_USE	0
1619	83	8	PowellOptimizer.java	PowellOptimizer	abs	double	PARAM_AS	1	1	OTHER_USE	1
1619	83	8	PowellOptimizer.java	PowellOptimizer	THIS	PowellOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1620	136	16	PowellOptimizer.java	doOptimize	d	double[]	copyOf()	0	0	NO_USE	0
1620	136	16	PowellOptimizer.java	doOptimize	optimum	UnivariateRealPointValuePair	search()	0	0	NO_USE	0
1620	136	16	PowellOptimizer.java	doOptimize	result	double[][]	newPointAndDirection()	0	0	NO_USE	0
1620	136	16	PowellOptimizer.java	doOptimize	i	int	0	0	0	OTHER_USE	0
1620	136	16	PowellOptimizer.java	doOptimize	fX	double	NAME	0	1	NO_USE	0
1620	136	16	PowellOptimizer.java	doOptimize	fX2	double	NAME	0	2	-	1
1620	136	16	PowellOptimizer.java	doOptimize	delta	double	0	0	1	NO_USE	1
1620	136	16	PowellOptimizer.java	doOptimize	bigInd	int	0	0	0	NO_USE	0
1620	136	16	PowellOptimizer.java	doOptimize	alphaMin	double	getPoint()	0	0	NO_USE	0
1620	136	16	PowellOptimizer.java	doOptimize	goal	GoalType	getGoalType()	0	1	NO_USE	0
1620	136	16	PowellOptimizer.java	doOptimize	guess	double[]	getStartPoint()	0	0	NO_USE	0
1620	136	16	PowellOptimizer.java	doOptimize	n	int	NAME	0	0	NO_USE	0
1620	136	16	PowellOptimizer.java	doOptimize	direc	double[][]	1	0	0	NO_USE	0
1620	136	16	PowellOptimizer.java	doOptimize	checker	ConvergenceChecker<RealPointValuePair>	getConvergenceChecker()	0	1	NO_USE	0
1620	136	16	PowellOptimizer.java	doOptimize	x	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1620	136	16	PowellOptimizer.java	doOptimize	fVal	double	getValue()	0	1	-	1
1620	136	16	PowellOptimizer.java	doOptimize	x1	double[]	clone()	0	0	NO_USE	0
1620	136	16	PowellOptimizer.java	doOptimize	iter	int	0	0	0	NO_USE	0
1620	136	16	PowellOptimizer.java	doOptimize	THIS	PowellOptimizer	UNKNOWN_AS	0	1	NO_USE	0
1621	149	12	PowellOptimizer.java	doOptimize	fX	double	NAME	0	1	NO_USE	0
1621	149	12	PowellOptimizer.java	doOptimize	fX2	double	NAME	0	2	NO_USE	0
1621	149	12	PowellOptimizer.java	doOptimize	delta	double	-	0	1	NO_USE	0
1621	149	12	PowellOptimizer.java	doOptimize	bigInd	int	NAME	0	0	NO_USE	0
1621	149	12	PowellOptimizer.java	doOptimize	alphaMin	double	getPoint()	0	0	NO_USE	0
1621	149	12	PowellOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	1
1621	149	12	PowellOptimizer.java	doOptimize	previous	RealPointValuePair	CLASS_INSTANCE_CREATION	0	0	PARAM_USE	0
1621	149	12	PowellOptimizer.java	doOptimize	current	RealPointValuePair	CLASS_INSTANCE_CREATION	0	0	PARAM_USE	0
1621	149	12	PowellOptimizer.java	doOptimize	goal	GoalType	getGoalType()	0	1	NO_USE	0
1621	149	12	PowellOptimizer.java	doOptimize	guess	double[]	getStartPoint()	0	0	NO_USE	0
1621	149	12	PowellOptimizer.java	doOptimize	n	int	NAME	0	0	NO_USE	0
1621	149	12	PowellOptimizer.java	doOptimize	direc	double[][]	1	0	0	NO_USE	0
1621	149	12	PowellOptimizer.java	doOptimize	checker	ConvergenceChecker<RealPointValuePair>	getConvergenceChecker()	0	1	!=	0
1621	149	12	PowellOptimizer.java	doOptimize	x	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1621	149	12	PowellOptimizer.java	doOptimize	fVal	double	getValue()	0	1	NO_USE	0
1621	149	12	PowellOptimizer.java	doOptimize	x1	double[]	clone()	0	0	NO_USE	0
1621	149	12	PowellOptimizer.java	doOptimize	iter	int	0	0	0	PARAM_USE	0
1621	149	12	PowellOptimizer.java	doOptimize	THIS	PowellOptimizer	UNKNOWN_AS	0	1	NO_USE	0
1622	150	16	PowellOptimizer.java	doOptimize	fX	double	NAME	0	1	NO_USE	0
1622	150	16	PowellOptimizer.java	doOptimize	fX2	double	NAME	0	2	NO_USE	0
1622	150	16	PowellOptimizer.java	doOptimize	delta	double	-	0	1	NO_USE	0
1622	150	16	PowellOptimizer.java	doOptimize	bigInd	int	NAME	0	0	NO_USE	0
1622	150	16	PowellOptimizer.java	doOptimize	alphaMin	double	getPoint()	0	0	NO_USE	0
1622	150	16	PowellOptimizer.java	doOptimize	stop	boolean	<=	0	1	NO_USE	0
1622	150	16	PowellOptimizer.java	doOptimize	previous	RealPointValuePair	CLASS_INSTANCE_CREATION	0	0	PARAM_USE	0
1622	150	16	PowellOptimizer.java	doOptimize	current	RealPointValuePair	CLASS_INSTANCE_CREATION	0	0	PARAM_USE	0
1622	150	16	PowellOptimizer.java	doOptimize	goal	GoalType	getGoalType()	0	1	NO_USE	0
1622	150	16	PowellOptimizer.java	doOptimize	guess	double[]	getStartPoint()	0	0	NO_USE	0
1622	150	16	PowellOptimizer.java	doOptimize	n	int	NAME	0	0	NO_USE	0
1622	150	16	PowellOptimizer.java	doOptimize	direc	double[][]	1	0	0	NO_USE	0
1622	150	16	PowellOptimizer.java	doOptimize	checker	ConvergenceChecker<RealPointValuePair>	getConvergenceChecker()	0	1	CLALLER_USE	1
1622	150	16	PowellOptimizer.java	doOptimize	x	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1622	150	16	PowellOptimizer.java	doOptimize	fVal	double	getValue()	0	1	NO_USE	0
1622	150	16	PowellOptimizer.java	doOptimize	x1	double[]	clone()	0	0	NO_USE	0
1622	150	16	PowellOptimizer.java	doOptimize	iter	int	0	0	0	PARAM_USE	0
1622	150	16	PowellOptimizer.java	doOptimize	THIS	PowellOptimizer	UNKNOWN_AS	0	1	NO_USE	0
1623	154	12	PowellOptimizer.java	doOptimize	fX	double	NAME	0	1	<	0
1623	154	12	PowellOptimizer.java	doOptimize	fX2	double	NAME	0	2	NO_USE	0
1623	154	12	PowellOptimizer.java	doOptimize	delta	double	-	0	1	NO_USE	0
1623	154	12	PowellOptimizer.java	doOptimize	bigInd	int	NAME	0	0	NO_USE	0
1623	154	12	PowellOptimizer.java	doOptimize	alphaMin	double	getPoint()	0	0	NO_USE	0
1623	154	12	PowellOptimizer.java	doOptimize	stop	boolean	converged()	0	1	NO_USE	1
1623	154	12	PowellOptimizer.java	doOptimize	previous	RealPointValuePair	CLASS_INSTANCE_CREATION	0	0	OTHER_USE	0
1623	154	12	PowellOptimizer.java	doOptimize	current	RealPointValuePair	CLASS_INSTANCE_CREATION	0	0	OTHER_USE	0
1623	154	12	PowellOptimizer.java	doOptimize	goal	GoalType	getGoalType()	0	1	==	0
1623	154	12	PowellOptimizer.java	doOptimize	guess	double[]	getStartPoint()	0	0	NO_USE	0
1623	154	12	PowellOptimizer.java	doOptimize	n	int	NAME	0	0	NO_USE	0
1623	154	12	PowellOptimizer.java	doOptimize	direc	double[][]	1	0	0	NO_USE	0
1623	154	12	PowellOptimizer.java	doOptimize	checker	ConvergenceChecker<RealPointValuePair>	getConvergenceChecker()	0	1	NO_USE	0
1623	154	12	PowellOptimizer.java	doOptimize	x	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1623	154	12	PowellOptimizer.java	doOptimize	fVal	double	getValue()	0	1	<	0
1623	154	12	PowellOptimizer.java	doOptimize	x1	double[]	clone()	0	0	NO_USE	0
1623	154	12	PowellOptimizer.java	doOptimize	iter	int	0	0	0	NO_USE	0
1623	154	12	PowellOptimizer.java	doOptimize	THIS	PowellOptimizer	UNKNOWN_AS	0	1	FIELD_USE	0
1624	155	16	PowellOptimizer.java	doOptimize	fX	double	NAME	0	1	<	0
1624	155	16	PowellOptimizer.java	doOptimize	fX2	double	NAME	0	2	NO_USE	0
1624	155	16	PowellOptimizer.java	doOptimize	delta	double	-	0	1	NO_USE	0
1624	155	16	PowellOptimizer.java	doOptimize	bigInd	int	NAME	0	0	NO_USE	0
1624	155	16	PowellOptimizer.java	doOptimize	alphaMin	double	getPoint()	0	0	NO_USE	0
1624	155	16	PowellOptimizer.java	doOptimize	stop	boolean	converged()	0	1	NO_USE	0
1624	155	16	PowellOptimizer.java	doOptimize	previous	RealPointValuePair	CLASS_INSTANCE_CREATION	0	0	OTHER_USE	0
1624	155	16	PowellOptimizer.java	doOptimize	current	RealPointValuePair	CLASS_INSTANCE_CREATION	0	0	OTHER_USE	0
1624	155	16	PowellOptimizer.java	doOptimize	goal	GoalType	getGoalType()	0	1	NO_USE	1
1624	155	16	PowellOptimizer.java	doOptimize	guess	double[]	getStartPoint()	0	0	NO_USE	0
1624	155	16	PowellOptimizer.java	doOptimize	n	int	NAME	0	0	NO_USE	0
1624	155	16	PowellOptimizer.java	doOptimize	direc	double[][]	1	0	0	NO_USE	0
1624	155	16	PowellOptimizer.java	doOptimize	checker	ConvergenceChecker<RealPointValuePair>	getConvergenceChecker()	0	1	NO_USE	0
1624	155	16	PowellOptimizer.java	doOptimize	x	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1624	155	16	PowellOptimizer.java	doOptimize	fVal	double	getValue()	0	1	<	0
1624	155	16	PowellOptimizer.java	doOptimize	x1	double[]	clone()	0	0	NO_USE	0
1624	155	16	PowellOptimizer.java	doOptimize	iter	int	0	0	0	NO_USE	0
1624	155	16	PowellOptimizer.java	doOptimize	THIS	PowellOptimizer	UNKNOWN_AS	0	1	NO_USE	1
1625	172	12	PowellOptimizer.java	doOptimize	fX	double	NAME	0	1	+	1
1625	172	12	PowellOptimizer.java	doOptimize	fX2	double	computeObjectiveValue()	0	2	+	1
1625	172	12	PowellOptimizer.java	doOptimize	delta	double	-	0	1	OTHER_USE	0
1625	172	12	PowellOptimizer.java	doOptimize	bigInd	int	NAME	0	0	ARRIDX_USE	0
1625	172	12	PowellOptimizer.java	doOptimize	alphaMin	double	getPoint()	0	0	PARAM_USE	0
1625	172	12	PowellOptimizer.java	doOptimize	stop	boolean	converged()	0	1	NO_USE	0
1625	172	12	PowellOptimizer.java	doOptimize	previous	RealPointValuePair	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1625	172	12	PowellOptimizer.java	doOptimize	current	RealPointValuePair	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1625	172	12	PowellOptimizer.java	doOptimize	d	double[]	-	0	0	PARAM_USE	0
1625	172	12	PowellOptimizer.java	doOptimize	x2	double[]	-	0	0	NO_USE	0
1625	172	12	PowellOptimizer.java	doOptimize	goal	GoalType	getGoalType()	0	1	NO_USE	0
1625	172	12	PowellOptimizer.java	doOptimize	guess	double[]	getStartPoint()	0	0	NO_USE	0
1625	172	12	PowellOptimizer.java	doOptimize	n	int	NAME	0	0	-	0
1625	172	12	PowellOptimizer.java	doOptimize	direc	double[][]	1	0	0	ARR_USE	0
1625	172	12	PowellOptimizer.java	doOptimize	checker	ConvergenceChecker<RealPointValuePair>	getConvergenceChecker()	0	1	NO_USE	0
1625	172	12	PowellOptimizer.java	doOptimize	x	double[]	ARRAY_ACCESS	0	0	PARAM_USE	0
1625	172	12	PowellOptimizer.java	doOptimize	fVal	double	getValue()	0	1	*	0
1625	172	12	PowellOptimizer.java	doOptimize	x1	double[]	clone()	0	0	NO_USE	0
1625	172	12	PowellOptimizer.java	doOptimize	iter	int	0	0	0	NO_USE	0
1625	172	12	PowellOptimizer.java	doOptimize	THIS	PowellOptimizer	UNKNOWN_AS	0	1	FIELD_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	t	double	*	0	1	NO_USE	1
1626	179	16	PowellOptimizer.java	doOptimize	temp	double	-	0	0	NO_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	fX	double	NAME	0	1	NO_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	fX2	double	computeObjectiveValue()	0	2	NO_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	delta	double	-	0	1	NO_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	bigInd	int	NAME	0	0	ARRIDX_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	alphaMin	double	getPoint()	0	0	PARAM_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	stop	boolean	converged()	0	1	NO_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	previous	RealPointValuePair	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	current	RealPointValuePair	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	d	double[]	-	0	0	PARAM_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	x2	double[]	-	0	0	NO_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	goal	GoalType	getGoalType()	0	1	NO_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	guess	double[]	getStartPoint()	0	0	NO_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	n	int	NAME	0	0	-	0
1626	179	16	PowellOptimizer.java	doOptimize	direc	double[][]	1	0	0	ARR_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	checker	ConvergenceChecker<RealPointValuePair>	getConvergenceChecker()	0	1	NO_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	x	double[]	ARRAY_ACCESS	0	0	PARAM_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	fVal	double	getValue()	0	1	NO_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	x1	double[]	clone()	0	0	NO_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	iter	int	0	0	0	NO_USE	0
1626	179	16	PowellOptimizer.java	doOptimize	THIS	PowellOptimizer	UNKNOWN_AS	0	1	FIELD_USE	0
1627	222	8	NelderMeadSimplex.java	iterate	n	int	getDimension()	0	0	OTHER_USE	0
1627	222	8	NelderMeadSimplex.java	iterate	best	RealPointValuePair	getPoint()	0	2	PARAM_USE	1
1627	222	8	NelderMeadSimplex.java	iterate	secondBest	RealPointValuePair	getPoint()	0	1	NO_USE	1
1627	222	8	NelderMeadSimplex.java	iterate	worst	RealPointValuePair	getPoint()	0	2	PARAM_USE	0
1627	222	8	NelderMeadSimplex.java	iterate	xWorst	double[]	getPointRef()	0	0	ARR_USE	0
1627	222	8	NelderMeadSimplex.java	iterate	centroid	double[]	NAME	0	0	ARR_USE	0
1627	222	8	NelderMeadSimplex.java	iterate	scaling	double	/	0	0	NO_USE	0
1627	222	8	NelderMeadSimplex.java	iterate	xR	double[]	+	0	0	ARR_USE	0
1627	222	8	NelderMeadSimplex.java	iterate	reflected	RealPointValuePair	CLASS_INSTANCE_CREATION	0	6	PARAM_USE	1
1627	222	8	NelderMeadSimplex.java	iterate	evaluationFunction	MultivariateRealFunction	PARAM_AS	1	0	CLALLER_USE	0
1627	222	8	NelderMeadSimplex.java	iterate	comparator	Comparator<RealPointValuePair>	PARAM_AS	1	7	PARAM_USE	1
1627	222	8	NelderMeadSimplex.java	iterate	THIS	NelderMeadSimplex	UNKNOWN_AS	0	0	CLALLER_USE	0
1628	226	15	NelderMeadSimplex.java	iterate	n	int	getDimension()	0	0	OTHER_USE	0
1628	226	15	NelderMeadSimplex.java	iterate	best	RealPointValuePair	getPoint()	0	2	NO_USE	1
1628	226	15	NelderMeadSimplex.java	iterate	secondBest	RealPointValuePair	getPoint()	0	1	NO_USE	0
1628	226	15	NelderMeadSimplex.java	iterate	worst	RealPointValuePair	getPoint()	0	2	PARAM_USE	0
1628	226	15	NelderMeadSimplex.java	iterate	xWorst	double[]	getPointRef()	0	0	ARR_USE	0
1628	226	15	NelderMeadSimplex.java	iterate	centroid	double[]	NAME	0	0	ARR_USE	0
1628	226	15	NelderMeadSimplex.java	iterate	scaling	double	/	0	0	NO_USE	0
1628	226	15	NelderMeadSimplex.java	iterate	xR	double[]	+	0	0	ARR_USE	0
1628	226	15	NelderMeadSimplex.java	iterate	reflected	RealPointValuePair	CLASS_INSTANCE_CREATION	0	6	PARAM_USE	1
1628	226	15	NelderMeadSimplex.java	iterate	evaluationFunction	MultivariateRealFunction	PARAM_AS	1	0	CLALLER_USE	0
1628	226	15	NelderMeadSimplex.java	iterate	comparator	Comparator<RealPointValuePair>	PARAM_AS	1	7	CLALLER_USE	1
1628	226	15	NelderMeadSimplex.java	iterate	THIS	NelderMeadSimplex	UNKNOWN_AS	0	0	FIELD_USE	0
1629	235	12	NelderMeadSimplex.java	iterate	xE	double[]	+	0	0	NO_USE	0
1629	235	12	NelderMeadSimplex.java	iterate	expanded	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	PARAM_USE	1
1629	235	12	NelderMeadSimplex.java	iterate	n	int	getDimension()	0	0	NO_USE	0
1629	235	12	NelderMeadSimplex.java	iterate	best	RealPointValuePair	getPoint()	0	2	NO_USE	0
1629	235	12	NelderMeadSimplex.java	iterate	secondBest	RealPointValuePair	getPoint()	0	1	NO_USE	0
1629	235	12	NelderMeadSimplex.java	iterate	worst	RealPointValuePair	getPoint()	0	2	NO_USE	0
1629	235	12	NelderMeadSimplex.java	iterate	xWorst	double[]	getPointRef()	0	0	NO_USE	0
1629	235	12	NelderMeadSimplex.java	iterate	centroid	double[]	NAME	0	0	NO_USE	0
1629	235	12	NelderMeadSimplex.java	iterate	scaling	double	/	0	0	NO_USE	0
1629	235	12	NelderMeadSimplex.java	iterate	xR	double[]	+	0	0	NO_USE	0
1629	235	12	NelderMeadSimplex.java	iterate	reflected	RealPointValuePair	CLASS_INSTANCE_CREATION	0	6	PARAM_USE	1
1629	235	12	NelderMeadSimplex.java	iterate	evaluationFunction	MultivariateRealFunction	PARAM_AS	1	0	NO_USE	0
1629	235	12	NelderMeadSimplex.java	iterate	comparator	Comparator<RealPointValuePair>	PARAM_AS	1	7	PARAM_USE	1
1629	235	12	NelderMeadSimplex.java	iterate	THIS	NelderMeadSimplex	UNKNOWN_AS	0	0	CLALLER_USE	0
1630	243	12	NelderMeadSimplex.java	iterate	n	int	getDimension()	0	0	OTHER_USE	0
1630	243	12	NelderMeadSimplex.java	iterate	best	RealPointValuePair	getPoint()	0	2	NO_USE	0
1630	243	12	NelderMeadSimplex.java	iterate	secondBest	RealPointValuePair	getPoint()	0	1	NO_USE	0
1630	243	12	NelderMeadSimplex.java	iterate	worst	RealPointValuePair	getPoint()	0	2	PARAM_USE	1
1630	243	12	NelderMeadSimplex.java	iterate	xWorst	double[]	getPointRef()	0	0	ARR_USE	0
1630	243	12	NelderMeadSimplex.java	iterate	centroid	double[]	NAME	0	0	ARR_USE	0
1630	243	12	NelderMeadSimplex.java	iterate	scaling	double	/	0	0	NO_USE	0
1630	243	12	NelderMeadSimplex.java	iterate	xR	double[]	+	0	0	ARR_USE	0
1630	243	12	NelderMeadSimplex.java	iterate	reflected	RealPointValuePair	CLASS_INSTANCE_CREATION	0	6	PARAM_USE	1
1630	243	12	NelderMeadSimplex.java	iterate	evaluationFunction	MultivariateRealFunction	PARAM_AS	1	0	CLALLER_USE	0
1630	243	12	NelderMeadSimplex.java	iterate	comparator	Comparator<RealPointValuePair>	PARAM_AS	1	7	CLALLER_USE	1
1630	243	12	NelderMeadSimplex.java	iterate	THIS	NelderMeadSimplex	UNKNOWN_AS	0	0	FIELD_USE	0
1631	251	16	NelderMeadSimplex.java	iterate	xC	double[]	+	0	0	NO_USE	0
1631	251	16	NelderMeadSimplex.java	iterate	outContracted	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	PARAM_USE	1
1631	251	16	NelderMeadSimplex.java	iterate	n	int	getDimension()	0	0	NO_USE	0
1631	251	16	NelderMeadSimplex.java	iterate	best	RealPointValuePair	getPoint()	0	2	NO_USE	0
1631	251	16	NelderMeadSimplex.java	iterate	secondBest	RealPointValuePair	getPoint()	0	1	NO_USE	0
1631	251	16	NelderMeadSimplex.java	iterate	worst	RealPointValuePair	getPoint()	0	2	NO_USE	0
1631	251	16	NelderMeadSimplex.java	iterate	xWorst	double[]	getPointRef()	0	0	NO_USE	0
1631	251	16	NelderMeadSimplex.java	iterate	centroid	double[]	NAME	0	0	NO_USE	0
1631	251	16	NelderMeadSimplex.java	iterate	scaling	double	/	0	0	NO_USE	0
1631	251	16	NelderMeadSimplex.java	iterate	xR	double[]	+	0	0	NO_USE	0
1631	251	16	NelderMeadSimplex.java	iterate	reflected	RealPointValuePair	CLASS_INSTANCE_CREATION	0	6	NO_USE	1
1631	251	16	NelderMeadSimplex.java	iterate	evaluationFunction	MultivariateRealFunction	PARAM_AS	1	0	NO_USE	0
1631	251	16	NelderMeadSimplex.java	iterate	comparator	Comparator<RealPointValuePair>	PARAM_AS	1	7	PARAM_USE	1
1631	251	16	NelderMeadSimplex.java	iterate	THIS	NelderMeadSimplex	UNKNOWN_AS	0	0	CLALLER_USE	0
1632	265	16	NelderMeadSimplex.java	iterate	xC	double[]	-	0	0	NO_USE	0
1632	265	16	NelderMeadSimplex.java	iterate	inContracted	RealPointValuePair	CLASS_INSTANCE_CREATION	0	1	PARAM_USE	1
1632	265	16	NelderMeadSimplex.java	iterate	n	int	getDimension()	0	0	NO_USE	0
1632	265	16	NelderMeadSimplex.java	iterate	best	RealPointValuePair	getPoint()	0	2	NO_USE	0
1632	265	16	NelderMeadSimplex.java	iterate	secondBest	RealPointValuePair	getPoint()	0	1	NO_USE	0
1632	265	16	NelderMeadSimplex.java	iterate	worst	RealPointValuePair	getPoint()	0	2	NO_USE	1
1632	265	16	NelderMeadSimplex.java	iterate	xWorst	double[]	getPointRef()	0	0	NO_USE	0
1632	265	16	NelderMeadSimplex.java	iterate	centroid	double[]	NAME	0	0	NO_USE	0
1632	265	16	NelderMeadSimplex.java	iterate	scaling	double	/	0	0	NO_USE	0
1632	265	16	NelderMeadSimplex.java	iterate	xR	double[]	+	0	0	NO_USE	0
1632	265	16	NelderMeadSimplex.java	iterate	reflected	RealPointValuePair	CLASS_INSTANCE_CREATION	0	6	NO_USE	0
1632	265	16	NelderMeadSimplex.java	iterate	evaluationFunction	MultivariateRealFunction	PARAM_AS	1	0	NO_USE	0
1632	265	16	NelderMeadSimplex.java	iterate	comparator	Comparator<RealPointValuePair>	PARAM_AS	1	7	PARAM_USE	1
1632	265	16	NelderMeadSimplex.java	iterate	THIS	NelderMeadSimplex	UNKNOWN_AS	0	0	CLALLER_USE	0
1633	112	8	SimplexOptimizer.java	doOptimize	THIS	SimplexOptimizer	UNKNOWN_AS	0	1	NO_USE	1
1634	144	12	SimplexOptimizer.java	doOptimize	evalFunc	MultivariateRealFunction	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1634	144	12	SimplexOptimizer.java	doOptimize	isMinim	boolean	==	0	0	NO_USE	0
1634	144	12	SimplexOptimizer.java	doOptimize	comparator	Comparator<RealPointValuePair>	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1634	144	12	SimplexOptimizer.java	doOptimize	previous	RealPointValuePair[]	NULL	0	0	ARR_USE	0
1634	144	12	SimplexOptimizer.java	doOptimize	iteration	int	0	0	1	PARAM_USE	1
1634	144	12	SimplexOptimizer.java	doOptimize	checker	ConvergenceChecker<RealPointValuePair>	getConvergenceChecker()	0	0	CLALLER_USE	0
1634	144	12	SimplexOptimizer.java	doOptimize	THIS	SimplexOptimizer	UNKNOWN_AS	0	1	FIELD_USE	0
1635	150	16	SimplexOptimizer.java	doOptimize	converged	boolean	converged()	0	0	NO_USE	1
1635	150	16	SimplexOptimizer.java	doOptimize	evalFunc	MultivariateRealFunction	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1635	150	16	SimplexOptimizer.java	doOptimize	isMinim	boolean	==	0	0	NO_USE	0
1635	150	16	SimplexOptimizer.java	doOptimize	comparator	Comparator<RealPointValuePair>	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1635	150	16	SimplexOptimizer.java	doOptimize	previous	RealPointValuePair[]	NULL	0	0	NO_USE	0
1635	150	16	SimplexOptimizer.java	doOptimize	iteration	int	0	0	1	NO_USE	0
1635	150	16	SimplexOptimizer.java	doOptimize	checker	ConvergenceChecker<RealPointValuePair>	getConvergenceChecker()	0	0	NO_USE	0
1635	150	16	SimplexOptimizer.java	doOptimize	THIS	SimplexOptimizer	UNKNOWN_AS	0	1	FIELD_USE	0
1636	74	8	BaseMultiStartMultivariateRealOptimizer.java	BaseMultiStartMultivariateRealOptimizer	optimizer	BaseMultivariateRealOptimizer<FUNC>	PARAM_AS	1	1	NO_USE	1
1636	74	8	BaseMultiStartMultivariateRealOptimizer.java	BaseMultiStartMultivariateRealOptimizer	starts	int	PARAM_AS	1	1	NO_USE	0
1636	74	8	BaseMultiStartMultivariateRealOptimizer.java	BaseMultiStartMultivariateRealOptimizer	generator	RandomVectorGenerator	PARAM_AS	1	1	NO_USE	1
1636	74	8	BaseMultiStartMultivariateRealOptimizer.java	BaseMultiStartMultivariateRealOptimizer	THIS	BaseMultiStartMultivariateRealOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1637	78	8	BaseMultiStartMultivariateRealOptimizer.java	BaseMultiStartMultivariateRealOptimizer	optimizer	BaseMultivariateRealOptimizer<FUNC>	PARAM_AS	1	1	NO_USE	0
1637	78	8	BaseMultiStartMultivariateRealOptimizer.java	BaseMultiStartMultivariateRealOptimizer	starts	int	PARAM_AS	1	1	OTHER_USE	1
1637	78	8	BaseMultiStartMultivariateRealOptimizer.java	BaseMultiStartMultivariateRealOptimizer	generator	RandomVectorGenerator	PARAM_AS	1	1	NO_USE	0
1637	78	8	BaseMultiStartMultivariateRealOptimizer.java	BaseMultiStartMultivariateRealOptimizer	THIS	BaseMultiStartMultivariateRealOptimizer	UNKNOWN_AS	0	0	NO_USE	0
1638	114	8	BaseMultiStartMultivariateRealOptimizer.java	getOptima	THIS	BaseMultiStartMultivariateRealOptimizer	UNKNOWN_AS	0	1	FIELD_USE	1
1639	166	8	BaseMultiStartMultivariateRealOptimizer.java	optimize	lastException	MathUserException	NAME	0	0	OTHER_USE	0
1639	166	8	BaseMultiStartMultivariateRealOptimizer.java	optimize	maxEval	int	PARAM_AS	1	0	NO_USE	0
1639	166	8	BaseMultiStartMultivariateRealOptimizer.java	optimize	f	FUNC	PARAM_AS	1	0	NO_USE	0
1639	166	8	BaseMultiStartMultivariateRealOptimizer.java	optimize	goal	GoalType	PARAM_AS	1	0	NO_USE	0
1639	166	8	BaseMultiStartMultivariateRealOptimizer.java	optimize	startPoint	double[]	PARAM_AS	1	0	NO_USE	0
1639	166	8	BaseMultiStartMultivariateRealOptimizer.java	optimize	THIS	BaseMultiStartMultivariateRealOptimizer	getEvaluations()	0	1	NO_USE	1
1640	80	12	SimpleRealPointChecker.java	converged	difference	double	abs()	0	2	NO_USE	1
1640	80	12	SimpleRealPointChecker.java	converged	size	double	max()	0	1	NO_USE	1
1640	80	12	SimpleRealPointChecker.java	converged	i	int	0	0	0	NO_USE	0
1640	80	12	SimpleRealPointChecker.java	converged	p	double[]	getPoint()	0	0	NO_USE	0
1640	80	12	SimpleRealPointChecker.java	converged	c	double[]	getPoint()	0	0	NO_USE	0
1640	80	12	SimpleRealPointChecker.java	converged	iteration	int	PARAM_AS	1	0	NO_USE	0
1640	80	12	SimpleRealPointChecker.java	converged	previous	RealPointValuePair	PARAM_AS	1	0	NO_USE	0
1640	80	12	SimpleRealPointChecker.java	converged	current	RealPointValuePair	PARAM_AS	1	0	NO_USE	0
1640	80	12	SimpleRealPointChecker.java	converged	THIS	SimpleRealPointChecker	UNKNOWN_AS	0	2	NO_USE	1
1641	244	8	MultivariateSummaryStatistics.java	getStandardDeviation	stdDev	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
1641	244	8	MultivariateSummaryStatistics.java	getStandardDeviation	THIS	MultivariateSummaryStatistics	UNKNOWN_AS	0	2	FIELD_USE	1
1642	246	15	MultivariateSummaryStatistics.java	getStandardDeviation	stdDev	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
1642	246	15	MultivariateSummaryStatistics.java	getStandardDeviation	THIS	MultivariateSummaryStatistics	UNKNOWN_AS	0	2	FIELD_USE	1
1643	335	12	MultivariateSummaryStatistics.java	append	i	int	0	0	1	NO_USE	1
1643	335	12	MultivariateSummaryStatistics.java	append	buffer	StringBuilder	PARAM_AS	1	0	CLALLER_USE	0
1643	335	12	MultivariateSummaryStatistics.java	append	data	double[]	PARAM_AS	1	0	NO_USE	0
1643	335	12	MultivariateSummaryStatistics.java	append	prefix	String	PARAM_AS	1	0	NO_USE	0
1643	335	12	MultivariateSummaryStatistics.java	append	separator	String	PARAM_AS	1	0	PARAM_USE	0
1643	335	12	MultivariateSummaryStatistics.java	append	suffix	String	PARAM_AS	1	0	NO_USE	0
1643	335	12	MultivariateSummaryStatistics.java	append	THIS	MultivariateSummaryStatistics	UNKNOWN_AS	0	0	NO_USE	0
1644	368	8	MultivariateSummaryStatistics.java	equals	object	Object	PARAM_AS	1	2	NO_USE	1
1644	368	8	MultivariateSummaryStatistics.java	equals	THIS	MultivariateSummaryStatistics	UNKNOWN_AS	0	1	NO_USE	1
1645	371	8	MultivariateSummaryStatistics.java	equals	object	Object	PARAM_AS	1	2	NO_USE	1
1645	371	8	MultivariateSummaryStatistics.java	equals	THIS	MultivariateSummaryStatistics	UNKNOWN_AS	0	1	NO_USE	0
1646	609	8	MultivariateSummaryStatistics.java	checkEmpty	THIS	MultivariateSummaryStatistics	UNKNOWN_AS	0	1	FIELD_USE	1
1647	622	8	MultivariateSummaryStatistics.java	checkDimension	dimension	int	PARAM_AS	1	1	OTHER_USE	1
1647	622	8	MultivariateSummaryStatistics.java	checkDimension	THIS	MultivariateSummaryStatistics	UNKNOWN_AS	0	1	FIELD_USE	1
1648	58	8	AbstractStorelessUnivariateStatistic.java	evaluate	values	double[]	PARAM_AS	1	1	NO_USE	1
1648	58	8	AbstractStorelessUnivariateStatistic.java	evaluate	THIS	AbstractStorelessUnivariateStatistic	UNKNOWN_AS	0	0	FIELD_USE	0
1649	87	8	AbstractStorelessUnivariateStatistic.java	evaluate	values	double[]	PARAM_AS	1	1	PARAM_USE	1
1649	87	8	AbstractStorelessUnivariateStatistic.java	evaluate	begin	int	PARAM_AS	1	1	PARAM_USE	1
1649	87	8	AbstractStorelessUnivariateStatistic.java	evaluate	length	int	PARAM_AS	1	1	PARAM_USE	1
1649	87	8	AbstractStorelessUnivariateStatistic.java	evaluate	THIS	AbstractStorelessUnivariateStatistic	UNKNOWN_AS	0	1	CLALLER_USE	1
1650	126	8	AbstractStorelessUnivariateStatistic.java	incrementAll	values	double[]	PARAM_AS	1	1	NO_USE	1
1650	126	8	AbstractStorelessUnivariateStatistic.java	incrementAll	THIS	AbstractStorelessUnivariateStatistic	UNKNOWN_AS	0	0	FIELD_USE	0
1651	145	8	AbstractStorelessUnivariateStatistic.java	incrementAll	values	double[]	PARAM_AS	1	1	ARR_USE	1
1651	145	8	AbstractStorelessUnivariateStatistic.java	incrementAll	begin	int	PARAM_AS	1	1	+	1
1651	145	8	AbstractStorelessUnivariateStatistic.java	incrementAll	length	int	PARAM_AS	1	1	+	1
1651	145	8	AbstractStorelessUnivariateStatistic.java	incrementAll	THIS	AbstractStorelessUnivariateStatistic	UNKNOWN_AS	0	1	CLALLER_USE	1
1652	162	8	AbstractStorelessUnivariateStatistic.java	equals	object	Object	PARAM_AS	1	2	NO_USE	1
1652	162	8	AbstractStorelessUnivariateStatistic.java	equals	THIS	AbstractStorelessUnivariateStatistic	UNKNOWN_AS	0	1	NO_USE	1
1653	165	7	AbstractStorelessUnivariateStatistic.java	equals	object	Object	PARAM_AS	1	2	NO_USE	1
1653	165	7	AbstractStorelessUnivariateStatistic.java	equals	THIS	AbstractStorelessUnivariateStatistic	UNKNOWN_AS	0	1	NO_USE	0
1654	120	8	SumOfSquares.java	evaluate	sumSq	double	NAME	0	0	NO_USE	0
1654	120	8	SumOfSquares.java	evaluate	values	double[]	PARAM_AS	1	1	ARR_USE	1
1654	120	8	SumOfSquares.java	evaluate	begin	int	PARAM_AS	1	1	OTHER_USE	1
1654	120	8	SumOfSquares.java	evaluate	length	int	PARAM_AS	1	1	+	1
1654	120	8	SumOfSquares.java	evaluate	THIS	SumOfSquares	UNKNOWN_AS	0	1	NO_USE	1
1655	121	8	Sum.java	evaluate	sum	double	NAME	0	0	NO_USE	0
1655	121	8	Sum.java	evaluate	values	double[]	PARAM_AS	1	1	ARR_USE	1
1655	121	8	Sum.java	evaluate	begin	int	PARAM_AS	1	1	OTHER_USE	1
1655	121	8	Sum.java	evaluate	length	int	PARAM_AS	1	1	+	1
1655	121	8	Sum.java	evaluate	THIS	Sum	UNKNOWN_AS	0	1	NO_USE	1
1656	160	8	Sum.java	evaluate	sum	double	NAME	0	0	NO_USE	0
1656	160	8	Sum.java	evaluate	values	double[]	PARAM_AS	1	1	ARR_USE	1
1656	160	8	Sum.java	evaluate	weights	double[]	PARAM_AS	1	1	ARR_USE	1
1656	160	8	Sum.java	evaluate	begin	int	PARAM_AS	1	1	OTHER_USE	1
1656	160	8	Sum.java	evaluate	length	int	PARAM_AS	1	1	+	1
1656	160	8	Sum.java	evaluate	THIS	Sum	UNKNOWN_AS	0	1	NO_USE	1
1657	132	8	SumOfLogs.java	evaluate	sumLog	double	NAME	0	0	NO_USE	0
1657	132	8	SumOfLogs.java	evaluate	values	double[]	PARAM_AS	1	1	ARR_USE	1
1657	132	8	SumOfLogs.java	evaluate	begin	int	PARAM_AS	1	1	OTHER_USE	1
1657	132	8	SumOfLogs.java	evaluate	length	int	PARAM_AS	1	1	+	1
1657	132	8	SumOfLogs.java	evaluate	THIS	SumOfLogs	UNKNOWN_AS	0	1	NO_USE	1
1658	122	8	Product.java	evaluate	product	double	NAME	0	0	NO_USE	0
1658	122	8	Product.java	evaluate	values	double[]	PARAM_AS	1	1	ARR_USE	1
1658	122	8	Product.java	evaluate	begin	int	PARAM_AS	1	1	OTHER_USE	1
1658	122	8	Product.java	evaluate	length	int	PARAM_AS	1	1	+	1
1658	122	8	Product.java	evaluate	THIS	Product	UNKNOWN_AS	0	1	NO_USE	1
1659	162	8	Product.java	evaluate	product	double	NAME	0	0	NO_USE	0
1659	162	8	Product.java	evaluate	values	double[]	PARAM_AS	1	1	ARR_USE	1
1659	162	8	Product.java	evaluate	weights	double[]	PARAM_AS	1	1	ARR_USE	1
1659	162	8	Product.java	evaluate	begin	int	PARAM_AS	1	1	OTHER_USE	1
1659	162	8	Product.java	evaluate	length	int	PARAM_AS	1	1	+	1
1659	162	8	Product.java	evaluate	THIS	Product	UNKNOWN_AS	0	1	NO_USE	1
1660	159	8	Variance.java	increment	d	double	PARAM_AS	1	0	PARAM_USE	0
1660	159	8	Variance.java	increment	THIS	Variance	UNKNOWN_AS	0	0	FIELD_USE	1
1661	169	12	Variance.java	getResult	THIS	Variance	UNKNOWN_AS	0	4	FIELD_USE	1
1662	171	19	Variance.java	getResult	THIS	Variance	UNKNOWN_AS	0	4	FIELD_USE	1
1663	174	16	Variance.java	getResult	THIS	Variance	UNKNOWN_AS	0	4	FIELD_USE	1
1664	194	8	Variance.java	clear	THIS	Variance	UNKNOWN_AS	0	0	FIELD_USE	1
1665	217	8	Variance.java	evaluate	values	double[]	PARAM_AS	1	1	NO_USE	1
1665	217	8	Variance.java	evaluate	THIS	Variance	UNKNOWN_AS	0	0	FIELD_USE	0
1666	248	8	Variance.java	evaluate	var	double	NAME	0	0	NO_USE	0
1666	248	8	Variance.java	evaluate	values	double[]	PARAM_AS	1	1	PARAM_USE	1
1666	248	8	Variance.java	evaluate	begin	int	PARAM_AS	1	1	PARAM_USE	1
1666	248	8	Variance.java	evaluate	length	int	PARAM_AS	1	3	==	1
1666	248	8	Variance.java	evaluate	THIS	Variance	UNKNOWN_AS	0	1	CLALLER_USE	1
1667	250	12	Variance.java	evaluate	var	double	NAME	0	0	NO_USE	0
1667	250	12	Variance.java	evaluate	values	double[]	PARAM_AS	1	1	PARAM_USE	0
1667	250	12	Variance.java	evaluate	begin	int	PARAM_AS	1	1	PARAM_USE	0
1667	250	12	Variance.java	evaluate	length	int	PARAM_AS	1	3	>	1
1667	250	12	Variance.java	evaluate	THIS	Variance	UNKNOWN_AS	0	1	CLALLER_USE	0
1668	252	19	Variance.java	evaluate	var	double	0.0	0	0	NO_USE	0
1668	252	19	Variance.java	evaluate	values	double[]	PARAM_AS	1	1	PARAM_USE	0
1668	252	19	Variance.java	evaluate	begin	int	PARAM_AS	1	1	PARAM_USE	0
1668	252	19	Variance.java	evaluate	length	int	PARAM_AS	1	3	PARAM_USE	1
1668	252	19	Variance.java	evaluate	THIS	Variance	UNKNOWN_AS	0	1	CLALLER_USE	0
1669	308	8	Variance.java	evaluate	var	double	NAME	0	0	NO_USE	0
1669	308	8	Variance.java	evaluate	values	double[]	PARAM_AS	1	1	PARAM_USE	1
1669	308	8	Variance.java	evaluate	weights	double[]	PARAM_AS	1	1	PARAM_USE	1
1669	308	8	Variance.java	evaluate	begin	int	PARAM_AS	1	1	PARAM_USE	1
1669	308	8	Variance.java	evaluate	length	int	PARAM_AS	1	3	==	1
1669	308	8	Variance.java	evaluate	THIS	Variance	UNKNOWN_AS	0	1	CLALLER_USE	1
1670	310	12	Variance.java	evaluate	var	double	NAME	0	0	NO_USE	0
1670	310	12	Variance.java	evaluate	values	double[]	PARAM_AS	1	1	PARAM_USE	0
1670	310	12	Variance.java	evaluate	weights	double[]	PARAM_AS	1	1	PARAM_USE	0
1670	310	12	Variance.java	evaluate	begin	int	PARAM_AS	1	1	PARAM_USE	0
1670	310	12	Variance.java	evaluate	length	int	PARAM_AS	1	3	>	1
1670	310	12	Variance.java	evaluate	THIS	Variance	UNKNOWN_AS	0	1	CLALLER_USE	0
1671	312	19	Variance.java	evaluate	var	double	0.0	0	0	NO_USE	0
1671	312	19	Variance.java	evaluate	values	double[]	PARAM_AS	1	1	PARAM_USE	0
1671	312	19	Variance.java	evaluate	weights	double[]	PARAM_AS	1	1	PARAM_USE	0
1671	312	19	Variance.java	evaluate	begin	int	PARAM_AS	1	1	PARAM_USE	0
1671	312	19	Variance.java	evaluate	length	int	PARAM_AS	1	3	PARAM_USE	1
1671	312	19	Variance.java	evaluate	THIS	Variance	UNKNOWN_AS	0	1	CLALLER_USE	0
1672	394	8	Variance.java	evaluate	var	double	NAME	0	0	NO_USE	0
1672	394	8	Variance.java	evaluate	values	double[]	PARAM_AS	1	1	ARR_USE	1
1672	394	8	Variance.java	evaluate	mean	double	PARAM_AS	1	0	-	0
1672	394	8	Variance.java	evaluate	begin	int	PARAM_AS	1	1	OTHER_USE	1
1672	394	8	Variance.java	evaluate	length	int	PARAM_AS	1	3	==	1
1672	394	8	Variance.java	evaluate	THIS	Variance	UNKNOWN_AS	0	1	FIELD_USE	1
1673	395	12	Variance.java	evaluate	var	double	NAME	0	0	NO_USE	0
1673	395	12	Variance.java	evaluate	values	double[]	PARAM_AS	1	1	ARR_USE	0
1673	395	12	Variance.java	evaluate	mean	double	PARAM_AS	1	0	-	0
1673	395	12	Variance.java	evaluate	begin	int	PARAM_AS	1	1	OTHER_USE	0
1673	395	12	Variance.java	evaluate	length	int	PARAM_AS	1	3	>	1
1673	395	12	Variance.java	evaluate	THIS	Variance	UNKNOWN_AS	0	1	FIELD_USE	0
1674	397	19	Variance.java	evaluate	var	double	0.0	0	0	NO_USE	0
1674	397	19	Variance.java	evaluate	values	double[]	PARAM_AS	1	1	ARR_USE	0
1674	397	19	Variance.java	evaluate	mean	double	PARAM_AS	1	0	-	0
1674	397	19	Variance.java	evaluate	begin	int	PARAM_AS	1	1	OTHER_USE	0
1674	397	19	Variance.java	evaluate	length	int	PARAM_AS	1	3	+	1
1674	397	19	Variance.java	evaluate	THIS	Variance	UNKNOWN_AS	0	1	FIELD_USE	0
1675	407	16	Variance.java	evaluate	accum	double	*	0	0	-	0
1675	407	16	Variance.java	evaluate	dev	double	-	0	0	NO_USE	0
1675	407	16	Variance.java	evaluate	accum2	double	NAME	0	0	*	0
1675	407	16	Variance.java	evaluate	len	double	NAME	0	0	/	0
1675	407	16	Variance.java	evaluate	var	double	0.0	0	0	NO_USE	0
1675	407	16	Variance.java	evaluate	values	double[]	PARAM_AS	1	1	NO_USE	0
1675	407	16	Variance.java	evaluate	mean	double	PARAM_AS	1	0	NO_USE	0
1675	407	16	Variance.java	evaluate	begin	int	PARAM_AS	1	1	NO_USE	0
1675	407	16	Variance.java	evaluate	length	int	PARAM_AS	1	3	NO_USE	0
1675	407	16	Variance.java	evaluate	THIS	Variance	UNKNOWN_AS	0	1	NO_USE	1
1676	496	8	Variance.java	evaluate	var	double	NAME	0	0	NO_USE	0
1676	496	8	Variance.java	evaluate	values	double[]	PARAM_AS	1	1	ARR_USE	1
1676	496	8	Variance.java	evaluate	weights	double[]	PARAM_AS	1	1	ARR_USE	1
1676	496	8	Variance.java	evaluate	mean	double	PARAM_AS	1	0	-	0
1676	496	8	Variance.java	evaluate	begin	int	PARAM_AS	1	1	OTHER_USE	1
1676	496	8	Variance.java	evaluate	length	int	PARAM_AS	1	3	==	1
1676	496	8	Variance.java	evaluate	THIS	Variance	UNKNOWN_AS	0	1	FIELD_USE	1
1677	497	12	Variance.java	evaluate	var	double	NAME	0	0	NO_USE	0
1677	497	12	Variance.java	evaluate	values	double[]	PARAM_AS	1	1	ARR_USE	0
1677	497	12	Variance.java	evaluate	weights	double[]	PARAM_AS	1	1	ARR_USE	0
1677	497	12	Variance.java	evaluate	mean	double	PARAM_AS	1	0	-	0
1677	497	12	Variance.java	evaluate	begin	int	PARAM_AS	1	1	OTHER_USE	0
1677	497	12	Variance.java	evaluate	length	int	PARAM_AS	1	3	>	1
1677	497	12	Variance.java	evaluate	THIS	Variance	UNKNOWN_AS	0	1	FIELD_USE	0
1678	499	19	Variance.java	evaluate	var	double	0.0	0	0	NO_USE	0
1678	499	19	Variance.java	evaluate	values	double[]	PARAM_AS	1	1	ARR_USE	0
1678	499	19	Variance.java	evaluate	weights	double[]	PARAM_AS	1	1	ARR_USE	0
1678	499	19	Variance.java	evaluate	mean	double	PARAM_AS	1	0	-	0
1678	499	19	Variance.java	evaluate	begin	int	PARAM_AS	1	1	OTHER_USE	0
1678	499	19	Variance.java	evaluate	length	int	PARAM_AS	1	3	+	1
1678	499	19	Variance.java	evaluate	THIS	Variance	UNKNOWN_AS	0	1	FIELD_USE	0
1679	514	16	Variance.java	evaluate	accum	double	*	0	0	-	0
1679	514	16	Variance.java	evaluate	dev	double	-	0	0	NO_USE	0
1679	514	16	Variance.java	evaluate	accum2	double	*	0	0	*	0
1679	514	16	Variance.java	evaluate	sumWts	double	ARRAY_ACCESS	0	0	/	0
1679	514	16	Variance.java	evaluate	var	double	0.0	0	0	NO_USE	0
1679	514	16	Variance.java	evaluate	values	double[]	PARAM_AS	1	1	NO_USE	0
1679	514	16	Variance.java	evaluate	weights	double[]	PARAM_AS	1	1	NO_USE	0
1679	514	16	Variance.java	evaluate	mean	double	PARAM_AS	1	0	NO_USE	0
1679	514	16	Variance.java	evaluate	begin	int	PARAM_AS	1	1	NO_USE	0
1679	514	16	Variance.java	evaluate	length	int	PARAM_AS	1	3	NO_USE	0
1679	514	16	Variance.java	evaluate	THIS	Variance	UNKNOWN_AS	0	1	NO_USE	1
1680	109	8	Mean.java	increment	d	double	PARAM_AS	1	0	PARAM_USE	0
1680	109	8	Mean.java	increment	THIS	Mean	UNKNOWN_AS	0	0	FIELD_USE	1
1681	119	8	Mean.java	clear	THIS	Mean	UNKNOWN_AS	0	0	FIELD_USE	1
1682	157	8	Mean.java	evaluate	values	double[]	PARAM_AS	1	1	PARAM_USE	1
1682	157	8	Mean.java	evaluate	begin	int	PARAM_AS	1	1	PARAM_USE	1
1682	157	8	Mean.java	evaluate	length	int	PARAM_AS	1	1	OTHER_USE	1
1682	157	8	Mean.java	evaluate	THIS	Mean	UNKNOWN_AS	0	1	NO_USE	1
1683	205	8	Mean.java	evaluate	values	double[]	PARAM_AS	1	1	PARAM_USE	1
1683	205	8	Mean.java	evaluate	weights	double[]	PARAM_AS	1	1	PARAM_USE	1
1683	205	8	Mean.java	evaluate	begin	int	PARAM_AS	1	1	PARAM_USE	1
1683	205	8	Mean.java	evaluate	length	int	PARAM_AS	1	1	PARAM_USE	1
1683	205	8	Mean.java	evaluate	THIS	Mean	UNKNOWN_AS	0	1	NO_USE	1
1684	88	8	FourthMoment.java	increment	d	double	PARAM_AS	1	0	NO_USE	0
1684	88	8	FourthMoment.java	increment	THIS	FourthMoment	UNKNOWN_AS	0	1	NO_USE	1
1685	91	8	Skewness.java	increment	d	double	PARAM_AS	1	0	PARAM_USE	0
1685	91	8	Skewness.java	increment	THIS	Skewness	UNKNOWN_AS	0	0	FIELD_USE	1
1686	106	8	Skewness.java	getResult	THIS	Skewness	UNKNOWN_AS	0	2	FIELD_USE	1
1687	110	8	Skewness.java	getResult	variance	double	/	0	1	PARAM_USE	1
1687	110	8	Skewness.java	getResult	THIS	Skewness	UNKNOWN_AS	0	2	FIELD_USE	0
1688	131	8	Skewness.java	clear	THIS	Skewness	UNKNOWN_AS	0	0	FIELD_USE	1
1689	159	8	Skewness.java	evaluate	skew	double	NAME	0	0	NO_USE	0
1689	159	8	Skewness.java	evaluate	values	double[]	PARAM_AS	1	1	PARAM_USE	1
1689	159	8	Skewness.java	evaluate	begin	int	PARAM_AS	1	1	PARAM_USE	1
1689	159	8	Skewness.java	evaluate	length	int	PARAM_AS	1	2	PARAM_USE	1
1689	159	8	Skewness.java	evaluate	THIS	Skewness	UNKNOWN_AS	0	1	NO_USE	1
1690	66	8	VectorialCovariance.java	increment	v	double[]	PARAM_AS	1	1	OTHER_USE	1
1690	66	8	VectorialCovariance.java	increment	THIS	VectorialCovariance	UNKNOWN_AS	0	3	FIELD_USE	1
1691	88	8	VectorialCovariance.java	getResult	dimension	int	NAME	0	0	<	0
1691	88	8	VectorialCovariance.java	getResult	result	RealMatrix	createRealMatrix()	0	0	CLALLER_USE	0
1691	88	8	VectorialCovariance.java	getResult	THIS	VectorialCovariance	UNKNOWN_AS	0	1	FIELD_USE	1
1692	136	8	VectorialCovariance.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	1
1692	136	8	VectorialCovariance.java	equals	THIS	VectorialCovariance	UNKNOWN_AS	0	9	NO_USE	1
1693	139	8	VectorialCovariance.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	1
1693	139	8	VectorialCovariance.java	equals	THIS	VectorialCovariance	UNKNOWN_AS	0	9	NO_USE	0
1694	143	8	VectorialCovariance.java	equals	other	VectorialCovariance	CAST	0	4	NO_USE	1
1694	143	8	VectorialCovariance.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	0
1694	143	8	VectorialCovariance.java	equals	THIS	VectorialCovariance	UNKNOWN_AS	0	9	NO_USE	1
1695	146	8	VectorialCovariance.java	equals	other	VectorialCovariance	CAST	0	4	NO_USE	1
1695	146	8	VectorialCovariance.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	0
1695	146	8	VectorialCovariance.java	equals	THIS	VectorialCovariance	UNKNOWN_AS	0	9	NO_USE	1
1696	149	8	VectorialCovariance.java	equals	other	VectorialCovariance	CAST	0	4	NO_USE	1
1696	149	8	VectorialCovariance.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	0
1696	149	8	VectorialCovariance.java	equals	THIS	VectorialCovariance	UNKNOWN_AS	0	9	NO_USE	1
1697	152	8	VectorialCovariance.java	equals	other	VectorialCovariance	CAST	0	4	NO_USE	1
1697	152	8	VectorialCovariance.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	0
1697	152	8	VectorialCovariance.java	equals	THIS	VectorialCovariance	UNKNOWN_AS	0	9	NO_USE	1
1698	80	8	SecondMoment.java	increment	d	double	PARAM_AS	1	0	NO_USE	0
1698	80	8	SecondMoment.java	increment	THIS	SecondMoment	UNKNOWN_AS	0	1	NO_USE	1
1699	98	8	Kurtosis.java	increment	d	double	PARAM_AS	1	0	PARAM_USE	0
1699	98	8	Kurtosis.java	increment	THIS	Kurtosis	UNKNOWN_AS	0	0	FIELD_USE	1
1700	112	8	Kurtosis.java	getResult	kurtosis	double	NAME	0	0	NO_USE	0
1700	112	8	Kurtosis.java	getResult	THIS	Kurtosis	UNKNOWN_AS	0	3	FIELD_USE	1
1701	114	16	Kurtosis.java	getResult	variance	double	/	0	1	OTHER_USE	1
1701	114	16	Kurtosis.java	getResult	kurtosis	double	NAME	0	0	NO_USE	0
1701	114	16	Kurtosis.java	getResult	THIS	Kurtosis	UNKNOWN_AS	0	3	FIELD_USE	1
1702	132	8	Kurtosis.java	clear	THIS	Kurtosis	UNKNOWN_AS	0	0	FIELD_USE	1
1703	170	8	Kurtosis.java	evaluate	kurt	double	NAME	0	0	NO_USE	0
1703	170	8	Kurtosis.java	evaluate	values	double[]	PARAM_AS	1	1	PARAM_USE	1
1703	170	8	Kurtosis.java	evaluate	begin	int	PARAM_AS	1	1	PARAM_USE	1
1703	170	8	Kurtosis.java	evaluate	length	int	PARAM_AS	1	2	PARAM_USE	1
1703	170	8	Kurtosis.java	evaluate	THIS	Kurtosis	UNKNOWN_AS	0	1	FIELD_USE	1
1704	111	8	GeometricMean.java	getResult	THIS	GeometricMean	UNKNOWN_AS	0	1	FIELD_USE	1
1705	203	8	GeometricMean.java	checkEmpty	THIS	GeometricMean	UNKNOWN_AS	0	1	FIELD_USE	1
1706	102	8	FirstMoment.java	increment	d	double	PARAM_AS	1	0	NO_USE	0
1706	102	8	FirstMoment.java	increment	THIS	FirstMoment	UNKNOWN_AS	0	1	NO_USE	1
1707	89	8	ThirdMoment.java	increment	d	double	PARAM_AS	1	0	NO_USE	0
1707	89	8	ThirdMoment.java	increment	THIS	ThirdMoment	UNKNOWN_AS	0	1	NO_USE	1
1708	183	8	SemiVariance.java	evaluate	values	double[]	PARAM_AS	1	1	NO_USE	1
1708	183	8	SemiVariance.java	evaluate	THIS	SemiVariance	UNKNOWN_AS	0	0	FIELD_USE	0
1709	281	8	SemiVariance.java	evaluate	values	double[]	PARAM_AS	1	3	OTHER_USE	1
1709	281	8	SemiVariance.java	evaluate	cutoff	double	PARAM_AS	1	1	>	0
1709	281	8	SemiVariance.java	evaluate	direction	Direction	PARAM_AS	1	0	CLALLER_USE	0
1709	281	8	SemiVariance.java	evaluate	corrected	boolean	PARAM_AS	1	0	OTHER_USE	0
1709	281	8	SemiVariance.java	evaluate	start	int	PARAM_AS	1	0	OTHER_USE	0
1709	281	8	SemiVariance.java	evaluate	length	int	PARAM_AS	1	0	<	0
1709	281	8	SemiVariance.java	evaluate	THIS	SemiVariance	UNKNOWN_AS	0	2	FIELD_USE	1
1710	284	12	SemiVariance.java	evaluate	values	double[]	PARAM_AS	1	3	ARR_USE	1
1710	284	12	SemiVariance.java	evaluate	cutoff	double	PARAM_AS	1	1	>	0
1710	284	12	SemiVariance.java	evaluate	direction	Direction	PARAM_AS	1	0	CLALLER_USE	0
1710	284	12	SemiVariance.java	evaluate	corrected	boolean	PARAM_AS	1	0	OTHER_USE	0
1710	284	12	SemiVariance.java	evaluate	start	int	PARAM_AS	1	0	OTHER_USE	0
1710	284	12	SemiVariance.java	evaluate	length	int	PARAM_AS	1	0	<	0
1710	284	12	SemiVariance.java	evaluate	THIS	SemiVariance	UNKNOWN_AS	0	2	NO_USE	1
1711	292	20	SemiVariance.java	evaluate	i	int	NAME	0	1	ARRIDX_USE	1
1711	292	20	SemiVariance.java	evaluate	booleanDirection	boolean	getDirection()	0	1	NO_USE	1
1711	292	20	SemiVariance.java	evaluate	dev	double	0.0	0	0	*	0
1711	292	20	SemiVariance.java	evaluate	sumsq	double	0.0	0	0	NO_USE	0
1711	292	20	SemiVariance.java	evaluate	values	double[]	PARAM_AS	1	3	ARR_USE	1
1711	292	20	SemiVariance.java	evaluate	cutoff	double	PARAM_AS	1	1	-	1
1711	292	20	SemiVariance.java	evaluate	direction	Direction	PARAM_AS	1	0	NO_USE	0
1711	292	20	SemiVariance.java	evaluate	corrected	boolean	PARAM_AS	1	0	NO_USE	0
1711	292	20	SemiVariance.java	evaluate	start	int	PARAM_AS	1	0	NO_USE	0
1711	292	20	SemiVariance.java	evaluate	length	int	PARAM_AS	1	0	NO_USE	0
1711	292	20	SemiVariance.java	evaluate	THIS	SemiVariance	UNKNOWN_AS	0	2	NO_USE	0
1712	298	16	SemiVariance.java	evaluate	booleanDirection	boolean	getDirection()	0	1	NO_USE	0
1712	298	16	SemiVariance.java	evaluate	dev	double	-	0	0	NO_USE	0
1712	298	16	SemiVariance.java	evaluate	sumsq	double	*	0	0	/	0
1712	298	16	SemiVariance.java	evaluate	values	double[]	PARAM_AS	1	3	NO_USE	0
1712	298	16	SemiVariance.java	evaluate	cutoff	double	PARAM_AS	1	1	NO_USE	0
1712	298	16	SemiVariance.java	evaluate	direction	Direction	PARAM_AS	1	0	NO_USE	0
1712	298	16	SemiVariance.java	evaluate	corrected	boolean	PARAM_AS	1	0	NO_USE	1
1712	298	16	SemiVariance.java	evaluate	start	int	PARAM_AS	1	0	NO_USE	0
1712	298	16	SemiVariance.java	evaluate	length	int	PARAM_AS	1	0	-	0
1712	298	16	SemiVariance.java	evaluate	THIS	SemiVariance	UNKNOWN_AS	0	2	NO_USE	0
1713	53	8	VectorialMean.java	increment	v	double[]	PARAM_AS	1	1	OTHER_USE	1
1713	53	8	VectorialMean.java	increment	THIS	VectorialMean	UNKNOWN_AS	0	3	FIELD_USE	1
1714	93	8	VectorialMean.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	1
1714	93	8	VectorialMean.java	equals	THIS	VectorialMean	UNKNOWN_AS	0	3	NO_USE	1
1715	96	8	VectorialMean.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	1
1715	96	8	VectorialMean.java	equals	THIS	VectorialMean	UNKNOWN_AS	0	3	NO_USE	0
1716	100	8	VectorialMean.java	equals	other	VectorialMean	CAST	0	1	NO_USE	1
1716	100	8	VectorialMean.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	0
1716	100	8	VectorialMean.java	equals	THIS	VectorialMean	UNKNOWN_AS	0	3	NO_USE	1
1717	137	8	DescriptiveStatistics.java	DescriptiveStatistics	initialDoubleArray	double[]	PARAM_AS	1	1	OTHER_USE	1
1717	137	8	DescriptiveStatistics.java	DescriptiveStatistics	THIS	DescriptiveStatistics	UNKNOWN_AS	0	0	NO_USE	0
1718	161	8	DescriptiveStatistics.java	addValue	v	double	PARAM_AS	1	0	PARAM_USE	0
1718	161	8	DescriptiveStatistics.java	addValue	THIS	DescriptiveStatistics	UNKNOWN_AS	0	5	CLALLER_USE	1
1719	162	12	DescriptiveStatistics.java	addValue	v	double	PARAM_AS	1	0	PARAM_USE	0
1719	162	12	DescriptiveStatistics.java	addValue	THIS	DescriptiveStatistics	UNKNOWN_AS	0	5	FIELD_USE	1
1720	164	19	DescriptiveStatistics.java	addValue	v	double	PARAM_AS	1	0	PARAM_USE	0
1720	164	19	DescriptiveStatistics.java	addValue	THIS	DescriptiveStatistics	UNKNOWN_AS	0	5	FIELD_USE	1
1721	225	8	DescriptiveStatistics.java	getStandardDeviation	stdDev	double	NAME	0	0	NO_USE	0
1721	225	8	DescriptiveStatistics.java	getStandardDeviation	THIS	DescriptiveStatistics	UNKNOWN_AS	0	2	CLALLER_USE	1
1722	226	12	DescriptiveStatistics.java	getStandardDeviation	stdDev	double	NAME	0	0	NO_USE	0
1722	226	12	DescriptiveStatistics.java	getStandardDeviation	THIS	DescriptiveStatistics	UNKNOWN_AS	0	2	CLALLER_USE	1
1723	324	8	DescriptiveStatistics.java	setWindowSize	windowSize	int	PARAM_AS	1	4	!=	1
1723	324	8	DescriptiveStatistics.java	setWindowSize	THIS	DescriptiveStatistics	UNKNOWN_AS	0	1	FIELD_USE	0
1724	325	12	DescriptiveStatistics.java	setWindowSize	windowSize	int	PARAM_AS	1	4	PARAM_USE	1
1724	325	12	DescriptiveStatistics.java	setWindowSize	THIS	DescriptiveStatistics	UNKNOWN_AS	0	1	FIELD_USE	0
1725	336	8	DescriptiveStatistics.java	setWindowSize	windowSize	int	PARAM_AS	1	4	-	1
1725	336	8	DescriptiveStatistics.java	setWindowSize	THIS	DescriptiveStatistics	NAME	0	1	FIELD_USE	1
1726	397	8	DescriptiveStatistics.java	getPercentile	p	double	PARAM_AS	1	0	PARAM_USE	0
1726	397	8	DescriptiveStatistics.java	getPercentile	THIS	DescriptiveStatistics	UNKNOWN_AS	0	1	FIELD_USE	1
1727	157	8	SummaryStatistics.java	addValue	value	double	PARAM_AS	1	0	PARAM_USE	0
1727	157	8	SummaryStatistics.java	addValue	THIS	SummaryStatistics	UNKNOWN_AS	0	3	FIELD_USE	1
1728	160	8	SummaryStatistics.java	addValue	value	double	PARAM_AS	1	0	PARAM_USE	0
1728	160	8	SummaryStatistics.java	addValue	THIS	SummaryStatistics	UNKNOWN_AS	0	3	FIELD_USE	1
1729	163	8	SummaryStatistics.java	addValue	value	double	PARAM_AS	1	0	PARAM_USE	0
1729	163	8	SummaryStatistics.java	addValue	THIS	SummaryStatistics	UNKNOWN_AS	0	3	FIELD_USE	1
1730	204	8	SummaryStatistics.java	getMean	THIS	SummaryStatistics	UNKNOWN_AS	0	2	FIELD_USE	1
1731	220	8	SummaryStatistics.java	getStandardDeviation	stdDev	double	NAME	0	0	NO_USE	0
1731	220	8	SummaryStatistics.java	getStandardDeviation	THIS	SummaryStatistics	UNKNOWN_AS	0	2	CLALLER_USE	1
1732	221	12	SummaryStatistics.java	getStandardDeviation	stdDev	double	NAME	0	0	NO_USE	0
1732	221	12	SummaryStatistics.java	getStandardDeviation	THIS	SummaryStatistics	UNKNOWN_AS	0	2	CLALLER_USE	1
1733	238	8	SummaryStatistics.java	getVariance	THIS	SummaryStatistics	UNKNOWN_AS	0	2	FIELD_USE	1
1734	342	8	SummaryStatistics.java	clear	THIS	SummaryStatistics	0	0	4	FIELD_USE	1
1735	345	8	SummaryStatistics.java	clear	THIS	SummaryStatistics	0	0	4	FIELD_USE	1
1736	359	8	SummaryStatistics.java	equals	object	Object	PARAM_AS	1	2	NO_USE	1
1736	359	8	SummaryStatistics.java	equals	THIS	SummaryStatistics	UNKNOWN_AS	0	1	NO_USE	1
1737	362	8	SummaryStatistics.java	equals	object	Object	PARAM_AS	1	2	NO_USE	1
1737	362	8	SummaryStatistics.java	equals	THIS	SummaryStatistics	UNKNOWN_AS	0	1	NO_USE	0
1738	632	8	SummaryStatistics.java	checkEmpty	THIS	SummaryStatistics	UNKNOWN_AS	0	1	FIELD_USE	1
1739	669	8	SummaryStatistics.java	copy	source	SummaryStatistics	PARAM_AS	1	17	OTHER_USE	1
1739	669	8	SummaryStatistics.java	copy	dest	SummaryStatistics	copy()	1	0	OTHER_USE	0
1739	669	8	SummaryStatistics.java	copy	THIS	SummaryStatistics	copy()	0	16	FIELD_USE	0
1740	680	8	SummaryStatistics.java	copy	source	SummaryStatistics	PARAM_AS	1	17	OTHER_USE	1
1740	680	8	SummaryStatistics.java	copy	dest	SummaryStatistics	NAME	1	0	OTHER_USE	0
1740	680	8	SummaryStatistics.java	copy	THIS	SummaryStatistics	NAME	0	16	FIELD_USE	1
1741	685	8	SummaryStatistics.java	copy	source	SummaryStatistics	PARAM_AS	1	17	OTHER_USE	1
1741	685	8	SummaryStatistics.java	copy	dest	SummaryStatistics	CAST	1	0	OTHER_USE	0
1741	685	8	SummaryStatistics.java	copy	THIS	SummaryStatistics	CAST	0	16	FIELD_USE	1
1742	690	8	SummaryStatistics.java	copy	source	SummaryStatistics	PARAM_AS	1	17	OTHER_USE	1
1742	690	8	SummaryStatistics.java	copy	dest	SummaryStatistics	CAST	1	0	OTHER_USE	0
1742	690	8	SummaryStatistics.java	copy	THIS	SummaryStatistics	CAST	0	16	FIELD_USE	1
1743	695	8	SummaryStatistics.java	copy	source	SummaryStatistics	PARAM_AS	1	17	OTHER_USE	1
1743	695	8	SummaryStatistics.java	copy	dest	SummaryStatistics	CAST	1	0	OTHER_USE	0
1743	695	8	SummaryStatistics.java	copy	THIS	SummaryStatistics	CAST	0	16	FIELD_USE	1
1744	700	8	SummaryStatistics.java	copy	source	SummaryStatistics	PARAM_AS	1	17	OTHER_USE	1
1744	700	8	SummaryStatistics.java	copy	dest	SummaryStatistics	CAST	1	0	OTHER_USE	0
1744	700	8	SummaryStatistics.java	copy	THIS	SummaryStatistics	CAST	0	16	FIELD_USE	1
1745	705	8	SummaryStatistics.java	copy	source	SummaryStatistics	PARAM_AS	1	17	OTHER_USE	1
1745	705	8	SummaryStatistics.java	copy	dest	SummaryStatistics	CAST	1	0	OTHER_USE	0
1745	705	8	SummaryStatistics.java	copy	THIS	SummaryStatistics	CAST	0	16	FIELD_USE	1
1746	710	8	SummaryStatistics.java	copy	source	SummaryStatistics	PARAM_AS	1	17	OTHER_USE	1
1746	710	8	SummaryStatistics.java	copy	dest	SummaryStatistics	CAST	1	0	OTHER_USE	0
1746	710	8	SummaryStatistics.java	copy	THIS	SummaryStatistics	CAST	0	16	FIELD_USE	1
1747	715	8	SummaryStatistics.java	copy	source	SummaryStatistics	PARAM_AS	1	17	OTHER_USE	1
1747	715	8	SummaryStatistics.java	copy	dest	SummaryStatistics	CAST	1	0	OTHER_USE	0
1747	715	8	SummaryStatistics.java	copy	THIS	SummaryStatistics	CAST	0	16	FIELD_USE	1
1748	76	8	Min.java	increment	d	double	PARAM_AS	1	1	OTHER_USE	1
1748	76	8	Min.java	increment	THIS	Min	UNKNOWN_AS	0	2	NO_USE	1
1749	131	8	Min.java	evaluate	min	double	NAME	0	0	<	0
1749	131	8	Min.java	evaluate	values	double[]	PARAM_AS	1	2	ARR_USE	1
1749	131	8	Min.java	evaluate	begin	int	PARAM_AS	1	1	ARRIDX_USE	1
1749	131	8	Min.java	evaluate	length	int	PARAM_AS	1	1	+	1
1749	131	8	Min.java	evaluate	THIS	Min	UNKNOWN_AS	0	1	NO_USE	1
1750	134	16	Min.java	evaluate	i	int	NAME	0	1	ARRIDX_USE	1
1750	134	16	Min.java	evaluate	min	double	ARRAY_ACCESS	0	0	<	0
1750	134	16	Min.java	evaluate	values	double[]	PARAM_AS	1	2	ARR_USE	1
1750	134	16	Min.java	evaluate	begin	int	PARAM_AS	1	1	NO_USE	0
1750	134	16	Min.java	evaluate	length	int	PARAM_AS	1	1	NO_USE	0
1750	134	16	Min.java	evaluate	THIS	Min	UNKNOWN_AS	0	1	NO_USE	0
1751	76	8	Max.java	increment	d	double	PARAM_AS	1	1	OTHER_USE	1
1751	76	8	Max.java	increment	THIS	Max	UNKNOWN_AS	0	2	NO_USE	1
1752	131	8	Max.java	evaluate	max	double	NAME	0	0	>	0
1752	131	8	Max.java	evaluate	values	double[]	PARAM_AS	1	2	ARR_USE	1
1752	131	8	Max.java	evaluate	begin	int	PARAM_AS	1	1	ARRIDX_USE	1
1752	131	8	Max.java	evaluate	length	int	PARAM_AS	1	1	+	1
1752	131	8	Max.java	evaluate	THIS	Max	UNKNOWN_AS	0	1	NO_USE	1
1753	134	16	Max.java	evaluate	i	int	NAME	0	1	ARRIDX_USE	1
1753	134	16	Max.java	evaluate	max	double	ARRAY_ACCESS	0	0	>	0
1753	134	16	Max.java	evaluate	values	double[]	PARAM_AS	1	2	ARR_USE	1
1753	134	16	Max.java	evaluate	begin	int	PARAM_AS	1	1	NO_USE	0
1753	134	16	Max.java	evaluate	length	int	PARAM_AS	1	1	NO_USE	0
1753	134	16	Max.java	evaluate	THIS	Max	UNKNOWN_AS	0	1	NO_USE	0
1754	133	8	Percentile.java	setData	values	double[]	PARAM_AS	1	1	NO_USE	1
1754	133	8	Percentile.java	setData	THIS	Percentile	UNKNOWN_AS	0	0	FIELD_USE	0
1755	145	8	Percentile.java	setData	values	double[]	PARAM_AS	1	1	NO_USE	1
1755	145	8	Percentile.java	setData	begin	int	PARAM_AS	1	0	NO_USE	0
1755	145	8	Percentile.java	setData	length	int	PARAM_AS	1	0	NO_USE	0
1755	145	8	Percentile.java	setData	THIS	Percentile	UNKNOWN_AS	0	0	FIELD_USE	0
1756	261	8	Percentile.java	evaluate	values	double[]	PARAM_AS	1	1	NO_USE	0
1756	261	8	Percentile.java	evaluate	begin	int	PARAM_AS	1	0	NO_USE	0
1756	261	8	Percentile.java	evaluate	length	int	PARAM_AS	1	2	NO_USE	0
1756	261	8	Percentile.java	evaluate	p	double	PARAM_AS	1	2	OTHER_USE	1
1756	261	8	Percentile.java	evaluate	THIS	Percentile	UNKNOWN_AS	0	1	FIELD_USE	0
1757	264	8	Percentile.java	evaluate	values	double[]	PARAM_AS	1	1	NO_USE	0
1757	264	8	Percentile.java	evaluate	begin	int	PARAM_AS	1	0	NO_USE	0
1757	264	8	Percentile.java	evaluate	length	int	PARAM_AS	1	2	NO_USE	1
1757	264	8	Percentile.java	evaluate	p	double	PARAM_AS	1	2	NO_USE	0
1757	264	8	Percentile.java	evaluate	THIS	Percentile	UNKNOWN_AS	0	1	FIELD_USE	0
1758	267	8	Percentile.java	evaluate	values	double[]	PARAM_AS	1	1	ARR_USE	0
1758	267	8	Percentile.java	evaluate	begin	int	PARAM_AS	1	0	ARRIDX_USE	0
1758	267	8	Percentile.java	evaluate	length	int	PARAM_AS	1	2	NO_USE	1
1758	267	8	Percentile.java	evaluate	p	double	PARAM_AS	1	2	NO_USE	0
1758	267	8	Percentile.java	evaluate	THIS	Percentile	UNKNOWN_AS	0	1	NO_USE	0
1759	277	8	Percentile.java	evaluate	n	double	NAME	0	1	NO_USE	0
1759	277	8	Percentile.java	evaluate	pos	double	/	0	2	NO_USE	0
1759	277	8	Percentile.java	evaluate	fpos	double	floor()	0	0	NO_USE	0
1759	277	8	Percentile.java	evaluate	intPos	int	CAST	0	0	NO_USE	0
1759	277	8	Percentile.java	evaluate	dif	double	-	0	0	NO_USE	0
1759	277	8	Percentile.java	evaluate	work	double[]	UNKNOWN_AS	0	0	PARAM_USE	0
1759	277	8	Percentile.java	evaluate	pivotsHeap	int[]	UNKNOWN_AS	0	0	PARAM_USE	0
1759	277	8	Percentile.java	evaluate	values	double[]	PARAM_AS	1	1	PARAM_USE	1
1759	277	8	Percentile.java	evaluate	begin	int	PARAM_AS	1	0	PARAM_USE	0
1759	277	8	Percentile.java	evaluate	length	int	PARAM_AS	1	2	OTHER_USE	0
1759	277	8	Percentile.java	evaluate	p	double	PARAM_AS	1	2	NO_USE	0
1759	277	8	Percentile.java	evaluate	THIS	Percentile	UNKNOWN_AS	0	1	CLALLER_USE	1
1760	287	8	Percentile.java	evaluate	n	double	NAME	0	1	NO_USE	0
1760	287	8	Percentile.java	evaluate	pos	double	/	0	2	NO_USE	1
1760	287	8	Percentile.java	evaluate	fpos	double	floor()	0	0	NO_USE	0
1760	287	8	Percentile.java	evaluate	intPos	int	CAST	0	0	NO_USE	0
1760	287	8	Percentile.java	evaluate	dif	double	-	0	0	NO_USE	0
1760	287	8	Percentile.java	evaluate	work	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
1760	287	8	Percentile.java	evaluate	pivotsHeap	int[]	ARRAY_CREATION	0	0	PARAM_USE	0
1760	287	8	Percentile.java	evaluate	values	double[]	PARAM_AS	1	1	NO_USE	0
1760	287	8	Percentile.java	evaluate	begin	int	PARAM_AS	1	0	NO_USE	0
1760	287	8	Percentile.java	evaluate	length	int	PARAM_AS	1	2	NO_USE	0
1760	287	8	Percentile.java	evaluate	p	double	PARAM_AS	1	2	NO_USE	0
1760	287	8	Percentile.java	evaluate	THIS	Percentile	UNKNOWN_AS	0	1	CLALLER_USE	0
1761	290	8	Percentile.java	evaluate	n	double	NAME	0	1	NO_USE	1
1761	290	8	Percentile.java	evaluate	pos	double	/	0	2	NO_USE	1
1761	290	8	Percentile.java	evaluate	fpos	double	floor()	0	0	NO_USE	0
1761	290	8	Percentile.java	evaluate	intPos	int	CAST	0	0	NO_USE	0
1761	290	8	Percentile.java	evaluate	dif	double	-	0	0	NO_USE	0
1761	290	8	Percentile.java	evaluate	work	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
1761	290	8	Percentile.java	evaluate	pivotsHeap	int[]	ARRAY_CREATION	0	0	PARAM_USE	0
1761	290	8	Percentile.java	evaluate	values	double[]	PARAM_AS	1	1	NO_USE	0
1761	290	8	Percentile.java	evaluate	begin	int	PARAM_AS	1	0	NO_USE	0
1761	290	8	Percentile.java	evaluate	length	int	PARAM_AS	1	2	-	0
1761	290	8	Percentile.java	evaluate	p	double	PARAM_AS	1	2	NO_USE	0
1761	290	8	Percentile.java	evaluate	THIS	Percentile	UNKNOWN_AS	0	1	CLALLER_USE	0
1762	318	12	Percentile.java	select	pivot	int	UNKNOWN_AS	0	2	OTHER_USE	0
1762	318	12	Percentile.java	select	begin	int	0	0	0	PARAM_USE	0
1762	318	12	Percentile.java	select	end	int	NAME	0	0	PARAM_USE	0
1762	318	12	Percentile.java	select	node	int	0	0	3	ARRIDX_USE	1
1762	318	12	Percentile.java	select	work	double[]	PARAM_AS	1	0	PARAM_USE	0
1762	318	12	Percentile.java	select	pivotsHeap	int[]	PARAM_AS	1	3	ARR_USE	1
1762	318	12	Percentile.java	select	k	int	PARAM_AS	1	2	NO_USE	0
1762	318	12	Percentile.java	select	THIS	Percentile	UNKNOWN_AS	0	2	CLALLER_USE	1
1763	325	16	Percentile.java	select	pivot	int	partition()	0	2	OTHER_USE	0
1763	325	16	Percentile.java	select	begin	int	0	0	0	NO_USE	0
1763	325	16	Percentile.java	select	end	int	NAME	0	0	NO_USE	0
1763	325	16	Percentile.java	select	node	int	0	0	3	ARRIDX_USE	1
1763	325	16	Percentile.java	select	work	double[]	PARAM_AS	1	0	NO_USE	0
1763	325	16	Percentile.java	select	pivotsHeap	int[]	PARAM_AS	1	3	ARR_USE	1
1763	325	16	Percentile.java	select	k	int	PARAM_AS	1	2	NO_USE	0
1763	325	16	Percentile.java	select	THIS	Percentile	UNKNOWN_AS	0	2	NO_USE	1
1764	330	12	Percentile.java	select	pivot	int	partition()	0	2	<	1
1764	330	12	Percentile.java	select	begin	int	0	0	0	NO_USE	0
1764	330	12	Percentile.java	select	end	int	NAME	0	0	NO_USE	0
1764	330	12	Percentile.java	select	node	int	NAME	0	3	*	0
1764	330	12	Percentile.java	select	work	double[]	PARAM_AS	1	0	ARR_USE	0
1764	330	12	Percentile.java	select	pivotsHeap	int[]	NAME	1	3	OTHER_USE	0
1764	330	12	Percentile.java	select	k	int	PARAM_AS	1	2	ARRIDX_USE	1
1764	330	12	Percentile.java	select	THIS	Percentile	UNKNOWN_AS	0	2	FIELD_USE	0
1765	333	19	Percentile.java	select	pivot	int	partition()	0	2	OTHER_USE	1
1765	333	19	Percentile.java	select	begin	int	0	0	0	NO_USE	0
1765	333	19	Percentile.java	select	end	int	NAME	0	0	NO_USE	0
1765	333	19	Percentile.java	select	node	int	NAME	0	3	*	0
1765	333	19	Percentile.java	select	work	double[]	PARAM_AS	1	0	NO_USE	0
1765	333	19	Percentile.java	select	pivotsHeap	int[]	NAME	1	3	OTHER_USE	0
1765	333	19	Percentile.java	select	k	int	PARAM_AS	1	2	NO_USE	1
1765	333	19	Percentile.java	select	THIS	Percentile	UNKNOWN_AS	0	2	FIELD_USE	0
1766	367	8	Percentile.java	medianOf3	inclusiveEnd	int	-	0	0	OTHER_USE	0
1766	367	8	Percentile.java	medianOf3	middle	int	+	0	0	RET_USE	0
1766	367	8	Percentile.java	medianOf3	wBegin	double	ARRAY_ACCESS	0	2	<	1
1766	367	8	Percentile.java	medianOf3	wMiddle	double	ARRAY_ACCESS	0	2	<	1
1766	367	8	Percentile.java	medianOf3	wEnd	double	ARRAY_ACCESS	0	2	<	0
1766	367	8	Percentile.java	medianOf3	work	double[]	PARAM_AS	1	0	NO_USE	0
1766	367	8	Percentile.java	medianOf3	begin	int	PARAM_AS	1	0	OTHER_USE	0
1766	367	8	Percentile.java	medianOf3	end	int	PARAM_AS	1	0	NO_USE	0
1766	367	8	Percentile.java	medianOf3	THIS	Percentile	UNKNOWN_AS	0	0	NO_USE	0
1767	368	12	Percentile.java	medianOf3	inclusiveEnd	int	-	0	0	OTHER_USE	0
1767	368	12	Percentile.java	medianOf3	middle	int	+	0	0	RET_USE	0
1767	368	12	Percentile.java	medianOf3	wBegin	double	ARRAY_ACCESS	0	2	<	0
1767	368	12	Percentile.java	medianOf3	wMiddle	double	ARRAY_ACCESS	0	2	NO_USE	1
1767	368	12	Percentile.java	medianOf3	wEnd	double	ARRAY_ACCESS	0	2	<	1
1767	368	12	Percentile.java	medianOf3	work	double[]	PARAM_AS	1	0	NO_USE	0
1767	368	12	Percentile.java	medianOf3	begin	int	PARAM_AS	1	0	OTHER_USE	0
1767	368	12	Percentile.java	medianOf3	end	int	PARAM_AS	1	0	NO_USE	0
1767	368	12	Percentile.java	medianOf3	THIS	Percentile	UNKNOWN_AS	0	0	NO_USE	0
1768	374	12	Percentile.java	medianOf3	inclusiveEnd	int	-	0	0	OTHER_USE	0
1768	374	12	Percentile.java	medianOf3	middle	int	+	0	0	OTHER_USE	0
1768	374	12	Percentile.java	medianOf3	wBegin	double	ARRAY_ACCESS	0	2	NO_USE	1
1768	374	12	Percentile.java	medianOf3	wMiddle	double	ARRAY_ACCESS	0	2	<	0
1768	374	12	Percentile.java	medianOf3	wEnd	double	ARRAY_ACCESS	0	2	<	1
1768	374	12	Percentile.java	medianOf3	work	double[]	PARAM_AS	1	0	NO_USE	0
1768	374	12	Percentile.java	medianOf3	begin	int	PARAM_AS	1	0	RET_USE	0
1768	374	12	Percentile.java	medianOf3	end	int	PARAM_AS	1	0	NO_USE	0
1768	374	12	Percentile.java	medianOf3	THIS	Percentile	UNKNOWN_AS	0	0	NO_USE	0
1769	411	12	Percentile.java	partition	value	double	ARRAY_ACCESS	0	1	NO_USE	0
1769	411	12	Percentile.java	partition	i	int	+	0	3	ARRIDX_USE	1
1769	411	12	Percentile.java	partition	j	int	-	0	1	ARRIDX_USE	1
1769	411	12	Percentile.java	partition	work	double[]	ARRAY_ACCESS	1	1	ARR_USE	0
1769	411	12	Percentile.java	partition	begin	int	PARAM_AS	1	0	NO_USE	0
1769	411	12	Percentile.java	partition	end	int	PARAM_AS	1	1	NO_USE	0
1769	411	12	Percentile.java	partition	pivot	int	ARRAY_ACCESS	1	0	NO_USE	0
1769	411	12	Percentile.java	partition	THIS	Percentile	UNKNOWN_AS	0	0	NO_USE	0
1770	418	8	Percentile.java	partition	value	double	ARRAY_ACCESS	0	1	NO_USE	1
1770	418	8	Percentile.java	partition	i	int	ARRAY_ACCESS	0	3	--x	1
1770	418	8	Percentile.java	partition	j	int	NAME	0	1	NO_USE	0
1770	418	8	Percentile.java	partition	work	double[]	NAME	1	1	NO_USE	1
1770	418	8	Percentile.java	partition	begin	int	PARAM_AS	1	0	NO_USE	0
1770	418	8	Percentile.java	partition	end	int	PARAM_AS	1	1	NO_USE	1
1770	418	8	Percentile.java	partition	pivot	int	ARRAY_ACCESS	1	0	NO_USE	0
1770	418	8	Percentile.java	partition	THIS	Percentile	UNKNOWN_AS	0	0	NO_USE	0
1771	464	8	Percentile.java	setQuantile	p	double	PARAM_AS	1	2	OTHER_USE	1
1771	464	8	Percentile.java	setQuantile	THIS	Percentile	UNKNOWN_AS	0	0	FIELD_USE	0
1772	493	8	Percentile.java	copy	source	Percentile	PARAM_AS	1	1	OTHER_USE	1
1772	493	8	Percentile.java	copy	dest	Percentile	PARAM_AS	1	0	OTHER_USE	0
1772	493	8	Percentile.java	copy	THIS	Percentile	UNKNOWN_AS	0	1	FIELD_USE	1
1773	163	8	AbstractUnivariateStatistic.java	test	values	double[]	PARAM_AS	1	2	NO_USE	1
1773	163	8	AbstractUnivariateStatistic.java	test	begin	int	PARAM_AS	1	2	NO_USE	0
1773	163	8	AbstractUnivariateStatistic.java	test	length	int	PARAM_AS	1	3	NO_USE	0
1773	163	8	AbstractUnivariateStatistic.java	test	allowEmpty	boolean	PARAM_AS	1	1	NO_USE	0
1773	163	8	AbstractUnivariateStatistic.java	test	THIS	AbstractUnivariateStatistic	UNKNOWN_AS	0	1	FIELD_USE	0
1774	167	8	AbstractUnivariateStatistic.java	test	values	double[]	PARAM_AS	1	2	NO_USE	0
1774	167	8	AbstractUnivariateStatistic.java	test	begin	int	PARAM_AS	1	2	OTHER_USE	1
1774	167	8	AbstractUnivariateStatistic.java	test	length	int	PARAM_AS	1	3	NO_USE	0
1774	167	8	AbstractUnivariateStatistic.java	test	allowEmpty	boolean	PARAM_AS	1	1	NO_USE	0
1774	167	8	AbstractUnivariateStatistic.java	test	THIS	AbstractUnivariateStatistic	UNKNOWN_AS	0	1	FIELD_USE	0
1775	171	8	AbstractUnivariateStatistic.java	test	values	double[]	PARAM_AS	1	2	NO_USE	0
1775	171	8	AbstractUnivariateStatistic.java	test	begin	int	PARAM_AS	1	2	NO_USE	0
1775	171	8	AbstractUnivariateStatistic.java	test	length	int	PARAM_AS	1	3	OTHER_USE	1
1775	171	8	AbstractUnivariateStatistic.java	test	allowEmpty	boolean	PARAM_AS	1	1	NO_USE	0
1775	171	8	AbstractUnivariateStatistic.java	test	THIS	AbstractUnivariateStatistic	UNKNOWN_AS	0	1	FIELD_USE	0
1776	175	8	AbstractUnivariateStatistic.java	test	values	double[]	PARAM_AS	1	2	OTHER_USE	1
1776	175	8	AbstractUnivariateStatistic.java	test	begin	int	PARAM_AS	1	2	+	1
1776	175	8	AbstractUnivariateStatistic.java	test	length	int	PARAM_AS	1	3	+	1
1776	175	8	AbstractUnivariateStatistic.java	test	allowEmpty	boolean	PARAM_AS	1	1	NO_USE	0
1776	175	8	AbstractUnivariateStatistic.java	test	THIS	AbstractUnivariateStatistic	UNKNOWN_AS	0	1	FIELD_USE	1
1777	180	8	AbstractUnivariateStatistic.java	test	values	double[]	PARAM_AS	1	2	NO_USE	0
1777	180	8	AbstractUnivariateStatistic.java	test	begin	int	PARAM_AS	1	2	NO_USE	0
1777	180	8	AbstractUnivariateStatistic.java	test	length	int	PARAM_AS	1	3	NO_USE	1
1777	180	8	AbstractUnivariateStatistic.java	test	allowEmpty	boolean	PARAM_AS	1	1	NO_USE	1
1777	180	8	AbstractUnivariateStatistic.java	test	THIS	AbstractUnivariateStatistic	UNKNOWN_AS	0	1	NO_USE	0
1778	258	8	AbstractUnivariateStatistic.java	test	values	double[]	PARAM_AS	1	1	NO_USE	0
1778	258	8	AbstractUnivariateStatistic.java	test	weights	double[]	PARAM_AS	1	6	NO_USE	1
1778	258	8	AbstractUnivariateStatistic.java	test	begin	int	PARAM_AS	1	0	NO_USE	0
1778	258	8	AbstractUnivariateStatistic.java	test	length	int	PARAM_AS	1	0	NO_USE	0
1778	258	8	AbstractUnivariateStatistic.java	test	allowEmpty	boolean	PARAM_AS	1	0	NO_USE	0
1778	258	8	AbstractUnivariateStatistic.java	test	THIS	AbstractUnivariateStatistic	UNKNOWN_AS	0	2	FIELD_USE	0
1779	262	8	AbstractUnivariateStatistic.java	test	values	double[]	PARAM_AS	1	1	OTHER_USE	1
1779	262	8	AbstractUnivariateStatistic.java	test	weights	double[]	PARAM_AS	1	6	OTHER_USE	1
1779	262	8	AbstractUnivariateStatistic.java	test	begin	int	PARAM_AS	1	0	NO_USE	0
1779	262	8	AbstractUnivariateStatistic.java	test	length	int	PARAM_AS	1	0	NO_USE	0
1779	262	8	AbstractUnivariateStatistic.java	test	allowEmpty	boolean	PARAM_AS	1	0	NO_USE	0
1779	262	8	AbstractUnivariateStatistic.java	test	THIS	AbstractUnivariateStatistic	UNKNOWN_AS	0	2	FIELD_USE	1
1780	268	12	AbstractUnivariateStatistic.java	test	i	int	NAME	0	4	OTHER_USE	1
1780	268	12	AbstractUnivariateStatistic.java	test	containsPositiveWeight	boolean	LITERAL	0	2	NO_USE	0
1780	268	12	AbstractUnivariateStatistic.java	test	values	double[]	PARAM_AS	1	1	NO_USE	0
1780	268	12	AbstractUnivariateStatistic.java	test	weights	double[]	PARAM_AS	1	6	NO_USE	1
1780	268	12	AbstractUnivariateStatistic.java	test	begin	int	PARAM_AS	1	0	NO_USE	0
1780	268	12	AbstractUnivariateStatistic.java	test	length	int	PARAM_AS	1	0	NO_USE	0
1780	268	12	AbstractUnivariateStatistic.java	test	allowEmpty	boolean	PARAM_AS	1	0	NO_USE	0
1780	268	12	AbstractUnivariateStatistic.java	test	THIS	AbstractUnivariateStatistic	UNKNOWN_AS	0	2	FIELD_USE	0
1781	271	12	AbstractUnivariateStatistic.java	test	i	int	NAME	0	4	ARRIDX_USE	1
1781	271	12	AbstractUnivariateStatistic.java	test	containsPositiveWeight	boolean	LITERAL	0	2	NO_USE	0
1781	271	12	AbstractUnivariateStatistic.java	test	values	double[]	PARAM_AS	1	1	NO_USE	0
1781	271	12	AbstractUnivariateStatistic.java	test	weights	double[]	PARAM_AS	1	6	ARR_USE	1
1781	271	12	AbstractUnivariateStatistic.java	test	begin	int	PARAM_AS	1	0	NO_USE	0
1781	271	12	AbstractUnivariateStatistic.java	test	length	int	PARAM_AS	1	0	NO_USE	0
1781	271	12	AbstractUnivariateStatistic.java	test	allowEmpty	boolean	PARAM_AS	1	0	NO_USE	0
1781	271	12	AbstractUnivariateStatistic.java	test	THIS	AbstractUnivariateStatistic	UNKNOWN_AS	0	2	FIELD_USE	0
1782	274	12	AbstractUnivariateStatistic.java	test	i	int	NAME	0	4	OTHER_USE	1
1782	274	12	AbstractUnivariateStatistic.java	test	containsPositiveWeight	boolean	LITERAL	0	2	NO_USE	0
1782	274	12	AbstractUnivariateStatistic.java	test	values	double[]	PARAM_AS	1	1	NO_USE	0
1782	274	12	AbstractUnivariateStatistic.java	test	weights	double[]	PARAM_AS	1	6	ARR_USE	1
1782	274	12	AbstractUnivariateStatistic.java	test	begin	int	PARAM_AS	1	0	NO_USE	0
1782	274	12	AbstractUnivariateStatistic.java	test	length	int	PARAM_AS	1	0	NO_USE	0
1782	274	12	AbstractUnivariateStatistic.java	test	allowEmpty	boolean	PARAM_AS	1	0	NO_USE	0
1782	274	12	AbstractUnivariateStatistic.java	test	THIS	AbstractUnivariateStatistic	UNKNOWN_AS	0	2	FIELD_USE	0
1783	277	12	AbstractUnivariateStatistic.java	test	i	int	NAME	0	4	NO_USE	1
1783	277	12	AbstractUnivariateStatistic.java	test	containsPositiveWeight	boolean	LITERAL	0	2	NO_USE	1
1783	277	12	AbstractUnivariateStatistic.java	test	values	double[]	PARAM_AS	1	1	NO_USE	0
1783	277	12	AbstractUnivariateStatistic.java	test	weights	double[]	PARAM_AS	1	6	NO_USE	1
1783	277	12	AbstractUnivariateStatistic.java	test	begin	int	PARAM_AS	1	0	NO_USE	0
1783	277	12	AbstractUnivariateStatistic.java	test	length	int	PARAM_AS	1	0	NO_USE	0
1783	277	12	AbstractUnivariateStatistic.java	test	allowEmpty	boolean	PARAM_AS	1	0	NO_USE	0
1783	277	12	AbstractUnivariateStatistic.java	test	THIS	AbstractUnivariateStatistic	UNKNOWN_AS	0	2	NO_USE	0
1784	282	8	AbstractUnivariateStatistic.java	test	containsPositiveWeight	boolean	LITERAL	0	2	NO_USE	1
1784	282	8	AbstractUnivariateStatistic.java	test	values	double[]	PARAM_AS	1	1	NO_USE	0
1784	282	8	AbstractUnivariateStatistic.java	test	weights	double[]	PARAM_AS	1	6	NO_USE	0
1784	282	8	AbstractUnivariateStatistic.java	test	begin	int	PARAM_AS	1	0	NO_USE	0
1784	282	8	AbstractUnivariateStatistic.java	test	length	int	PARAM_AS	1	0	NO_USE	0
1784	282	8	AbstractUnivariateStatistic.java	test	allowEmpty	boolean	PARAM_AS	1	0	NO_USE	0
1784	282	8	AbstractUnivariateStatistic.java	test	THIS	AbstractUnivariateStatistic	UNKNOWN_AS	0	2	FIELD_USE	0
1785	133	8	StatisticalSummaryValues.java	equals	object	Object	PARAM_AS	1	2	NO_USE	1
1785	133	8	StatisticalSummaryValues.java	equals	THIS	StatisticalSummaryValues	UNKNOWN_AS	0	1	NO_USE	1
1786	136	8	StatisticalSummaryValues.java	equals	object	Object	PARAM_AS	1	2	NO_USE	1
1786	136	8	StatisticalSummaryValues.java	equals	THIS	StatisticalSummaryValues	UNKNOWN_AS	0	1	NO_USE	0
1787	302	8	AggregateSummaryStatistics.java	aggregate	statistics	Collection<SummaryStatistics>	PARAM_AS	1	1	NO_USE	1
1787	302	8	AggregateSummaryStatistics.java	aggregate	THIS	AggregateSummaryStatistics	UNKNOWN_AS	0	0	NO_USE	0
1788	306	8	AggregateSummaryStatistics.java	aggregate	iterator	Iterator<SummaryStatistics>	iterator()	0	1	NO_USE	1
1788	306	8	AggregateSummaryStatistics.java	aggregate	statistics	Collection<SummaryStatistics>	PARAM_AS	1	1	NO_USE	0
1788	306	8	AggregateSummaryStatistics.java	aggregate	THIS	AggregateSummaryStatistics	UNKNOWN_AS	0	0	NO_USE	0
1789	318	12	AggregateSummaryStatistics.java	aggregate	iterator	Iterator<SummaryStatistics>	iterator()	0	1	NO_USE	0
1789	318	12	AggregateSummaryStatistics.java	aggregate	current	SummaryStatistics	next()	0	2	CLALLER_USE	1
1789	318	12	AggregateSummaryStatistics.java	aggregate	n	long	getN()	0	2	NO_USE	0
1789	318	12	AggregateSummaryStatistics.java	aggregate	min	double	getMin()	0	2	NO_USE	1
1789	318	12	AggregateSummaryStatistics.java	aggregate	sum	double	getSum()	0	0	NO_USE	0
1789	318	12	AggregateSummaryStatistics.java	aggregate	max	double	getMax()	0	2	NO_USE	0
1789	318	12	AggregateSummaryStatistics.java	aggregate	m2	double	getSecondMoment()	0	0	NO_USE	0
1789	318	12	AggregateSummaryStatistics.java	aggregate	mean	double	getMean()	0	0	NO_USE	0
1789	318	12	AggregateSummaryStatistics.java	aggregate	statistics	Collection<SummaryStatistics>	PARAM_AS	1	1	NO_USE	0
1789	318	12	AggregateSummaryStatistics.java	aggregate	THIS	AggregateSummaryStatistics	UNKNOWN_AS	0	0	NO_USE	0
1790	321	12	AggregateSummaryStatistics.java	aggregate	iterator	Iterator<SummaryStatistics>	iterator()	0	1	NO_USE	0
1790	321	12	AggregateSummaryStatistics.java	aggregate	current	SummaryStatistics	next()	0	2	CLALLER_USE	1
1790	321	12	AggregateSummaryStatistics.java	aggregate	n	long	getN()	0	2	NO_USE	0
1790	321	12	AggregateSummaryStatistics.java	aggregate	min	double	getMin()	0	2	NO_USE	0
1790	321	12	AggregateSummaryStatistics.java	aggregate	sum	double	getSum()	0	0	NO_USE	0
1790	321	12	AggregateSummaryStatistics.java	aggregate	max	double	getMax()	0	2	NO_USE	1
1790	321	12	AggregateSummaryStatistics.java	aggregate	m2	double	getSecondMoment()	0	0	NO_USE	0
1790	321	12	AggregateSummaryStatistics.java	aggregate	mean	double	getMean()	0	0	NO_USE	0
1790	321	12	AggregateSummaryStatistics.java	aggregate	statistics	Collection<SummaryStatistics>	PARAM_AS	1	1	NO_USE	0
1790	321	12	AggregateSummaryStatistics.java	aggregate	THIS	AggregateSummaryStatistics	UNKNOWN_AS	0	0	NO_USE	0
1791	333	8	AggregateSummaryStatistics.java	aggregate	iterator	Iterator<SummaryStatistics>	iterator()	0	1	NO_USE	0
1791	333	8	AggregateSummaryStatistics.java	aggregate	current	SummaryStatistics	next()	0	2	NO_USE	0
1791	333	8	AggregateSummaryStatistics.java	aggregate	n	long	NAME	0	2	==	1
1791	333	8	AggregateSummaryStatistics.java	aggregate	min	double	getMin()	0	2	NO_USE	0
1791	333	8	AggregateSummaryStatistics.java	aggregate	sum	double	getSum()	0	0	NO_USE	0
1791	333	8	AggregateSummaryStatistics.java	aggregate	max	double	getMax()	0	2	NO_USE	0
1791	333	8	AggregateSummaryStatistics.java	aggregate	m2	double	+	0	0	/	0
1791	333	8	AggregateSummaryStatistics.java	aggregate	mean	double	/	0	0	NO_USE	0
1791	333	8	AggregateSummaryStatistics.java	aggregate	variance	double	UNKNOWN_AS	0	0	NO_USE	0
1791	333	8	AggregateSummaryStatistics.java	aggregate	statistics	Collection<SummaryStatistics>	PARAM_AS	1	1	NO_USE	0
1791	333	8	AggregateSummaryStatistics.java	aggregate	THIS	AggregateSummaryStatistics	UNKNOWN_AS	0	0	FIELD_USE	0
1792	335	15	AggregateSummaryStatistics.java	aggregate	iterator	Iterator<SummaryStatistics>	iterator()	0	1	NO_USE	0
1792	335	15	AggregateSummaryStatistics.java	aggregate	current	SummaryStatistics	next()	0	2	NO_USE	0
1792	335	15	AggregateSummaryStatistics.java	aggregate	n	long	NAME	0	2	-	1
1792	335	15	AggregateSummaryStatistics.java	aggregate	min	double	getMin()	0	2	NO_USE	0
1792	335	15	AggregateSummaryStatistics.java	aggregate	sum	double	getSum()	0	0	NO_USE	0
1792	335	15	AggregateSummaryStatistics.java	aggregate	max	double	getMax()	0	2	NO_USE	0
1792	335	15	AggregateSummaryStatistics.java	aggregate	m2	double	+	0	0	/	0
1792	335	15	AggregateSummaryStatistics.java	aggregate	mean	double	/	0	0	NO_USE	0
1792	335	15	AggregateSummaryStatistics.java	aggregate	variance	double	NAME	0	0	NO_USE	0
1792	335	15	AggregateSummaryStatistics.java	aggregate	statistics	Collection<SummaryStatistics>	PARAM_AS	1	1	NO_USE	0
1792	335	15	AggregateSummaryStatistics.java	aggregate	THIS	AggregateSummaryStatistics	UNKNOWN_AS	0	0	NO_USE	0
1793	70	8	WilcoxonSignedRankTestImpl.java	ensureDataConformance	x	double[]	PARAM_AS	1	3	NO_USE	1
1793	70	8	WilcoxonSignedRankTestImpl.java	ensureDataConformance	y	double[]	PARAM_AS	1	2	NO_USE	0
1793	70	8	WilcoxonSignedRankTestImpl.java	ensureDataConformance	THIS	WilcoxonSignedRankTestImpl	UNKNOWN_AS	0	3	NO_USE	0
1794	74	8	WilcoxonSignedRankTestImpl.java	ensureDataConformance	x	double[]	PARAM_AS	1	3	NO_USE	0
1794	74	8	WilcoxonSignedRankTestImpl.java	ensureDataConformance	y	double[]	PARAM_AS	1	2	NO_USE	1
1794	74	8	WilcoxonSignedRankTestImpl.java	ensureDataConformance	THIS	WilcoxonSignedRankTestImpl	UNKNOWN_AS	0	3	NO_USE	0
1795	78	8	WilcoxonSignedRankTestImpl.java	ensureDataConformance	x	double[]	PARAM_AS	1	3	NO_USE	1
1795	78	8	WilcoxonSignedRankTestImpl.java	ensureDataConformance	y	double[]	PARAM_AS	1	2	NO_USE	1
1795	78	8	WilcoxonSignedRankTestImpl.java	ensureDataConformance	THIS	WilcoxonSignedRankTestImpl	UNKNOWN_AS	0	3	NO_USE	1
1796	83	8	WilcoxonSignedRankTestImpl.java	ensureDataConformance	x	double[]	PARAM_AS	1	3	NO_USE	1
1796	83	8	WilcoxonSignedRankTestImpl.java	ensureDataConformance	y	double[]	PARAM_AS	1	2	NO_USE	0
1796	83	8	WilcoxonSignedRankTestImpl.java	ensureDataConformance	THIS	WilcoxonSignedRankTestImpl	UNKNOWN_AS	0	3	NO_USE	1
1797	117	8	WilcoxonSignedRankTestImpl.java	calculateAbsoluteDifferences	z	double[]	PARAM_AS	1	2	NO_USE	1
1797	117	8	WilcoxonSignedRankTestImpl.java	calculateAbsoluteDifferences	THIS	WilcoxonSignedRankTestImpl	UNKNOWN_AS	0	1	NO_USE	0
1798	121	8	WilcoxonSignedRankTestImpl.java	calculateAbsoluteDifferences	z	double[]	PARAM_AS	1	2	NO_USE	1
1798	121	8	WilcoxonSignedRankTestImpl.java	calculateAbsoluteDifferences	THIS	WilcoxonSignedRankTestImpl	UNKNOWN_AS	0	1	NO_USE	1
1799	161	12	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRank	i	int	0	0	1	ARRIDX_USE	1
1799	161	12	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRank	z	double[]	calculateDifferences()	0	1	NO_USE	1
1799	161	12	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRank	zAbs	double[]	calculateAbsoluteDifferences()	0	0	NO_USE	0
1799	161	12	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRank	ranks	double[]	rank()	0	0	ARR_USE	0
1799	161	12	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRank	Wplus	double	0	0	0	NO_USE	0
1799	161	12	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRank	x	double[]	PARAM_AS	1	0	NO_USE	0
1799	161	12	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRank	y	double[]	PARAM_AS	1	0	NO_USE	0
1799	161	12	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRank	THIS	WilcoxonSignedRankTestImpl	UNKNOWN_AS	0	0	NO_USE	0
1800	196	16	WilcoxonSignedRankTestImpl.java	calculateExactPValue	j	int	0	0	1	+	1
1800	196	16	WilcoxonSignedRankTestImpl.java	calculateExactPValue	rankSum	int	0	0	1	NO_USE	0
1800	196	16	WilcoxonSignedRankTestImpl.java	calculateExactPValue	i	int	0	0	1	NO_USE	1
1800	196	16	WilcoxonSignedRankTestImpl.java	calculateExactPValue	m	int	<<	0	0	NO_USE	0
1800	196	16	WilcoxonSignedRankTestImpl.java	calculateExactPValue	largerRankSums	int	0	0	0	NO_USE	0
1800	196	16	WilcoxonSignedRankTestImpl.java	calculateExactPValue	Wmax	double	PARAM_AS	1	1	NO_USE	0
1800	196	16	WilcoxonSignedRankTestImpl.java	calculateExactPValue	N	int	PARAM_AS	1	0	NO_USE	0
1800	196	16	WilcoxonSignedRankTestImpl.java	calculateExactPValue	THIS	WilcoxonSignedRankTestImpl	UNKNOWN_AS	0	0	NO_USE	0
1801	201	12	WilcoxonSignedRankTestImpl.java	calculateExactPValue	rankSum	int	+	0	1	NO_USE	1
1801	201	12	WilcoxonSignedRankTestImpl.java	calculateExactPValue	i	int	0	0	1	NO_USE	0
1801	201	12	WilcoxonSignedRankTestImpl.java	calculateExactPValue	m	int	<<	0	0	NO_USE	0
1801	201	12	WilcoxonSignedRankTestImpl.java	calculateExactPValue	largerRankSums	int	0	0	0	++x	0
1801	201	12	WilcoxonSignedRankTestImpl.java	calculateExactPValue	Wmax	double	PARAM_AS	1	1	NO_USE	1
1801	201	12	WilcoxonSignedRankTestImpl.java	calculateExactPValue	N	int	PARAM_AS	1	0	NO_USE	0
1801	201	12	WilcoxonSignedRankTestImpl.java	calculateExactPValue	THIS	WilcoxonSignedRankTestImpl	UNKNOWN_AS	0	0	NO_USE	0
1802	261	8	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRankTest	N	int	NAME	0	0	NO_USE	0
1802	261	8	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRankTest	Wmax	double	wilcoxonSignedRank()	0	0	NO_USE	0
1802	261	8	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRankTest	x	double[]	PARAM_AS	1	0	NO_USE	0
1802	261	8	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRankTest	y	double[]	PARAM_AS	1	0	NO_USE	0
1802	261	8	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRankTest	exactPValue	boolean	PARAM_AS	1	1	NO_USE	1
1802	261	8	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRankTest	THIS	WilcoxonSignedRankTestImpl	UNKNOWN_AS	0	0	NO_USE	0
1803	265	8	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRankTest	N	int	NAME	0	0	NO_USE	0
1803	265	8	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRankTest	Wmax	double	wilcoxonSignedRank()	0	0	PARAM_USE	0
1803	265	8	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRankTest	x	double[]	PARAM_AS	1	0	NO_USE	0
1803	265	8	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRankTest	y	double[]	PARAM_AS	1	0	NO_USE	0
1803	265	8	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRankTest	exactPValue	boolean	PARAM_AS	1	1	NO_USE	1
1803	265	8	WilcoxonSignedRankTestImpl.java	wilcoxonSignedRankTest	THIS	WilcoxonSignedRankTestImpl	UNKNOWN_AS	0	0	CLALLER_USE	0
1804	104	8	OneWayAnovaImpl.java	anovaTest	categoryData	Collection<double[]>	PARAM_AS	1	0	NO_USE	0
1804	104	8	OneWayAnovaImpl.java	anovaTest	alpha	double	PARAM_AS	1	2	PARAM_USE	1
1804	104	8	OneWayAnovaImpl.java	anovaTest	THIS	OneWayAnovaImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1805	127	8	OneWayAnovaImpl.java	anovaStats	categoryData	Collection<double[]>	PARAM_AS	1	1	CLALLER_USE	1
1805	127	8	OneWayAnovaImpl.java	anovaStats	THIS	OneWayAnovaImpl	UNKNOWN_AS	0	1	FIELD_USE	0
1806	135	12	OneWayAnovaImpl.java	anovaStats	categoryData	Collection<double[]>	PARAM_AS	1	1	NO_USE	0
1806	135	12	OneWayAnovaImpl.java	anovaStats	THIS	OneWayAnovaImpl	UNKNOWN_AS	0	1	FIELD_USE	1
1807	70	8	ChiSquareTestImpl.java	chiSquare	expected	double[]	PARAM_AS	1	2	OTHER_USE	1
1807	70	8	ChiSquareTestImpl.java	chiSquare	observed	long[]	PARAM_AS	1	1	NO_USE	0
1807	70	8	ChiSquareTestImpl.java	chiSquare	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	3	FIELD_USE	1
1808	73	8	ChiSquareTestImpl.java	chiSquare	expected	double[]	PARAM_AS	1	2	OTHER_USE	1
1808	73	8	ChiSquareTestImpl.java	chiSquare	observed	long[]	PARAM_AS	1	1	OTHER_USE	1
1808	73	8	ChiSquareTestImpl.java	chiSquare	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	3	FIELD_USE	1
1809	86	8	ChiSquareTestImpl.java	chiSquare	sumExpected	double	ARRAY_ACCESS	0	1	/	1
1809	86	8	ChiSquareTestImpl.java	chiSquare	sumObserved	double	ARRAY_ACCESS	0	1	/	1
1809	86	8	ChiSquareTestImpl.java	chiSquare	ratio	double	1.0d	0	0	NO_USE	0
1809	86	8	ChiSquareTestImpl.java	chiSquare	rescale	boolean	LITERAL	0	0	NO_USE	0
1809	86	8	ChiSquareTestImpl.java	chiSquare	expected	double[]	PARAM_AS	1	2	NO_USE	0
1809	86	8	ChiSquareTestImpl.java	chiSquare	observed	long[]	PARAM_AS	1	1	NO_USE	0
1809	86	8	ChiSquareTestImpl.java	chiSquare	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	3	NO_USE	0
1810	92	12	ChiSquareTestImpl.java	chiSquare	i	int	0	0	0	ARRIDX_USE	0
1810	92	12	ChiSquareTestImpl.java	chiSquare	sumExpected	double	ARRAY_ACCESS	0	1	NO_USE	0
1810	92	12	ChiSquareTestImpl.java	chiSquare	sumObserved	double	ARRAY_ACCESS	0	1	NO_USE	0
1810	92	12	ChiSquareTestImpl.java	chiSquare	ratio	double	/	0	0	*	0
1810	92	12	ChiSquareTestImpl.java	chiSquare	rescale	boolean	LITERAL	0	0	NO_USE	1
1810	92	12	ChiSquareTestImpl.java	chiSquare	sumSq	double	0.0d	0	0	NO_USE	0
1810	92	12	ChiSquareTestImpl.java	chiSquare	expected	double[]	PARAM_AS	1	2	ARR_USE	0
1810	92	12	ChiSquareTestImpl.java	chiSquare	observed	long[]	PARAM_AS	1	1	ARR_USE	0
1810	92	12	ChiSquareTestImpl.java	chiSquare	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	3	NO_USE	0
1811	139	8	ChiSquareTestImpl.java	chiSquareTest	expected	double[]	PARAM_AS	1	0	NO_USE	0
1811	139	8	ChiSquareTestImpl.java	chiSquareTest	observed	long[]	PARAM_AS	1	0	NO_USE	0
1811	139	8	ChiSquareTestImpl.java	chiSquareTest	alpha	double	PARAM_AS	1	2	OTHER_USE	1
1811	139	8	ChiSquareTestImpl.java	chiSquareTest	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1812	205	8	ChiSquareTestImpl.java	chiSquareTest	counts	long[][]	PARAM_AS	1	0	NO_USE	0
1812	205	8	ChiSquareTestImpl.java	chiSquareTest	alpha	double	PARAM_AS	1	2	OTHER_USE	1
1812	205	8	ChiSquareTestImpl.java	chiSquareTest	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1813	221	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	observed1	long[]	PARAM_AS	1	3	OTHER_USE	1
1813	221	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	observed2	long[]	PARAM_AS	1	2	NO_USE	0
1813	221	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	3	FIELD_USE	1
1814	224	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	observed1	long[]	PARAM_AS	1	3	OTHER_USE	1
1814	224	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	observed2	long[]	PARAM_AS	1	2	OTHER_USE	1
1814	224	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	3	FIELD_USE	1
1815	242	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	countSum1	long	ARRAY_ACCESS	0	1	NO_USE	1
1815	242	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	countSum2	long	ARRAY_ACCESS	0	1	NO_USE	0
1815	242	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	unequalCounts	boolean	LITERAL	0	0	NO_USE	0
1815	242	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	weight	double	0.0	0	0	NO_USE	0
1815	242	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	observed1	long[]	PARAM_AS	1	3	NO_USE	0
1815	242	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	observed2	long[]	PARAM_AS	1	2	NO_USE	0
1815	242	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	3	FIELD_USE	0
1816	245	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	countSum1	long	ARRAY_ACCESS	0	1	NO_USE	0
1816	245	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	countSum2	long	ARRAY_ACCESS	0	1	NO_USE	1
1816	245	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	unequalCounts	boolean	LITERAL	0	0	NO_USE	0
1816	245	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	weight	double	0.0	0	0	NO_USE	0
1816	245	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	observed1	long[]	PARAM_AS	1	3	NO_USE	0
1816	245	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	observed2	long[]	PARAM_AS	1	2	NO_USE	0
1816	245	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	3	FIELD_USE	0
1817	250	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	countSum1	long	ARRAY_ACCESS	0	1	OTHER_USE	0
1817	250	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	countSum2	long	ARRAY_ACCESS	0	1	OTHER_USE	0
1817	250	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	unequalCounts	boolean	!=	0	0	NO_USE	1
1817	250	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	weight	double	0.0	0	0	NO_USE	0
1817	250	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	observed1	long[]	PARAM_AS	1	3	NO_USE	0
1817	250	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	observed2	long[]	PARAM_AS	1	2	NO_USE	0
1817	250	8	ChiSquareTestImpl.java	chiSquareDataSetsComparison	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	3	NO_USE	0
1818	259	12	ChiSquareTestImpl.java	chiSquareDataSetsComparison	i	int	0	0	2	OTHER_USE	1
1818	259	12	ChiSquareTestImpl.java	chiSquareDataSetsComparison	countSum1	long	ARRAY_ACCESS	0	1	NO_USE	0
1818	259	12	ChiSquareTestImpl.java	chiSquareDataSetsComparison	countSum2	long	ARRAY_ACCESS	0	1	NO_USE	0
1818	259	12	ChiSquareTestImpl.java	chiSquareDataSetsComparison	unequalCounts	boolean	!=	0	0	OTHER_USE	0
1818	259	12	ChiSquareTestImpl.java	chiSquareDataSetsComparison	weight	double	sqrt()	0	0	/	0
1818	259	12	ChiSquareTestImpl.java	chiSquareDataSetsComparison	sumSq	double	0.0d	0	0	NO_USE	0
1818	259	12	ChiSquareTestImpl.java	chiSquareDataSetsComparison	dev	double	0.0d	0	0	*	0
1818	259	12	ChiSquareTestImpl.java	chiSquareDataSetsComparison	obs1	double	0.0d	0	0	/	0
1818	259	12	ChiSquareTestImpl.java	chiSquareDataSetsComparison	obs2	double	0.0d	0	0	*	0
1818	259	12	ChiSquareTestImpl.java	chiSquareDataSetsComparison	observed1	long[]	PARAM_AS	1	3	ARR_USE	1
1818	259	12	ChiSquareTestImpl.java	chiSquareDataSetsComparison	observed2	long[]	PARAM_AS	1	2	ARR_USE	1
1818	259	12	ChiSquareTestImpl.java	chiSquareDataSetsComparison	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	3	FIELD_USE	0
1819	264	16	ChiSquareTestImpl.java	chiSquareDataSetsComparison	i	int	0	0	2	NO_USE	0
1819	264	16	ChiSquareTestImpl.java	chiSquareDataSetsComparison	countSum1	long	ARRAY_ACCESS	0	1	NO_USE	0
1819	264	16	ChiSquareTestImpl.java	chiSquareDataSetsComparison	countSum2	long	ARRAY_ACCESS	0	1	NO_USE	0
1819	264	16	ChiSquareTestImpl.java	chiSquareDataSetsComparison	unequalCounts	boolean	!=	0	0	NO_USE	1
1819	264	16	ChiSquareTestImpl.java	chiSquareDataSetsComparison	weight	double	sqrt()	0	0	/	0
1819	264	16	ChiSquareTestImpl.java	chiSquareDataSetsComparison	sumSq	double	0.0d	0	0	NO_USE	0
1819	264	16	ChiSquareTestImpl.java	chiSquareDataSetsComparison	dev	double	0.0d	0	0	NO_USE	0
1819	264	16	ChiSquareTestImpl.java	chiSquareDataSetsComparison	obs1	double	ARRAY_ACCESS	0	0	/	0
1819	264	16	ChiSquareTestImpl.java	chiSquareDataSetsComparison	obs2	double	ARRAY_ACCESS	0	0	*	0
1819	264	16	ChiSquareTestImpl.java	chiSquareDataSetsComparison	observed1	long[]	PARAM_AS	1	3	NO_USE	0
1819	264	16	ChiSquareTestImpl.java	chiSquareDataSetsComparison	observed2	long[]	PARAM_AS	1	2	NO_USE	0
1819	264	16	ChiSquareTestImpl.java	chiSquareDataSetsComparison	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	3	NO_USE	0
1820	303	8	ChiSquareTestImpl.java	chiSquareTestDataSetsComparison	observed1	long[]	PARAM_AS	1	0	NO_USE	0
1820	303	8	ChiSquareTestImpl.java	chiSquareTestDataSetsComparison	observed2	long[]	PARAM_AS	1	0	NO_USE	0
1820	303	8	ChiSquareTestImpl.java	chiSquareTestDataSetsComparison	alpha	double	PARAM_AS	1	2	OTHER_USE	1
1820	303	8	ChiSquareTestImpl.java	chiSquareTestDataSetsComparison	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1821	320	8	ChiSquareTestImpl.java	checkArray	in	long[][]	PARAM_AS	1	2	OTHER_USE	1
1821	320	8	ChiSquareTestImpl.java	checkArray	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	2	FIELD_USE	1
1822	325	8	ChiSquareTestImpl.java	checkArray	in	long[][]	PARAM_AS	1	2	ARR_USE	1
1822	325	8	ChiSquareTestImpl.java	checkArray	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	2	FIELD_USE	1
1823	348	12	ChiSquareTestImpl.java	checkRectangular	i	int	1	0	1	ARRIDX_USE	1
1823	348	12	ChiSquareTestImpl.java	checkRectangular	in	long[][]	PARAM_AS	1	2	ARR_USE	1
1823	348	12	ChiSquareTestImpl.java	checkRectangular	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	2	FIELD_USE	1
1824	363	12	ChiSquareTestImpl.java	checkPositive	i	int	0	0	1	OTHER_USE	1
1824	363	12	ChiSquareTestImpl.java	checkPositive	in	double[]	PARAM_AS	1	1	ARR_USE	1
1824	363	12	ChiSquareTestImpl.java	checkPositive	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1825	379	12	ChiSquareTestImpl.java	checkNonNegative	i	int	0	0	1	OTHER_USE	1
1825	379	12	ChiSquareTestImpl.java	checkNonNegative	in	long[]	PARAM_AS	1	1	ARR_USE	1
1825	379	12	ChiSquareTestImpl.java	checkNonNegative	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1826	396	16	ChiSquareTestImpl.java	checkNonNegative	j	int	0	0	1	OTHER_USE	1
1826	396	16	ChiSquareTestImpl.java	checkNonNegative	i	int	0	0	1	OTHER_USE	1
1826	396	16	ChiSquareTestImpl.java	checkNonNegative	in	long[][]	PARAM_AS	1	1	ARR_USE	1
1826	396	16	ChiSquareTestImpl.java	checkNonNegative	THIS	ChiSquareTestImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1827	71	8	MannWhitneyUTestImpl.java	ensureDataConformance	x	double[]	PARAM_AS	1	2	NO_USE	1
1827	71	8	MannWhitneyUTestImpl.java	ensureDataConformance	y	double[]	PARAM_AS	1	2	NO_USE	0
1827	71	8	MannWhitneyUTestImpl.java	ensureDataConformance	THIS	MannWhitneyUTestImpl	UNKNOWN_AS	0	2	NO_USE	0
1828	75	8	MannWhitneyUTestImpl.java	ensureDataConformance	x	double[]	PARAM_AS	1	2	NO_USE	0
1828	75	8	MannWhitneyUTestImpl.java	ensureDataConformance	y	double[]	PARAM_AS	1	2	NO_USE	1
1828	75	8	MannWhitneyUTestImpl.java	ensureDataConformance	THIS	MannWhitneyUTestImpl	UNKNOWN_AS	0	2	NO_USE	0
1829	79	8	MannWhitneyUTestImpl.java	ensureDataConformance	x	double[]	PARAM_AS	1	2	NO_USE	1
1829	79	8	MannWhitneyUTestImpl.java	ensureDataConformance	y	double[]	PARAM_AS	1	2	NO_USE	0
1829	79	8	MannWhitneyUTestImpl.java	ensureDataConformance	THIS	MannWhitneyUTestImpl	UNKNOWN_AS	0	2	NO_USE	1
1830	84	8	MannWhitneyUTestImpl.java	ensureDataConformance	x	double[]	PARAM_AS	1	2	NO_USE	0
1830	84	8	MannWhitneyUTestImpl.java	ensureDataConformance	y	double[]	PARAM_AS	1	2	NO_USE	1
1830	84	8	MannWhitneyUTestImpl.java	ensureDataConformance	THIS	MannWhitneyUTestImpl	UNKNOWN_AS	0	2	NO_USE	1
1831	1004	8	TTestImpl.java	checkSignificanceLevel	alpha	double	PARAM_AS	1	2	OTHER_USE	1
1831	1004	8	TTestImpl.java	checkSignificanceLevel	THIS	TTestImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1832	1018	8	TTestImpl.java	checkSampleData	data	double[]	PARAM_AS	1	2	NO_USE	1
1832	1018	8	TTestImpl.java	checkSampleData	THIS	TTestImpl	UNKNOWN_AS	0	1	NO_USE	0
1833	1021	8	TTestImpl.java	checkSampleData	data	double[]	PARAM_AS	1	2	OTHER_USE	1
1833	1021	8	TTestImpl.java	checkSampleData	THIS	TTestImpl	UNKNOWN_AS	0	1	FIELD_USE	1
1834	1035	8	TTestImpl.java	checkSampleData	stat	StatisticalSummary	PARAM_AS	1	2	NO_USE	1
1834	1035	8	TTestImpl.java	checkSampleData	THIS	TTestImpl	UNKNOWN_AS	0	0	NO_USE	0
1835	1038	8	TTestImpl.java	checkSampleData	stat	StatisticalSummary	PARAM_AS	1	2	CLALLER_USE	1
1835	1038	8	TTestImpl.java	checkSampleData	THIS	TTestImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1836	116	16	KMeansPlusPlusClusterer.java	cluster	clusters	List<Cluster<T>>	cluster()	0	0	NO_USE	0
1836	116	16	KMeansPlusPlusClusterer.java	cluster	varianceSum	double	0.0	0	1	NO_USE	0
1836	116	16	KMeansPlusPlusClusterer.java	cluster	i	int	0	0	0	NO_USE	0
1836	116	16	KMeansPlusPlusClusterer.java	cluster	best	List<Cluster<T>>	NULL	0	0	NO_USE	0
1836	116	16	KMeansPlusPlusClusterer.java	cluster	bestVarianceSum	double	NAME	0	1	NO_USE	0
1836	116	16	KMeansPlusPlusClusterer.java	cluster	points	Collection<T>	PARAM_AS	1	0	NO_USE	0
1836	116	16	KMeansPlusPlusClusterer.java	cluster	k	int	PARAM_AS	1	0	NO_USE	0
1836	116	16	KMeansPlusPlusClusterer.java	cluster	numTrials	int	PARAM_AS	1	0	NO_USE	0
1836	116	16	KMeansPlusPlusClusterer.java	cluster	maxIterationsPerTrial	int	PARAM_AS	1	0	NO_USE	0
1836	116	16	KMeansPlusPlusClusterer.java	cluster	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	1
1837	129	12	KMeansPlusPlusClusterer.java	cluster	clusters	List<Cluster<T>>	cluster()	0	0	OTHER_USE	0
1837	129	12	KMeansPlusPlusClusterer.java	cluster	varianceSum	double	getResult()	0	1	OTHER_USE	1
1837	129	12	KMeansPlusPlusClusterer.java	cluster	i	int	0	0	0	NO_USE	0
1837	129	12	KMeansPlusPlusClusterer.java	cluster	best	List<Cluster<T>>	NULL	0	0	NO_USE	0
1837	129	12	KMeansPlusPlusClusterer.java	cluster	bestVarianceSum	double	NAME	0	1	NO_USE	1
1837	129	12	KMeansPlusPlusClusterer.java	cluster	points	Collection<T>	PARAM_AS	1	0	NO_USE	0
1837	129	12	KMeansPlusPlusClusterer.java	cluster	k	int	PARAM_AS	1	0	NO_USE	0
1837	129	12	KMeansPlusPlusClusterer.java	cluster	numTrials	int	PARAM_AS	1	0	NO_USE	0
1837	129	12	KMeansPlusPlusClusterer.java	cluster	maxIterationsPerTrial	int	PARAM_AS	1	0	NO_USE	0
1837	129	12	KMeansPlusPlusClusterer.java	cluster	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	0
1838	161	8	KMeansPlusPlusClusterer.java	cluster	points	Collection<T>	PARAM_AS	1	1	CLALLER_USE	1
1838	161	8	KMeansPlusPlusClusterer.java	cluster	k	int	PARAM_AS	1	1	OTHER_USE	1
1838	161	8	KMeansPlusPlusClusterer.java	cluster	maxIterations	int	PARAM_AS	1	0	NO_USE	0
1838	161	8	KMeansPlusPlusClusterer.java	cluster	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	0
1839	180	16	KMeansPlusPlusClusterer.java	cluster	newCenter	T	UNKNOWN_AS	0	0	NO_USE	0
1839	180	16	KMeansPlusPlusClusterer.java	cluster	emptyCluster	boolean	LITERAL	0	1	NO_USE	0
1839	180	16	KMeansPlusPlusClusterer.java	cluster	newClusters	List<Cluster<T>>	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1839	180	16	KMeansPlusPlusClusterer.java	cluster	count	int	0	0	0	NO_USE	0
1839	180	16	KMeansPlusPlusClusterer.java	cluster	clusters	List<Cluster<T>>	chooseInitialCenters()	0	0	PARAM_USE	0
1839	180	16	KMeansPlusPlusClusterer.java	cluster	assignments	int[]	ARRAY_CREATION	0	0	NO_USE	0
1839	180	16	KMeansPlusPlusClusterer.java	cluster	max	int	OTHERS	0	0	NO_USE	0
1839	180	16	KMeansPlusPlusClusterer.java	cluster	points	Collection<T>	PARAM_AS	1	1	NO_USE	0
1839	180	16	KMeansPlusPlusClusterer.java	cluster	k	int	PARAM_AS	1	1	NO_USE	0
1839	180	16	KMeansPlusPlusClusterer.java	cluster	maxIterations	int	PARAM_AS	1	0	NO_USE	0
1839	180	16	KMeansPlusPlusClusterer.java	cluster	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	FIELD_USE	1
1840	205	12	KMeansPlusPlusClusterer.java	cluster	emptyCluster	boolean	LITERAL	0	1	NO_USE	1
1840	205	12	KMeansPlusPlusClusterer.java	cluster	newClusters	List<Cluster<T>>	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1840	205	12	KMeansPlusPlusClusterer.java	cluster	changes	int	assignPointsToClusters()	0	1	NO_USE	1
1840	205	12	KMeansPlusPlusClusterer.java	cluster	count	int	0	0	0	NO_USE	0
1840	205	12	KMeansPlusPlusClusterer.java	cluster	clusters	List<Cluster<T>>	NAME	0	0	RET_USE	0
1840	205	12	KMeansPlusPlusClusterer.java	cluster	assignments	int[]	ARRAY_CREATION	0	0	NO_USE	0
1840	205	12	KMeansPlusPlusClusterer.java	cluster	max	int	OTHERS	0	0	NO_USE	0
1840	205	12	KMeansPlusPlusClusterer.java	cluster	points	Collection<T>	PARAM_AS	1	1	NO_USE	0
1840	205	12	KMeansPlusPlusClusterer.java	cluster	k	int	PARAM_AS	1	1	NO_USE	0
1840	205	12	KMeansPlusPlusClusterer.java	cluster	maxIterations	int	PARAM_AS	1	0	NO_USE	0
1840	205	12	KMeansPlusPlusClusterer.java	cluster	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	0
1841	228	12	KMeansPlusPlusClusterer.java	assignPointsToClusters	clusterIndex	int	getNearestCluster()	0	1	NO_USE	1
1841	228	12	KMeansPlusPlusClusterer.java	assignPointsToClusters	assignedDifferently	int	0	0	0	x++	0
1841	228	12	KMeansPlusPlusClusterer.java	assignPointsToClusters	pointIndex	int	0	0	1	NO_USE	1
1841	228	12	KMeansPlusPlusClusterer.java	assignPointsToClusters	clusters	List<Cluster<T>>	PARAM_AS	1	0	NO_USE	0
1841	228	12	KMeansPlusPlusClusterer.java	assignPointsToClusters	points	Collection<T>	PARAM_AS	1	0	NO_USE	0
1841	228	12	KMeansPlusPlusClusterer.java	assignPointsToClusters	assignments	int[]	PARAM_AS	1	1	NO_USE	1
1841	228	12	KMeansPlusPlusClusterer.java	assignPointsToClusters	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	0
1842	283	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	i	int	0	0	1	PARAM_USE	1
1842	283	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	pointList	List<T>	unmodifiableList()	0	0	CLALLER_USE	0
1842	283	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	numPoints	int	size()	0	0	NO_USE	0
1842	283	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	taken	boolean[]	LITERAL	0	4	NO_USE	0
1842	283	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	resultSet	List<Cluster<T>>	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1842	283	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPointIndex	int	LITERAL	0	1	NO_USE	1
1842	283	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPoint	T	get()	0	0	CLALLER_USE	0
1842	283	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	minDistSquared	double[]	ARRAY_CREATION	0	1	ARR_USE	0
1842	283	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	points	Collection<T>	PARAM_AS	1	0	NO_USE	0
1842	283	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	k	int	PARAM_AS	1	1	NO_USE	0
1842	283	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	random	Random	PARAM_AS	1	0	NO_USE	0
1842	283	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	0
1843	296	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	i	int	0	0	1	ARRIDX_USE	1
1843	296	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	distSqSum	double	0.0	0	0	NO_USE	0
1843	296	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	pointList	List<T>	unmodifiableList()	0	0	NO_USE	0
1843	296	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	numPoints	int	size()	0	0	NO_USE	0
1843	296	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	taken	boolean[]	LITERAL	0	4	NO_USE	1
1843	296	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	resultSet	List<Cluster<T>>	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1843	296	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPointIndex	int	LITERAL	0	1	NO_USE	0
1843	296	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPoint	T	get()	0	0	NO_USE	0
1843	296	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	minDistSquared	double[]	*	0	1	ARR_USE	0
1843	296	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	points	Collection<T>	PARAM_AS	1	0	NO_USE	0
1843	296	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	k	int	PARAM_AS	1	1	NO_USE	0
1843	296	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	random	Random	PARAM_AS	1	0	NO_USE	0
1843	296	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	0
1844	312	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	i	int	0	0	1	ARRIDX_USE	1
1844	312	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	distSqSum	double	ARRAY_ACCESS	0	0	NO_USE	0
1844	312	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	r	double	*	0	1	>=	0
1844	312	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	nextPointIndex	int	PREFIX_EXPR	0	2	NO_USE	0
1844	312	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	sum	double	0.0	0	1	>=	0
1844	312	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	pointList	List<T>	unmodifiableList()	0	0	NO_USE	0
1844	312	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	numPoints	int	size()	0	0	NO_USE	0
1844	312	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	taken	boolean[]	LITERAL	0	4	NO_USE	1
1844	312	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	resultSet	List<Cluster<T>>	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1844	312	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPointIndex	int	LITERAL	0	1	NO_USE	0
1844	312	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPoint	T	get()	0	0	NO_USE	0
1844	312	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	minDistSquared	double[]	*	0	1	ARR_USE	0
1844	312	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	points	Collection<T>	PARAM_AS	1	0	NO_USE	0
1844	312	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	k	int	PARAM_AS	1	1	NO_USE	0
1844	312	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	random	Random	PARAM_AS	1	0	NO_USE	0
1844	312	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	0
1845	314	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	i	int	0	0	1	OTHER_USE	0
1845	314	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	distSqSum	double	ARRAY_ACCESS	0	0	NO_USE	0
1845	314	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	r	double	*	0	1	NO_USE	1
1845	314	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	nextPointIndex	int	PREFIX_EXPR	0	2	NO_USE	0
1845	314	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	sum	double	ARRAY_ACCESS	0	1	NO_USE	1
1845	314	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	pointList	List<T>	unmodifiableList()	0	0	NO_USE	0
1845	314	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	numPoints	int	size()	0	0	NO_USE	0
1845	314	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	taken	boolean[]	LITERAL	0	4	NO_USE	0
1845	314	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	resultSet	List<Cluster<T>>	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1845	314	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPointIndex	int	LITERAL	0	1	NO_USE	0
1845	314	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPoint	T	get()	0	0	NO_USE	0
1845	314	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	minDistSquared	double[]	*	0	1	NO_USE	0
1845	314	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	points	Collection<T>	PARAM_AS	1	0	NO_USE	0
1845	314	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	k	int	PARAM_AS	1	1	NO_USE	0
1845	314	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	random	Random	PARAM_AS	1	0	NO_USE	0
1845	314	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	0
1846	324	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	distSqSum	double	ARRAY_ACCESS	0	0	NO_USE	0
1846	324	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	r	double	*	0	1	NO_USE	0
1846	324	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	nextPointIndex	int	NAME	0	2	NO_USE	1
1846	324	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	sum	double	ARRAY_ACCESS	0	1	NO_USE	0
1846	324	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	pointList	List<T>	unmodifiableList()	0	0	NO_USE	0
1846	324	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	numPoints	int	size()	0	0	-	0
1846	324	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	taken	boolean[]	LITERAL	0	4	ARR_USE	0
1846	324	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	resultSet	List<Cluster<T>>	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1846	324	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPointIndex	int	LITERAL	0	1	NO_USE	0
1846	324	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPoint	T	get()	0	0	NO_USE	0
1846	324	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	minDistSquared	double[]	*	0	1	NO_USE	0
1846	324	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	points	Collection<T>	PARAM_AS	1	0	NO_USE	0
1846	324	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	k	int	PARAM_AS	1	1	NO_USE	0
1846	324	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	random	Random	PARAM_AS	1	0	NO_USE	0
1846	324	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	0
1847	326	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	i	int	-	0	1	OTHER_USE	1
1847	326	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	distSqSum	double	ARRAY_ACCESS	0	0	NO_USE	0
1847	326	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	r	double	*	0	1	NO_USE	0
1847	326	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	nextPointIndex	int	NAME	0	2	NO_USE	0
1847	326	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	sum	double	ARRAY_ACCESS	0	1	NO_USE	0
1847	326	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	pointList	List<T>	unmodifiableList()	0	0	NO_USE	0
1847	326	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	numPoints	int	size()	0	0	NO_USE	0
1847	326	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	taken	boolean[]	LITERAL	0	4	NO_USE	1
1847	326	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	resultSet	List<Cluster<T>>	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1847	326	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPointIndex	int	LITERAL	0	1	NO_USE	0
1847	326	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPoint	T	get()	0	0	NO_USE	0
1847	326	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	minDistSquared	double[]	*	0	1	NO_USE	0
1847	326	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	points	Collection<T>	PARAM_AS	1	0	NO_USE	0
1847	326	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	k	int	PARAM_AS	1	1	NO_USE	0
1847	326	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	random	Random	PARAM_AS	1	0	NO_USE	0
1847	326	20	KMeansPlusPlusClusterer.java	chooseInitialCenters	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	0
1848	334	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	distSqSum	double	ARRAY_ACCESS	0	0	NO_USE	0
1848	334	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	r	double	*	0	1	NO_USE	0
1848	334	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	nextPointIndex	int	NAME	0	2	PARAM_USE	1
1848	334	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	sum	double	ARRAY_ACCESS	0	1	NO_USE	0
1848	334	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	pointList	List<T>	unmodifiableList()	0	0	CLALLER_USE	0
1848	334	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	numPoints	int	size()	0	0	<	0
1848	334	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	taken	boolean[]	LITERAL	0	4	ARR_USE	0
1848	334	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	resultSet	List<Cluster<T>>	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	0
1848	334	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPointIndex	int	LITERAL	0	1	NO_USE	0
1848	334	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPoint	T	get()	0	0	NO_USE	0
1848	334	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	minDistSquared	double[]	*	0	1	ARR_USE	0
1848	334	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	points	Collection<T>	PARAM_AS	1	0	NO_USE	0
1848	334	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	k	int	PARAM_AS	1	1	<	0
1848	334	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	random	Random	PARAM_AS	1	0	NO_USE	0
1848	334	12	KMeansPlusPlusClusterer.java	chooseInitialCenters	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	0
1849	343	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	p	T	get()	0	0	CLALLER_USE	0
1849	343	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	distSqSum	double	ARRAY_ACCESS	0	0	NO_USE	0
1849	343	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	r	double	*	0	1	NO_USE	0
1849	343	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	nextPointIndex	int	LITERAL	0	2	NO_USE	0
1849	343	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	sum	double	ARRAY_ACCESS	0	1	NO_USE	0
1849	343	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	pointList	List<T>	unmodifiableList()	0	0	CLALLER_USE	0
1849	343	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	numPoints	int	size()	0	0	<	0
1849	343	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	taken	boolean[]	LITERAL	0	4	ARR_USE	0
1849	343	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	resultSet	List<Cluster<T>>	CLASS_INSTANCE_CREATION	0	1	NO_USE	1
1849	343	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPointIndex	int	LITERAL	0	1	NO_USE	0
1849	343	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPoint	T	get()	0	0	NO_USE	0
1849	343	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	minDistSquared	double[]	*	0	1	ARR_USE	0
1849	343	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	points	Collection<T>	PARAM_AS	1	0	NO_USE	0
1849	343	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	k	int	PARAM_AS	1	1	NO_USE	1
1849	343	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	random	Random	PARAM_AS	1	0	NO_USE	0
1849	343	16	KMeansPlusPlusClusterer.java	chooseInitialCenters	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	0
1850	348	24	KMeansPlusPlusClusterer.java	chooseInitialCenters	j	int	0	0	2	PARAM_USE	1
1850	348	24	KMeansPlusPlusClusterer.java	chooseInitialCenters	p	T	get()	0	0	CLALLER_USE	0
1850	348	24	KMeansPlusPlusClusterer.java	chooseInitialCenters	distSqSum	double	ARRAY_ACCESS	0	0	NO_USE	0
1850	348	24	KMeansPlusPlusClusterer.java	chooseInitialCenters	r	double	*	0	1	NO_USE	0
1850	348	24	KMeansPlusPlusClusterer.java	chooseInitialCenters	nextPointIndex	int	LITERAL	0	2	NO_USE	0
1850	348	24	KMeansPlusPlusClusterer.java	chooseInitialCenters	sum	double	ARRAY_ACCESS	0	1	NO_USE	0
1850	348	24	KMeansPlusPlusClusterer.java	chooseInitialCenters	pointList	List<T>	unmodifiableList()	0	0	CLALLER_USE	0
1850	348	24	KMeansPlusPlusClusterer.java	chooseInitialCenters	numPoints	int	size()	0	0	NO_USE	0
1850	348	24	KMeansPlusPlusClusterer.java	chooseInitialCenters	taken	boolean[]	LITERAL	0	4	NO_USE	1
1850	348	24	KMeansPlusPlusClusterer.java	chooseInitialCenters	resultSet	List<Cluster<T>>	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1850	348	24	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPointIndex	int	LITERAL	0	1	NO_USE	0
1850	348	24	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPoint	T	get()	0	0	NO_USE	0
1850	348	24	KMeansPlusPlusClusterer.java	chooseInitialCenters	minDistSquared	double[]	*	0	1	ARR_USE	0
1850	348	24	KMeansPlusPlusClusterer.java	chooseInitialCenters	points	Collection<T>	PARAM_AS	1	0	NO_USE	0
1850	348	24	KMeansPlusPlusClusterer.java	chooseInitialCenters	k	int	PARAM_AS	1	1	NO_USE	0
1850	348	24	KMeansPlusPlusClusterer.java	chooseInitialCenters	random	Random	PARAM_AS	1	0	NO_USE	0
1850	348	24	KMeansPlusPlusClusterer.java	chooseInitialCenters	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	0
1851	351	28	KMeansPlusPlusClusterer.java	chooseInitialCenters	d	double	distanceFrom()	0	0	NO_USE	0
1851	351	28	KMeansPlusPlusClusterer.java	chooseInitialCenters	d2	double	*	0	1	OTHER_USE	1
1851	351	28	KMeansPlusPlusClusterer.java	chooseInitialCenters	j	int	0	0	2	ARRIDX_USE	1
1851	351	28	KMeansPlusPlusClusterer.java	chooseInitialCenters	p	T	get()	0	0	NO_USE	0
1851	351	28	KMeansPlusPlusClusterer.java	chooseInitialCenters	distSqSum	double	ARRAY_ACCESS	0	0	NO_USE	0
1851	351	28	KMeansPlusPlusClusterer.java	chooseInitialCenters	r	double	*	0	1	NO_USE	0
1851	351	28	KMeansPlusPlusClusterer.java	chooseInitialCenters	nextPointIndex	int	LITERAL	0	2	NO_USE	0
1851	351	28	KMeansPlusPlusClusterer.java	chooseInitialCenters	sum	double	ARRAY_ACCESS	0	1	NO_USE	0
1851	351	28	KMeansPlusPlusClusterer.java	chooseInitialCenters	pointList	List<T>	unmodifiableList()	0	0	NO_USE	0
1851	351	28	KMeansPlusPlusClusterer.java	chooseInitialCenters	numPoints	int	size()	0	0	NO_USE	0
1851	351	28	KMeansPlusPlusClusterer.java	chooseInitialCenters	taken	boolean[]	LITERAL	0	4	NO_USE	0
1851	351	28	KMeansPlusPlusClusterer.java	chooseInitialCenters	resultSet	List<Cluster<T>>	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
1851	351	28	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPointIndex	int	LITERAL	0	1	NO_USE	0
1851	351	28	KMeansPlusPlusClusterer.java	chooseInitialCenters	firstPoint	T	get()	0	0	NO_USE	0
1851	351	28	KMeansPlusPlusClusterer.java	chooseInitialCenters	minDistSquared	double[]	*	0	1	ARR_USE	1
1851	351	28	KMeansPlusPlusClusterer.java	chooseInitialCenters	points	Collection<T>	PARAM_AS	1	0	NO_USE	0
1851	351	28	KMeansPlusPlusClusterer.java	chooseInitialCenters	k	int	PARAM_AS	1	1	NO_USE	0
1851	351	28	KMeansPlusPlusClusterer.java	chooseInitialCenters	random	Random	PARAM_AS	1	0	NO_USE	0
1851	351	28	KMeansPlusPlusClusterer.java	chooseInitialCenters	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	0
1852	380	12	KMeansPlusPlusClusterer.java	getPointFromLargestVarianceCluster	maxVariance	double	NAME	0	1	>	0
1852	380	12	KMeansPlusPlusClusterer.java	getPointFromLargestVarianceCluster	selected	Cluster<T>	NULL	0	1	NO_USE	0
1852	380	12	KMeansPlusPlusClusterer.java	getPointFromLargestVarianceCluster	clusters	Collection<Cluster<T>>	PARAM_AS	1	0	NO_USE	0
1852	380	12	KMeansPlusPlusClusterer.java	getPointFromLargestVarianceCluster	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	1
1853	391	16	KMeansPlusPlusClusterer.java	getPointFromLargestVarianceCluster	center	T	getCenter()	0	0	NO_USE	0
1853	391	16	KMeansPlusPlusClusterer.java	getPointFromLargestVarianceCluster	stat	Variance	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1853	391	16	KMeansPlusPlusClusterer.java	getPointFromLargestVarianceCluster	variance	double	getResult()	0	1	OTHER_USE	1
1853	391	16	KMeansPlusPlusClusterer.java	getPointFromLargestVarianceCluster	maxVariance	double	NAME	0	1	NO_USE	1
1853	391	16	KMeansPlusPlusClusterer.java	getPointFromLargestVarianceCluster	selected	Cluster<T>	NULL	0	1	NO_USE	0
1853	391	16	KMeansPlusPlusClusterer.java	getPointFromLargestVarianceCluster	clusters	Collection<Cluster<T>>	PARAM_AS	1	0	NO_USE	0
1853	391	16	KMeansPlusPlusClusterer.java	getPointFromLargestVarianceCluster	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	0
1854	400	8	KMeansPlusPlusClusterer.java	getPointFromLargestVarianceCluster	maxVariance	double	NAME	0	1	NO_USE	0
1854	400	8	KMeansPlusPlusClusterer.java	getPointFromLargestVarianceCluster	selected	Cluster<T>	NAME	0	1	NO_USE	1
1854	400	8	KMeansPlusPlusClusterer.java	getPointFromLargestVarianceCluster	clusters	Collection<Cluster<T>>	PARAM_AS	1	0	NO_USE	0
1854	400	8	KMeansPlusPlusClusterer.java	getPointFromLargestVarianceCluster	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	FIELD_USE	0
1855	426	12	KMeansPlusPlusClusterer.java	getPointFromLargestNumberCluster	number	int	size()	0	1	OTHER_USE	1
1855	426	12	KMeansPlusPlusClusterer.java	getPointFromLargestNumberCluster	maxNumber	int	0	0	1	NO_USE	1
1855	426	12	KMeansPlusPlusClusterer.java	getPointFromLargestNumberCluster	selected	Cluster<T>	NULL	0	1	NO_USE	0
1855	426	12	KMeansPlusPlusClusterer.java	getPointFromLargestNumberCluster	clusters	Collection<Cluster<T>>	PARAM_AS	1	0	NO_USE	0
1855	426	12	KMeansPlusPlusClusterer.java	getPointFromLargestNumberCluster	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	0
1856	434	8	KMeansPlusPlusClusterer.java	getPointFromLargestNumberCluster	maxNumber	int	NAME	0	1	NO_USE	0
1856	434	8	KMeansPlusPlusClusterer.java	getPointFromLargestNumberCluster	selected	Cluster<T>	NAME	0	1	NO_USE	1
1856	434	8	KMeansPlusPlusClusterer.java	getPointFromLargestNumberCluster	clusters	Collection<Cluster<T>>	PARAM_AS	1	0	NO_USE	0
1856	434	8	KMeansPlusPlusClusterer.java	getPointFromLargestNumberCluster	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	FIELD_USE	0
1857	462	16	KMeansPlusPlusClusterer.java	getFarthestPoint	distance	double	distanceFrom()	0	1	OTHER_USE	1
1857	462	16	KMeansPlusPlusClusterer.java	getFarthestPoint	i	int	0	0	0	OTHER_USE	0
1857	462	16	KMeansPlusPlusClusterer.java	getFarthestPoint	center	T	getCenter()	0	0	NO_USE	0
1857	462	16	KMeansPlusPlusClusterer.java	getFarthestPoint	points	List<T>	getPoints()	0	0	NO_USE	0
1857	462	16	KMeansPlusPlusClusterer.java	getFarthestPoint	maxDistance	double	NAME	0	1	NO_USE	1
1857	462	16	KMeansPlusPlusClusterer.java	getFarthestPoint	selectedCluster	Cluster<T>	NULL	0	1	NO_USE	0
1857	462	16	KMeansPlusPlusClusterer.java	getFarthestPoint	selectedPoint	int	PREFIX_EXPR	0	0	NO_USE	0
1857	462	16	KMeansPlusPlusClusterer.java	getFarthestPoint	clusters	Collection<Cluster<T>>	PARAM_AS	1	0	NO_USE	0
1857	462	16	KMeansPlusPlusClusterer.java	getFarthestPoint	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	0
1858	472	8	KMeansPlusPlusClusterer.java	getFarthestPoint	maxDistance	double	NAME	0	1	NO_USE	0
1858	472	8	KMeansPlusPlusClusterer.java	getFarthestPoint	selectedCluster	Cluster<T>	NAME	0	1	NO_USE	1
1858	472	8	KMeansPlusPlusClusterer.java	getFarthestPoint	selectedPoint	int	NAME	0	0	NO_USE	0
1858	472	8	KMeansPlusPlusClusterer.java	getFarthestPoint	clusters	Collection<Cluster<T>>	PARAM_AS	1	0	NO_USE	0
1858	472	8	KMeansPlusPlusClusterer.java	getFarthestPoint	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	FIELD_USE	0
1859	495	12	KMeansPlusPlusClusterer.java	getNearestCluster	distance	double	distanceFrom()	0	1	OTHER_USE	1
1859	495	12	KMeansPlusPlusClusterer.java	getNearestCluster	minDistance	double	NAME	0	1	NO_USE	1
1859	495	12	KMeansPlusPlusClusterer.java	getNearestCluster	clusterIndex	int	0	0	0	OTHER_USE	0
1859	495	12	KMeansPlusPlusClusterer.java	getNearestCluster	minCluster	int	0	0	0	NO_USE	0
1859	495	12	KMeansPlusPlusClusterer.java	getNearestCluster	clusters	Collection<Cluster<T>>	PARAM_AS	1	0	NO_USE	0
1859	495	12	KMeansPlusPlusClusterer.java	getNearestCluster	point	T	PARAM_AS	1	0	NO_USE	0
1859	495	12	KMeansPlusPlusClusterer.java	getNearestCluster	THIS	KMeansPlusPlusClusterer	UNKNOWN_AS	0	0	NO_USE	0
1860	77	8	EuclideanIntegerPoint.java	equals	other	Object	PARAM_AS	1	1	NO_USE	1
1860	77	8	EuclideanIntegerPoint.java	equals	THIS	EuclideanIntegerPoint	UNKNOWN_AS	0	4	NO_USE	0
1861	81	8	EuclideanIntegerPoint.java	equals	otherPoint	int[]	getPoint()	0	2	NO_USE	1
1861	81	8	EuclideanIntegerPoint.java	equals	other	Object	PARAM_AS	1	1	NO_USE	0
1861	81	8	EuclideanIntegerPoint.java	equals	THIS	EuclideanIntegerPoint	UNKNOWN_AS	0	4	NO_USE	1
1862	85	12	EuclideanIntegerPoint.java	equals	i	int	0	0	2	NO_USE	1
1862	85	12	EuclideanIntegerPoint.java	equals	otherPoint	int[]	getPoint()	0	2	NO_USE	1
1862	85	12	EuclideanIntegerPoint.java	equals	other	Object	PARAM_AS	1	1	NO_USE	0
1862	85	12	EuclideanIntegerPoint.java	equals	THIS	EuclideanIntegerPoint	UNKNOWN_AS	0	4	NO_USE	1
1863	112	12	EuclideanIntegerPoint.java	toString	i	int	0	0	1	NO_USE	1
1863	112	12	EuclideanIntegerPoint.java	toString	buff	StringBuilder	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1863	112	12	EuclideanIntegerPoint.java	toString	coordinates	int[]	getPoint()	0	1	NO_USE	1
1863	112	12	EuclideanIntegerPoint.java	toString	THIS	EuclideanIntegerPoint	UNKNOWN_AS	0	1	NO_USE	1
1864	97	8	PearsonsCorrelation.java	PearsonsCorrelation	covarianceMatrix	RealMatrix	getCovarianceMatrix()	0	1	NO_USE	1
1864	97	8	PearsonsCorrelation.java	PearsonsCorrelation	covariance	Covariance	PARAM_AS	1	0	NO_USE	0
1864	97	8	PearsonsCorrelation.java	PearsonsCorrelation	THIS	PearsonsCorrelation	UNKNOWN_AS	0	0	FIELD_USE	0
1865	170	16	PearsonsCorrelation.java	getCorrelationPValues	j	int	0	0	1	ARRIDX_USE	1
1865	170	16	PearsonsCorrelation.java	getCorrelationPValues	i	int	0	0	1	ARRIDX_USE	1
1865	170	16	PearsonsCorrelation.java	getCorrelationPValues	tDistribution	TDistribution	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1865	170	16	PearsonsCorrelation.java	getCorrelationPValues	nVars	int	getColumnDimension()	0	0	NO_USE	0
1865	170	16	PearsonsCorrelation.java	getCorrelationPValues	out	double[][]	ARRAY_CREATION	0	0	ARR_USE	0
1865	170	16	PearsonsCorrelation.java	getCorrelationPValues	THIS	PearsonsCorrelation	UNKNOWN_AS	0	0	FIELD_USE	0
1866	230	8	PearsonsCorrelation.java	correlation	regression	SimpleRegression	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1866	230	8	PearsonsCorrelation.java	correlation	xArray	double[]	PARAM_AS	1	2	OTHER_USE	1
1866	230	8	PearsonsCorrelation.java	correlation	yArray	double[]	PARAM_AS	1	1	OTHER_USE	1
1866	230	8	PearsonsCorrelation.java	correlation	THIS	PearsonsCorrelation	UNKNOWN_AS	0	3	FIELD_USE	1
1867	232	15	PearsonsCorrelation.java	correlation	regression	SimpleRegression	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1867	232	15	PearsonsCorrelation.java	correlation	xArray	double[]	PARAM_AS	1	2	OTHER_USE	1
1867	232	15	PearsonsCorrelation.java	correlation	yArray	double[]	PARAM_AS	1	1	ARR_USE	0
1867	232	15	PearsonsCorrelation.java	correlation	THIS	PearsonsCorrelation	UNKNOWN_AS	0	3	FIELD_USE	1
1868	279	8	PearsonsCorrelation.java	checkSufficientData	nRows	int	getRowDimension()	0	1	PARAM_USE	1
1868	279	8	PearsonsCorrelation.java	checkSufficientData	nCols	int	getColumnDimension()	0	1	PARAM_USE	1
1868	279	8	PearsonsCorrelation.java	checkSufficientData	matrix	RealMatrix	PARAM_AS	1	0	NO_USE	0
1868	279	8	PearsonsCorrelation.java	checkSufficientData	THIS	PearsonsCorrelation	UNKNOWN_AS	0	0	FIELD_USE	0
1869	225	8	Covariance.java	covariance	mean	Mean	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1869	225	8	Covariance.java	covariance	result	double	0d	0	0	-	0
1869	225	8	Covariance.java	covariance	length	int	NAME	0	2	PARAM_USE	1
1869	225	8	Covariance.java	covariance	xArray	double[]	PARAM_AS	1	0	PARAM_USE	0
1869	225	8	Covariance.java	covariance	yArray	double[]	PARAM_AS	1	1	OTHER_USE	1
1869	225	8	Covariance.java	covariance	biasCorrected	boolean	PARAM_AS	1	0	NO_USE	0
1869	225	8	Covariance.java	covariance	THIS	Covariance	UNKNOWN_AS	0	1	FIELD_USE	1
1870	228	15	Covariance.java	covariance	mean	Mean	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1870	228	15	Covariance.java	covariance	result	double	0d	0	0	-	0
1870	228	15	Covariance.java	covariance	length	int	NAME	0	2	PARAM_USE	1
1870	228	15	Covariance.java	covariance	xArray	double[]	PARAM_AS	1	0	PARAM_USE	0
1870	228	15	Covariance.java	covariance	yArray	double[]	PARAM_AS	1	1	PARAM_USE	0
1870	228	15	Covariance.java	covariance	biasCorrected	boolean	PARAM_AS	1	0	NO_USE	0
1870	228	15	Covariance.java	covariance	THIS	Covariance	UNKNOWN_AS	0	1	FIELD_USE	0
1871	268	8	Covariance.java	checkSufficientData	nRows	int	getRowDimension()	0	1	PARAM_USE	1
1871	268	8	Covariance.java	checkSufficientData	nCols	int	getColumnDimension()	0	1	PARAM_USE	1
1871	268	8	Covariance.java	checkSufficientData	matrix	RealMatrix	PARAM_AS	1	0	NO_USE	0
1871	268	8	Covariance.java	checkSufficientData	THIS	Covariance	UNKNOWN_AS	0	0	FIELD_USE	0
1872	149	8	SpearmansCorrelation.java	correlation	xArray	double[]	PARAM_AS	1	2	OTHER_USE	1
1872	149	8	SpearmansCorrelation.java	correlation	yArray	double[]	PARAM_AS	1	1	OTHER_USE	1
1872	149	8	SpearmansCorrelation.java	correlation	THIS	SpearmansCorrelation	UNKNOWN_AS	0	3	FIELD_USE	1
1873	152	15	SpearmansCorrelation.java	correlation	xArray	double[]	PARAM_AS	1	2	OTHER_USE	1
1873	152	15	SpearmansCorrelation.java	correlation	yArray	double[]	PARAM_AS	1	1	PARAM_USE	0
1873	152	15	SpearmansCorrelation.java	correlation	THIS	SpearmansCorrelation	UNKNOWN_AS	0	3	FIELD_USE	1
1874	228	12	NaturalRanking.java	rank	i	int	1	0	2	+	1
1874	228	12	NaturalRanking.java	rank	ranks	IntDoublePair[]	NAME	0	2	ARR_USE	1
1874	228	12	NaturalRanking.java	rank	nanPositions	List<Integer>	getNanPositions()	0	0	NO_USE	0
1874	228	12	NaturalRanking.java	rank	out	double[]	NAME	0	0	PARAM_USE	0
1874	228	12	NaturalRanking.java	rank	pos	int	1	0	0	NO_USE	0
1874	228	12	NaturalRanking.java	rank	tiesTrace	List<Integer>	CLASS_INSTANCE_CREATION	0	2	CLALLER_USE	0
1874	228	12	NaturalRanking.java	rank	data	double[]	PARAM_AS	1	0	NO_USE	0
1874	228	12	NaturalRanking.java	rank	THIS	NaturalRanking	UNKNOWN_AS	0	2	CLALLER_USE	0
1875	231	16	NaturalRanking.java	rank	i	int	1	0	2	NO_USE	0
1875	231	16	NaturalRanking.java	rank	ranks	IntDoublePair[]	NAME	0	2	NO_USE	0
1875	231	16	NaturalRanking.java	rank	nanPositions	List<Integer>	getNanPositions()	0	0	NO_USE	0
1875	231	16	NaturalRanking.java	rank	out	double[]	NAME	0	0	PARAM_USE	0
1875	231	16	NaturalRanking.java	rank	pos	int	+	0	0	NO_USE	0
1875	231	16	NaturalRanking.java	rank	tiesTrace	List<Integer>	CLASS_INSTANCE_CREATION	0	2	PARAM_USE	1
1875	231	16	NaturalRanking.java	rank	data	double[]	PARAM_AS	1	0	NO_USE	0
1875	231	16	NaturalRanking.java	rank	THIS	NaturalRanking	UNKNOWN_AS	0	2	CLALLER_USE	0
1876	242	8	NaturalRanking.java	rank	ranks	IntDoublePair[]	NAME	0	2	NO_USE	0
1876	242	8	NaturalRanking.java	rank	nanPositions	List<Integer>	getNanPositions()	0	0	NO_USE	0
1876	242	8	NaturalRanking.java	rank	out	double[]	NAME	0	0	PARAM_USE	0
1876	242	8	NaturalRanking.java	rank	pos	int	+	0	0	NO_USE	0
1876	242	8	NaturalRanking.java	rank	tiesTrace	List<Integer>	CLASS_INSTANCE_CREATION	0	2	PARAM_USE	1
1876	242	8	NaturalRanking.java	rank	data	double[]	PARAM_AS	1	0	NO_USE	0
1876	242	8	NaturalRanking.java	rank	THIS	NaturalRanking	UNKNOWN_AS	0	2	CLALLER_USE	0
1877	245	8	NaturalRanking.java	rank	ranks	IntDoublePair[]	NAME	0	2	NO_USE	0
1877	245	8	NaturalRanking.java	rank	nanPositions	List<Integer>	getNanPositions()	0	0	PARAM_USE	0
1877	245	8	NaturalRanking.java	rank	out	double[]	NAME	0	0	PARAM_USE	0
1877	245	8	NaturalRanking.java	rank	pos	int	+	0	0	NO_USE	0
1877	245	8	NaturalRanking.java	rank	tiesTrace	List<Integer>	CLASS_INSTANCE_CREATION	0	2	NO_USE	0
1877	245	8	NaturalRanking.java	rank	data	double[]	PARAM_AS	1	0	NO_USE	0
1877	245	8	NaturalRanking.java	rank	THIS	NaturalRanking	UNKNOWN_AS	0	2	CLALLER_USE	1
1878	259	8	NaturalRanking.java	removeNaNs	ranks	IntDoublePair[]	PARAM_AS	1	2	RET_USE	1
1878	259	8	NaturalRanking.java	removeNaNs	THIS	NaturalRanking	UNKNOWN_AS	0	1	NO_USE	1
1879	265	12	NaturalRanking.java	removeNaNs	i	int	0	0	1	+	1
1879	265	12	NaturalRanking.java	removeNaNs	outRanks	IntDoublePair[]	ARRAY_CREATION	0	0	ARR_USE	0
1879	265	12	NaturalRanking.java	removeNaNs	j	int	0	0	0	ARRIDX_USE	0
1879	265	12	NaturalRanking.java	removeNaNs	ranks	IntDoublePair[]	PARAM_AS	1	2	OTHER_USE	1
1879	265	12	NaturalRanking.java	removeNaNs	THIS	NaturalRanking	UNKNOWN_AS	0	1	FIELD_USE	0
1880	290	12	NaturalRanking.java	recodeNaNs	i	int	0	0	1	ARRIDX_USE	1
1880	290	12	NaturalRanking.java	recodeNaNs	ranks	IntDoublePair[]	PARAM_AS	1	1	ARR_USE	1
1880	290	12	NaturalRanking.java	recodeNaNs	value	double	PARAM_AS	1	0	OTHER_USE	0
1880	290	12	NaturalRanking.java	recodeNaNs	THIS	NaturalRanking	UNKNOWN_AS	0	0	NO_USE	0
1881	305	12	NaturalRanking.java	containsNaNs	i	int	0	0	1	NO_USE	1
1881	305	12	NaturalRanking.java	containsNaNs	ranks	IntDoublePair[]	PARAM_AS	1	1	NO_USE	1
1881	305	12	NaturalRanking.java	containsNaNs	THIS	NaturalRanking	UNKNOWN_AS	0	0	NO_USE	0
1882	387	8	NaturalRanking.java	restoreNaNs	ranks	double[]	PARAM_AS	1	0	NO_USE	0
1882	387	8	NaturalRanking.java	restoreNaNs	nanPositions	List<Integer>	PARAM_AS	1	1	NO_USE	1
1882	387	8	NaturalRanking.java	restoreNaNs	THIS	NaturalRanking	UNKNOWN_AS	0	0	NO_USE	0
1883	406	12	NaturalRanking.java	getNanPositions	i	int	0	0	1	PARAM_USE	1
1883	406	12	NaturalRanking.java	getNanPositions	out	ArrayList<Integer>	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
1883	406	12	NaturalRanking.java	getNanPositions	ranks	IntDoublePair[]	PARAM_AS	1	1	NO_USE	1
1883	406	12	NaturalRanking.java	getNanPositions	THIS	NaturalRanking	UNKNOWN_AS	0	0	NO_USE	0
1884	112	8	Frequency.java	addValue	obj	Comparable<?>	NAME	0	0	NO_USE	0
1884	112	8	Frequency.java	addValue	v	Comparable<?>	PARAM_AS	1	1	OTHER_USE	1
1884	112	8	Frequency.java	addValue	THIS	Frequency	UNKNOWN_AS	0	0	NO_USE	0
1885	117	12	Frequency.java	addValue	count	Long	get()	0	1	CLALLER_USE	1
1885	117	12	Frequency.java	addValue	obj	Comparable<?>	valueOf()	0	0	PARAM_USE	0
1885	117	12	Frequency.java	addValue	v	Comparable<?>	PARAM_AS	1	1	NO_USE	0
1885	117	12	Frequency.java	addValue	THIS	Frequency	UNKNOWN_AS	0	0	FIELD_USE	0
1886	199	8	Frequency.java	getCount	v	Comparable<?>	PARAM_AS	1	1	OTHER_USE	1
1886	199	8	Frequency.java	getCount	THIS	Frequency	UNKNOWN_AS	0	0	CLALLER_USE	0
1887	205	12	Frequency.java	getCount	count	Long	get()	0	1	CLALLER_USE	1
1887	205	12	Frequency.java	getCount	result	long	0	0	0	NO_USE	0
1887	205	12	Frequency.java	getCount	v	Comparable<?>	PARAM_AS	1	1	NO_USE	0
1887	205	12	Frequency.java	getCount	THIS	Frequency	UNKNOWN_AS	0	0	NO_USE	0
1888	265	8	Frequency.java	getPct	sumFreq	long	getSumFreq()	0	1	NO_USE	1
1888	265	8	Frequency.java	getPct	v	Comparable<?>	PARAM_AS	1	0	NO_USE	0
1888	265	8	Frequency.java	getPct	THIS	Frequency	UNKNOWN_AS	0	0	FIELD_USE	0
1889	315	8	Frequency.java	getCumFreq	v	Comparable<?>	PARAM_AS	1	4	NO_USE	0
1889	315	8	Frequency.java	getCumFreq	THIS	Frequency	UNKNOWN_AS	0	3	NO_USE	1
1890	318	8	Frequency.java	getCumFreq	v	Comparable<?>	PARAM_AS	1	4	OTHER_USE	1
1890	318	8	Frequency.java	getCumFreq	THIS	Frequency	UNKNOWN_AS	0	3	CLALLER_USE	0
1891	323	8	Frequency.java	getCumFreq	c	Comparator<Comparable<?>>	CAST	0	4	NO_USE	1
1891	323	8	Frequency.java	getCumFreq	v	Comparable<?>	PARAM_AS	1	4	NO_USE	0
1891	323	8	Frequency.java	getCumFreq	THIS	Frequency	UNKNOWN_AS	0	3	NO_USE	0
1892	330	12	Frequency.java	getCumFreq	value	Long	get()	0	1	CLALLER_USE	1
1892	330	12	Frequency.java	getCumFreq	c	Comparator<Comparable<?>>	CLASS_INSTANCE_CREATION	0	4	NO_USE	0
1892	330	12	Frequency.java	getCumFreq	result	long	0	0	0	NO_USE	0
1892	330	12	Frequency.java	getCumFreq	v	Comparable<?>	PARAM_AS	1	4	NO_USE	0
1892	330	12	Frequency.java	getCumFreq	THIS	Frequency	UNKNOWN_AS	0	3	NO_USE	0
1893	337	8	Frequency.java	getCumFreq	c	Comparator<Comparable<?>>	CLASS_INSTANCE_CREATION	0	4	NO_USE	1
1893	337	8	Frequency.java	getCumFreq	result	long	longValue()	0	0	NO_USE	0
1893	337	8	Frequency.java	getCumFreq	v	Comparable<?>	PARAM_AS	1	4	NO_USE	1
1893	337	8	Frequency.java	getCumFreq	THIS	Frequency	UNKNOWN_AS	0	3	NO_USE	1
1894	341	8	Frequency.java	getCumFreq	c	Comparator<Comparable<?>>	CLASS_INSTANCE_CREATION	0	4	NO_USE	1
1894	341	8	Frequency.java	getCumFreq	result	long	longValue()	0	0	NO_USE	0
1894	341	8	Frequency.java	getCumFreq	v	Comparable<?>	PARAM_AS	1	4	NO_USE	1
1894	341	8	Frequency.java	getCumFreq	THIS	Frequency	UNKNOWN_AS	0	3	CLALLER_USE	1
1895	348	12	Frequency.java	getCumFreq	nextValue	Comparable<?>	next()	0	1	PARAM_USE	1
1895	348	12	Frequency.java	getCumFreq	c	Comparator<Comparable<?>>	CLASS_INSTANCE_CREATION	0	4	NO_USE	1
1895	348	12	Frequency.java	getCumFreq	result	long	longValue()	0	0	RET_USE	0
1895	348	12	Frequency.java	getCumFreq	values	Iterator<Comparable<?>>	valuesIterator()	0	0	NO_USE	0
1895	348	12	Frequency.java	getCumFreq	v	Comparable<?>	PARAM_AS	1	4	NO_USE	1
1895	348	12	Frequency.java	getCumFreq	THIS	Frequency	UNKNOWN_AS	0	3	CLALLER_USE	0
1896	408	8	Frequency.java	getCumPct	sumFreq	long	getSumFreq()	0	1	NO_USE	1
1896	408	8	Frequency.java	getCumPct	v	Comparable<?>	PARAM_AS	1	0	NO_USE	0
1896	408	8	Frequency.java	getCumPct	THIS	Frequency	UNKNOWN_AS	0	0	FIELD_USE	0
1897	494	8	Frequency.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	1
1897	494	8	Frequency.java	equals	THIS	Frequency	UNKNOWN_AS	0	5	NO_USE	1
1898	497	8	Frequency.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	1
1898	497	8	Frequency.java	equals	THIS	Frequency	UNKNOWN_AS	0	5	NO_USE	0
1899	501	8	Frequency.java	equals	other	Frequency	CAST	0	2	OTHER_USE	0
1899	501	8	Frequency.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	0
1899	501	8	Frequency.java	equals	THIS	Frequency	UNKNOWN_AS	0	5	FIELD_USE	1
1900	502	12	Frequency.java	equals	other	Frequency	CAST	0	2	NO_USE	1
1900	502	12	Frequency.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	0
1900	502	12	Frequency.java	equals	THIS	Frequency	UNKNOWN_AS	0	5	NO_USE	1
1901	505	15	Frequency.java	equals	other	Frequency	CAST	0	2	NO_USE	1
1901	505	15	Frequency.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	0
1901	505	15	Frequency.java	equals	THIS	Frequency	UNKNOWN_AS	0	5	NO_USE	1
1902	571	8	StatUtils.java	sumDifference	n	int	NAME	0	2	OTHER_USE	1
1902	571	8	StatUtils.java	sumDifference	sample1	double[]	PARAM_AS	1	0	NO_USE	0
1902	571	8	StatUtils.java	sumDifference	sample2	double[]	PARAM_AS	1	1	OTHER_USE	1
1902	571	8	StatUtils.java	sumDifference	THIS	StatUtils	UNKNOWN_AS	0	1	FIELD_USE	1
1903	574	8	StatUtils.java	sumDifference	n	int	NAME	0	2	NO_USE	1
1903	574	8	StatUtils.java	sumDifference	sample1	double[]	PARAM_AS	1	0	NO_USE	0
1903	574	8	StatUtils.java	sumDifference	sample2	double[]	PARAM_AS	1	1	NO_USE	0
1903	574	8	StatUtils.java	sumDifference	THIS	StatUtils	UNKNOWN_AS	0	1	FIELD_USE	0
1904	619	8	StatUtils.java	varianceDifference	sum1	double	0d	0	0	NO_USE	0
1904	619	8	StatUtils.java	varianceDifference	sum2	double	0d	0	0	NO_USE	0
1904	619	8	StatUtils.java	varianceDifference	diff	double	0d	0	0	NO_USE	0
1904	619	8	StatUtils.java	varianceDifference	n	int	NAME	0	2	OTHER_USE	1
1904	619	8	StatUtils.java	varianceDifference	sample1	double[]	PARAM_AS	1	0	NO_USE	0
1904	619	8	StatUtils.java	varianceDifference	sample2	double[]	PARAM_AS	1	1	OTHER_USE	1
1904	619	8	StatUtils.java	varianceDifference	meanDifference	double	PARAM_AS	1	0	NO_USE	0
1904	619	8	StatUtils.java	varianceDifference	THIS	StatUtils	UNKNOWN_AS	0	1	FIELD_USE	1
1905	622	8	StatUtils.java	varianceDifference	sum1	double	0d	0	0	NO_USE	0
1905	622	8	StatUtils.java	varianceDifference	sum2	double	0d	0	0	NO_USE	0
1905	622	8	StatUtils.java	varianceDifference	diff	double	0d	0	0	NO_USE	0
1905	622	8	StatUtils.java	varianceDifference	n	int	NAME	0	2	OTHER_USE	1
1905	622	8	StatUtils.java	varianceDifference	sample1	double[]	PARAM_AS	1	0	NO_USE	0
1905	622	8	StatUtils.java	varianceDifference	sample2	double[]	PARAM_AS	1	1	NO_USE	0
1905	622	8	StatUtils.java	varianceDifference	meanDifference	double	PARAM_AS	1	0	NO_USE	0
1905	622	8	StatUtils.java	varianceDifference	THIS	StatUtils	UNKNOWN_AS	0	1	NO_USE	0
1906	80	8	GLSMultipleLinearRegression.java	getOmegaInverse	THIS	GLSMultipleLinearRegression	UNKNOWN_AS	0	1	FIELD_USE	1
1907	109	16	OLSMultipleLinearRegression.java	calculateHat	j	int	0	0	1	ARRIDX_USE	1
1907	109	16	OLSMultipleLinearRegression.java	calculateHat	i	int	0	0	2	ARRIDX_USE	1
1907	109	16	OLSMultipleLinearRegression.java	calculateHat	Q	RealMatrix	getQ()	0	0	NO_USE	0
1907	109	16	OLSMultipleLinearRegression.java	calculateHat	p	int	getColumnDimension()	0	1	NO_USE	1
1907	109	16	OLSMultipleLinearRegression.java	calculateHat	n	int	getColumnDimension()	0	0	NO_USE	0
1907	109	16	OLSMultipleLinearRegression.java	calculateHat	augI	Array2DRowRealMatrix	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1907	109	16	OLSMultipleLinearRegression.java	calculateHat	augIData	double[][]	getDataRef()	0	0	ARR_USE	0
1907	109	16	OLSMultipleLinearRegression.java	calculateHat	THIS	OLSMultipleLinearRegression	UNKNOWN_AS	0	0	NO_USE	0
1908	135	8	OLSMultipleLinearRegression.java	calculateTotalSumOfSquares	THIS	OLSMultipleLinearRegression	UNKNOWN_AS	0	1	NO_USE	1
1909	185	8	OLSMultipleLinearRegression.java	calculateAdjustedRSquared	n	double	getRowDimension()	0	0	/	0
1909	185	8	OLSMultipleLinearRegression.java	calculateAdjustedRSquared	THIS	OLSMultipleLinearRegression	UNKNOWN_AS	0	1	CLALLER_USE	1
1910	93	8	AbstractMultipleLinearRegression.java	newSampleData	data	double[]	PARAM_AS	1	2	NO_USE	1
1910	93	8	AbstractMultipleLinearRegression.java	newSampleData	nobs	int	PARAM_AS	1	2	NO_USE	0
1910	93	8	AbstractMultipleLinearRegression.java	newSampleData	nvars	int	PARAM_AS	1	2	NO_USE	0
1910	93	8	AbstractMultipleLinearRegression.java	newSampleData	THIS	AbstractMultipleLinearRegression	UNKNOWN_AS	0	2	FIELD_USE	0
1911	97	8	AbstractMultipleLinearRegression.java	newSampleData	data	double[]	PARAM_AS	1	2	OTHER_USE	1
1911	97	8	AbstractMultipleLinearRegression.java	newSampleData	nobs	int	PARAM_AS	1	2	PARAM_USE	1
1911	97	8	AbstractMultipleLinearRegression.java	newSampleData	nvars	int	PARAM_AS	1	2	PARAM_USE	1
1911	97	8	AbstractMultipleLinearRegression.java	newSampleData	THIS	AbstractMultipleLinearRegression	UNKNOWN_AS	0	2	FIELD_USE	1
1912	101	8	AbstractMultipleLinearRegression.java	newSampleData	data	double[]	PARAM_AS	1	2	NO_USE	0
1912	101	8	AbstractMultipleLinearRegression.java	newSampleData	nobs	int	PARAM_AS	1	2	NO_USE	1
1912	101	8	AbstractMultipleLinearRegression.java	newSampleData	nvars	int	PARAM_AS	1	2	NO_USE	1
1912	101	8	AbstractMultipleLinearRegression.java	newSampleData	THIS	AbstractMultipleLinearRegression	UNKNOWN_AS	0	2	FIELD_USE	0
1913	111	12	AbstractMultipleLinearRegression.java	newSampleData	i	int	ARRAY_ACCESS	0	0	ARRIDX_USE	0
1913	111	12	AbstractMultipleLinearRegression.java	newSampleData	y	double[]	ARRAY_ACCESS	0	0	NO_USE	0
1913	111	12	AbstractMultipleLinearRegression.java	newSampleData	cols	int	OTHERS	0	0	NO_USE	0
1913	111	12	AbstractMultipleLinearRegression.java	newSampleData	x	double[][]	ARRAY_CREATION	0	0	ARR_USE	0
1913	111	12	AbstractMultipleLinearRegression.java	newSampleData	pointer	int	0	0	0	NO_USE	0
1913	111	12	AbstractMultipleLinearRegression.java	newSampleData	data	double[]	PARAM_AS	1	2	NO_USE	0
1913	111	12	AbstractMultipleLinearRegression.java	newSampleData	nobs	int	PARAM_AS	1	2	NO_USE	0
1913	111	12	AbstractMultipleLinearRegression.java	newSampleData	nvars	int	PARAM_AS	1	2	NO_USE	0
1913	111	12	AbstractMultipleLinearRegression.java	newSampleData	THIS	AbstractMultipleLinearRegression	UNKNOWN_AS	0	2	NO_USE	1
1914	129	8	AbstractMultipleLinearRegression.java	newYSampleData	y	double[]	PARAM_AS	1	2	NO_USE	1
1914	129	8	AbstractMultipleLinearRegression.java	newYSampleData	THIS	AbstractMultipleLinearRegression	UNKNOWN_AS	0	1	FIELD_USE	0
1915	133	8	AbstractMultipleLinearRegression.java	newYSampleData	y	double[]	PARAM_AS	1	2	NO_USE	1
1915	133	8	AbstractMultipleLinearRegression.java	newYSampleData	THIS	AbstractMultipleLinearRegression	UNKNOWN_AS	0	1	FIELD_USE	1
1916	164	8	AbstractMultipleLinearRegression.java	newXSampleData	x	double[][]	PARAM_AS	1	3	NO_USE	1
1916	164	8	AbstractMultipleLinearRegression.java	newXSampleData	THIS	AbstractMultipleLinearRegression	UNKNOWN_AS	0	2	FIELD_USE	0
1917	168	8	AbstractMultipleLinearRegression.java	newXSampleData	x	double[][]	PARAM_AS	1	3	NO_USE	1
1917	168	8	AbstractMultipleLinearRegression.java	newXSampleData	THIS	AbstractMultipleLinearRegression	UNKNOWN_AS	0	2	FIELD_USE	1
1918	172	8	AbstractMultipleLinearRegression.java	newXSampleData	x	double[][]	PARAM_AS	1	3	OTHER_USE	0
1918	172	8	AbstractMultipleLinearRegression.java	newXSampleData	THIS	AbstractMultipleLinearRegression	UNKNOWN_AS	0	2	FIELD_USE	1
1919	178	16	AbstractMultipleLinearRegression.java	newXSampleData	i	int	0	0	1	ARRIDX_USE	1
1919	178	16	AbstractMultipleLinearRegression.java	newXSampleData	nVars	int	FIELD_ACCESS	0	1	PARAM_USE	1
1919	178	16	AbstractMultipleLinearRegression.java	newXSampleData	xAug	double[][]	ARRAY_CREATION	0	0	NO_USE	0
1919	178	16	AbstractMultipleLinearRegression.java	newXSampleData	x	double[][]	PARAM_AS	1	3	ARR_USE	1
1919	178	16	AbstractMultipleLinearRegression.java	newXSampleData	THIS	AbstractMultipleLinearRegression	CLASS_INSTANCE_CREATION	0	2	FIELD_USE	1
1920	205	8	AbstractMultipleLinearRegression.java	validateSampleData	x	double[][]	PARAM_AS	1	5	==	1
1920	205	8	AbstractMultipleLinearRegression.java	validateSampleData	y	double[]	PARAM_AS	1	2	==	1
1920	205	8	AbstractMultipleLinearRegression.java	validateSampleData	THIS	AbstractMultipleLinearRegression	UNKNOWN_AS	0	5	FIELD_USE	1
1921	211	8	AbstractMultipleLinearRegression.java	validateSampleData	x	double[][]	PARAM_AS	1	5	NO_USE	1
1921	211	8	AbstractMultipleLinearRegression.java	validateSampleData	y	double[]	PARAM_AS	1	2	NO_USE	0
1921	211	8	AbstractMultipleLinearRegression.java	validateSampleData	THIS	AbstractMultipleLinearRegression	UNKNOWN_AS	0	5	FIELD_USE	1
1922	215	8	AbstractMultipleLinearRegression.java	validateSampleData	x	double[][]	PARAM_AS	1	5	OTHER_USE	1
1922	215	8	AbstractMultipleLinearRegression.java	validateSampleData	y	double[]	PARAM_AS	1	2	NO_USE	0
1922	215	8	AbstractMultipleLinearRegression.java	validateSampleData	THIS	AbstractMultipleLinearRegression	UNKNOWN_AS	0	5	FIELD_USE	1
1923	232	8	AbstractMultipleLinearRegression.java	validateCovarianceData	x	double[][]	PARAM_AS	1	1	OTHER_USE	1
1923	232	8	AbstractMultipleLinearRegression.java	validateCovarianceData	covariance	double[][]	PARAM_AS	1	4	OTHER_USE	1
1923	232	8	AbstractMultipleLinearRegression.java	validateCovarianceData	THIS	AbstractMultipleLinearRegression	UNKNOWN_AS	0	5	FIELD_USE	1
1924	236	8	AbstractMultipleLinearRegression.java	validateCovarianceData	x	double[][]	PARAM_AS	1	1	NO_USE	0
1924	236	8	AbstractMultipleLinearRegression.java	validateCovarianceData	covariance	double[][]	PARAM_AS	1	4	OTHER_USE	1
1924	236	8	AbstractMultipleLinearRegression.java	validateCovarianceData	THIS	AbstractMultipleLinearRegression	UNKNOWN_AS	0	5	FIELD_USE	1
1925	68	8	RegressionResults.java	RegressionResults	parameters	double[]	PARAM_AS	1	0	PARAM_USE	0
1925	68	8	RegressionResults.java	RegressionResults	varcov	double[][]	PARAM_AS	1	0	OTHER_USE	0
1925	68	8	RegressionResults.java	RegressionResults	isSymmetricCompressed	boolean	PARAM_AS	1	0	NO_USE	0
1925	68	8	RegressionResults.java	RegressionResults	nobs	long	PARAM_AS	1	0	NO_USE	0
1925	68	8	RegressionResults.java	RegressionResults	rank	int	PARAM_AS	1	1	NO_USE	0
1925	68	8	RegressionResults.java	RegressionResults	sumy	double	PARAM_AS	1	0	NO_USE	0
1925	68	8	RegressionResults.java	RegressionResults	sumysq	double	PARAM_AS	1	0	NO_USE	0
1925	68	8	RegressionResults.java	RegressionResults	sse	double	PARAM_AS	1	0	NO_USE	0
1925	68	8	RegressionResults.java	RegressionResults	containsConstant	boolean	PARAM_AS	1	1	NO_USE	0
1925	68	8	RegressionResults.java	RegressionResults	copyData	boolean	PARAM_AS	1	0	NO_USE	1
1925	68	8	RegressionResults.java	RegressionResults	THIS	RegressionResults	UNKNOWN_AS	0	0	FIELD_USE	0
1926	85	8	RegressionResults.java	RegressionResults	parameters	double[]	PARAM_AS	1	0	NO_USE	0
1926	85	8	RegressionResults.java	RegressionResults	varcov	double[][]	PARAM_AS	1	0	NO_USE	0
1926	85	8	RegressionResults.java	RegressionResults	isSymmetricCompressed	boolean	PARAM_AS	1	0	NO_USE	0
1926	85	8	RegressionResults.java	RegressionResults	nobs	long	PARAM_AS	1	0	OTHER_USE	0
1926	85	8	RegressionResults.java	RegressionResults	rank	int	PARAM_AS	1	1	NO_USE	1
1926	85	8	RegressionResults.java	RegressionResults	sumy	double	PARAM_AS	1	0	*	0
1926	85	8	RegressionResults.java	RegressionResults	sumysq	double	PARAM_AS	1	0	-	0
1926	85	8	RegressionResults.java	RegressionResults	sse	double	PARAM_AS	1	0	NO_USE	0
1926	85	8	RegressionResults.java	RegressionResults	containsConstant	boolean	PARAM_AS	1	1	OTHER_USE	0
1926	85	8	RegressionResults.java	RegressionResults	copyData	boolean	PARAM_AS	1	0	NO_USE	0
1926	85	8	RegressionResults.java	RegressionResults	THIS	RegressionResults	ARRAY_CREATION	0	0	FIELD_USE	0
1927	96	8	RegressionResults.java	RegressionResults	parameters	double[]	PARAM_AS	1	0	NO_USE	0
1927	96	8	RegressionResults.java	RegressionResults	varcov	double[][]	PARAM_AS	1	0	NO_USE	0
1927	96	8	RegressionResults.java	RegressionResults	isSymmetricCompressed	boolean	PARAM_AS	1	0	NO_USE	0
1927	96	8	RegressionResults.java	RegressionResults	nobs	long	PARAM_AS	1	0	/	0
1927	96	8	RegressionResults.java	RegressionResults	rank	int	PARAM_AS	1	1	-	0
1927	96	8	RegressionResults.java	RegressionResults	sumy	double	PARAM_AS	1	0	NO_USE	0
1927	96	8	RegressionResults.java	RegressionResults	sumysq	double	PARAM_AS	1	0	NO_USE	0
1927	96	8	RegressionResults.java	RegressionResults	sse	double	PARAM_AS	1	0	*	0
1927	96	8	RegressionResults.java	RegressionResults	containsConstant	boolean	PARAM_AS	1	1	NO_USE	1
1927	96	8	RegressionResults.java	RegressionResults	copyData	boolean	PARAM_AS	1	0	NO_USE	0
1927	96	8	RegressionResults.java	RegressionResults	THIS	RegressionResults	-	0	0	FIELD_USE	0
1928	116	8	RegressionResults.java	getParameterEstimate	index	int	PARAM_AS	1	2	NO_USE	0
1928	116	8	RegressionResults.java	getParameterEstimate	THIS	RegressionResults	UNKNOWN_AS	0	3	FIELD_USE	1
1929	119	8	RegressionResults.java	getParameterEstimate	index	int	PARAM_AS	1	2	NO_USE	1
1929	119	8	RegressionResults.java	getParameterEstimate	THIS	RegressionResults	UNKNOWN_AS	0	3	NO_USE	1
1930	136	8	RegressionResults.java	getParameterEstimates	THIS	RegressionResults	UNKNOWN_AS	0	1	NO_USE	1
1931	152	8	RegressionResults.java	getStdErrorOfEstimate	index	int	PARAM_AS	1	2	NO_USE	0
1931	152	8	RegressionResults.java	getStdErrorOfEstimate	THIS	RegressionResults	UNKNOWN_AS	0	3	FIELD_USE	1
1932	155	8	RegressionResults.java	getStdErrorOfEstimate	index	int	PARAM_AS	1	2	NO_USE	1
1932	155	8	RegressionResults.java	getStdErrorOfEstimate	THIS	RegressionResults	UNKNOWN_AS	0	3	NO_USE	1
1933	159	8	RegressionResults.java	getStdErrorOfEstimate	var	double	getVcvElement()	0	2	PARAM_USE	1
1933	159	8	RegressionResults.java	getStdErrorOfEstimate	index	int	PARAM_AS	1	2	NO_USE	0
1933	159	8	RegressionResults.java	getStdErrorOfEstimate	THIS	RegressionResults	UNKNOWN_AS	0	3	NO_USE	0
1934	177	8	RegressionResults.java	getStdErrorOfEstimates	THIS	RegressionResults	UNKNOWN_AS	0	1	NO_USE	1
1935	183	12	RegressionResults.java	getStdErrorOfEstimates	var	double	getVcvElement()	0	2	PARAM_USE	1
1935	183	12	RegressionResults.java	getStdErrorOfEstimates	i	int	0	0	0	ARRIDX_USE	0
1935	183	12	RegressionResults.java	getStdErrorOfEstimates	se	double[]	ARRAY_CREATION	0	0	ARR_USE	0
1935	183	12	RegressionResults.java	getStdErrorOfEstimates	THIS	RegressionResults	UNKNOWN_AS	0	1	NO_USE	0
1936	203	8	RegressionResults.java	getCovarianceOfParameters	i	int	PARAM_AS	1	2	NO_USE	0
1936	203	8	RegressionResults.java	getCovarianceOfParameters	j	int	PARAM_AS	1	2	NO_USE	0
1936	203	8	RegressionResults.java	getCovarianceOfParameters	THIS	RegressionResults	UNKNOWN_AS	0	5	FIELD_USE	1
1937	206	8	RegressionResults.java	getCovarianceOfParameters	i	int	PARAM_AS	1	2	NO_USE	1
1937	206	8	RegressionResults.java	getCovarianceOfParameters	j	int	PARAM_AS	1	2	NO_USE	0
1937	206	8	RegressionResults.java	getCovarianceOfParameters	THIS	RegressionResults	UNKNOWN_AS	0	5	NO_USE	1
1938	210	8	RegressionResults.java	getCovarianceOfParameters	i	int	PARAM_AS	1	2	NO_USE	0
1938	210	8	RegressionResults.java	getCovarianceOfParameters	j	int	PARAM_AS	1	2	NO_USE	1
1938	210	8	RegressionResults.java	getCovarianceOfParameters	THIS	RegressionResults	UNKNOWN_AS	0	5	NO_USE	1
1939	226	8	RegressionResults.java	getNumberOfParameters	THIS	RegressionResults	UNKNOWN_AS	0	1	NO_USE	1
1940	365	8	RegressionResults.java	getVcvElement	i	int	PARAM_AS	1	3	==	0
1940	365	8	RegressionResults.java	getVcvElement	j	int	PARAM_AS	1	3	==	0
1940	365	8	RegressionResults.java	getVcvElement	THIS	RegressionResults	UNKNOWN_AS	0	5	FIELD_USE	1
1941	366	12	RegressionResults.java	getVcvElement	i	int	PARAM_AS	1	3	==	0
1941	366	12	RegressionResults.java	getVcvElement	j	int	PARAM_AS	1	3	==	0
1941	366	12	RegressionResults.java	getVcvElement	THIS	RegressionResults	UNKNOWN_AS	0	5	FIELD_USE	1
1942	368	16	RegressionResults.java	getVcvElement	i	int	PARAM_AS	1	3	ARRIDX_USE	1
1942	368	16	RegressionResults.java	getVcvElement	j	int	PARAM_AS	1	3	ARRIDX_USE	1
1942	368	16	RegressionResults.java	getVcvElement	THIS	RegressionResults	UNKNOWN_AS	0	5	FIELD_USE	0
1943	370	23	RegressionResults.java	getVcvElement	i	int	PARAM_AS	1	3	ARRIDX_USE	1
1943	370	23	RegressionResults.java	getVcvElement	j	int	PARAM_AS	1	3	ARRIDX_USE	1
1943	370	23	RegressionResults.java	getVcvElement	THIS	RegressionResults	UNKNOWN_AS	0	5	FIELD_USE	1
1944	376	16	RegressionResults.java	getVcvElement	i	int	PARAM_AS	1	3	+	1
1944	376	16	RegressionResults.java	getVcvElement	j	int	PARAM_AS	1	3	+	1
1944	376	16	RegressionResults.java	getVcvElement	THIS	RegressionResults	UNKNOWN_AS	0	5	FIELD_USE	0
1945	125	8	SimpleRegression.java	addData	x	double	PARAM_AS	1	0	OTHER_USE	0
1945	125	8	SimpleRegression.java	addData	y	double	PARAM_AS	1	0	OTHER_USE	0
1945	125	8	SimpleRegression.java	addData	THIS	SimpleRegression	UNKNOWN_AS	0	2	FIELD_USE	1
1946	141	8	SimpleRegression.java	addData	x	double	PARAM_AS	1	0	NO_USE	0
1946	141	8	SimpleRegression.java	addData	y	double	PARAM_AS	1	0	NO_USE	0
1946	141	8	SimpleRegression.java	addData	THIS	SimpleRegression	NAME	0	2	FIELD_USE	1
1947	161	8	SimpleRegression.java	removeData	x	double	PARAM_AS	1	0	-	0
1947	161	8	SimpleRegression.java	removeData	y	double	PARAM_AS	1	0	-	0
1947	161	8	SimpleRegression.java	removeData	THIS	SimpleRegression	UNKNOWN_AS	0	2	FIELD_USE	1
1948	173	12	SimpleRegression.java	removeData	dx	double	-	0	0	NO_USE	0
1948	173	12	SimpleRegression.java	removeData	dy	double	-	0	0	NO_USE	0
1948	173	12	SimpleRegression.java	removeData	x	double	PARAM_AS	1	0	NO_USE	0
1948	173	12	SimpleRegression.java	removeData	y	double	PARAM_AS	1	0	NO_USE	0
1948	173	12	SimpleRegression.java	removeData	THIS	SimpleRegression	NAME	0	2	FIELD_USE	1
1949	301	8	SimpleRegression.java	getSlope	THIS	SimpleRegression	UNKNOWN_AS	0	2	FIELD_USE	1
1950	304	8	SimpleRegression.java	getSlope	THIS	SimpleRegression	UNKNOWN_AS	0	2	FIELD_USE	1
1951	354	8	SimpleRegression.java	getTotalSumSquares	THIS	SimpleRegression	UNKNOWN_AS	0	1	FIELD_USE	1
1952	368	8	SimpleRegression.java	getXSumSquares	THIS	SimpleRegression	UNKNOWN_AS	0	1	FIELD_USE	1
1953	414	8	SimpleRegression.java	getMeanSquareError	THIS	SimpleRegression	UNKNOWN_AS	0	1	FIELD_USE	1
1954	437	8	SimpleRegression.java	getR	b1	double	getSlope()	0	1	NO_USE	1
1954	437	8	SimpleRegression.java	getR	result	double	sqrt()	0	0	-x	0
1954	437	8	SimpleRegression.java	getR	THIS	SimpleRegression	UNKNOWN_AS	0	0	NO_USE	0
1955	552	8	SimpleRegression.java	getSlopeConfidenceInterval	alpha	double	PARAM_AS	1	2	OTHER_USE	1
1955	552	8	SimpleRegression.java	getSlopeConfidenceInterval	THIS	SimpleRegression	UNKNOWN_AS	0	0	FIELD_USE	0
1956	142	8	MathRuntimeException.java	getMessage	locale	Locale	PARAM_AS	1	0	PARAM_USE	0
1956	142	8	MathRuntimeException.java	getMessage	THIS	MathRuntimeException	UNKNOWN_AS	0	1	CLALLER_USE	1
1957	92	8	CorrelatedRandomVectorGenerator.java	CorrelatedRandomVectorGenerator	order	int	getRowDimension()	0	1	OTHER_USE	1
1957	92	8	CorrelatedRandomVectorGenerator.java	CorrelatedRandomVectorGenerator	mean	double[]	PARAM_AS	1	1	OTHER_USE	1
1957	92	8	CorrelatedRandomVectorGenerator.java	CorrelatedRandomVectorGenerator	covariance	RealMatrix	PARAM_AS	1	0	NO_USE	0
1957	92	8	CorrelatedRandomVectorGenerator.java	CorrelatedRandomVectorGenerator	small	double	PARAM_AS	1	0	NO_USE	0
1957	92	8	CorrelatedRandomVectorGenerator.java	CorrelatedRandomVectorGenerator	generator	NormalizedRandomGenerator	PARAM_AS	1	0	NO_USE	0
1957	92	8	CorrelatedRandomVectorGenerator.java	CorrelatedRandomVectorGenerator	THIS	CorrelatedRandomVectorGenerator	UNKNOWN_AS	0	1	FIELD_USE	1
1958	148	12	EmpiricalDistributionImpl.java	load	da	DataAdapter	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1958	148	12	EmpiricalDistributionImpl.java	load	in	BufferedReader	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1958	148	12	EmpiricalDistributionImpl.java	load	url	URL	PARAM_AS	1	0	PARAM_USE	0
1958	148	12	EmpiricalDistributionImpl.java	load	THIS	EmpiricalDistributionImpl	UNKNOWN_AS	0	1	FIELD_USE	1
1959	339	8	EmpiricalDistributionImpl.java	fillBinStats	in	Object	PARAM_AS	1	0	NO_USE	0
1959	339	8	EmpiricalDistributionImpl.java	fillBinStats	THIS	EmpiricalDistributionImpl	/	0	1	FIELD_USE	1
1960	383	8	EmpiricalDistributionImpl.java	getNextValue	THIS	EmpiricalDistributionImpl	UNKNOWN_AS	0	2	FIELD_USE	1
1961	392	11	EmpiricalDistributionImpl.java	getNextValue	i	int	0	0	1	PARAM_USE	1
1961	392	11	EmpiricalDistributionImpl.java	getNextValue	x	double	random()	0	1	NO_USE	1
1961	392	11	EmpiricalDistributionImpl.java	getNextValue	THIS	EmpiricalDistributionImpl	UNKNOWN_AS	0	2	FIELD_USE	1
1962	394	15	EmpiricalDistributionImpl.java	getNextValue	stats	SummaryStatistics	get()	0	2	CLALLER_USE	1
1962	394	15	EmpiricalDistributionImpl.java	getNextValue	i	int	0	0	1	NO_USE	0
1962	394	15	EmpiricalDistributionImpl.java	getNextValue	x	double	random()	0	1	NO_USE	0
1962	394	15	EmpiricalDistributionImpl.java	getNextValue	THIS	EmpiricalDistributionImpl	UNKNOWN_AS	0	2	FIELD_USE	0
1963	395	19	EmpiricalDistributionImpl.java	getNextValue	stats	SummaryStatistics	get()	0	2	CLALLER_USE	1
1963	395	19	EmpiricalDistributionImpl.java	getNextValue	i	int	0	0	1	NO_USE	0
1963	395	19	EmpiricalDistributionImpl.java	getNextValue	x	double	random()	0	1	NO_USE	0
1963	395	19	EmpiricalDistributionImpl.java	getNextValue	THIS	EmpiricalDistributionImpl	UNKNOWN_AS	0	2	FIELD_USE	0
1964	154	8	AbstractWell.java	setSeed	seed	int[]	PARAM_AS	1	2	NO_USE	1
1964	154	8	AbstractWell.java	setSeed	THIS	AbstractWell	UNKNOWN_AS	0	3	CLALLER_USE	0
1965	161	8	AbstractWell.java	setSeed	seed	int[]	PARAM_AS	1	2	OTHER_USE	1
1965	161	8	AbstractWell.java	setSeed	THIS	AbstractWell	UNKNOWN_AS	0	3	FIELD_USE	1
1966	111	14	AbstractRandomGenerator.java	nextBytes	i	int	0	0	1	NO_USE	1
1966	111	14	AbstractRandomGenerator.java	nextBytes	randInt	int	nextInt()	0	0	>>	0
1966	111	14	AbstractRandomGenerator.java	nextBytes	bytesOut	int	0	0	1	NO_USE	0
1966	111	14	AbstractRandomGenerator.java	nextBytes	bytes	byte[]	PARAM_AS	1	1	NO_USE	0
1966	111	14	AbstractRandomGenerator.java	nextBytes	THIS	AbstractRandomGenerator	UNKNOWN_AS	0	1	NO_USE	0
1967	115	14	AbstractRandomGenerator.java	nextBytes	i	int	0	0	1	NO_USE	0
1967	115	14	AbstractRandomGenerator.java	nextBytes	randInt	int	>>	0	0	NO_USE	0
1967	115	14	AbstractRandomGenerator.java	nextBytes	bytesOut	int	CAST	0	1	NO_USE	1
1967	115	14	AbstractRandomGenerator.java	nextBytes	bytes	byte[]	CAST	1	1	NO_USE	1
1967	115	14	AbstractRandomGenerator.java	nextBytes	THIS	AbstractRandomGenerator	UNKNOWN_AS	0	1	NO_USE	1
1968	157	8	AbstractRandomGenerator.java	nextInt	n	int	PARAM_AS	1	1	OTHER_USE	1
1968	157	8	AbstractRandomGenerator.java	nextInt	THIS	AbstractRandomGenerator	UNKNOWN_AS	0	0	NO_USE	0
1969	253	8	AbstractRandomGenerator.java	nextGaussian	THIS	AbstractRandomGenerator	UNKNOWN_AS	0	1	FIELD_USE	1
1970	266	8	AbstractRandomGenerator.java	nextGaussian	v1	double	-	0	0	NO_USE	0
1970	266	8	AbstractRandomGenerator.java	nextGaussian	v2	double	-	0	0	NO_USE	0
1970	266	8	AbstractRandomGenerator.java	nextGaussian	s	double	+	0	1	PARAM_USE	1
1970	266	8	AbstractRandomGenerator.java	nextGaussian	THIS	AbstractRandomGenerator	NAME	0	1	NO_USE	0
1971	178	8	RandomAdaptor.java	setSeed	seed	int	PARAM_AS	1	0	PARAM_USE	0
1971	178	8	RandomAdaptor.java	setSeed	THIS	RandomAdaptor	UNKNOWN_AS	0	1	FIELD_USE	1
1972	185	8	RandomAdaptor.java	setSeed	seed	int[]	PARAM_AS	1	0	PARAM_USE	0
1972	185	8	RandomAdaptor.java	setSeed	THIS	RandomAdaptor	UNKNOWN_AS	0	1	FIELD_USE	1
1973	193	8	RandomAdaptor.java	setSeed	seed	long	PARAM_AS	1	0	PARAM_USE	0
1973	193	8	RandomAdaptor.java	setSeed	THIS	RandomAdaptor	UNKNOWN_AS	0	1	FIELD_USE	1
1974	199	8	RandomDataImpl.java	nextHexString	len	int	PARAM_AS	1	1	OTHER_USE	1
1974	199	8	RandomDataImpl.java	nextHexString	THIS	RandomDataImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1975	225	12	RandomDataImpl.java	nextHexString	c	Integer	valueOf()	0	0	NO_USE	0
1975	225	12	RandomDataImpl.java	nextHexString	hex	String	toHexString()	0	1	+	1
1975	225	12	RandomDataImpl.java	nextHexString	i	int	0	0	0	NO_USE	0
1975	225	12	RandomDataImpl.java	nextHexString	ran	RandomGenerator	getRan()	0	0	NO_USE	0
1975	225	12	RandomDataImpl.java	nextHexString	outBuffer	StringBuilder	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1975	225	12	RandomDataImpl.java	nextHexString	randomBytes	byte[]	ARRAY_CREATION	0	0	NO_USE	0
1975	225	12	RandomDataImpl.java	nextHexString	len	int	PARAM_AS	1	1	NO_USE	0
1975	225	12	RandomDataImpl.java	nextHexString	THIS	RandomDataImpl	UNKNOWN_AS	0	0	NO_USE	0
1976	245	8	RandomDataImpl.java	nextInt	lower	int	PARAM_AS	1	1	OTHER_USE	1
1976	245	8	RandomDataImpl.java	nextInt	upper	int	PARAM_AS	1	1	OTHER_USE	1
1976	245	8	RandomDataImpl.java	nextInt	THIS	RandomDataImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1977	265	8	RandomDataImpl.java	nextLong	lower	long	PARAM_AS	1	1	OTHER_USE	1
1977	265	8	RandomDataImpl.java	nextLong	upper	long	PARAM_AS	1	1	OTHER_USE	1
1977	265	8	RandomDataImpl.java	nextLong	THIS	RandomDataImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1978	295	8	RandomDataImpl.java	nextSecureHexString	len	int	PARAM_AS	1	1	OTHER_USE	1
1978	295	8	RandomDataImpl.java	nextSecureHexString	THIS	RandomDataImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1979	334	16	RandomDataImpl.java	nextSecureHexString	c	Integer	valueOf()	0	0	NO_USE	0
1979	334	16	RandomDataImpl.java	nextSecureHexString	hex	String	toHexString()	0	1	+	1
1979	334	16	RandomDataImpl.java	nextSecureHexString	i	int	0	0	0	NO_USE	0
1979	334	16	RandomDataImpl.java	nextSecureHexString	randomBytes	byte[]	ARRAY_CREATION	0	0	NO_USE	0
1979	334	16	RandomDataImpl.java	nextSecureHexString	hash	byte[]	digest()	0	0	NO_USE	0
1979	334	16	RandomDataImpl.java	nextSecureHexString	iter	int	1	0	0	NO_USE	0
1979	334	16	RandomDataImpl.java	nextSecureHexString	secRan	SecureRandom	getSecRan()	0	0	NO_USE	0
1979	334	16	RandomDataImpl.java	nextSecureHexString	alg	MessageDigest	getInstance()	0	0	NO_USE	0
1979	334	16	RandomDataImpl.java	nextSecureHexString	numIter	int	+	0	0	NO_USE	0
1979	334	16	RandomDataImpl.java	nextSecureHexString	outBuffer	StringBuilder	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
1979	334	16	RandomDataImpl.java	nextSecureHexString	len	int	PARAM_AS	1	1	NO_USE	0
1979	334	16	RandomDataImpl.java	nextSecureHexString	THIS	RandomDataImpl	UNKNOWN_AS	0	0	NO_USE	0
1980	356	8	RandomDataImpl.java	nextSecureInt	lower	int	PARAM_AS	1	1	OTHER_USE	1
1980	356	8	RandomDataImpl.java	nextSecureInt	upper	int	PARAM_AS	1	1	OTHER_USE	1
1980	356	8	RandomDataImpl.java	nextSecureInt	THIS	RandomDataImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1981	377	8	RandomDataImpl.java	nextSecureLong	lower	long	PARAM_AS	1	1	OTHER_USE	1
1981	377	8	RandomDataImpl.java	nextSecureLong	upper	long	PARAM_AS	1	1	OTHER_USE	1
1981	377	8	RandomDataImpl.java	nextSecureLong	THIS	RandomDataImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1982	403	8	RandomDataImpl.java	nextPoisson	mean	double	PARAM_AS	1	2	OTHER_USE	1
1982	403	8	RandomDataImpl.java	nextPoisson	THIS	RandomDataImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1983	408	8	RandomDataImpl.java	nextPoisson	pivot	double	40.0d	0	1	NO_USE	1
1983	408	8	RandomDataImpl.java	nextPoisson	mean	double	PARAM_AS	1	2	-x	1
1983	408	8	RandomDataImpl.java	nextPoisson	THIS	RandomDataImpl	UNKNOWN_AS	0	0	CLALLER_USE	0
1984	418	16	RandomDataImpl.java	nextPoisson	generator	RandomGenerator	getRan()	0	0	NO_USE	0
1984	418	16	RandomDataImpl.java	nextPoisson	p	double	exp()	0	1	NO_USE	1
1984	418	16	RandomDataImpl.java	nextPoisson	n	long	0	0	0	x++	0
1984	418	16	RandomDataImpl.java	nextPoisson	r	double	*	0	1	NO_USE	1
1984	418	16	RandomDataImpl.java	nextPoisson	rnd	double	nextDouble()	0	0	NO_USE	0
1984	418	16	RandomDataImpl.java	nextPoisson	pivot	double	40.0d	0	1	NO_USE	0
1984	418	16	RandomDataImpl.java	nextPoisson	mean	double	PARAM_AS	1	2	NO_USE	0
1984	418	16	RandomDataImpl.java	nextPoisson	THIS	RandomDataImpl	UNKNOWN_AS	0	0	NO_USE	0
1985	450	16	RandomDataImpl.java	nextPoisson	u	double	nextUniform()	0	2	>	1
1985	450	16	RandomDataImpl.java	nextPoisson	lambda	double	floor()	0	2	+	0
1985	450	16	RandomDataImpl.java	nextPoisson	lambdaFractional	double	-	0	0	NO_USE	0
1985	450	16	RandomDataImpl.java	nextPoisson	logLambda	double	log()	0	1	NO_USE	0
1985	450	16	RandomDataImpl.java	nextPoisson	logLambdaFactorial	double	factorialLog()	0	1	NO_USE	0
1985	450	16	RandomDataImpl.java	nextPoisson	y2	long	OTHERS	0	0	NO_USE	0
1985	450	16	RandomDataImpl.java	nextPoisson	delta	double	sqrt()	0	1	>	0
1985	450	16	RandomDataImpl.java	nextPoisson	halfDelta	double	/	0	0	+	0
1985	450	16	RandomDataImpl.java	nextPoisson	twolpd	double	+	0	0	/	0
1985	450	16	RandomDataImpl.java	nextPoisson	a1	double	*	0	0	NO_USE	0
1985	450	16	RandomDataImpl.java	nextPoisson	a2	double	*	0	0	NO_USE	0
1985	450	16	RandomDataImpl.java	nextPoisson	aSum	double	+	0	0	NO_USE	0
1985	450	16	RandomDataImpl.java	nextPoisson	p1	double	/	0	2	+	1
1985	450	16	RandomDataImpl.java	nextPoisson	p2	double	/	0	1	+	0
1985	450	16	RandomDataImpl.java	nextPoisson	c1	double	/	0	0	+	0
1985	450	16	RandomDataImpl.java	nextPoisson	x	double	0	0	2	>	0
1985	450	16	RandomDataImpl.java	nextPoisson	y	double	0	0	2	NO_USE	0
1985	450	16	RandomDataImpl.java	nextPoisson	v	double	0	0	4	NO_USE	0
1985	450	16	RandomDataImpl.java	nextPoisson	a	int	0	0	1	NO_USE	0
1985	450	16	RandomDataImpl.java	nextPoisson	t	double	0	0	1	NO_USE	0
1985	450	16	RandomDataImpl.java	nextPoisson	qr	double	0	0	1	NO_USE	0
1985	450	16	RandomDataImpl.java	nextPoisson	qa	double	0	0	1	NO_USE	0
1985	450	16	RandomDataImpl.java	nextPoisson	pivot	double	40.0d	0	1	NO_USE	0
1985	450	16	RandomDataImpl.java	nextPoisson	mean	double	PARAM_AS	1	2	NO_USE	0
1985	450	16	RandomDataImpl.java	nextPoisson	THIS	RandomDataImpl	UNKNOWN_AS	0	0	CLALLER_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	n	double	nextGaussian()	0	0	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	u	double	nextUniform()	0	2	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	lambda	double	floor()	0	2	NO_USE	1
1986	453	20	RandomDataImpl.java	nextPoisson	lambdaFractional	double	-	0	0	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	logLambda	double	log()	0	1	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	logLambdaFactorial	double	factorialLog()	0	1	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	y2	long	OTHERS	0	0	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	delta	double	sqrt()	0	1	NO_USE	1
1986	453	20	RandomDataImpl.java	nextPoisson	halfDelta	double	/	0	0	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	twolpd	double	+	0	0	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	a1	double	*	0	0	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	a2	double	*	0	0	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	aSum	double	+	0	0	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	p1	double	/	0	2	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	p2	double	/	0	1	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	c1	double	/	0	0	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	x	double	-	0	2	NO_USE	1
1986	453	20	RandomDataImpl.java	nextPoisson	y	double	0	0	2	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	v	double	0	0	4	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	a	int	0	0	1	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	t	double	0	0	1	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	qr	double	0	0	1	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	qa	double	0	0	1	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	pivot	double	40.0d	0	1	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	mean	double	PARAM_AS	1	2	NO_USE	0
1986	453	20	RandomDataImpl.java	nextPoisson	THIS	RandomDataImpl	UNKNOWN_AS	0	0	NO_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	u	double	nextUniform()	0	2	NO_USE	1
1987	460	20	RandomDataImpl.java	nextPoisson	lambda	double	floor()	0	2	OTHER_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	lambdaFractional	double	-	0	0	NO_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	logLambda	double	log()	0	1	NO_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	logLambdaFactorial	double	factorialLog()	0	1	NO_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	y2	long	OTHERS	0	0	NO_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	delta	double	sqrt()	0	1	+	0
1987	460	20	RandomDataImpl.java	nextPoisson	halfDelta	double	/	0	0	NO_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	twolpd	double	+	0	0	/	0
1987	460	20	RandomDataImpl.java	nextPoisson	a1	double	*	0	0	NO_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	a2	double	*	0	0	NO_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	aSum	double	+	0	0	NO_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	p1	double	/	0	2	NO_USE	1
1987	460	20	RandomDataImpl.java	nextPoisson	p2	double	/	0	1	NO_USE	1
1987	460	20	RandomDataImpl.java	nextPoisson	c1	double	/	0	0	NO_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	x	double	-	0	2	PARAM_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	y	double	OTHERS	0	2	NO_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	v	double	+	0	4	NO_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	a	int	0	0	1	NO_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	t	double	0	0	1	NO_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	qr	double	0	0	1	NO_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	qa	double	0	0	1	NO_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	pivot	double	40.0d	0	1	NO_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	mean	double	PARAM_AS	1	2	NO_USE	0
1987	460	20	RandomDataImpl.java	nextPoisson	THIS	RandomDataImpl	UNKNOWN_AS	0	0	CLALLER_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	u	double	nextUniform()	0	2	NO_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	lambda	double	floor()	0	2	+	0
1988	471	16	RandomDataImpl.java	nextPoisson	lambdaFractional	double	-	0	0	NO_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	logLambda	double	log()	0	1	NO_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	logLambdaFactorial	double	factorialLog()	0	1	NO_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	y2	long	OTHERS	0	0	NO_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	delta	double	sqrt()	0	1	NO_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	halfDelta	double	/	0	0	NO_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	twolpd	double	+	0	0	NO_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	a1	double	*	0	0	NO_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	a2	double	*	0	0	NO_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	aSum	double	+	0	0	NO_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	p1	double	/	0	2	NO_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	p2	double	/	0	1	NO_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	c1	double	/	0	0	NO_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	x	double	+	0	2	NO_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	y	double	ceil()	0	2	+	0
1988	471	16	RandomDataImpl.java	nextPoisson	v	double	-	0	4	NO_USE	1
1988	471	16	RandomDataImpl.java	nextPoisson	a	int	OTHERS	0	1	NO_USE	1
1988	471	16	RandomDataImpl.java	nextPoisson	t	double	/	0	1	NO_USE	1
1988	471	16	RandomDataImpl.java	nextPoisson	qr	double	0	0	1	NO_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	qa	double	0	0	1	NO_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	pivot	double	40.0d	0	1	NO_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	mean	double	PARAM_AS	1	2	NO_USE	0
1988	471	16	RandomDataImpl.java	nextPoisson	THIS	RandomDataImpl	UNKNOWN_AS	0	0	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	u	double	nextUniform()	0	2	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	lambda	double	floor()	0	2	+	0
1989	477	16	RandomDataImpl.java	nextPoisson	lambdaFractional	double	-	0	0	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	logLambda	double	log()	0	1	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	logLambdaFactorial	double	factorialLog()	0	1	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	y2	long	OTHERS	0	0	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	delta	double	sqrt()	0	1	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	halfDelta	double	/	0	0	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	twolpd	double	+	0	0	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	a1	double	*	0	0	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	a2	double	*	0	0	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	aSum	double	+	0	0	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	p1	double	/	0	2	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	p2	double	/	0	1	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	c1	double	/	0	0	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	x	double	+	0	2	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	y	double	+	0	2	+	0
1989	477	16	RandomDataImpl.java	nextPoisson	v	double	-	0	4	NO_USE	1
1989	477	16	RandomDataImpl.java	nextPoisson	a	int	OTHERS	0	1	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	t	double	/	0	1	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	qr	double	*	0	1	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	qa	double	-	0	1	NO_USE	1
1989	477	16	RandomDataImpl.java	nextPoisson	pivot	double	40.0d	0	1	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	mean	double	PARAM_AS	1	2	NO_USE	0
1989	477	16	RandomDataImpl.java	nextPoisson	THIS	RandomDataImpl	UNKNOWN_AS	0	0	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	u	double	nextUniform()	0	2	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	lambda	double	floor()	0	2	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	lambdaFractional	double	-	0	0	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	logLambda	double	log()	0	1	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	logLambdaFactorial	double	factorialLog()	0	1	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	y2	long	OTHERS	0	0	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	delta	double	sqrt()	0	1	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	halfDelta	double	/	0	0	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	twolpd	double	+	0	0	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	a1	double	*	0	0	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	a2	double	*	0	0	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	aSum	double	+	0	0	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	p1	double	/	0	2	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	p2	double	/	0	1	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	c1	double	/	0	0	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	x	double	+	0	2	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	y	double	+	0	2	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	v	double	-	0	4	NO_USE	1
1990	481	16	RandomDataImpl.java	nextPoisson	a	int	OTHERS	0	1	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	t	double	/	0	1	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	qr	double	*	0	1	NO_USE	1
1990	481	16	RandomDataImpl.java	nextPoisson	qa	double	-	0	1	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	pivot	double	40.0d	0	1	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	mean	double	PARAM_AS	1	2	NO_USE	0
1990	481	16	RandomDataImpl.java	nextPoisson	THIS	RandomDataImpl	UNKNOWN_AS	0	0	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	u	double	nextUniform()	0	2	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	lambda	double	floor()	0	2	+	1
1991	484	16	RandomDataImpl.java	nextPoisson	lambdaFractional	double	-	0	0	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	logLambda	double	log()	0	1	NO_USE	1
1991	484	16	RandomDataImpl.java	nextPoisson	logLambdaFactorial	double	factorialLog()	0	1	NO_USE	1
1991	484	16	RandomDataImpl.java	nextPoisson	y2	long	OTHERS	0	0	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	delta	double	sqrt()	0	1	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	halfDelta	double	/	0	0	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	twolpd	double	+	0	0	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	a1	double	*	0	0	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	a2	double	*	0	0	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	aSum	double	+	0	0	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	p1	double	/	0	2	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	p2	double	/	0	1	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	c1	double	/	0	0	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	x	double	+	0	2	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	y	double	+	0	2	+	1
1991	484	16	RandomDataImpl.java	nextPoisson	v	double	-	0	4	NO_USE	1
1991	484	16	RandomDataImpl.java	nextPoisson	a	int	OTHERS	0	1	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	t	double	/	0	1	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	qr	double	*	0	1	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	qa	double	-	0	1	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	pivot	double	40.0d	0	1	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	mean	double	PARAM_AS	1	2	NO_USE	0
1991	484	16	RandomDataImpl.java	nextPoisson	THIS	RandomDataImpl	UNKNOWN_AS	0	0	NO_USE	0
1992	506	8	RandomDataImpl.java	nextGaussian	mu	double	PARAM_AS	1	0	NO_USE	0
1992	506	8	RandomDataImpl.java	nextGaussian	sigma	double	PARAM_AS	1	1	OTHER_USE	1
1992	506	8	RandomDataImpl.java	nextGaussian	THIS	RandomDataImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1993	528	8	RandomDataImpl.java	nextExponential	mean	double	PARAM_AS	1	1	OTHER_USE	1
1993	528	8	RandomDataImpl.java	nextExponential	THIS	RandomDataImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1994	546	8	RandomDataImpl.java	nextExponential	a	double	ARRAY_ACCESS	0	0	+	0
1994	546	8	RandomDataImpl.java	nextExponential	u	double	-	0	1	+	1
1994	546	8	RandomDataImpl.java	nextExponential	mean	double	PARAM_AS	1	1	*	0
1994	546	8	RandomDataImpl.java	nextExponential	THIS	RandomDataImpl	UNKNOWN_AS	0	0	NO_USE	0
1995	560	12	RandomDataImpl.java	nextExponential	a	double	ARRAY_ACCESS	0	0	NO_USE	0
1995	560	12	RandomDataImpl.java	nextExponential	u	double	-	0	1	NO_USE	0
1995	560	12	RandomDataImpl.java	nextExponential	i	int	0	0	0	NO_USE	0
1995	560	12	RandomDataImpl.java	nextExponential	u2	double	nextUniform()	0	1	OTHER_USE	1
1995	560	12	RandomDataImpl.java	nextExponential	umin	double	NAME	0	1	NO_USE	1
1995	560	12	RandomDataImpl.java	nextExponential	mean	double	PARAM_AS	1	1	NO_USE	0
1995	560	12	RandomDataImpl.java	nextExponential	THIS	RandomDataImpl	UNKNOWN_AS	0	0	NO_USE	0
1996	588	8	RandomDataImpl.java	nextUniform	lower	double	PARAM_AS	1	1	OTHER_USE	1
1996	588	8	RandomDataImpl.java	nextUniform	upper	double	PARAM_AS	1	1	OTHER_USE	1
1996	588	8	RandomDataImpl.java	nextUniform	THIS	RandomDataImpl	UNKNOWN_AS	0	0	FIELD_USE	0
1997	777	8	RandomDataImpl.java	getRan	THIS	RandomDataImpl	UNKNOWN_AS	0	1	FIELD_USE	1
1998	793	8	RandomDataImpl.java	getSecRan	THIS	RandomDataImpl	UNKNOWN_AS	0	1	FIELD_USE	1
1999	810	8	RandomDataImpl.java	reSeed	seed	long	PARAM_AS	1	0	NO_USE	0
1999	810	8	RandomDataImpl.java	reSeed	THIS	RandomDataImpl	UNKNOWN_AS	0	1	NO_USE	1
2000	824	8	RandomDataImpl.java	reSeedSecure	THIS	RandomDataImpl	UNKNOWN_AS	0	1	NO_USE	1
2001	840	8	RandomDataImpl.java	reSeedSecure	seed	long	PARAM_AS	1	0	NO_USE	0
2001	840	8	RandomDataImpl.java	reSeedSecure	THIS	RandomDataImpl	UNKNOWN_AS	0	1	NO_USE	1
2002	851	8	RandomDataImpl.java	reSeed	THIS	RandomDataImpl	UNKNOWN_AS	0	1	NO_USE	1
2003	913	8	RandomDataImpl.java	nextPermutation	n	int	PARAM_AS	1	1	OTHER_USE	1
2003	913	8	RandomDataImpl.java	nextPermutation	k	int	PARAM_AS	1	2	OTHER_USE	1
2003	913	8	RandomDataImpl.java	nextPermutation	THIS	RandomDataImpl	UNKNOWN_AS	0	0	FIELD_USE	0
2004	917	8	RandomDataImpl.java	nextPermutation	n	int	PARAM_AS	1	1	NO_USE	0
2004	917	8	RandomDataImpl.java	nextPermutation	k	int	PARAM_AS	1	2	OTHER_USE	1
2004	917	8	RandomDataImpl.java	nextPermutation	THIS	RandomDataImpl	UNKNOWN_AS	0	0	FIELD_USE	0
2005	952	8	RandomDataImpl.java	nextSample	len	int	size()	0	1	OTHER_USE	1
2005	952	8	RandomDataImpl.java	nextSample	c	Collection<?>	PARAM_AS	1	0	NO_USE	0
2005	952	8	RandomDataImpl.java	nextSample	k	int	PARAM_AS	1	2	OTHER_USE	1
2005	952	8	RandomDataImpl.java	nextSample	THIS	RandomDataImpl	UNKNOWN_AS	0	0	FIELD_USE	0
2006	956	8	RandomDataImpl.java	nextSample	len	int	size()	0	1	NO_USE	0
2006	956	8	RandomDataImpl.java	nextSample	c	Collection<?>	PARAM_AS	1	0	NO_USE	0
2006	956	8	RandomDataImpl.java	nextSample	k	int	PARAM_AS	1	2	OTHER_USE	1
2006	956	8	RandomDataImpl.java	nextSample	THIS	RandomDataImpl	UNKNOWN_AS	0	0	FIELD_USE	0
2007	995	8	RandomDataImpl.java	nextInversionDeviate	target	double	nextUniform()	0	0	NO_USE	0
2007	995	8	RandomDataImpl.java	nextInversionDeviate	glb	int	inverseCumulativeProbability()	0	1	RET_USE	1
2007	995	8	RandomDataImpl.java	nextInversionDeviate	distribution	IntegerDistribution	PARAM_AS	1	1	NO_USE	1
2007	995	8	RandomDataImpl.java	nextInversionDeviate	THIS	RandomDataImpl	UNKNOWN_AS	0	0	NO_USE	0
2008	1016	12	RandomDataImpl.java	shuffle	i	int	-	0	1	PARAM_USE	1
2008	1016	12	RandomDataImpl.java	shuffle	target	int	0	0	0	NO_USE	0
2008	1016	12	RandomDataImpl.java	shuffle	list	int[]	PARAM_AS	1	0	NO_USE	0
2008	1016	12	RandomDataImpl.java	shuffle	end	int	PARAM_AS	1	0	NO_USE	0
2008	1016	12	RandomDataImpl.java	shuffle	THIS	RandomDataImpl	UNKNOWN_AS	0	0	CLALLER_USE	0
2009	163	8	MersenneTwister.java	setSeed	seed	int[]	PARAM_AS	1	2	NO_USE	1
2009	163	8	MersenneTwister.java	setSeed	THIS	MersenneTwister	UNKNOWN_AS	0	1	CLALLER_USE	0
2010	178	12	MersenneTwister.java	setSeed	l0	long	|	0	0	NO_USE	0
2010	178	12	MersenneTwister.java	setSeed	l1	long	|	0	0	NO_USE	0
2010	178	12	MersenneTwister.java	setSeed	l	long	+	0	0	NO_USE	0
2010	178	12	MersenneTwister.java	setSeed	k	int	max()	0	0	NO_USE	0
2010	178	12	MersenneTwister.java	setSeed	i	int	CAST	0	2	NO_USE	1
2010	178	12	MersenneTwister.java	setSeed	j	int	0	0	1	NO_USE	0
2010	178	12	MersenneTwister.java	setSeed	seed	int[]	PARAM_AS	1	2	NO_USE	0
2010	178	12	MersenneTwister.java	setSeed	THIS	MersenneTwister	CAST	0	1	FIELD_USE	0
2011	182	12	MersenneTwister.java	setSeed	l0	long	|	0	0	NO_USE	0
2011	182	12	MersenneTwister.java	setSeed	l1	long	|	0	0	NO_USE	0
2011	182	12	MersenneTwister.java	setSeed	l	long	+	0	0	NO_USE	0
2011	182	12	MersenneTwister.java	setSeed	k	int	max()	0	0	NO_USE	0
2011	182	12	MersenneTwister.java	setSeed	i	int	1	0	2	NO_USE	0
2011	182	12	MersenneTwister.java	setSeed	j	int	0	0	1	NO_USE	1
2011	182	12	MersenneTwister.java	setSeed	seed	int[]	PARAM_AS	1	2	NO_USE	1
2011	182	12	MersenneTwister.java	setSeed	THIS	MersenneTwister	ARRAY_ACCESS	0	1	NO_USE	1
2012	193	12	MersenneTwister.java	setSeed	l0	long	|	0	0	NO_USE	0
2012	193	12	MersenneTwister.java	setSeed	l1	long	|	0	0	NO_USE	0
2012	193	12	MersenneTwister.java	setSeed	l	long	-	0	0	NO_USE	0
2012	193	12	MersenneTwister.java	setSeed	k	int	-	0	0	NO_USE	0
2012	193	12	MersenneTwister.java	setSeed	i	int	CAST	0	2	NO_USE	1
2012	193	12	MersenneTwister.java	setSeed	j	int	0	0	1	NO_USE	0
2012	193	12	MersenneTwister.java	setSeed	seed	int[]	PARAM_AS	1	2	NO_USE	0
2012	193	12	MersenneTwister.java	setSeed	THIS	MersenneTwister	CAST	0	1	FIELD_USE	0
2013	227	8	MersenneTwister.java	next	y	int	UNKNOWN_AS	0	0	>>>	0
2013	227	8	MersenneTwister.java	next	bits	int	PARAM_AS	1	0	NO_USE	0
2013	227	8	MersenneTwister.java	next	THIS	MersenneTwister	UNKNOWN_AS	0	1	FIELD_USE	1
2014	99	8	BitsStreamGenerator.java	nextGaussian	random	double	UNKNOWN_AS	0	0	NO_USE	0
2014	99	8	BitsStreamGenerator.java	nextGaussian	THIS	BitsStreamGenerator	UNKNOWN_AS	0	1	CLALLER_USE	1
2015	125	8	BitsStreamGenerator.java	nextInt	n	int	PARAM_AS	1	2	OTHER_USE	1
2015	125	8	BitsStreamGenerator.java	nextInt	THIS	BitsStreamGenerator	UNKNOWN_AS	0	0	NO_USE	0
2016	139	12	BitsStreamGenerator.java	nextInt	random	int	&	0	1	RET_USE	1
2016	139	12	BitsStreamGenerator.java	nextInt	mask	int	>>	0	0	NO_USE	0
2016	139	12	BitsStreamGenerator.java	nextInt	n	int	PARAM_AS	1	2	NO_USE	1
2016	139	12	BitsStreamGenerator.java	nextInt	THIS	BitsStreamGenerator	UNKNOWN_AS	0	0	NO_USE	0
2017	56	4	UncorrelatedRandomVectorGenerator.java	UncorrelatedRandomVectorGenerator	mean	double[]	PARAM_AS	1	1	OTHER_USE	1
2017	56	4	UncorrelatedRandomVectorGenerator.java	UncorrelatedRandomVectorGenerator	standardDeviation	double[]	PARAM_AS	1	1	OTHER_USE	1
2017	56	4	UncorrelatedRandomVectorGenerator.java	UncorrelatedRandomVectorGenerator	generator	NormalizedRandomGenerator	PARAM_AS	1	0	NO_USE	0
2017	56	4	UncorrelatedRandomVectorGenerator.java	UncorrelatedRandomVectorGenerator	THIS	UncorrelatedRandomVectorGenerator	UNKNOWN_AS	0	2	FIELD_USE	1
2018	251	8	ValueServer.java	resetReplayFile	THIS	ValueServer	UNKNOWN_AS	0	1	FIELD_USE	1
2019	268	8	ValueServer.java	closeReplayFile	THIS	ValueServer	UNKNOWN_AS	0	1	FIELD_USE	1
2020	315	8	ValueServer.java	getNextDigest	THIS	ValueServer	UNKNOWN_AS	0	2	FIELD_USE	1
2021	342	8	ValueServer.java	getNextReplay	str	String	NULL	0	2	NO_USE	0
2021	342	8	ValueServer.java	getNextReplay	THIS	ValueServer	UNKNOWN_AS	0	3	CLALLER_USE	1
2022	345	8	ValueServer.java	getNextReplay	str	String	readLine()	0	2	NO_USE	1
2022	345	8	ValueServer.java	getNextReplay	THIS	ValueServer	UNKNOWN_AS	0	3	CLALLER_USE	1
2023	349	12	ValueServer.java	getNextReplay	str	String	readLine()	0	2	NO_USE	1
2023	349	12	ValueServer.java	getNextReplay	THIS	ValueServer	UNKNOWN_AS	0	3	FIELD_USE	1
2024	97	8	ElitisticListPopulation.java	setElitismRate	elitismRate	double	PARAM_AS	1	2	NO_USE	1
2024	97	8	ElitisticListPopulation.java	setElitismRate	THIS	ElitisticListPopulation	UNKNOWN_AS	0	0	NO_USE	0
2025	73	8	TournamentSelection.java	tournament	population	ListPopulation	PARAM_AS	1	1	NO_USE	1
2025	73	8	TournamentSelection.java	tournament	THIS	TournamentSelection	UNKNOWN_AS	0	1	NO_USE	1
2026	41	8	RandomKeyMutation.java	mutate	original	Chromosome	PARAM_AS	1	1	CLALLER_USE	1
2026	41	8	RandomKeyMutation.java	mutate	THIS	RandomKeyMutation	UNKNOWN_AS	0	0	FIELD_USE	0
2027	45	8	Chromosome.java	getFitness	THIS	Chromosome	UNKNOWN_AS	0	1	FIELD_USE	1
2028	91	12	Chromosome.java	findSameChromosome	population	Population	PARAM_AS	1	0	NO_USE	0
2028	91	12	Chromosome.java	findSameChromosome	THIS	Chromosome	UNKNOWN_AS	0	1	NO_USE	1
2029	107	8	Chromosome.java	searchForFitnessUpdate	sameChromosome	Chromosome	findSameChromosome()	0	1	CLALLER_USE	1
2029	107	8	Chromosome.java	searchForFitnessUpdate	population	Population	PARAM_AS	1	0	NO_USE	0
2029	107	8	Chromosome.java	searchForFitnessUpdate	THIS	Chromosome	UNKNOWN_AS	0	0	NO_USE	0
2030	49	8	ListPopulation.java	ListPopulation	chromosomes	List<Chromosome>	PARAM_AS	1	1	CLALLER_USE	1
2030	49	8	ListPopulation.java	ListPopulation	populationLimit	int	PARAM_AS	1	2	OTHER_USE	1
2030	49	8	ListPopulation.java	ListPopulation	THIS	ListPopulation	UNKNOWN_AS	0	0	FIELD_USE	0
2031	53	8	ListPopulation.java	ListPopulation	chromosomes	List<Chromosome>	PARAM_AS	1	1	NO_USE	0
2031	53	8	ListPopulation.java	ListPopulation	populationLimit	int	PARAM_AS	1	2	OTHER_USE	1
2031	53	8	ListPopulation.java	ListPopulation	THIS	ListPopulation	UNKNOWN_AS	0	0	FIELD_USE	0
2032	68	8	ListPopulation.java	ListPopulation	populationLimit	int	PARAM_AS	1	1	OTHER_USE	1
2032	68	8	ListPopulation.java	ListPopulation	THIS	ListPopulation	UNKNOWN_AS	0	0	FIELD_USE	0
2033	107	12	ListPopulation.java	getFittestChromosome	bestChromosome	Chromosome	get()	0	1	NO_USE	1
2033	107	12	ListPopulation.java	getFittestChromosome	THIS	ListPopulation	UNKNOWN_AS	0	0	NO_USE	1
2034	69	8	GeneticAlgorithm.java	GeneticAlgorithm	crossoverPolicy	CrossoverPolicy	PARAM_AS	1	0	NO_USE	0
2034	69	8	GeneticAlgorithm.java	GeneticAlgorithm	crossoverRate	double	PARAM_AS	1	2	NO_USE	1
2034	69	8	GeneticAlgorithm.java	GeneticAlgorithm	mutationPolicy	MutationPolicy	PARAM_AS	1	0	NO_USE	0
2034	69	8	GeneticAlgorithm.java	GeneticAlgorithm	mutationRate	double	PARAM_AS	1	2	NO_USE	0
2034	69	8	GeneticAlgorithm.java	GeneticAlgorithm	selectionPolicy	SelectionPolicy	PARAM_AS	1	0	NO_USE	0
2034	69	8	GeneticAlgorithm.java	GeneticAlgorithm	THIS	GeneticAlgorithm	UNKNOWN_AS	0	0	NO_USE	0
2035	72	8	GeneticAlgorithm.java	GeneticAlgorithm	crossoverPolicy	CrossoverPolicy	PARAM_AS	1	0	NO_USE	0
2035	72	8	GeneticAlgorithm.java	GeneticAlgorithm	crossoverRate	double	PARAM_AS	1	2	NO_USE	0
2035	72	8	GeneticAlgorithm.java	GeneticAlgorithm	mutationPolicy	MutationPolicy	PARAM_AS	1	0	NO_USE	0
2035	72	8	GeneticAlgorithm.java	GeneticAlgorithm	mutationRate	double	PARAM_AS	1	2	NO_USE	1
2035	72	8	GeneticAlgorithm.java	GeneticAlgorithm	selectionPolicy	SelectionPolicy	PARAM_AS	1	0	NO_USE	0
2035	72	8	GeneticAlgorithm.java	GeneticAlgorithm	THIS	GeneticAlgorithm	UNKNOWN_AS	0	0	NO_USE	0
2036	152	12	GeneticAlgorithm.java	nextGeneration	pair	ChromosomePair	select()	0	0	CLALLER_USE	0
2036	152	12	GeneticAlgorithm.java	nextGeneration	nextGeneration	Population	nextGeneration()	0	2	NO_USE	0
2036	152	12	GeneticAlgorithm.java	nextGeneration	randGen	RandomGenerator	getRandomGenerator()	0	2	NO_USE	1
2036	152	12	GeneticAlgorithm.java	nextGeneration	current	Population	PARAM_AS	1	0	NO_USE	0
2036	152	12	GeneticAlgorithm.java	nextGeneration	THIS	GeneticAlgorithm	UNKNOWN_AS	0	2	CLALLER_USE	1
2037	158	12	GeneticAlgorithm.java	nextGeneration	pair	ChromosomePair	crossover()	0	0	CLALLER_USE	0
2037	158	12	GeneticAlgorithm.java	nextGeneration	nextGeneration	Population	nextGeneration()	0	2	NO_USE	0
2037	158	12	GeneticAlgorithm.java	nextGeneration	randGen	RandomGenerator	getRandomGenerator()	0	2	NO_USE	1
2037	158	12	GeneticAlgorithm.java	nextGeneration	current	Population	PARAM_AS	1	0	NO_USE	0
2037	158	12	GeneticAlgorithm.java	nextGeneration	THIS	GeneticAlgorithm	UNKNOWN_AS	0	2	CLALLER_USE	1
2038	168	12	GeneticAlgorithm.java	nextGeneration	pair	ChromosomePair	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
2038	168	12	GeneticAlgorithm.java	nextGeneration	nextGeneration	Population	nextGeneration()	0	2	CLALLER_USE	1
2038	168	12	GeneticAlgorithm.java	nextGeneration	randGen	RandomGenerator	getRandomGenerator()	0	2	NO_USE	0
2038	168	12	GeneticAlgorithm.java	nextGeneration	current	Population	PARAM_AS	1	0	NO_USE	0
2038	168	12	GeneticAlgorithm.java	nextGeneration	THIS	GeneticAlgorithm	UNKNOWN_AS	0	2	NO_USE	0
2039	42	8	FixedGenerationCount.java	FixedGenerationCount	maxGenerations	int	PARAM_AS	1	1	NO_USE	1
2039	42	8	FixedGenerationCount.java	FixedGenerationCount	THIS	FixedGenerationCount	UNKNOWN_AS	0	0	NO_USE	0
2040	57	8	FixedGenerationCount.java	isSatisfied	population	Population	PARAM_AS	1	0	NO_USE	0
2040	57	8	FixedGenerationCount.java	isSatisfied	THIS	FixedGenerationCount	UNKNOWN_AS	0	2	FIELD_USE	1
2041	55	12	BinaryChromosome.java	checkValidity	chromosomeRepresentation	List<Integer>	PARAM_AS	1	0	NO_USE	0
2041	55	12	BinaryChromosome.java	checkValidity	THIS	BinaryChromosome	UNKNOWN_AS	0	0	FIELD_USE	1
2042	82	8	BinaryChromosome.java	isSame	another	Chromosome	PARAM_AS	1	1	NO_USE	1
2042	82	8	BinaryChromosome.java	isSame	THIS	BinaryChromosome	UNKNOWN_AS	0	2	NO_USE	0
2043	87	8	BinaryChromosome.java	isSame	anotherBc	BinaryChromosome	CAST	0	2	NO_USE	1
2043	87	8	BinaryChromosome.java	isSame	another	Chromosome	PARAM_AS	1	1	NO_USE	0
2043	87	8	BinaryChromosome.java	isSame	THIS	BinaryChromosome	UNKNOWN_AS	0	2	NO_USE	1
2044	92	12	BinaryChromosome.java	isSame	i	int	0	0	2	NO_USE	1
2044	92	12	BinaryChromosome.java	isSame	anotherBc	BinaryChromosome	CAST	0	2	NO_USE	1
2044	92	12	BinaryChromosome.java	isSame	another	Chromosome	PARAM_AS	1	1	NO_USE	0
2044	92	12	BinaryChromosome.java	isSame	THIS	BinaryChromosome	UNKNOWN_AS	0	2	NO_USE	1
2045	123	8	RandomKey.java	decodeGeneric	l	int	size()	0	1	PARAM_USE	1
2045	123	8	RandomKey.java	decodeGeneric	sequence	List<S>	PARAM_AS	1	0	NO_USE	0
2045	123	8	RandomKey.java	decodeGeneric	representation	List<Double>	PARAM_AS	1	2	CLALLER_USE	1
2045	123	8	RandomKey.java	decodeGeneric	sortedRepr	List<Double>	PARAM_AS	1	1	NO_USE	0
2045	123	8	RandomKey.java	decodeGeneric	THIS	RandomKey	UNKNOWN_AS	0	0	NO_USE	0
2046	126	8	RandomKey.java	decodeGeneric	l	int	size()	0	1	NO_USE	0
2046	126	8	RandomKey.java	decodeGeneric	sequence	List<S>	PARAM_AS	1	0	NO_USE	0
2046	126	8	RandomKey.java	decodeGeneric	representation	List<Double>	PARAM_AS	1	2	CLALLER_USE	1
2046	126	8	RandomKey.java	decodeGeneric	sortedRepr	List<Double>	PARAM_AS	1	1	CLALLER_USE	1
2046	126	8	RandomKey.java	decodeGeneric	THIS	RandomKey	UNKNOWN_AS	0	0	NO_USE	0
2047	152	8	RandomKey.java	isSame	another	Chromosome	PARAM_AS	1	1	NO_USE	1
2047	152	8	RandomKey.java	isSame	THIS	RandomKey	UNKNOWN_AS	0	1	NO_USE	0
2048	157	8	RandomKey.java	isSame	anotherRk	RandomKey<?>	CAST	0	1	NO_USE	1
2048	157	8	RandomKey.java	isSame	another	Chromosome	PARAM_AS	1	1	NO_USE	0
2048	157	8	RandomKey.java	isSame	THIS	RandomKey	UNKNOWN_AS	0	1	NO_USE	1
2049	167	12	RandomKey.java	isSame	i	int	0	0	2	NO_USE	1
2049	167	12	RandomKey.java	isSame	anotherRk	RandomKey<?>	CAST	0	1	NO_USE	0
2049	167	12	RandomKey.java	isSame	thisPerm	List<Integer>	FIELD_ACCESS	0	1	NO_USE	1
2049	167	12	RandomKey.java	isSame	anotherPerm	List<Integer>	NAME	0	1	NO_USE	1
2049	167	12	RandomKey.java	isSame	another	Chromosome	PARAM_AS	1	1	NO_USE	0
2049	167	12	RandomKey.java	isSame	THIS	RandomKey	UNKNOWN_AS	0	1	NO_USE	0
2050	181	12	RandomKey.java	checkValidity	chromosomeRepresentation	java.util.List<Double>	PARAM_AS	1	0	NO_USE	0
2050	181	12	RandomKey.java	checkValidity	THIS	RandomKey	UNKNOWN_AS	0	0	FIELD_USE	1
2051	255	8	RandomKey.java	inducedPermutation	originalData	List<S>	PARAM_AS	1	1	NO_USE	1
2051	255	8	RandomKey.java	inducedPermutation	permutedData	List<S>	PARAM_AS	1	1	NO_USE	1
2051	255	8	RandomKey.java	inducedPermutation	THIS	RandomKey	UNKNOWN_AS	0	0	NO_USE	0
2052	265	12	RandomKey.java	inducedPermutation	index	int	indexOf()	0	1	NO_USE	1
2052	265	12	RandomKey.java	inducedPermutation	i	int	0	0	0	NO_USE	0
2052	265	12	RandomKey.java	inducedPermutation	l	int	size()	0	0	NO_USE	0
2052	265	12	RandomKey.java	inducedPermutation	origDataCopy	List<S>	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2052	265	12	RandomKey.java	inducedPermutation	res	Double[]	ARRAY_CREATION	0	0	NO_USE	0
2052	265	12	RandomKey.java	inducedPermutation	originalData	List<S>	PARAM_AS	1	1	NO_USE	0
2052	265	12	RandomKey.java	inducedPermutation	permutedData	List<S>	PARAM_AS	1	1	NO_USE	0
2052	265	12	RandomKey.java	inducedPermutation	THIS	RandomKey	UNKNOWN_AS	0	0	NO_USE	0
2053	36	8	BinaryMutation.java	mutate	original	Chromosome	PARAM_AS	1	1	NO_USE	1
2053	36	8	BinaryMutation.java	mutate	THIS	BinaryMutation	UNKNOWN_AS	0	0	NO_USE	0
2054	71	8	OnePointCrossover.java	crossover	first	Chromosome	PARAM_AS	1	1	NO_USE	1
2054	71	8	OnePointCrossover.java	crossover	second	Chromosome	PARAM_AS	1	1	NO_USE	1
2054	71	8	OnePointCrossover.java	crossover	THIS	OnePointCrossover	UNKNOWN_AS	0	0	NO_USE	0
2055	87	8	OnePointCrossover.java	crossover	length	int	getLength()	0	1	NO_USE	1
2055	87	8	OnePointCrossover.java	crossover	first	AbstractListChromosome<T>	PARAM_AS	1	0	NO_USE	0
2055	87	8	OnePointCrossover.java	crossover	second	AbstractListChromosome<T>	PARAM_AS	1	1	NO_USE	1
2055	87	8	OnePointCrossover.java	crossover	THIS	OnePointCrossover	UNKNOWN_AS	0	0	NO_USE	0
2056	54	8	Erf.java	erf	x	double	PARAM_AS	1	2	>	1
2056	54	8	Erf.java	erf	THIS	Erf	UNKNOWN_AS	0	0	NO_USE	0
2057	58	8	Erf.java	erf	ret	double	regularizedGammaP()	0	0	-x	0
2057	58	8	Erf.java	erf	x	double	PARAM_AS	1	2	NO_USE	1
2057	58	8	Erf.java	erf	THIS	Erf	UNKNOWN_AS	0	0	NO_USE	0
2058	88	8	Erf.java	erfc	x	double	PARAM_AS	1	1	>	1
2058	88	8	Erf.java	erfc	THIS	Erf	UNKNOWN_AS	0	0	NO_USE	0
2059	120	8	Beta.java	regularizedBeta	ret	double	UNKNOWN_AS	0	0	NO_USE	0
2059	120	8	Beta.java	regularizedBeta	x	double	PARAM_AS	1	4	>	1
2059	120	8	Beta.java	regularizedBeta	a	double	PARAM_AS	1	4	+	1
2059	120	8	Beta.java	regularizedBeta	b	double	PARAM_AS	1	3	+	1
2059	120	8	Beta.java	regularizedBeta	epsilon	double	PARAM_AS	1	0	PARAM_USE	0
2059	120	8	Beta.java	regularizedBeta	maxIterations	int	PARAM_AS	1	0	PARAM_USE	0
2059	120	8	Beta.java	regularizedBeta	THIS	Beta	UNKNOWN_AS	0	0	FIELD_USE	0
2060	128	15	Beta.java	regularizedBeta	ret	double	NAME	0	0	NO_USE	0
2060	128	15	Beta.java	regularizedBeta	x	double	PARAM_AS	1	4	-	1
2060	128	15	Beta.java	regularizedBeta	a	double	PARAM_AS	1	4	PARAM_USE	1
2060	128	15	Beta.java	regularizedBeta	b	double	PARAM_AS	1	3	PARAM_USE	1
2060	128	15	Beta.java	regularizedBeta	epsilon	double	PARAM_AS	1	0	PARAM_USE	0
2060	128	15	Beta.java	regularizedBeta	maxIterations	int	PARAM_AS	1	0	PARAM_USE	0
2060	128	15	Beta.java	regularizedBeta	THIS	Beta	UNKNOWN_AS	0	0	CLALLER_USE	0
2061	195	8	Beta.java	logBeta	ret	double	UNKNOWN_AS	0	0	NO_USE	0
2061	195	8	Beta.java	logBeta	a	double	PARAM_AS	1	2	PARAM_USE	1
2061	195	8	Beta.java	logBeta	b	double	PARAM_AS	1	2	PARAM_USE	1
2061	195	8	Beta.java	logBeta	epsilon	double	PARAM_AS	1	0	NO_USE	0
2061	195	8	Beta.java	logBeta	maxIterations	int	PARAM_AS	1	0	NO_USE	0
2061	195	8	Beta.java	logBeta	THIS	Beta	UNKNOWN_AS	0	0	FIELD_USE	0
2062	88	8	Gamma.java	logGamma	ret	double	UNKNOWN_AS	0	0	NO_USE	0
2062	88	8	Gamma.java	logGamma	x	double	PARAM_AS	1	2	+	1
2062	88	8	Gamma.java	logGamma	THIS	Gamma	UNKNOWN_AS	0	0	FIELD_USE	0
2063	153	8	Gamma.java	regularizedGammaP	ret	double	UNKNOWN_AS	0	0	NO_USE	0
2063	153	8	Gamma.java	regularizedGammaP	a	double	PARAM_AS	1	3	+	1
2063	153	8	Gamma.java	regularizedGammaP	x	double	PARAM_AS	1	4	==	1
2063	153	8	Gamma.java	regularizedGammaP	epsilon	double	PARAM_AS	1	0	PARAM_USE	0
2063	153	8	Gamma.java	regularizedGammaP	maxIterations	int	PARAM_AS	1	1	PARAM_USE	0
2063	153	8	Gamma.java	regularizedGammaP	THIS	Gamma	UNKNOWN_AS	0	0	FIELD_USE	0
2064	155	15	Gamma.java	regularizedGammaP	ret	double	NAME	0	0	NO_USE	0
2064	155	15	Gamma.java	regularizedGammaP	a	double	PARAM_AS	1	3	+	0
2064	155	15	Gamma.java	regularizedGammaP	x	double	PARAM_AS	1	4	>=	1
2064	155	15	Gamma.java	regularizedGammaP	epsilon	double	PARAM_AS	1	0	PARAM_USE	0
2064	155	15	Gamma.java	regularizedGammaP	maxIterations	int	PARAM_AS	1	1	PARAM_USE	0
2064	155	15	Gamma.java	regularizedGammaP	THIS	Gamma	UNKNOWN_AS	0	0	CLALLER_USE	0
2065	157	15	Gamma.java	regularizedGammaP	ret	double	0.0	0	0	NO_USE	0
2065	157	15	Gamma.java	regularizedGammaP	a	double	PARAM_AS	1	3	PARAM_USE	1
2065	157	15	Gamma.java	regularizedGammaP	x	double	PARAM_AS	1	4	PARAM_USE	1
2065	157	15	Gamma.java	regularizedGammaP	epsilon	double	PARAM_AS	1	0	PARAM_USE	0
2065	157	15	Gamma.java	regularizedGammaP	maxIterations	int	PARAM_AS	1	1	PARAM_USE	0
2065	157	15	Gamma.java	regularizedGammaP	THIS	Gamma	UNKNOWN_AS	0	0	CLALLER_USE	0
2066	176	12	Gamma.java	regularizedGammaP	n	double	+	0	1	NO_USE	1
2066	176	12	Gamma.java	regularizedGammaP	an	double	*	0	0	NO_USE	0
2066	176	12	Gamma.java	regularizedGammaP	sum	double	+	0	1	PARAM_USE	0
2066	176	12	Gamma.java	regularizedGammaP	ret	double	-	0	0	NO_USE	0
2066	176	12	Gamma.java	regularizedGammaP	a	double	PARAM_AS	1	3	*	0
2066	176	12	Gamma.java	regularizedGammaP	x	double	PARAM_AS	1	4	-x	0
2066	176	12	Gamma.java	regularizedGammaP	epsilon	double	PARAM_AS	1	0	NO_USE	0
2066	176	12	Gamma.java	regularizedGammaP	maxIterations	int	PARAM_AS	1	1	OTHER_USE	1
2066	176	12	Gamma.java	regularizedGammaP	THIS	Gamma	UNKNOWN_AS	0	0	CLALLER_USE	0
2067	178	19	Gamma.java	regularizedGammaP	n	double	+	0	1	NO_USE	0
2067	178	19	Gamma.java	regularizedGammaP	an	double	*	0	0	NO_USE	0
2067	178	19	Gamma.java	regularizedGammaP	sum	double	+	0	1	*	1
2067	178	19	Gamma.java	regularizedGammaP	ret	double	-	0	0	NO_USE	0
2067	178	19	Gamma.java	regularizedGammaP	a	double	PARAM_AS	1	3	*	0
2067	178	19	Gamma.java	regularizedGammaP	x	double	PARAM_AS	1	4	-x	0
2067	178	19	Gamma.java	regularizedGammaP	epsilon	double	PARAM_AS	1	0	NO_USE	0
2067	178	19	Gamma.java	regularizedGammaP	maxIterations	int	PARAM_AS	1	1	NO_USE	0
2067	178	19	Gamma.java	regularizedGammaP	THIS	Gamma	UNKNOWN_AS	0	0	CLALLER_USE	0
2068	231	8	Gamma.java	regularizedGammaQ	ret	double	UNKNOWN_AS	0	0	*	0
2068	231	8	Gamma.java	regularizedGammaQ	a	double	PARAM_AS	1	3	+	1
2068	231	8	Gamma.java	regularizedGammaQ	x	double	PARAM_AS	1	4	==	1
2068	231	8	Gamma.java	regularizedGammaQ	epsilon	double	PARAM_AS	1	0	PARAM_USE	0
2068	231	8	Gamma.java	regularizedGammaQ	maxIterations	int	PARAM_AS	1	0	PARAM_USE	0
2068	231	8	Gamma.java	regularizedGammaQ	THIS	Gamma	UNKNOWN_AS	0	0	FIELD_USE	0
2069	233	15	Gamma.java	regularizedGammaQ	ret	double	NAME	0	0	*	0
2069	233	15	Gamma.java	regularizedGammaQ	a	double	PARAM_AS	1	3	+	0
2069	233	15	Gamma.java	regularizedGammaQ	x	double	PARAM_AS	1	4	<	1
2069	233	15	Gamma.java	regularizedGammaQ	epsilon	double	PARAM_AS	1	0	PARAM_USE	0
2069	233	15	Gamma.java	regularizedGammaQ	maxIterations	int	PARAM_AS	1	0	PARAM_USE	0
2069	233	15	Gamma.java	regularizedGammaQ	THIS	Gamma	UNKNOWN_AS	0	0	CLALLER_USE	0
2070	235	15	Gamma.java	regularizedGammaQ	ret	double	1.0	0	0	*	0
2070	235	15	Gamma.java	regularizedGammaQ	a	double	PARAM_AS	1	3	PARAM_USE	1
2070	235	15	Gamma.java	regularizedGammaQ	x	double	PARAM_AS	1	4	PARAM_USE	1
2070	235	15	Gamma.java	regularizedGammaQ	epsilon	double	PARAM_AS	1	0	PARAM_USE	0
2070	235	15	Gamma.java	regularizedGammaQ	maxIterations	int	PARAM_AS	1	0	PARAM_USE	0
2070	235	15	Gamma.java	regularizedGammaQ	THIS	Gamma	UNKNOWN_AS	0	0	CLALLER_USE	0
2071	283	8	Gamma.java	digamma	x	double	PARAM_AS	1	3	/	1
2071	283	8	Gamma.java	digamma	THIS	Gamma	UNKNOWN_AS	0	0	NO_USE	0
2072	289	8	Gamma.java	digamma	x	double	PARAM_AS	1	3	*	1
2072	289	8	Gamma.java	digamma	THIS	Gamma	UNKNOWN_AS	0	0	NO_USE	0
2073	313	8	Gamma.java	trigamma	x	double	PARAM_AS	1	3	*	1
2073	313	8	Gamma.java	trigamma	THIS	Gamma	UNKNOWN_AS	0	0	NO_USE	0
2074	317	8	Gamma.java	trigamma	x	double	PARAM_AS	1	3	*	1
2074	317	8	Gamma.java	trigamma	THIS	Gamma	UNKNOWN_AS	0	0	NO_USE	0
2075	43	8	ArgUtils.java	flatten	list	List<Object>	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
2075	43	8	ArgUtils.java	flatten	array	Object[]	PARAM_AS	1	1	OTHER_USE	1
2075	43	8	ArgUtils.java	flatten	THIS	ArgUtils	UNKNOWN_AS	0	0	CLALLER_USE	0
2076	45	16	ArgUtils.java	flatten	list	List<Object>	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
2076	45	16	ArgUtils.java	flatten	array	Object[]	PARAM_AS	1	1	NO_USE	0
2076	45	16	ArgUtils.java	flatten	THIS	ArgUtils	UNKNOWN_AS	0	0	CLALLER_USE	1
2077	159	12	ExceptionContext.java	buildMessage	pat	Localizable	get()	0	0	NO_USE	0
2077	159	12	ExceptionContext.java	buildMessage	args	Object[]	get()	0	0	NO_USE	0
2077	159	12	ExceptionContext.java	buildMessage	fmt	MessageFormat	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2077	159	12	ExceptionContext.java	buildMessage	i	int	0	0	0	NO_USE	0
2077	159	12	ExceptionContext.java	buildMessage	sb	StringBuilder	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
2077	159	12	ExceptionContext.java	buildMessage	count	int	0	0	1	NO_USE	1
2077	159	12	ExceptionContext.java	buildMessage	len	int	size()	0	1	NO_USE	1
2077	159	12	ExceptionContext.java	buildMessage	locale	Locale	PARAM_AS	1	0	NO_USE	0
2077	159	12	ExceptionContext.java	buildMessage	separator	String	PARAM_AS	1	0	PARAM_USE	0
2077	159	12	ExceptionContext.java	buildMessage	THIS	ExceptionContext	UNKNOWN_AS	0	0	NO_USE	0
2078	214	16	ExceptionContext.java	serializeMessages	j	int	0	0	1	ARRIDX_USE	1
2078	214	16	ExceptionContext.java	serializeMessages	pat	Localizable	get()	0	0	NO_USE	0
2078	214	16	ExceptionContext.java	serializeMessages	args	Object[]	get()	0	1	ARR_USE	1
2078	214	16	ExceptionContext.java	serializeMessages	aLen	int	NAME	0	0	NO_USE	0
2078	214	16	ExceptionContext.java	serializeMessages	i	int	0	0	0	NO_USE	0
2078	214	16	ExceptionContext.java	serializeMessages	len	int	size()	0	0	NO_USE	0
2078	214	16	ExceptionContext.java	serializeMessages	out	ObjectOutputStream	PARAM_AS	1	0	CLALLER_USE	0
2078	214	16	ExceptionContext.java	serializeMessages	THIS	ExceptionContext	UNKNOWN_AS	0	0	CLALLER_USE	0
2079	270	12	ExceptionContext.java	serializeContext	value	Object	get()	0	1	PARAM_USE	1
2079	270	12	ExceptionContext.java	serializeContext	len	int	size()	0	0	NO_USE	0
2079	270	12	ExceptionContext.java	serializeContext	out	ObjectOutputStream	PARAM_AS	1	0	CLALLER_USE	0
2079	270	12	ExceptionContext.java	serializeContext	THIS	ExceptionContext	UNKNOWN_AS	0	0	CLALLER_USE	0
2080	224	8	FastCosineTransformer.java	fct	transformed	double[]	ARRAY_CREATION	0	0	NO_USE	0
2080	224	8	FastCosineTransformer.java	fct	n	int	-	0	2	NO_USE	1
2080	224	8	FastCosineTransformer.java	fct	f	double	PARAM_AS	1	0	OTHER_USE	0
2080	224	8	FastCosineTransformer.java	fct	THIS	FastCosineTransformer	UNKNOWN_AS	0	0	FIELD_USE	0
2081	229	8	FastCosineTransformer.java	fct	transformed	double[]	ARRAY_CREATION	0	0	ARR_USE	0
2081	229	8	FastCosineTransformer.java	fct	n	int	-	0	2	NO_USE	1
2081	229	8	FastCosineTransformer.java	fct	f	double	PARAM_AS	1	0	ARR_USE	0
2081	229	8	FastCosineTransformer.java	fct	THIS	FastCosineTransformer	UNKNOWN_AS	0	0	NO_USE	0
2082	162	8	FastHadamardTransformer.java	fht	n	int	NAME	0	1	PARAM_USE	1
2082	162	8	FastHadamardTransformer.java	fht	halfN	int	/	0	0	NO_USE	0
2082	162	8	FastHadamardTransformer.java	fht	x	double	PARAM_AS	1	0	NO_USE	0
2082	162	8	FastHadamardTransformer.java	fht	THIS	FastHadamardTransformer	UNKNOWN_AS	0	0	FIELD_USE	0
2083	213	8	FastHadamardTransformer.java	fht	n	int	NAME	0	1	PARAM_USE	1
2083	213	8	FastHadamardTransformer.java	fht	halfN	int	/	0	0	NO_USE	0
2083	213	8	FastHadamardTransformer.java	fht	x	int	PARAM_AS	1	0	NO_USE	0
2083	213	8	FastHadamardTransformer.java	fht	THIS	FastHadamardTransformer	UNKNOWN_AS	0	0	FIELD_USE	0
2084	218	8	FastSineTransformer.java	fst	transformed	double[]	ARRAY_CREATION	0	0	NO_USE	0
2084	218	8	FastSineTransformer.java	fst	f	double	PARAM_AS	1	1	ARR_USE	1
2084	218	8	FastSineTransformer.java	fst	THIS	FastSineTransformer	UNKNOWN_AS	0	0	FIELD_USE	0
2085	224	8	FastSineTransformer.java	fst	transformed	double[]	ARRAY_CREATION	0	0	ARR_USE	0
2085	224	8	FastSineTransformer.java	fst	n	int	NAME	0	1	NO_USE	1
2085	224	8	FastSineTransformer.java	fst	f	double	PARAM_AS	1	1	NO_USE	0
2085	224	8	FastSineTransformer.java	fst	THIS	FastSineTransformer	UNKNOWN_AS	0	0	NO_USE	0
2086	306	8	FastFourierTransformer.java	fft	F	Complex[]	ARRAY_CREATION	0	0	NO_USE	0
2086	306	8	FastFourierTransformer.java	fft	f	double	PARAM_AS	1	1	ARR_USE	1
2086	306	8	FastFourierTransformer.java	fft	isInverse	boolean	PARAM_AS	1	0	NO_USE	0
2086	306	8	FastFourierTransformer.java	fft	THIS	FastFourierTransformer	UNKNOWN_AS	0	1	NO_USE	1
2087	354	8	FastFourierTransformer.java	fft	n	int	NAME	0	2	NO_USE	1
2087	354	8	FastFourierTransformer.java	fft	f	Complex[]	ARRAY_CREATION	0	0	ARR_USE	0
2087	354	8	FastFourierTransformer.java	fft	data	Complex	PARAM_AS	1	0	ARR_USE	0
2087	354	8	FastFourierTransformer.java	fft	THIS	FastFourierTransformer	UNKNOWN_AS	0	0	NO_USE	0
2088	358	8	FastFourierTransformer.java	fft	n	int	NAME	0	2	NO_USE	1
2088	358	8	FastFourierTransformer.java	fft	f	Complex[]	ARRAY_ACCESS	0	0	ARR_USE	0
2088	358	8	FastFourierTransformer.java	fft	data	Complex	PARAM_AS	1	0	ARR_USE	0
2088	358	8	FastFourierTransformer.java	fft	THIS	FastFourierTransformer	UNKNOWN_AS	0	0	NO_USE	0
2089	433	8	FastFourierTransformer.java	sample	f	UnivariateRealFunction	PARAM_AS	1	0	NO_USE	0
2089	433	8	FastFourierTransformer.java	sample	min	double	PARAM_AS	1	0	NO_USE	0
2089	433	8	FastFourierTransformer.java	sample	max	double	PARAM_AS	1	0	NO_USE	0
2089	433	8	FastFourierTransformer.java	sample	n	int	PARAM_AS	1	1	PARAM_USE	1
2089	433	8	FastFourierTransformer.java	sample	THIS	FastFourierTransformer	UNKNOWN_AS	0	0	FIELD_USE	0
2090	495	8	FastFourierTransformer.java	verifyDataSet	d	double	PARAM_AS	1	1	OTHER_USE	1
2090	495	8	FastFourierTransformer.java	verifyDataSet	THIS	FastFourierTransformer	UNKNOWN_AS	0	2	FIELD_USE	1
2091	508	8	FastFourierTransformer.java	verifyDataSet	o	Object	PARAM_AS	1	1	OTHER_USE	1
2091	508	8	FastFourierTransformer.java	verifyDataSet	THIS	FastFourierTransformer	UNKNOWN_AS	0	2	FIELD_USE	1
2092	524	8	FastFourierTransformer.java	verifyInterval	lower	double	PARAM_AS	1	1	PARAM_USE	1
2092	524	8	FastFourierTransformer.java	verifyInterval	upper	double	PARAM_AS	1	1	PARAM_USE	1
2092	524	8	FastFourierTransformer.java	verifyInterval	THIS	FastFourierTransformer	UNKNOWN_AS	0	0	FIELD_USE	0
2093	571	8	FastFourierTransformer.java	mdfft	dimensionSize	int[]	getDimensionSizes()	0	1	ARR_USE	1
2093	571	8	FastFourierTransformer.java	mdfft	mdcm	MultiDimensionalComplexMatrix	PARAM_AS	1	0	CLALLER_USE	0
2093	571	8	FastFourierTransformer.java	mdfft	forward	boolean	PARAM_AS	1	0	OTHER_USE	0
2093	571	8	FastFourierTransformer.java	mdfft	d	int	PARAM_AS	1	1	ARRIDX_USE	0
2093	571	8	FastFourierTransformer.java	mdfft	subVector	int[]	PARAM_AS	1	2	ARR_USE	1
2093	571	8	FastFourierTransformer.java	mdfft	THIS	FastFourierTransformer	UNKNOWN_AS	0	3	CLALLER_USE	1
2094	579	12	FastFourierTransformer.java	mdfft	temp	Complex[]	get()	0	0	PARAM_USE	0
2094	579	12	FastFourierTransformer.java	mdfft	dimensionSize	int[]	getDimensionSizes()	0	1	NO_USE	0
2094	579	12	FastFourierTransformer.java	mdfft	mdcm	MultiDimensionalComplexMatrix	PARAM_AS	1	0	NO_USE	0
2094	579	12	FastFourierTransformer.java	mdfft	forward	boolean	PARAM_AS	1	0	NO_USE	1
2094	579	12	FastFourierTransformer.java	mdfft	d	int	NAME	1	1	NO_USE	0
2094	579	12	FastFourierTransformer.java	mdfft	subVector	int[]	NAME	1	2	NO_USE	0
2094	579	12	FastFourierTransformer.java	mdfft	THIS	FastFourierTransformer	UNKNOWN_AS	0	3	CLALLER_USE	0
2095	592	12	FastFourierTransformer.java	mdfft	vector	int[]	ARRAY_CREATION	0	0	ARR_USE	0
2095	592	12	FastFourierTransformer.java	mdfft	dimensionSize	int[]	getDimensionSizes()	0	1	ARR_USE	0
2095	592	12	FastFourierTransformer.java	mdfft	mdcm	MultiDimensionalComplexMatrix	PARAM_AS	1	0	PARAM_USE	0
2095	592	12	FastFourierTransformer.java	mdfft	forward	boolean	PARAM_AS	1	0	PARAM_USE	0
2095	592	12	FastFourierTransformer.java	mdfft	d	int	NAME	1	1	ARRIDX_USE	1
2095	592	12	FastFourierTransformer.java	mdfft	subVector	int[]	NAME	1	2	OTHER_USE	1
2095	592	12	FastFourierTransformer.java	mdfft	THIS	FastFourierTransformer	UNKNOWN_AS	0	3	CLALLER_USE	1
2096	159	4	AbstractStepInterpolator.java	AbstractStepInterpolator	interpolator	AbstractStepInterpolator	PARAM_AS	1	1	OTHER_USE	1
2096	159	4	AbstractStepInterpolator.java	AbstractStepInterpolator	THIS	AbstractStepInterpolator	NAME	0	1	FIELD_USE	1
2097	340	6	AbstractStepInterpolator.java	getInterpolatedState	THIS	AbstractStepInterpolator	UNKNOWN_AS	0	0	FIELD_USE	1
2098	355	6	AbstractStepInterpolator.java	getInterpolatedDerivatives	THIS	AbstractStepInterpolator	UNKNOWN_AS	0	0	FIELD_USE	1
2099	409	4	AbstractStepInterpolator.java	finalizeStep	THIS	AbstractStepInterpolator	UNKNOWN_AS	0	1	CLALLER_USE	1
2100	442	4	AbstractStepInterpolator.java	writeBaseExternal	out	ObjectOutput	PARAM_AS	1	0	CLALLER_USE	0
2100	442	4	AbstractStepInterpolator.java	writeBaseExternal	THIS	AbstractStepInterpolator	UNKNOWN_AS	0	2	FIELD_USE	1
2101	454	4	AbstractStepInterpolator.java	writeBaseExternal	out	ObjectOutput	PARAM_AS	1	0	CLALLER_USE	0
2101	454	4	AbstractStepInterpolator.java	writeBaseExternal	THIS	AbstractStepInterpolator	UNKNOWN_AS	0	2	FIELD_USE	1
2102	497	4	AbstractStepInterpolator.java	readBaseExternal	dimension	int	readInt()	0	1	OTHER_USE	1
2102	497	4	AbstractStepInterpolator.java	readBaseExternal	in	ObjectInput	PARAM_AS	1	0	CLALLER_USE	0
2102	497	4	AbstractStepInterpolator.java	readBaseExternal	THIS	AbstractStepInterpolator	LITERAL	0	0	FIELD_USE	0
2103	203	8	StepNormalizer.java	handleStep	interpolator	StepInterpolator	PARAM_AS	1	0	CLALLER_USE	0
2103	203	8	StepNormalizer.java	handleStep	isLast	boolean	PARAM_AS	1	0	NO_USE	0
2103	203	8	StepNormalizer.java	handleStep	THIS	StepNormalizer	UNKNOWN_AS	0	5	FIELD_USE	1
2104	212	12	StepNormalizer.java	handleStep	interpolator	StepInterpolator	PARAM_AS	1	0	NO_USE	0
2104	212	12	StepNormalizer.java	handleStep	isLast	boolean	PARAM_AS	1	0	NO_USE	0
2104	212	12	StepNormalizer.java	handleStep	THIS	StepNormalizer	>=	0	5	FIELD_USE	1
2105	221	8	StepNormalizer.java	handleStep	nextTime	double	OTHERS	0	1	NO_USE	1
2105	221	8	StepNormalizer.java	handleStep	interpolator	StepInterpolator	PARAM_AS	1	0	NO_USE	0
2105	221	8	StepNormalizer.java	handleStep	isLast	boolean	PARAM_AS	1	0	NO_USE	0
2105	221	8	StepNormalizer.java	handleStep	THIS	StepNormalizer	PREFIX_EXPR	0	5	FIELD_USE	1
2106	238	8	StepNormalizer.java	handleStep	nextTime	double	NAME	0	1	NO_USE	0
2106	238	8	StepNormalizer.java	handleStep	nextInStep	boolean	isNextInStep()	0	0	NO_USE	0
2106	238	8	StepNormalizer.java	handleStep	interpolator	StepInterpolator	PARAM_AS	1	0	CLALLER_USE	0
2106	238	8	StepNormalizer.java	handleStep	isLast	boolean	PARAM_AS	1	0	NO_USE	1
2106	238	8	StepNormalizer.java	handleStep	THIS	StepNormalizer	PREFIX_EXPR	0	5	FIELD_USE	0
2107	245	12	StepNormalizer.java	handleStep	addLast	boolean	&&	0	0	NO_USE	1
2107	245	12	StepNormalizer.java	handleStep	nextTime	double	NAME	0	1	NO_USE	0
2107	245	12	StepNormalizer.java	handleStep	nextInStep	boolean	isNextInStep()	0	0	NO_USE	0
2107	245	12	StepNormalizer.java	handleStep	interpolator	StepInterpolator	PARAM_AS	1	0	PARAM_USE	0
2107	245	12	StepNormalizer.java	handleStep	isLast	boolean	PARAM_AS	1	0	NO_USE	0
2107	245	12	StepNormalizer.java	handleStep	THIS	StepNormalizer	PREFIX_EXPR	0	5	CLALLER_USE	0
2108	275	8	StepNormalizer.java	doNormalizedStep	isLast	boolean	PARAM_AS	1	0	NO_USE	0
2108	275	8	StepNormalizer.java	doNormalizedStep	THIS	StepNormalizer	UNKNOWN_AS	0	3	NO_USE	1
2109	117	4	DummyStepInterpolator.java	writeExternal	out	ObjectOutput	PARAM_AS	1	0	CLALLER_USE	0
2109	117	4	DummyStepInterpolator.java	writeExternal	THIS	DummyStepInterpolator	UNKNOWN_AS	0	1	FIELD_USE	1
2110	136	4	DummyStepInterpolator.java	readExternal	t	double	readBaseExternal()	0	0	NO_USE	0
2110	136	4	DummyStepInterpolator.java	readExternal	in	ObjectInput	PARAM_AS	1	0	CLALLER_USE	0
2110	136	4	DummyStepInterpolator.java	readExternal	THIS	DummyStepInterpolator	UNKNOWN_AS	0	1	FIELD_USE	1
2111	85	8	NordsieckStepInterpolator.java	NordsieckStepInterpolator	interpolator	NordsieckStepInterpolator	PARAM_AS	1	3	OTHER_USE	1
2111	85	8	NordsieckStepInterpolator.java	NordsieckStepInterpolator	THIS	NordsieckStepInterpolator	NAME	0	3	FIELD_USE	1
2112	88	8	NordsieckStepInterpolator.java	NordsieckStepInterpolator	interpolator	NordsieckStepInterpolator	PARAM_AS	1	3	OTHER_USE	1
2112	88	8	NordsieckStepInterpolator.java	NordsieckStepInterpolator	THIS	NordsieckStepInterpolator	clone()	0	3	FIELD_USE	1
2113	91	8	NordsieckStepInterpolator.java	NordsieckStepInterpolator	interpolator	NordsieckStepInterpolator	PARAM_AS	1	3	OTHER_USE	1
2113	91	8	NordsieckStepInterpolator.java	NordsieckStepInterpolator	THIS	NordsieckStepInterpolator	CLASS_INSTANCE_CREATION	0	3	FIELD_USE	1
2114	231	8	NordsieckStepInterpolator.java	writeExternal	n	int	OTHERS	0	0	<	0
2114	231	8	NordsieckStepInterpolator.java	writeExternal	out	ObjectOutput	PARAM_AS	1	0	CLALLER_USE	0
2114	231	8	NordsieckStepInterpolator.java	writeExternal	THIS	NordsieckStepInterpolator	UNKNOWN_AS	0	2	FIELD_USE	1
2115	240	8	NordsieckStepInterpolator.java	writeExternal	n	int	OTHERS	0	0	NO_USE	0
2115	240	8	NordsieckStepInterpolator.java	writeExternal	out	ObjectOutput	PARAM_AS	1	0	CLALLER_USE	0
2115	240	8	NordsieckStepInterpolator.java	writeExternal	THIS	NordsieckStepInterpolator	UNKNOWN_AS	0	2	FIELD_USE	1
2116	265	8	NordsieckStepInterpolator.java	readExternal	t	double	readBaseExternal()	0	0	NO_USE	0
2116	265	8	NordsieckStepInterpolator.java	readExternal	n	int	OTHERS	0	0	OTHER_USE	0
2116	265	8	NordsieckStepInterpolator.java	readExternal	hasScaled	boolean	readBoolean()	0	1	NO_USE	1
2116	265	8	NordsieckStepInterpolator.java	readExternal	in	ObjectInput	PARAM_AS	1	0	CLALLER_USE	0
2116	265	8	NordsieckStepInterpolator.java	readExternal	THIS	NordsieckStepInterpolator	readDouble()	0	0	FIELD_USE	0
2117	275	8	NordsieckStepInterpolator.java	readExternal	t	double	readBaseExternal()	0	0	NO_USE	0
2117	275	8	NordsieckStepInterpolator.java	readExternal	n	int	OTHERS	0	0	NO_USE	0
2117	275	8	NordsieckStepInterpolator.java	readExternal	hasScaled	boolean	readBoolean()	0	1	NO_USE	0
2117	275	8	NordsieckStepInterpolator.java	readExternal	hasNordsieck	boolean	readBoolean()	0	1	NO_USE	1
2117	275	8	NordsieckStepInterpolator.java	readExternal	in	ObjectInput	PARAM_AS	1	0	CLALLER_USE	0
2117	275	8	NordsieckStepInterpolator.java	readExternal	THIS	NordsieckStepInterpolator	NULL	0	0	NO_USE	0
2118	281	8	NordsieckStepInterpolator.java	readExternal	t	double	readBaseExternal()	0	0	PARAM_USE	0
2118	281	8	NordsieckStepInterpolator.java	readExternal	n	int	OTHERS	0	0	OTHER_USE	0
2118	281	8	NordsieckStepInterpolator.java	readExternal	hasScaled	boolean	readBoolean()	0	1	NO_USE	1
2118	281	8	NordsieckStepInterpolator.java	readExternal	hasNordsieck	boolean	readBoolean()	0	1	NO_USE	1
2118	281	8	NordsieckStepInterpolator.java	readExternal	in	ObjectInput	PARAM_AS	1	0	NO_USE	0
2118	281	8	NordsieckStepInterpolator.java	readExternal	THIS	NordsieckStepInterpolator	NULL	0	0	CLALLER_USE	0
2119	83	4	RungeKuttaStepInterpolator.java	RungeKuttaStepInterpolator	interpolator	RungeKuttaStepInterpolator	PARAM_AS	1	1	OTHER_USE	1
2119	83	4	RungeKuttaStepInterpolator.java	RungeKuttaStepInterpolator	THIS	RungeKuttaStepInterpolator	UNKNOWN_AS	0	1	FIELD_USE	1
2120	174	4	RungeKuttaStepInterpolator.java	readExternal	t	double	readBaseExternal()	0	0	PARAM_USE	0
2120	174	4	RungeKuttaStepInterpolator.java	readExternal	n	int	OTHERS	0	0	NO_USE	0
2120	174	4	RungeKuttaStepInterpolator.java	readExternal	kMax	int	readInt()	0	0	NO_USE	0
2120	174	4	RungeKuttaStepInterpolator.java	readExternal	in	ObjectInput	PARAM_AS	1	0	NO_USE	0
2120	174	4	RungeKuttaStepInterpolator.java	readExternal	THIS	RungeKuttaStepInterpolator	NULL	0	1	CLALLER_USE	1
2121	119	4	DormandPrince54StepInterpolator.java	DormandPrince54StepInterpolator	interpolator	DormandPrince54StepInterpolator	PARAM_AS	1	1	OTHER_USE	1
2121	119	4	DormandPrince54StepInterpolator.java	DormandPrince54StepInterpolator	THIS	DormandPrince54StepInterpolator	UNKNOWN_AS	0	1	FIELD_USE	1
2122	171	4	DormandPrince54StepInterpolator.java	computeInterpolatedStateAndDerivatives	theta	double	PARAM_AS	1	0	NO_USE	0
2122	171	4	DormandPrince54StepInterpolator.java	computeInterpolatedStateAndDerivatives	oneMinusThetaH	double	PARAM_AS	1	0	NO_USE	0
2122	171	4	DormandPrince54StepInterpolator.java	computeInterpolatedStateAndDerivatives	THIS	DormandPrince54StepInterpolator	UNKNOWN_AS	0	2	FIELD_USE	1
2123	173	6	DormandPrince54StepInterpolator.java	computeInterpolatedStateAndDerivatives	theta	double	PARAM_AS	1	0	NO_USE	0
2123	173	6	DormandPrince54StepInterpolator.java	computeInterpolatedStateAndDerivatives	oneMinusThetaH	double	PARAM_AS	1	0	NO_USE	0
2123	173	6	DormandPrince54StepInterpolator.java	computeInterpolatedStateAndDerivatives	THIS	DormandPrince54StepInterpolator	UNKNOWN_AS	0	2	FIELD_USE	1
2124	226	4	GraggBulirschStoerIntegrator.java	setStabilityCheck	performStabilityCheck	boolean	PARAM_AS	1	0	NO_USE	0
2124	226	4	GraggBulirschStoerIntegrator.java	setStabilityCheck	maxNumIter	int	PARAM_AS	1	0	NO_USE	0
2124	226	4	GraggBulirschStoerIntegrator.java	setStabilityCheck	maxNumChecks	int	PARAM_AS	1	0	NO_USE	0
2124	226	4	GraggBulirschStoerIntegrator.java	setStabilityCheck	stepsizeReductionFactor	double	PARAM_AS	1	2	OTHER_USE	1
2124	226	4	GraggBulirschStoerIntegrator.java	setStabilityCheck	THIS	GraggBulirschStoerIntegrator	OTHERS	0	0	FIELD_USE	0
2125	261	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	control1	double	PARAM_AS	1	2	OTHER_USE	1
2125	261	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	control2	double	PARAM_AS	1	2	NO_USE	0
2125	261	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	control3	double	PARAM_AS	1	2	NO_USE	0
2125	261	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	control4	double	PARAM_AS	1	2	NO_USE	0
2125	261	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	THIS	GraggBulirschStoerIntegrator	UNKNOWN_AS	0	0	FIELD_USE	0
2126	267	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	control1	double	PARAM_AS	1	2	NO_USE	0
2126	267	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	control2	double	PARAM_AS	1	2	OTHER_USE	1
2126	267	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	control3	double	PARAM_AS	1	2	NO_USE	0
2126	267	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	control4	double	PARAM_AS	1	2	NO_USE	0
2126	267	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	THIS	GraggBulirschStoerIntegrator	NAME	0	0	FIELD_USE	0
2127	273	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	control1	double	PARAM_AS	1	2	NO_USE	0
2127	273	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	control2	double	PARAM_AS	1	2	NO_USE	0
2127	273	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	control3	double	PARAM_AS	1	2	OTHER_USE	1
2127	273	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	control4	double	PARAM_AS	1	2	NO_USE	0
2127	273	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	THIS	GraggBulirschStoerIntegrator	NAME	0	0	FIELD_USE	0
2128	279	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	control1	double	PARAM_AS	1	2	NO_USE	0
2128	279	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	control2	double	PARAM_AS	1	2	NO_USE	0
2128	279	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	control3	double	PARAM_AS	1	2	NO_USE	0
2128	279	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	control4	double	PARAM_AS	1	2	OTHER_USE	1
2128	279	4	GraggBulirschStoerIntegrator.java	setStepsizeControl	THIS	GraggBulirschStoerIntegrator	NAME	0	0	FIELD_USE	0
2129	313	4	GraggBulirschStoerIntegrator.java	setOrderControl	maximalOrder	int	PARAM_AS	1	2	NO_USE	1
2129	313	4	GraggBulirschStoerIntegrator.java	setOrderControl	control1	double	PARAM_AS	1	2	NO_USE	0
2129	313	4	GraggBulirschStoerIntegrator.java	setOrderControl	control2	double	PARAM_AS	1	2	NO_USE	0
2129	313	4	GraggBulirschStoerIntegrator.java	setOrderControl	THIS	GraggBulirschStoerIntegrator	UNKNOWN_AS	0	0	FIELD_USE	0
2130	317	4	GraggBulirschStoerIntegrator.java	setOrderControl	maximalOrder	int	PARAM_AS	1	2	NO_USE	0
2130	317	4	GraggBulirschStoerIntegrator.java	setOrderControl	control1	double	PARAM_AS	1	2	OTHER_USE	1
2130	317	4	GraggBulirschStoerIntegrator.java	setOrderControl	control2	double	PARAM_AS	1	2	NO_USE	0
2130	317	4	GraggBulirschStoerIntegrator.java	setOrderControl	THIS	GraggBulirschStoerIntegrator	18	0	0	FIELD_USE	0
2131	323	4	GraggBulirschStoerIntegrator.java	setOrderControl	maximalOrder	int	PARAM_AS	1	2	NO_USE	0
2131	323	4	GraggBulirschStoerIntegrator.java	setOrderControl	control1	double	PARAM_AS	1	2	NO_USE	0
2131	323	4	GraggBulirschStoerIntegrator.java	setOrderControl	control2	double	PARAM_AS	1	2	OTHER_USE	1
2131	323	4	GraggBulirschStoerIntegrator.java	setOrderControl	THIS	GraggBulirschStoerIntegrator	NAME	0	0	FIELD_USE	0
2132	365	4	GraggBulirschStoerIntegrator.java	initializeArrays	size	int	/	0	1	OTHER_USE	1
2132	365	4	GraggBulirschStoerIntegrator.java	initializeArrays	THIS	GraggBulirschStoerIntegrator	UNKNOWN_AS	0	3	NO_USE	1
2133	412	4	GraggBulirschStoerIntegrator.java	setInterpolationControl	useInterpolationErrorForControl	boolean	PARAM_AS	1	0	NO_USE	0
2133	412	4	GraggBulirschStoerIntegrator.java	setInterpolationControl	mudifControlParameter	int	PARAM_AS	1	2	OTHER_USE	1
2133	412	4	GraggBulirschStoerIntegrator.java	setInterpolationControl	THIS	GraggBulirschStoerIntegrator	NAME	0	0	FIELD_USE	0
2134	426	4	GraggBulirschStoerIntegrator.java	rescale	y1	double[]	PARAM_AS	1	0	ARR_USE	0
2134	426	4	GraggBulirschStoerIntegrator.java	rescale	y2	double[]	PARAM_AS	1	0	ARR_USE	0
2134	426	4	GraggBulirschStoerIntegrator.java	rescale	scale	double[]	PARAM_AS	1	0	OTHER_USE	0
2134	426	4	GraggBulirschStoerIntegrator.java	rescale	THIS	GraggBulirschStoerIntegrator	UNKNOWN_AS	0	1	FIELD_USE	1
2135	477	6	GraggBulirschStoerIntegrator.java	tryStep	j	int	1	0	2	NO_USE	1
2135	477	6	GraggBulirschStoerIntegrator.java	tryStep	n	int	ARRAY_ACCESS	0	1	NO_USE	1
2135	477	6	GraggBulirschStoerIntegrator.java	tryStep	subStep	double	/	0	0	NO_USE	0
2135	477	6	GraggBulirschStoerIntegrator.java	tryStep	subStep2	double	*	0	0	NO_USE	0
2135	477	6	GraggBulirschStoerIntegrator.java	tryStep	t	double	+	0	0	NO_USE	0
2135	477	6	GraggBulirschStoerIntegrator.java	tryStep	t0	double	PARAM_AS	1	0	NO_USE	0
2135	477	6	GraggBulirschStoerIntegrator.java	tryStep	y0	double[]	PARAM_AS	1	0	OTHER_USE	0
2135	477	6	GraggBulirschStoerIntegrator.java	tryStep	step	double	PARAM_AS	1	0	NO_USE	0
2135	477	6	GraggBulirschStoerIntegrator.java	tryStep	k	int	PARAM_AS	1	1	NO_USE	0
2135	477	6	GraggBulirschStoerIntegrator.java	tryStep	scale	double[]	PARAM_AS	1	0	NO_USE	0
2135	477	6	GraggBulirschStoerIntegrator.java	tryStep	f	double[][]	PARAM_AS	1	0	NO_USE	0
2135	477	6	GraggBulirschStoerIntegrator.java	tryStep	yMiddle	double[]	PARAM_AS	1	0	PARAM_USE	0
2135	477	6	GraggBulirschStoerIntegrator.java	tryStep	yEnd	double[]	+	1	0	PARAM_USE	0
2135	477	6	GraggBulirschStoerIntegrator.java	tryStep	yTmp	double[]	ARRAY_ACCESS	1	0	NO_USE	0
2135	477	6	GraggBulirschStoerIntegrator.java	tryStep	THIS	GraggBulirschStoerIntegrator	UNKNOWN_AS	0	3	FIELD_USE	0
2136	492	6	GraggBulirschStoerIntegrator.java	tryStep	j	int	1	0	2	+	1
2136	492	6	GraggBulirschStoerIntegrator.java	tryStep	n	int	ARRAY_ACCESS	0	1	NO_USE	0
2136	492	6	GraggBulirschStoerIntegrator.java	tryStep	subStep	double	/	0	0	NO_USE	0
2136	492	6	GraggBulirschStoerIntegrator.java	tryStep	subStep2	double	*	0	0	NO_USE	0
2136	492	6	GraggBulirschStoerIntegrator.java	tryStep	t	double	NAME	0	0	NO_USE	0
2136	492	6	GraggBulirschStoerIntegrator.java	tryStep	t0	double	PARAM_AS	1	0	NO_USE	0
2136	492	6	GraggBulirschStoerIntegrator.java	tryStep	y0	double[]	PARAM_AS	1	0	NO_USE	0
2136	492	6	GraggBulirschStoerIntegrator.java	tryStep	step	double	PARAM_AS	1	0	NO_USE	0
2136	492	6	GraggBulirschStoerIntegrator.java	tryStep	k	int	PARAM_AS	1	1	NO_USE	1
2136	492	6	GraggBulirschStoerIntegrator.java	tryStep	scale	double[]	PARAM_AS	1	0	OTHER_USE	0
2136	492	6	GraggBulirschStoerIntegrator.java	tryStep	f	double[][]	PARAM_AS	1	0	ARR_USE	0
2136	492	6	GraggBulirschStoerIntegrator.java	tryStep	yMiddle	double[]	PARAM_AS	1	0	NO_USE	0
2136	492	6	GraggBulirschStoerIntegrator.java	tryStep	yEnd	double[]	+	1	0	NO_USE	0
2136	492	6	GraggBulirschStoerIntegrator.java	tryStep	yTmp	double[]	NAME	1	0	NO_USE	0
2136	492	6	GraggBulirschStoerIntegrator.java	tryStep	THIS	GraggBulirschStoerIntegrator	UNKNOWN_AS	0	3	FIELD_USE	1
2137	503	8	GraggBulirschStoerIntegrator.java	tryStep	initialNorm	double	*	0	1	NO_USE	1
2137	503	8	GraggBulirschStoerIntegrator.java	tryStep	deltaNorm	double	*	0	1	NO_USE	1
2137	503	8	GraggBulirschStoerIntegrator.java	tryStep	j	int	1	0	2	NO_USE	0
2137	503	8	GraggBulirschStoerIntegrator.java	tryStep	n	int	ARRAY_ACCESS	0	1	NO_USE	0
2137	503	8	GraggBulirschStoerIntegrator.java	tryStep	subStep	double	/	0	0	NO_USE	0
2137	503	8	GraggBulirschStoerIntegrator.java	tryStep	subStep2	double	*	0	0	NO_USE	0
2137	503	8	GraggBulirschStoerIntegrator.java	tryStep	t	double	NAME	0	0	NO_USE	0
2137	503	8	GraggBulirschStoerIntegrator.java	tryStep	t0	double	PARAM_AS	1	0	NO_USE	0
2137	503	8	GraggBulirschStoerIntegrator.java	tryStep	y0	double[]	PARAM_AS	1	0	NO_USE	0
2137	503	8	GraggBulirschStoerIntegrator.java	tryStep	step	double	PARAM_AS	1	0	NO_USE	0
2137	503	8	GraggBulirschStoerIntegrator.java	tryStep	k	int	PARAM_AS	1	1	NO_USE	0
2137	503	8	GraggBulirschStoerIntegrator.java	tryStep	scale	double[]	PARAM_AS	1	0	NO_USE	0
2137	503	8	GraggBulirschStoerIntegrator.java	tryStep	f	double[][]	PARAM_AS	1	0	NO_USE	0
2137	503	8	GraggBulirschStoerIntegrator.java	tryStep	yMiddle	double[]	PARAM_AS	1	0	NO_USE	0
2137	503	8	GraggBulirschStoerIntegrator.java	tryStep	yEnd	double[]	+	1	0	NO_USE	0
2137	503	8	GraggBulirschStoerIntegrator.java	tryStep	yTmp	double[]	NAME	1	0	NO_USE	0
2137	503	8	GraggBulirschStoerIntegrator.java	tryStep	THIS	GraggBulirschStoerIntegrator	UNKNOWN_AS	0	3	NO_USE	0
2138	583	4	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2138	583	4	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2138	583	4	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2138	583	4	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2138	583	4	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2138	583	4	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2138	583	4	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2138	583	4	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	NO_USE	0
2138	583	4	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2138	583	4	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2138	583	4	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	PARAM_USE	1
2138	583	4	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2138	583	4	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	PARAM_USE	1
2138	583	4	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	UNKNOWN_AS	0	32	FIELD_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	error	double	UNKNOWN_AS	0	8	NO_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	PARAM_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	PARAM_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	NO_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	PARAM_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	max()	0	12	*	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	hNew	double	0	0	0	NO_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	maxError	double	NAME	0	1	NO_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	OTHER_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	1
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	!x	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	PARAM_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	PARAM_USE	0
2139	627	6	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	LITERAL	0	32	CLALLER_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	error	double	UNKNOWN_AS	0	8	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	max()	0	12	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	hNew	double	0	0	0	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	maxError	double	NAME	0	1	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	1
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	PARAM_USE	0
2140	632	8	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	LITERAL	0	32	CLALLER_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	error	double	UNKNOWN_AS	0	8	NO_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	PARAM_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	PARAM_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	NO_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	PARAM_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	max()	0	12	*	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	hNew	double	0	0	0	NO_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	maxError	double	NAME	0	1	NO_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	1
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	PARAM_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	PARAM_USE	0
2141	636	8	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	LITERAL	0	32	CLALLER_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	error	double	UNKNOWN_AS	0	8	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	1
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	max()	0	12	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	hNew	double	initializeStep()	0	0	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	maxError	double	NAME	0	1	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	-	1
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2142	649	6	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	NAME	0	32	FIELD_USE	1
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	loop	boolean	LITERAL	0	0	NO_USE	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	error	double	UNKNOWN_AS	0	8	/	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	k	int	PREFIX_EXPR	0	22	>	1
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	PARAM_USE	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	PARAM_USE	1
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	1
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	NO_USE	1
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	PARAM_USE	1
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	NO_USE	1
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	ARRAY_CREATION	0	1	NO_USE	1
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	PARAM_USE	1
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	max()	0	12	-	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	hNew	double	initializeStep()	0	0	NO_USE	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	maxError	double	NAME	0	1	>	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	!x	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	||	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	PARAM_USE	1
2143	663	8	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	OTHERS	0	32	CLALLER_USE	1
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	loop	boolean	LITERAL	0	0	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	error	double	UNKNOWN_AS	0	8	/	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	k	int	PREFIX_EXPR	0	22	PARAM_USE	1
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	PARAM_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	PARAM_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	PARAM_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	PARAM_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	max()	0	12	-	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	hNew	double	abs()	0	0	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	maxError	double	NAME	0	1	>	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	!x	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	||	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	PARAM_USE	0
2144	676	10	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	OTHERS	0	32	CLALLER_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	loop	boolean	LITERAL	0	0	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	*	1
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	k	int	PREFIX_EXPR	0	22	*	1
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	PARAM_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	max()	0	12	-	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	hNew	double	abs()	0	0	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	maxError	double	NAME	0	1	NO_USE	1
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	!x	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	||	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2145	691	12	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	OTHERS	0	32	CLALLER_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	exp	double	/	0	0	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	fac	double	max()	0	0	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	pow	double	pow()	0	0	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	loop	boolean	LITERAL	0	0	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	<=	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	OTHER_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	max()	0	12	ARRIDX_USE	1
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	hNew	double	abs()	0	0	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	1
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2146	712	16	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	/	0	32	FIELD_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	exp	double	/	0	0	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	fac	double	max()	0	0	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	pow	double	pow()	0	0	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	loop	boolean	LITERAL	0	0	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	>	1
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	OTHER_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	max()	0	12	ARRIDX_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	hNew	double	abs()	0	0	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2147	715	18	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	/	0	32	FIELD_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	ratio	double	/	0	2	NO_USE	1
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	exp	double	/	0	0	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	fac	double	max()	0	0	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	pow	double	pow()	0	0	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	loop	boolean	LITERAL	0	0	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	1
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	OTHER_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	max()	0	12	>	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	hNew	double	abs()	0	0	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2148	724	20	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	/	0	32	FIELD_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	ratio	double	/	0	2	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	exp	double	/	0	0	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	fac	double	max()	0	0	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	pow	double	pow()	0	0	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	loop	boolean	LITERAL	0	0	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	--x	1
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	hNew	double	abs()	0	0	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2149	730	22	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	/	0	32	NO_USE	1
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	exp	double	/	0	0	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	fac	double	max()	0	0	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	pow	double	pow()	0	0	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	loop	boolean	LITERAL	0	0	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	>	1
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	+	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	>	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	hNew	double	ARRAY_ACCESS	0	0	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2150	742	16	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	/	0	32	FIELD_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	ratio	double	/	0	2	NO_USE	1
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	exp	double	/	0	0	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	fac	double	max()	0	0	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	pow	double	pow()	0	0	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	loop	boolean	LITERAL	0	0	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	1
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	>	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	hNew	double	ARRAY_ACCESS	0	0	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2151	750	18	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	/	0	32	FIELD_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	ratio	double	/	0	2	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	exp	double	/	0	0	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	fac	double	max()	0	0	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	pow	double	pow()	0	0	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	loop	boolean	LITERAL	0	0	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	--x	1
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	hNew	double	ARRAY_ACCESS	0	0	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2152	755	20	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	/	0	32	NO_USE	1
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	exp	double	/	0	0	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	fac	double	max()	0	0	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	pow	double	pow()	0	0	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	loop	boolean	LITERAL	0	0	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	1
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	>	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	hNew	double	ARRAY_ACCESS	0	0	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2153	766	16	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	/	0	32	FIELD_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	exp	double	/	0	0	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	fac	double	max()	0	0	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	pow	double	pow()	0	0	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	loop	boolean	LITERAL	0	0	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	--x	1
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	hNew	double	ARRAY_ACCESS	0	0	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2154	768	18	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	/	0	32	NO_USE	1
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	exp	double	/	0	0	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	fac	double	max()	0	0	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	pow	double	pow()	0	0	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	loop	boolean	LITERAL	0	0	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	1
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	hNew	double	ARRAY_ACCESS	0	0	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	1
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2155	779	16	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	/	0	32	NO_USE	1
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	1
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	PARAM_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	hNew	double	ARRAY_ACCESS	0	0	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2156	791	6	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	/	0	32	CLALLER_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	1
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	<=	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	hInt	double	getMaxStep()	0	0	OTHER_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	ARRAY_CREATION	0	1	PARAM_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_CREATION	0	1	ARR_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	ARRAY_CREATION	0	1	ARR_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	PARAM_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	OTHER_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	hNew	double	ARRAY_ACCESS	0	0	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	OTHER_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2157	798	6	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	/	0	32	CLALLER_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	mu	int	+	0	1	PARAM_USE	1
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	hInt	double	getMaxStep()	0	0	OTHER_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	*	0	1	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_ACCESS	0	1	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	NAME	0	1	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	PARAM_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	OTHER_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	hNew	double	ARRAY_ACCESS	0	0	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2158	839	8	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	/	0	32	FIELD_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	gbsInterpolator	GraggBulirschStoerStepInterpolator	CAST	0	0	CLALLER_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	mu	int	+	0	1	+	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	hInt	double	getMaxStep()	0	0	OTHER_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	*	0	1	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_ACCESS	0	1	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	NAME	0	1	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	PARAM_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	hNew	double	ARRAY_ACCESS	0	0	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2159	846	10	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	/	0	32	FIELD_USE	1
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	interpError	double	estimateError()	0	1	NO_USE	1
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	gbsInterpolator	GraggBulirschStoerStepInterpolator	CAST	0	0	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	mu	int	+	0	1	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	hInt	double	abs()	0	0	OTHER_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	*	0	1	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_ACCESS	0	1	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	NAME	0	1	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	hNew	double	ARRAY_ACCESS	0	0	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2160	851	12	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	/	0	32	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	1
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	==	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	hInt	double	abs()	0	0	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	PARAM_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	PARAM_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	*	0	1	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_ACCESS	0	1	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	NAME	0	1	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	<=	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	hNew	double	NAME	0	0	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	OTHER_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	OTHER_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	PARAM_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	PARAM_USE	0
2161	861	6	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	/	0	32	FIELD_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	optimalIter	int	UNKNOWN_AS	0	2	ARRIDX_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	<=	1
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	hInt	double	abs()	0	0	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	*	0	1	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_ACCESS	0	1	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	NAME	0	1	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	<=	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	hNew	double	NAME	0	0	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	OTHER_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2162	874	8	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	acceptStep()	0	32	FIELD_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	optimalIter	int	2	0	2	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	hInt	double	abs()	0	0	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	*	0	1	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_ACCESS	0	1	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	NAME	0	1	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	hNew	double	NAME	0	0	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	1
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2163	876	10	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	acceptStep()	0	32	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	optimalIter	int	1	0	2	ARRIDX_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	OTHER_USE	1
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	hInt	double	abs()	0	0	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	*	0	1	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_ACCESS	0	1	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	NAME	0	1	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	NO_USE	1
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	hNew	double	NAME	0	0	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2164	879	15	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	acceptStep()	0	32	FIELD_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	optimalIter	int	NAME	0	2	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	-	1
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	hInt	double	abs()	0	0	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	*	0	1	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_ACCESS	0	1	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	NAME	0	1	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	hNew	double	NAME	0	0	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2165	881	10	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	acceptStep()	0	32	FIELD_USE	1
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	optimalIter	int	-	0	2	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	+	1
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	hInt	double	abs()	0	0	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	*	0	1	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_ACCESS	0	1	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	NAME	0	1	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	hNew	double	NAME	0	0	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2166	883	17	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	acceptStep()	0	32	FIELD_USE	1
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	optimalIter	int	-	0	2	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	-	1
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	hInt	double	abs()	0	0	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	*	0	1	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_ACCESS	0	1	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	NAME	0	1	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	hNew	double	NAME	0	0	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2167	888	10	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	acceptStep()	0	32	NO_USE	1
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	optimalIter	int	-	0	2	NO_USE	1
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	PARAM_USE	1
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	hInt	double	abs()	0	0	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	*	0	1	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_ACCESS	0	1	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	NAME	0	1	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	hNew	double	NAME	0	0	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2168	892	10	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	acceptStep()	0	32	FIELD_USE	1
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	optimalIter	int	min()	0	2	PARAM_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	PARAM_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	hInt	double	abs()	0	0	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	PARAM_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	*	0	1	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_ACCESS	0	1	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	NAME	0	1	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	ARRIDX_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	hNew	double	NAME	0	0	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	1
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2169	897	8	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	acceptStep()	0	32	FIELD_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	optimalIter	int	min()	0	2	ARRIDX_USE	1
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	<	1
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	hInt	double	abs()	0	0	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	PARAM_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	*	0	1	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_ACCESS	0	1	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	NAME	0	1	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	min()	0	12	<	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	hNew	double	min()	0	0	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2170	904	10	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	acceptStep()	0	32	FIELD_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	optimalIter	int	min()	0	2	+	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	ARRIDX_USE	1
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	hInt	double	abs()	0	0	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	PARAM_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	*	0	1	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_ACCESS	0	1	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	NAME	0	1	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	min()	0	12	NO_USE	1
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	hNew	double	ARRAY_ACCESS	0	0	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2171	907	12	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	acceptStep()	0	32	CLALLER_USE	1
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	hInt	double	abs()	0	0	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	1
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	*	0	1	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_ACCESS	0	1	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	NAME	0	1	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	hNew	double	min()	0	0	-x	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2172	926	6	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	acceptStep()	0	32	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	error	double	sqrt()	0	8	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	reject	boolean	LITERAL	0	3	NO_USE	1
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	k	int	/	0	22	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	hInt	double	abs()	0	0	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	forward	boolean	>	0	3	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	yDot0	double[]	ARRAY_CREATION	0	0	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	y1	double[]	ARRAY_CREATION	0	1	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	1	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	yTmpDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	diagonal	double[][]	*	0	1	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	y1Diag	double[][]	ARRAY_CREATION	0	1	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	fk	double[][][]	ARRAY_ACCESS	0	1	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	yDot1	double[]	ARRAY_CREATION	0	0	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	yMidDots	double[][]	NAME	0	1	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	1	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	tol	double	OTHERS	0	0	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	log10R	double	log10()	0	0	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	targetIter	int	NAME	0	12	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	interpolator	AbstractStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	hNew	double	PREFIX_EXPR	0	0	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	maxError	double	max()	0	1	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	previousRejected	boolean	LITERAL	0	1	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	newStep	boolean	LITERAL	0	0	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	firstStepAlreadyComputed	boolean	LITERAL	0	1	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	t	double	PARAM_AS	1	2	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	y	double[]	PARAM_AS	1	2	NO_USE	0
2173	932	6	GraggBulirschStoerIntegrator.java	integrate	THIS	GraggBulirschStoerIntegrator	acceptStep()	0	32	NO_USE	0
2174	279	4	DormandPrince853Integrator.java	estimateError	error1	double	*	0	0	NO_USE	0
2174	279	4	DormandPrince853Integrator.java	estimateError	error2	double	*	0	0	NO_USE	0
2174	279	4	DormandPrince853Integrator.java	estimateError	den	double	+	0	1	NO_USE	1
2174	279	4	DormandPrince853Integrator.java	estimateError	yDotK	double[][]	PARAM_AS	1	0	NO_USE	0
2174	279	4	DormandPrince853Integrator.java	estimateError	y0	double[]	PARAM_AS	1	0	NO_USE	0
2174	279	4	DormandPrince853Integrator.java	estimateError	y1	double[]	PARAM_AS	1	0	NO_USE	0
2174	279	4	DormandPrince853Integrator.java	estimateError	h	double	PARAM_AS	1	0	NO_USE	0
2174	279	4	DormandPrince853Integrator.java	estimateError	THIS	DormandPrince853Integrator	UNKNOWN_AS	0	0	NO_USE	0
2175	221	8	AdamsMoultonIntegrator.java	integrate	n	int	NAME	0	0	PARAM_USE	0
2175	221	8	AdamsMoultonIntegrator.java	integrate	forward	boolean	>	0	0	NO_USE	0
2175	221	8	AdamsMoultonIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2175	221	8	AdamsMoultonIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2175	221	8	AdamsMoultonIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	PARAM_USE	1
2175	221	8	AdamsMoultonIntegrator.java	integrate	t	double	PARAM_AS	1	0	NO_USE	0
2175	221	8	AdamsMoultonIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	PARAM_USE	1
2175	221	8	AdamsMoultonIntegrator.java	integrate	THIS	AdamsMoultonIntegrator	UNKNOWN_AS	0	1	NO_USE	0
2176	273	16	AdamsMoultonIntegrator.java	integrate	stepEnd	double	+	0	0	NO_USE	0
2176	273	16	AdamsMoultonIntegrator.java	integrate	error	double	walkInOptimizedOrder()	0	1	PARAM_USE	1
2176	273	16	AdamsMoultonIntegrator.java	integrate	n	int	NAME	0	0	NO_USE	0
2176	273	16	AdamsMoultonIntegrator.java	integrate	forward	boolean	>	0	0	PARAM_USE	0
2176	273	16	AdamsMoultonIntegrator.java	integrate	yDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2176	273	16	AdamsMoultonIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	0	NO_USE	0
2176	273	16	AdamsMoultonIntegrator.java	integrate	predictedScaled	double[]	*	0	0	NO_USE	0
2176	273	16	AdamsMoultonIntegrator.java	integrate	nordsieckTmp	Array2DRowRealMatrix	updateHighOrderDerivativesPhase1()	0	0	NO_USE	0
2176	273	16	AdamsMoultonIntegrator.java	integrate	interpolator	NordsieckStepInterpolator	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
2176	273	16	AdamsMoultonIntegrator.java	integrate	hNew	double	NAME	0	0	PARAM_USE	0
2176	273	16	AdamsMoultonIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2176	273	16	AdamsMoultonIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2176	273	16	AdamsMoultonIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2176	273	16	AdamsMoultonIntegrator.java	integrate	t	double	PARAM_AS	1	0	NO_USE	0
2176	273	16	AdamsMoultonIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	NO_USE	0
2176	273	16	AdamsMoultonIntegrator.java	integrate	THIS	AdamsMoultonIntegrator	NAME	0	1	CLALLER_USE	0
2177	302	12	AdamsMoultonIntegrator.java	integrate	error	double	walkInOptimizedOrder()	0	1	PARAM_USE	0
2177	302	12	AdamsMoultonIntegrator.java	integrate	stepEnd	double	+	0	0	NO_USE	0
2177	302	12	AdamsMoultonIntegrator.java	integrate	correctedScaled	double[]	*	0	0	NO_USE	0
2177	302	12	AdamsMoultonIntegrator.java	integrate	n	int	NAME	0	0	NO_USE	0
2177	302	12	AdamsMoultonIntegrator.java	integrate	forward	boolean	>	0	0	OTHER_USE	0
2177	302	12	AdamsMoultonIntegrator.java	integrate	yDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2177	302	12	AdamsMoultonIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	0	NO_USE	0
2177	302	12	AdamsMoultonIntegrator.java	integrate	predictedScaled	double[]	*	0	0	NO_USE	0
2177	302	12	AdamsMoultonIntegrator.java	integrate	nordsieckTmp	Array2DRowRealMatrix	updateHighOrderDerivativesPhase1()	0	0	NO_USE	0
2177	302	12	AdamsMoultonIntegrator.java	integrate	interpolator	NordsieckStepInterpolator	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
2177	302	12	AdamsMoultonIntegrator.java	integrate	hNew	double	filterStep()	0	0	+	0
2177	302	12	AdamsMoultonIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2177	302	12	AdamsMoultonIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2177	302	12	AdamsMoultonIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2177	302	12	AdamsMoultonIntegrator.java	integrate	t	double	PARAM_AS	1	0	PARAM_USE	0
2177	302	12	AdamsMoultonIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	PARAM_USE	0
2177	302	12	AdamsMoultonIntegrator.java	integrate	THIS	AdamsMoultonIntegrator	NAME	0	1	FIELD_USE	1
2178	307	16	AdamsMoultonIntegrator.java	integrate	error	double	walkInOptimizedOrder()	0	1	NO_USE	0
2178	307	16	AdamsMoultonIntegrator.java	integrate	stepEnd	double	+	0	0	NO_USE	0
2178	307	16	AdamsMoultonIntegrator.java	integrate	correctedScaled	double[]	*	0	0	NO_USE	0
2178	307	16	AdamsMoultonIntegrator.java	integrate	n	int	NAME	0	0	NO_USE	0
2178	307	16	AdamsMoultonIntegrator.java	integrate	forward	boolean	>	0	0	NO_USE	0
2178	307	16	AdamsMoultonIntegrator.java	integrate	yDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2178	307	16	AdamsMoultonIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	0	NO_USE	0
2178	307	16	AdamsMoultonIntegrator.java	integrate	predictedScaled	double[]	*	0	0	NO_USE	0
2178	307	16	AdamsMoultonIntegrator.java	integrate	nordsieckTmp	Array2DRowRealMatrix	updateHighOrderDerivativesPhase1()	0	0	NO_USE	0
2178	307	16	AdamsMoultonIntegrator.java	integrate	interpolator	NordsieckStepInterpolator	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
2178	307	16	AdamsMoultonIntegrator.java	integrate	hNew	double	filterStep()	0	0	NO_USE	0
2178	307	16	AdamsMoultonIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2178	307	16	AdamsMoultonIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2178	307	16	AdamsMoultonIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2178	307	16	AdamsMoultonIntegrator.java	integrate	t	double	PARAM_AS	1	0	PARAM_USE	0
2178	307	16	AdamsMoultonIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	PARAM_USE	0
2178	307	16	AdamsMoultonIntegrator.java	integrate	THIS	AdamsMoultonIntegrator	NAME	0	1	CLALLER_USE	1
2179	324	16	AdamsMoultonIntegrator.java	integrate	factor	double	computeStepGrowShrinkFactor()	0	0	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	scaledH	double	*	0	0	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	nextIsLast	boolean	OTHERS	0	0	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	filteredNextT	double	+	0	0	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	filteredNextIsLast	boolean	OTHERS	0	0	NO_USE	1
2179	324	16	AdamsMoultonIntegrator.java	integrate	error	double	walkInOptimizedOrder()	0	1	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	stepEnd	double	+	0	0	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	correctedScaled	double[]	*	0	0	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	n	int	NAME	0	0	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	forward	boolean	>	0	0	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	yDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	0	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	predictedScaled	double[]	*	0	0	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	nordsieckTmp	Array2DRowRealMatrix	updateHighOrderDerivativesPhase1()	0	0	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	interpolator	NordsieckStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	hNew	double	filterStep()	0	0	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	t	double	PARAM_AS	1	0	-	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	NO_USE	0
2179	324	16	AdamsMoultonIntegrator.java	integrate	THIS	AdamsMoultonIntegrator	NAME	0	1	FIELD_USE	0
2180	204	8	AdamsBashforthIntegrator.java	integrate	n	int	NAME	0	0	PARAM_USE	0
2180	204	8	AdamsBashforthIntegrator.java	integrate	forward	boolean	>	0	0	NO_USE	0
2180	204	8	AdamsBashforthIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2180	204	8	AdamsBashforthIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2180	204	8	AdamsBashforthIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	PARAM_USE	1
2180	204	8	AdamsBashforthIntegrator.java	integrate	t	double	PARAM_AS	1	0	NO_USE	0
2180	204	8	AdamsBashforthIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	PARAM_USE	1
2180	204	8	AdamsBashforthIntegrator.java	integrate	THIS	AdamsBashforthIntegrator	UNKNOWN_AS	0	1	NO_USE	0
2181	250	16	AdamsBashforthIntegrator.java	integrate	error	double	sqrt()	0	1	PARAM_USE	1
2181	250	16	AdamsBashforthIntegrator.java	integrate	n	int	NAME	0	0	NO_USE	0
2181	250	16	AdamsBashforthIntegrator.java	integrate	forward	boolean	>	0	0	PARAM_USE	0
2181	250	16	AdamsBashforthIntegrator.java	integrate	yDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2181	250	16	AdamsBashforthIntegrator.java	integrate	interpolator	NordsieckStepInterpolator	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
2181	250	16	AdamsBashforthIntegrator.java	integrate	lastRow	int	-	0	0	NO_USE	0
2181	250	16	AdamsBashforthIntegrator.java	integrate	hNew	double	NAME	0	0	PARAM_USE	0
2181	250	16	AdamsBashforthIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2181	250	16	AdamsBashforthIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2181	250	16	AdamsBashforthIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2181	250	16	AdamsBashforthIntegrator.java	integrate	t	double	PARAM_AS	1	0	NO_USE	0
2181	250	16	AdamsBashforthIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	NO_USE	0
2181	250	16	AdamsBashforthIntegrator.java	integrate	THIS	AdamsBashforthIntegrator	NAME	0	1	CLALLER_USE	0
2182	284	12	AdamsBashforthIntegrator.java	integrate	error	double	sqrt()	0	1	PARAM_USE	0
2182	284	12	AdamsBashforthIntegrator.java	integrate	stepEnd	double	+	0	0	NO_USE	0
2182	284	12	AdamsBashforthIntegrator.java	integrate	predictedScaled	double[]	*	0	0	NO_USE	0
2182	284	12	AdamsBashforthIntegrator.java	integrate	nordsieckTmp	Array2DRowRealMatrix	updateHighOrderDerivativesPhase1()	0	0	NO_USE	0
2182	284	12	AdamsBashforthIntegrator.java	integrate	n	int	NAME	0	0	NO_USE	0
2182	284	12	AdamsBashforthIntegrator.java	integrate	forward	boolean	>	0	0	OTHER_USE	0
2182	284	12	AdamsBashforthIntegrator.java	integrate	yDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2182	284	12	AdamsBashforthIntegrator.java	integrate	interpolator	NordsieckStepInterpolator	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
2182	284	12	AdamsBashforthIntegrator.java	integrate	lastRow	int	-	0	0	NO_USE	0
2182	284	12	AdamsBashforthIntegrator.java	integrate	hNew	double	filterStep()	0	0	+	0
2182	284	12	AdamsBashforthIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2182	284	12	AdamsBashforthIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2182	284	12	AdamsBashforthIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2182	284	12	AdamsBashforthIntegrator.java	integrate	t	double	PARAM_AS	1	0	PARAM_USE	0
2182	284	12	AdamsBashforthIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	PARAM_USE	0
2182	284	12	AdamsBashforthIntegrator.java	integrate	THIS	AdamsBashforthIntegrator	NAME	0	1	FIELD_USE	1
2183	289	16	AdamsBashforthIntegrator.java	integrate	error	double	sqrt()	0	1	NO_USE	0
2183	289	16	AdamsBashforthIntegrator.java	integrate	stepEnd	double	+	0	0	NO_USE	0
2183	289	16	AdamsBashforthIntegrator.java	integrate	predictedScaled	double[]	*	0	0	NO_USE	0
2183	289	16	AdamsBashforthIntegrator.java	integrate	nordsieckTmp	Array2DRowRealMatrix	updateHighOrderDerivativesPhase1()	0	0	NO_USE	0
2183	289	16	AdamsBashforthIntegrator.java	integrate	n	int	NAME	0	0	NO_USE	0
2183	289	16	AdamsBashforthIntegrator.java	integrate	forward	boolean	>	0	0	NO_USE	0
2183	289	16	AdamsBashforthIntegrator.java	integrate	yDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2183	289	16	AdamsBashforthIntegrator.java	integrate	interpolator	NordsieckStepInterpolator	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
2183	289	16	AdamsBashforthIntegrator.java	integrate	lastRow	int	-	0	0	NO_USE	0
2183	289	16	AdamsBashforthIntegrator.java	integrate	hNew	double	filterStep()	0	0	NO_USE	0
2183	289	16	AdamsBashforthIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2183	289	16	AdamsBashforthIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2183	289	16	AdamsBashforthIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2183	289	16	AdamsBashforthIntegrator.java	integrate	t	double	PARAM_AS	1	0	PARAM_USE	0
2183	289	16	AdamsBashforthIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	PARAM_USE	0
2183	289	16	AdamsBashforthIntegrator.java	integrate	THIS	AdamsBashforthIntegrator	NAME	0	1	CLALLER_USE	1
2184	305	16	AdamsBashforthIntegrator.java	integrate	factor	double	computeStepGrowShrinkFactor()	0	0	NO_USE	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	scaledH	double	*	0	0	NO_USE	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	nextIsLast	boolean	OTHERS	0	0	NO_USE	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	filteredNextT	double	+	0	0	NO_USE	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	filteredNextIsLast	boolean	OTHERS	0	0	NO_USE	1
2184	305	16	AdamsBashforthIntegrator.java	integrate	error	double	sqrt()	0	1	NO_USE	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	stepEnd	double	+	0	0	NO_USE	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	predictedScaled	double[]	*	0	0	NO_USE	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	nordsieckTmp	Array2DRowRealMatrix	updateHighOrderDerivativesPhase1()	0	0	NO_USE	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	n	int	NAME	0	0	NO_USE	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	forward	boolean	>	0	0	NO_USE	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	yDot	double[]	ARRAY_CREATION	0	0	NO_USE	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	interpolator	NordsieckStepInterpolator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	lastRow	int	-	0	0	NO_USE	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	hNew	double	filterStep()	0	0	NO_USE	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	t	double	PARAM_AS	1	0	-	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	NO_USE	0
2184	305	16	AdamsBashforthIntegrator.java	integrate	THIS	AdamsBashforthIntegrator	NAME	0	1	FIELD_USE	0
2185	204	4	EmbeddedRungeKuttaIntegrator.java	integrate	forward	boolean	>	0	0	NO_USE	0
2185	204	4	EmbeddedRungeKuttaIntegrator.java	integrate	stages	int	+	0	0	NO_USE	0
2185	204	4	EmbeddedRungeKuttaIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2185	204	4	EmbeddedRungeKuttaIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2185	204	4	EmbeddedRungeKuttaIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	PARAM_USE	1
2185	204	4	EmbeddedRungeKuttaIntegrator.java	integrate	t	double	PARAM_AS	1	0	NO_USE	0
2185	204	4	EmbeddedRungeKuttaIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	PARAM_USE	1
2185	204	4	EmbeddedRungeKuttaIntegrator.java	integrate	THIS	EmbeddedRungeKuttaIntegrator	UNKNOWN_AS	0	3	FIELD_USE	0
2186	235	8	EmbeddedRungeKuttaIntegrator.java	integrate	error	double	10	0	1	NO_USE	0
2186	235	8	EmbeddedRungeKuttaIntegrator.java	integrate	forward	boolean	>	0	0	NO_USE	0
2186	235	8	EmbeddedRungeKuttaIntegrator.java	integrate	stages	int	+	0	0	NO_USE	0
2186	235	8	EmbeddedRungeKuttaIntegrator.java	integrate	yDotK	double[][]	ARRAY_CREATION	0	0	ARR_USE	0
2186	235	8	EmbeddedRungeKuttaIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	0	NO_USE	0
2186	235	8	EmbeddedRungeKuttaIntegrator.java	integrate	yDotTmp	double[]	ARRAY_CREATION	0	0	NO_USE	0
2186	235	8	EmbeddedRungeKuttaIntegrator.java	integrate	interpolator	RungeKuttaStepInterpolator	CAST	0	0	NO_USE	0
2186	235	8	EmbeddedRungeKuttaIntegrator.java	integrate	hNew	double	0	0	0	NO_USE	0
2186	235	8	EmbeddedRungeKuttaIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	1
2186	235	8	EmbeddedRungeKuttaIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2186	235	8	EmbeddedRungeKuttaIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2186	235	8	EmbeddedRungeKuttaIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2186	235	8	EmbeddedRungeKuttaIntegrator.java	integrate	t	double	PARAM_AS	1	0	NO_USE	0
2186	235	8	EmbeddedRungeKuttaIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	PARAM_USE	0
2186	235	8	EmbeddedRungeKuttaIntegrator.java	integrate	THIS	EmbeddedRungeKuttaIntegrator	LITERAL	0	3	CLALLER_USE	1
2187	240	8	EmbeddedRungeKuttaIntegrator.java	integrate	error	double	10	0	1	NO_USE	0
2187	240	8	EmbeddedRungeKuttaIntegrator.java	integrate	forward	boolean	>	0	0	PARAM_USE	0
2187	240	8	EmbeddedRungeKuttaIntegrator.java	integrate	stages	int	+	0	0	NO_USE	0
2187	240	8	EmbeddedRungeKuttaIntegrator.java	integrate	yDotK	double[][]	ARRAY_CREATION	0	0	ARR_USE	0
2187	240	8	EmbeddedRungeKuttaIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
2187	240	8	EmbeddedRungeKuttaIntegrator.java	integrate	yDotTmp	double[]	ARRAY_CREATION	0	0	NO_USE	0
2187	240	8	EmbeddedRungeKuttaIntegrator.java	integrate	interpolator	RungeKuttaStepInterpolator	CAST	0	0	NO_USE	0
2187	240	8	EmbeddedRungeKuttaIntegrator.java	integrate	hNew	double	0	0	0	NO_USE	0
2187	240	8	EmbeddedRungeKuttaIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	1
2187	240	8	EmbeddedRungeKuttaIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	PARAM_USE	0
2187	240	8	EmbeddedRungeKuttaIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2187	240	8	EmbeddedRungeKuttaIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2187	240	8	EmbeddedRungeKuttaIntegrator.java	integrate	t	double	PARAM_AS	1	0	NO_USE	0
2187	240	8	EmbeddedRungeKuttaIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	ARR_USE	0
2187	240	8	EmbeddedRungeKuttaIntegrator.java	integrate	THIS	EmbeddedRungeKuttaIntegrator	LITERAL	0	3	FIELD_USE	0
2188	242	10	EmbeddedRungeKuttaIntegrator.java	integrate	scale	double[]	ARRAY_CREATION	0	0	OTHER_USE	0
2188	242	10	EmbeddedRungeKuttaIntegrator.java	integrate	error	double	10	0	1	NO_USE	0
2188	242	10	EmbeddedRungeKuttaIntegrator.java	integrate	forward	boolean	>	0	0	NO_USE	0
2188	242	10	EmbeddedRungeKuttaIntegrator.java	integrate	stages	int	+	0	0	NO_USE	0
2188	242	10	EmbeddedRungeKuttaIntegrator.java	integrate	yDotK	double[][]	ARRAY_CREATION	0	0	NO_USE	0
2188	242	10	EmbeddedRungeKuttaIntegrator.java	integrate	yTmp	double[]	ARRAY_CREATION	0	0	NO_USE	0
2188	242	10	EmbeddedRungeKuttaIntegrator.java	integrate	yDotTmp	double[]	ARRAY_CREATION	0	0	NO_USE	0
2188	242	10	EmbeddedRungeKuttaIntegrator.java	integrate	interpolator	RungeKuttaStepInterpolator	CAST	0	0	NO_USE	0
2188	242	10	EmbeddedRungeKuttaIntegrator.java	integrate	hNew	double	0	0	0	NO_USE	0
2188	242	10	EmbeddedRungeKuttaIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2188	242	10	EmbeddedRungeKuttaIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2188	242	10	EmbeddedRungeKuttaIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2188	242	10	EmbeddedRungeKuttaIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2188	242	10	EmbeddedRungeKuttaIntegrator.java	integrate	t	double	PARAM_AS	1	0	NO_USE	0
2188	242	10	EmbeddedRungeKuttaIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	ARR_USE	0
2188	242	10	EmbeddedRungeKuttaIntegrator.java	integrate	THIS	EmbeddedRungeKuttaIntegrator	LITERAL	0	3	FIELD_USE	1
2189	284	8	EmbeddedRungeKuttaIntegrator.java	integrate	error	double	estimateError()	0	1	PARAM_USE	1
2189	284	8	EmbeddedRungeKuttaIntegrator.java	integrate	forward	boolean	>	0	0	PARAM_USE	0
2189	284	8	EmbeddedRungeKuttaIntegrator.java	integrate	stages	int	+	0	0	NO_USE	0
2189	284	8	EmbeddedRungeKuttaIntegrator.java	integrate	yDotK	double[][]	ARRAY_CREATION	0	0	NO_USE	0
2189	284	8	EmbeddedRungeKuttaIntegrator.java	integrate	yTmp	double[]	+	0	0	NO_USE	0
2189	284	8	EmbeddedRungeKuttaIntegrator.java	integrate	yDotTmp	double[]	ARRAY_CREATION	0	0	NO_USE	0
2189	284	8	EmbeddedRungeKuttaIntegrator.java	integrate	interpolator	RungeKuttaStepInterpolator	CAST	0	0	NO_USE	0
2189	284	8	EmbeddedRungeKuttaIntegrator.java	integrate	hNew	double	initializeStep()	0	0	NO_USE	0
2189	284	8	EmbeddedRungeKuttaIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2189	284	8	EmbeddedRungeKuttaIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2189	284	8	EmbeddedRungeKuttaIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2189	284	8	EmbeddedRungeKuttaIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2189	284	8	EmbeddedRungeKuttaIntegrator.java	integrate	t	double	PARAM_AS	1	0	NO_USE	0
2189	284	8	EmbeddedRungeKuttaIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	NO_USE	0
2189	284	8	EmbeddedRungeKuttaIntegrator.java	integrate	THIS	EmbeddedRungeKuttaIntegrator	NAME	0	3	FIELD_USE	0
2190	300	6	EmbeddedRungeKuttaIntegrator.java	integrate	error	double	estimateError()	0	1	PARAM_USE	0
2190	300	6	EmbeddedRungeKuttaIntegrator.java	integrate	forward	boolean	>	0	0	OTHER_USE	0
2190	300	6	EmbeddedRungeKuttaIntegrator.java	integrate	stages	int	+	0	0	NO_USE	0
2190	300	6	EmbeddedRungeKuttaIntegrator.java	integrate	yDotK	double[][]	ARRAY_CREATION	0	0	ARR_USE	0
2190	300	6	EmbeddedRungeKuttaIntegrator.java	integrate	yTmp	double[]	+	0	0	NO_USE	0
2190	300	6	EmbeddedRungeKuttaIntegrator.java	integrate	yDotTmp	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
2190	300	6	EmbeddedRungeKuttaIntegrator.java	integrate	interpolator	RungeKuttaStepInterpolator	CAST	0	0	CLALLER_USE	0
2190	300	6	EmbeddedRungeKuttaIntegrator.java	integrate	hNew	double	filterStep()	0	0	+	0
2190	300	6	EmbeddedRungeKuttaIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2190	300	6	EmbeddedRungeKuttaIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2190	300	6	EmbeddedRungeKuttaIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2190	300	6	EmbeddedRungeKuttaIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	OTHER_USE	0
2190	300	6	EmbeddedRungeKuttaIntegrator.java	integrate	t	double	PARAM_AS	1	0	>=	0
2190	300	6	EmbeddedRungeKuttaIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	NO_USE	0
2190	300	6	EmbeddedRungeKuttaIntegrator.java	integrate	THIS	EmbeddedRungeKuttaIntegrator	acceptStep()	0	3	FIELD_USE	1
2191	305	10	EmbeddedRungeKuttaIntegrator.java	integrate	error	double	estimateError()	0	1	NO_USE	0
2191	305	10	EmbeddedRungeKuttaIntegrator.java	integrate	forward	boolean	>	0	0	NO_USE	0
2191	305	10	EmbeddedRungeKuttaIntegrator.java	integrate	stages	int	+	0	0	NO_USE	0
2191	305	10	EmbeddedRungeKuttaIntegrator.java	integrate	yDotK	double[][]	ARRAY_CREATION	0	0	ARR_USE	0
2191	305	10	EmbeddedRungeKuttaIntegrator.java	integrate	yTmp	double[]	+	0	0	NO_USE	0
2191	305	10	EmbeddedRungeKuttaIntegrator.java	integrate	yDotTmp	double[]	ARRAY_CREATION	0	0	PARAM_USE	0
2191	305	10	EmbeddedRungeKuttaIntegrator.java	integrate	interpolator	RungeKuttaStepInterpolator	CAST	0	0	NO_USE	0
2191	305	10	EmbeddedRungeKuttaIntegrator.java	integrate	hNew	double	filterStep()	0	0	NO_USE	0
2191	305	10	EmbeddedRungeKuttaIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2191	305	10	EmbeddedRungeKuttaIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2191	305	10	EmbeddedRungeKuttaIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2191	305	10	EmbeddedRungeKuttaIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	OTHER_USE	0
2191	305	10	EmbeddedRungeKuttaIntegrator.java	integrate	t	double	PARAM_AS	1	0	NO_USE	0
2191	305	10	EmbeddedRungeKuttaIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	NO_USE	0
2191	305	10	EmbeddedRungeKuttaIntegrator.java	integrate	THIS	EmbeddedRungeKuttaIntegrator	acceptStep()	0	3	FIELD_USE	1
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	factor	double	min()	0	0	NO_USE	0
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	scaledH	double	*	0	0	NO_USE	0
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	nextIsLast	boolean	OTHERS	0	0	NO_USE	0
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	filteredNextT	double	+	0	0	NO_USE	0
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	filteredNextIsLast	boolean	OTHERS	0	0	NO_USE	1
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	error	double	estimateError()	0	1	NO_USE	0
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	forward	boolean	>	0	0	NO_USE	0
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	stages	int	+	0	0	NO_USE	0
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	yDotK	double[][]	ARRAY_CREATION	0	0	NO_USE	0
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	yTmp	double[]	+	0	0	NO_USE	0
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	yDotTmp	double[]	ARRAY_CREATION	0	0	NO_USE	0
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	interpolator	RungeKuttaStepInterpolator	CAST	0	0	NO_USE	0
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	hNew	double	filterStep()	0	0	NO_USE	0
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	firstTime	boolean	LITERAL	0	1	NO_USE	0
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	t	double	PARAM_AS	1	0	-	0
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	NO_USE	0
2192	320	10	EmbeddedRungeKuttaIntegrator.java	integrate	THIS	EmbeddedRungeKuttaIntegrator	acceptStep()	0	3	FIELD_USE	0
2193	246	4	DormandPrince853StepInterpolator.java	DormandPrince853StepInterpolator	interpolator	DormandPrince853StepInterpolator	PARAM_AS	1	1	OTHER_USE	1
2193	246	4	DormandPrince853StepInterpolator.java	DormandPrince853StepInterpolator	THIS	DormandPrince853StepInterpolator	UNKNOWN_AS	0	1	FIELD_USE	1
2194	317	4	DormandPrince853StepInterpolator.java	computeInterpolatedStateAndDerivatives	theta	double	PARAM_AS	1	0	NO_USE	0
2194	317	4	DormandPrince853StepInterpolator.java	computeInterpolatedStateAndDerivatives	oneMinusThetaH	double	PARAM_AS	1	0	NO_USE	0
2194	317	4	DormandPrince853StepInterpolator.java	computeInterpolatedStateAndDerivatives	THIS	DormandPrince853StepInterpolator	UNKNOWN_AS	0	2	FIELD_USE	1
2195	319	6	DormandPrince853StepInterpolator.java	computeInterpolatedStateAndDerivatives	theta	double	PARAM_AS	1	0	NO_USE	0
2195	319	6	DormandPrince853StepInterpolator.java	computeInterpolatedStateAndDerivatives	oneMinusThetaH	double	PARAM_AS	1	0	NO_USE	0
2195	319	6	DormandPrince853StepInterpolator.java	computeInterpolatedStateAndDerivatives	THIS	DormandPrince853StepInterpolator	UNKNOWN_AS	0	2	FIELD_USE	1
2196	391	4	DormandPrince853StepInterpolator.java	doFinalize	THIS	DormandPrince853StepInterpolator	UNKNOWN_AS	0	1	NO_USE	1
2197	165	4	GraggBulirschStoerStepInterpolator.java	GraggBulirschStoerStepInterpolator	dimension	int	NAME	0	0	OTHER_USE	0
2197	165	4	GraggBulirschStoerStepInterpolator.java	GraggBulirschStoerStepInterpolator	interpolator	GraggBulirschStoerStepInterpolator	PARAM_AS	1	1	OTHER_USE	1
2197	165	4	GraggBulirschStoerStepInterpolator.java	GraggBulirschStoerStepInterpolator	THIS	GraggBulirschStoerStepInterpolator	NULL	0	1	CLALLER_USE	1
2198	187	4	GraggBulirschStoerStepInterpolator.java	resetTables	maxDegree	int	PARAM_AS	1	2	+	1
2198	187	4	GraggBulirschStoerStepInterpolator.java	resetTables	THIS	GraggBulirschStoerStepInterpolator	UNKNOWN_AS	0	1	FIELD_USE	0
2199	194	6	GraggBulirschStoerStepInterpolator.java	resetTables	newPols	double[][]	ARRAY_CREATION	0	0	PARAM_USE	0
2199	194	6	GraggBulirschStoerStepInterpolator.java	resetTables	maxDegree	int	PARAM_AS	1	2	NO_USE	0
2199	194	6	GraggBulirschStoerStepInterpolator.java	resetTables	THIS	GraggBulirschStoerStepInterpolator	PREFIX_EXPR	0	1	FIELD_USE	1
2200	207	6	GraggBulirschStoerStepInterpolator.java	resetTables	newPols	double[][]	ARRAY_CREATION	0	0	NO_USE	0
2200	207	6	GraggBulirschStoerStepInterpolator.java	resetTables	maxDegree	int	PARAM_AS	1	2	-	1
2200	207	6	GraggBulirschStoerStepInterpolator.java	resetTables	THIS	GraggBulirschStoerStepInterpolator	NAME	0	1	FIELD_USE	0
2201	240	4	GraggBulirschStoerStepInterpolator.java	computeCoefficients	mu	int	PARAM_AS	1	5	+	1
2201	240	4	GraggBulirschStoerStepInterpolator.java	computeCoefficients	h	double	PARAM_AS	1	0	NO_USE	0
2201	240	4	GraggBulirschStoerStepInterpolator.java	computeCoefficients	THIS	GraggBulirschStoerStepInterpolator	UNKNOWN_AS	0	3	CLALLER_USE	1
2202	259	6	GraggBulirschStoerStepInterpolator.java	computeCoefficients	yp0	double	*	0	0	NO_USE	0
2202	259	6	GraggBulirschStoerStepInterpolator.java	computeCoefficients	yp1	double	*	0	0	NO_USE	0
2202	259	6	GraggBulirschStoerStepInterpolator.java	computeCoefficients	ydiff	double	-	0	0	NO_USE	0
2202	259	6	GraggBulirschStoerStepInterpolator.java	computeCoefficients	aspl	double	-	0	0	NO_USE	0
2202	259	6	GraggBulirschStoerStepInterpolator.java	computeCoefficients	bspl	double	-	0	0	NO_USE	0
2202	259	6	GraggBulirschStoerStepInterpolator.java	computeCoefficients	i	int	NAME	0	0	NO_USE	0
2202	259	6	GraggBulirschStoerStepInterpolator.java	computeCoefficients	mu	int	PARAM_AS	1	5	NO_USE	1
2202	259	6	GraggBulirschStoerStepInterpolator.java	computeCoefficients	h	double	PARAM_AS	1	0	NO_USE	0
2202	259	6	GraggBulirschStoerStepInterpolator.java	computeCoefficients	THIS	GraggBulirschStoerStepInterpolator	NAME	0	3	NO_USE	0
2203	267	6	GraggBulirschStoerStepInterpolator.java	computeCoefficients	yp0	double	*	0	0	-	0
2203	267	6	GraggBulirschStoerStepInterpolator.java	computeCoefficients	yp1	double	*	0	0	-	0
2203	267	6	GraggBulirschStoerStepInterpolator.java	computeCoefficients	ydiff	double	-	0	0	+	0
2203	267	6	GraggBulirschStoerStepInterpolator.java	computeCoefficients	aspl	double	-	0	0	-	0
2203	267	6	GraggBulirschStoerStepInterpolator.java	computeCoefficients	bspl	double	-	0	0	-	0
2203	267	6	GraggBulirschStoerStepInterpolator.java	computeCoefficients	ph0	double	+	0	0	NO_USE	0
2203	267	6	GraggBulirschStoerStepInterpolator.java	computeCoefficients	i	int	*	0	0	ARRIDX_USE	0
2203	267	6	GraggBulirschStoerStepInterpolator.java	computeCoefficients	mu	int	PARAM_AS	1	5	>	1
2203	267	6	GraggBulirschStoerStepInterpolator.java	computeCoefficients	h	double	PARAM_AS	1	0	NO_USE	0
2203	267	6	GraggBulirschStoerStepInterpolator.java	computeCoefficients	THIS	GraggBulirschStoerStepInterpolator	*	0	3	FIELD_USE	0
2204	271	8	GraggBulirschStoerStepInterpolator.java	computeCoefficients	ph1	double	+	0	0	NO_USE	0
2204	271	8	GraggBulirschStoerStepInterpolator.java	computeCoefficients	yp0	double	*	0	0	-	0
2204	271	8	GraggBulirschStoerStepInterpolator.java	computeCoefficients	yp1	double	*	0	0	-	0
2204	271	8	GraggBulirschStoerStepInterpolator.java	computeCoefficients	ydiff	double	-	0	0	NO_USE	0
2204	271	8	GraggBulirschStoerStepInterpolator.java	computeCoefficients	aspl	double	-	0	0	-	0
2204	271	8	GraggBulirschStoerStepInterpolator.java	computeCoefficients	bspl	double	-	0	0	-	0
2204	271	8	GraggBulirschStoerStepInterpolator.java	computeCoefficients	ph0	double	+	0	0	NO_USE	0
2204	271	8	GraggBulirschStoerStepInterpolator.java	computeCoefficients	i	int	*	0	0	ARRIDX_USE	0
2204	271	8	GraggBulirschStoerStepInterpolator.java	computeCoefficients	mu	int	PARAM_AS	1	5	>	1
2204	271	8	GraggBulirschStoerStepInterpolator.java	computeCoefficients	h	double	PARAM_AS	1	0	NO_USE	0
2204	271	8	GraggBulirschStoerStepInterpolator.java	computeCoefficients	THIS	GraggBulirschStoerStepInterpolator	*	0	3	FIELD_USE	0
2205	275	10	GraggBulirschStoerStepInterpolator.java	computeCoefficients	ph2	double	-	0	0	NO_USE	0
2205	275	10	GraggBulirschStoerStepInterpolator.java	computeCoefficients	ph1	double	+	0	0	NO_USE	0
2205	275	10	GraggBulirschStoerStepInterpolator.java	computeCoefficients	yp0	double	*	0	0	NO_USE	0
2205	275	10	GraggBulirschStoerStepInterpolator.java	computeCoefficients	yp1	double	*	0	0	NO_USE	0
2205	275	10	GraggBulirschStoerStepInterpolator.java	computeCoefficients	ydiff	double	-	0	0	NO_USE	0
2205	275	10	GraggBulirschStoerStepInterpolator.java	computeCoefficients	aspl	double	-	0	0	-	0
2205	275	10	GraggBulirschStoerStepInterpolator.java	computeCoefficients	bspl	double	-	0	0	-	0
2205	275	10	GraggBulirschStoerStepInterpolator.java	computeCoefficients	ph0	double	+	0	0	NO_USE	0
2205	275	10	GraggBulirschStoerStepInterpolator.java	computeCoefficients	i	int	*	0	0	ARRIDX_USE	0
2205	275	10	GraggBulirschStoerStepInterpolator.java	computeCoefficients	mu	int	PARAM_AS	1	5	<=	1
2205	275	10	GraggBulirschStoerStepInterpolator.java	computeCoefficients	h	double	PARAM_AS	1	0	NO_USE	0
2205	275	10	GraggBulirschStoerStepInterpolator.java	computeCoefficients	THIS	GraggBulirschStoerStepInterpolator	*	0	3	FIELD_USE	0
2206	299	4	GraggBulirschStoerStepInterpolator.java	estimateError	error	double	0	0	0	/	0
2206	299	4	GraggBulirschStoerStepInterpolator.java	estimateError	scale	double[]	PARAM_AS	1	0	OTHER_USE	0
2206	299	4	GraggBulirschStoerStepInterpolator.java	estimateError	THIS	GraggBulirschStoerStepInterpolator	UNKNOWN_AS	0	1	FIELD_USE	1
2207	334	8	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	p0	double	ARRAY_ACCESS	0	0	NO_USE	0
2207	334	8	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	p1	double	ARRAY_ACCESS	0	0	NO_USE	0
2207	334	8	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	p2	double	ARRAY_ACCESS	0	0	NO_USE	0
2207	334	8	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	p3	double	ARRAY_ACCESS	0	0	NO_USE	0
2207	334	8	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	i	int	+	0	0	ARRIDX_USE	0
2207	334	8	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	dimension	int	NAME	0	0	NO_USE	0
2207	334	8	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	oneMinusTheta	double	-	0	0	NO_USE	0
2207	334	8	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	theta05	double	-	0	0	*	0
2207	334	8	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	tOmT	double	*	0	0	NO_USE	0
2207	334	8	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	t4	double	*	0	0	*	0
2207	334	8	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	t4Dot	double	*	0	0	*	0
2207	334	8	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	dot1	double	/	0	0	NO_USE	0
2207	334	8	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	dot2	double	/	0	0	NO_USE	0
2207	334	8	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	dot3	double	/	0	0	NO_USE	0
2207	334	8	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	theta	double	PARAM_AS	1	0	NO_USE	0
2207	334	8	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	oneMinusThetaH	double	PARAM_AS	1	0	NO_USE	0
2207	334	8	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	THIS	GraggBulirschStoerStepInterpolator	+	0	2	FIELD_USE	1
2208	348	4	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	dimension	int	NAME	0	0	PARAM_USE	0
2208	348	4	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	oneMinusTheta	double	-	0	0	NO_USE	0
2208	348	4	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	theta05	double	-	0	0	NO_USE	0
2208	348	4	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	tOmT	double	*	0	0	NO_USE	0
2208	348	4	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	t4	double	*	0	0	NO_USE	0
2208	348	4	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	t4Dot	double	*	0	0	NO_USE	0
2208	348	4	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	dot1	double	/	0	0	NO_USE	0
2208	348	4	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	dot2	double	/	0	0	NO_USE	0
2208	348	4	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	dot3	double	/	0	0	NO_USE	0
2208	348	4	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	theta	double	PARAM_AS	1	0	NO_USE	0
2208	348	4	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	oneMinusThetaH	double	PARAM_AS	1	0	NO_USE	0
2208	348	4	GraggBulirschStoerStepInterpolator.java	computeInterpolatedStateAndDerivatives	THIS	GraggBulirschStoerStepInterpolator	/	0	2	FIELD_USE	1
2209	208	4	AdaptiveStepsizeIntegrator.java	setInitialStepSize	initialStepSize	double	PARAM_AS	1	2	OTHER_USE	1
2209	208	4	AdaptiveStepsizeIntegrator.java	setInitialStepSize	THIS	AdaptiveStepsizeIntegrator	UNKNOWN_AS	0	2	NO_USE	1
2210	231	6	AdaptiveStepsizeIntegrator.java	sanityChecks	equations	FirstOrderDifferentialEquations	PARAM_AS	1	1	OTHER_USE	1
2210	231	6	AdaptiveStepsizeIntegrator.java	sanityChecks	t0	double	PARAM_AS	1	0	NO_USE	0
2210	231	6	AdaptiveStepsizeIntegrator.java	sanityChecks	y0	double[]	PARAM_AS	1	0	NO_USE	0
2210	231	6	AdaptiveStepsizeIntegrator.java	sanityChecks	t	double	PARAM_AS	1	0	NO_USE	0
2210	231	6	AdaptiveStepsizeIntegrator.java	sanityChecks	y	double[]	PARAM_AS	1	0	NO_USE	0
2210	231	6	AdaptiveStepsizeIntegrator.java	sanityChecks	THIS	AdaptiveStepsizeIntegrator	UNKNOWN_AS	0	8	NO_USE	0
2211	237	6	AdaptiveStepsizeIntegrator.java	sanityChecks	equations	FirstOrderDifferentialEquations	PARAM_AS	1	1	NO_USE	0
2211	237	6	AdaptiveStepsizeIntegrator.java	sanityChecks	t0	double	PARAM_AS	1	0	NO_USE	0
2211	237	6	AdaptiveStepsizeIntegrator.java	sanityChecks	y0	double[]	PARAM_AS	1	0	NO_USE	0
2211	237	6	AdaptiveStepsizeIntegrator.java	sanityChecks	t	double	PARAM_AS	1	0	NO_USE	0
2211	237	6	AdaptiveStepsizeIntegrator.java	sanityChecks	y	double[]	PARAM_AS	1	0	NO_USE	0
2211	237	6	AdaptiveStepsizeIntegrator.java	sanityChecks	THIS	AdaptiveStepsizeIntegrator	getDimension()	0	8	FIELD_USE	1
2212	242	6	AdaptiveStepsizeIntegrator.java	sanityChecks	equations	FirstOrderDifferentialEquations	PARAM_AS	1	1	NO_USE	0
2212	242	6	AdaptiveStepsizeIntegrator.java	sanityChecks	t0	double	PARAM_AS	1	0	NO_USE	0
2212	242	6	AdaptiveStepsizeIntegrator.java	sanityChecks	y0	double[]	PARAM_AS	1	0	NO_USE	0
2212	242	6	AdaptiveStepsizeIntegrator.java	sanityChecks	t	double	PARAM_AS	1	0	NO_USE	0
2212	242	6	AdaptiveStepsizeIntegrator.java	sanityChecks	y	double[]	PARAM_AS	1	0	NO_USE	0
2212	242	6	AdaptiveStepsizeIntegrator.java	sanityChecks	THIS	AdaptiveStepsizeIntegrator	getDimension()	0	8	FIELD_USE	1
2213	269	4	AdaptiveStepsizeIntegrator.java	initializeStep	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2213	269	4	AdaptiveStepsizeIntegrator.java	initializeStep	forward	boolean	PARAM_AS	1	2	OTHER_USE	0
2213	269	4	AdaptiveStepsizeIntegrator.java	initializeStep	order	int	PARAM_AS	1	0	NO_USE	0
2213	269	4	AdaptiveStepsizeIntegrator.java	initializeStep	scale	double[]	PARAM_AS	1	0	NO_USE	0
2213	269	4	AdaptiveStepsizeIntegrator.java	initializeStep	t0	double	PARAM_AS	1	0	NO_USE	0
2213	269	4	AdaptiveStepsizeIntegrator.java	initializeStep	y0	double[]	PARAM_AS	1	0	NO_USE	0
2213	269	4	AdaptiveStepsizeIntegrator.java	initializeStep	yDot0	double[]	PARAM_AS	1	0	NO_USE	0
2213	269	4	AdaptiveStepsizeIntegrator.java	initializeStep	y1	double[]	PARAM_AS	1	0	NO_USE	0
2213	269	4	AdaptiveStepsizeIntegrator.java	initializeStep	yDot1	double[]	PARAM_AS	1	0	NO_USE	0
2213	269	4	AdaptiveStepsizeIntegrator.java	initializeStep	THIS	AdaptiveStepsizeIntegrator	UNKNOWN_AS	0	3	FIELD_USE	1
2214	288	4	AdaptiveStepsizeIntegrator.java	initializeStep	ratio	double	/	0	0	NO_USE	0
2214	288	4	AdaptiveStepsizeIntegrator.java	initializeStep	yOnScale2	double	*	0	0	NO_USE	0
2214	288	4	AdaptiveStepsizeIntegrator.java	initializeStep	yDotOnScale2	double	*	0	0	NO_USE	0
2214	288	4	AdaptiveStepsizeIntegrator.java	initializeStep	h	double	OTHERS	0	2	-x	0
2214	288	4	AdaptiveStepsizeIntegrator.java	initializeStep	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2214	288	4	AdaptiveStepsizeIntegrator.java	initializeStep	forward	boolean	PARAM_AS	1	2	NO_USE	1
2214	288	4	AdaptiveStepsizeIntegrator.java	initializeStep	order	int	PARAM_AS	1	0	NO_USE	0
2214	288	4	AdaptiveStepsizeIntegrator.java	initializeStep	scale	double[]	PARAM_AS	1	0	NO_USE	0
2214	288	4	AdaptiveStepsizeIntegrator.java	initializeStep	t0	double	PARAM_AS	1	0	NO_USE	0
2214	288	4	AdaptiveStepsizeIntegrator.java	initializeStep	y0	double[]	PARAM_AS	1	0	NO_USE	0
2214	288	4	AdaptiveStepsizeIntegrator.java	initializeStep	yDot0	double[]	PARAM_AS	1	0	NO_USE	0
2214	288	4	AdaptiveStepsizeIntegrator.java	initializeStep	y1	double[]	PARAM_AS	1	0	NO_USE	0
2214	288	4	AdaptiveStepsizeIntegrator.java	initializeStep	yDot1	double[]	PARAM_AS	1	0	NO_USE	0
2214	288	4	AdaptiveStepsizeIntegrator.java	initializeStep	THIS	AdaptiveStepsizeIntegrator	UNKNOWN_AS	0	3	NO_USE	0
2215	314	4	AdaptiveStepsizeIntegrator.java	initializeStep	ratio	double	/	0	0	NO_USE	0
2215	314	4	AdaptiveStepsizeIntegrator.java	initializeStep	yOnScale2	double	*	0	0	NO_USE	0
2215	314	4	AdaptiveStepsizeIntegrator.java	initializeStep	yDotOnScale2	double	*	0	0	NO_USE	0
2215	314	4	AdaptiveStepsizeIntegrator.java	initializeStep	h	double	max()	0	2	NO_USE	1
2215	314	4	AdaptiveStepsizeIntegrator.java	initializeStep	yDDotOnScale	double	/	0	0	NO_USE	0
2215	314	4	AdaptiveStepsizeIntegrator.java	initializeStep	maxInv2	double	max()	0	0	NO_USE	0
2215	314	4	AdaptiveStepsizeIntegrator.java	initializeStep	h1	double	OTHERS	0	0	NO_USE	0
2215	314	4	AdaptiveStepsizeIntegrator.java	initializeStep	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2215	314	4	AdaptiveStepsizeIntegrator.java	initializeStep	forward	boolean	PARAM_AS	1	2	NO_USE	0
2215	314	4	AdaptiveStepsizeIntegrator.java	initializeStep	order	int	PARAM_AS	1	0	NO_USE	0
2215	314	4	AdaptiveStepsizeIntegrator.java	initializeStep	scale	double[]	PARAM_AS	1	0	NO_USE	0
2215	314	4	AdaptiveStepsizeIntegrator.java	initializeStep	t0	double	PARAM_AS	1	0	NO_USE	0
2215	314	4	AdaptiveStepsizeIntegrator.java	initializeStep	y0	double[]	PARAM_AS	1	0	NO_USE	0
2215	314	4	AdaptiveStepsizeIntegrator.java	initializeStep	yDot0	double[]	PARAM_AS	1	0	NO_USE	0
2215	314	4	AdaptiveStepsizeIntegrator.java	initializeStep	y1	double[]	+	1	0	NO_USE	0
2215	314	4	AdaptiveStepsizeIntegrator.java	initializeStep	yDot1	double[]	PARAM_AS	1	0	NO_USE	0
2215	314	4	AdaptiveStepsizeIntegrator.java	initializeStep	THIS	AdaptiveStepsizeIntegrator	UNKNOWN_AS	0	3	CLALLER_USE	1
2216	317	4	AdaptiveStepsizeIntegrator.java	initializeStep	ratio	double	/	0	0	NO_USE	0
2216	317	4	AdaptiveStepsizeIntegrator.java	initializeStep	yOnScale2	double	*	0	0	NO_USE	0
2216	317	4	AdaptiveStepsizeIntegrator.java	initializeStep	yDotOnScale2	double	*	0	0	NO_USE	0
2216	317	4	AdaptiveStepsizeIntegrator.java	initializeStep	h	double	getMinStep()	0	2	NO_USE	1
2216	317	4	AdaptiveStepsizeIntegrator.java	initializeStep	yDDotOnScale	double	/	0	0	NO_USE	0
2216	317	4	AdaptiveStepsizeIntegrator.java	initializeStep	maxInv2	double	max()	0	0	NO_USE	0
2216	317	4	AdaptiveStepsizeIntegrator.java	initializeStep	h1	double	OTHERS	0	0	NO_USE	0
2216	317	4	AdaptiveStepsizeIntegrator.java	initializeStep	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2216	317	4	AdaptiveStepsizeIntegrator.java	initializeStep	forward	boolean	PARAM_AS	1	2	NO_USE	0
2216	317	4	AdaptiveStepsizeIntegrator.java	initializeStep	order	int	PARAM_AS	1	0	NO_USE	0
2216	317	4	AdaptiveStepsizeIntegrator.java	initializeStep	scale	double[]	PARAM_AS	1	0	NO_USE	0
2216	317	4	AdaptiveStepsizeIntegrator.java	initializeStep	t0	double	PARAM_AS	1	0	NO_USE	0
2216	317	4	AdaptiveStepsizeIntegrator.java	initializeStep	y0	double[]	PARAM_AS	1	0	NO_USE	0
2216	317	4	AdaptiveStepsizeIntegrator.java	initializeStep	yDot0	double[]	PARAM_AS	1	0	NO_USE	0
2216	317	4	AdaptiveStepsizeIntegrator.java	initializeStep	y1	double[]	+	1	0	NO_USE	0
2216	317	4	AdaptiveStepsizeIntegrator.java	initializeStep	yDot1	double[]	PARAM_AS	1	0	NO_USE	0
2216	317	4	AdaptiveStepsizeIntegrator.java	initializeStep	THIS	AdaptiveStepsizeIntegrator	UNKNOWN_AS	0	3	CLALLER_USE	1
2217	320	4	AdaptiveStepsizeIntegrator.java	initializeStep	ratio	double	/	0	0	NO_USE	0
2217	320	4	AdaptiveStepsizeIntegrator.java	initializeStep	yOnScale2	double	*	0	0	NO_USE	0
2217	320	4	AdaptiveStepsizeIntegrator.java	initializeStep	yDotOnScale2	double	*	0	0	NO_USE	0
2217	320	4	AdaptiveStepsizeIntegrator.java	initializeStep	h	double	getMaxStep()	0	2	-x	0
2217	320	4	AdaptiveStepsizeIntegrator.java	initializeStep	yDDotOnScale	double	/	0	0	NO_USE	0
2217	320	4	AdaptiveStepsizeIntegrator.java	initializeStep	maxInv2	double	max()	0	0	NO_USE	0
2217	320	4	AdaptiveStepsizeIntegrator.java	initializeStep	h1	double	OTHERS	0	0	NO_USE	0
2217	320	4	AdaptiveStepsizeIntegrator.java	initializeStep	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2217	320	4	AdaptiveStepsizeIntegrator.java	initializeStep	forward	boolean	PARAM_AS	1	2	NO_USE	1
2217	320	4	AdaptiveStepsizeIntegrator.java	initializeStep	order	int	PARAM_AS	1	0	NO_USE	0
2217	320	4	AdaptiveStepsizeIntegrator.java	initializeStep	scale	double[]	PARAM_AS	1	0	NO_USE	0
2217	320	4	AdaptiveStepsizeIntegrator.java	initializeStep	t0	double	PARAM_AS	1	0	NO_USE	0
2217	320	4	AdaptiveStepsizeIntegrator.java	initializeStep	y0	double[]	PARAM_AS	1	0	NO_USE	0
2217	320	4	AdaptiveStepsizeIntegrator.java	initializeStep	yDot0	double[]	PARAM_AS	1	0	NO_USE	0
2217	320	4	AdaptiveStepsizeIntegrator.java	initializeStep	y1	double[]	+	1	0	NO_USE	0
2217	320	4	AdaptiveStepsizeIntegrator.java	initializeStep	yDot1	double[]	PARAM_AS	1	0	NO_USE	0
2217	320	4	AdaptiveStepsizeIntegrator.java	initializeStep	THIS	AdaptiveStepsizeIntegrator	UNKNOWN_AS	0	3	NO_USE	0
2218	341	6	AdaptiveStepsizeIntegrator.java	filterStep	filteredH	double	NAME	0	2	NO_USE	0
2218	341	6	AdaptiveStepsizeIntegrator.java	filterStep	h	double	PARAM_AS	1	1	PARAM_USE	1
2218	341	6	AdaptiveStepsizeIntegrator.java	filterStep	forward	boolean	PARAM_AS	1	0	OTHER_USE	0
2218	341	6	AdaptiveStepsizeIntegrator.java	filterStep	acceptSmall	boolean	PARAM_AS	1	0	OTHER_USE	0
2218	341	6	AdaptiveStepsizeIntegrator.java	filterStep	THIS	AdaptiveStepsizeIntegrator	UNKNOWN_AS	0	3	FIELD_USE	1
2219	342	10	AdaptiveStepsizeIntegrator.java	filterStep	filteredH	double	NAME	0	2	NO_USE	0
2219	342	10	AdaptiveStepsizeIntegrator.java	filterStep	h	double	PARAM_AS	1	1	PARAM_USE	0
2219	342	10	AdaptiveStepsizeIntegrator.java	filterStep	forward	boolean	PARAM_AS	1	0	OTHER_USE	0
2219	342	10	AdaptiveStepsizeIntegrator.java	filterStep	acceptSmall	boolean	PARAM_AS	1	0	NO_USE	1
2219	342	10	AdaptiveStepsizeIntegrator.java	filterStep	THIS	AdaptiveStepsizeIntegrator	UNKNOWN_AS	0	3	FIELD_USE	0
2220	351	6	AdaptiveStepsizeIntegrator.java	filterStep	filteredH	double	OTHERS	0	2	<	1
2220	351	6	AdaptiveStepsizeIntegrator.java	filterStep	h	double	PARAM_AS	1	1	NO_USE	0
2220	351	6	AdaptiveStepsizeIntegrator.java	filterStep	forward	boolean	PARAM_AS	1	0	NO_USE	0
2220	351	6	AdaptiveStepsizeIntegrator.java	filterStep	acceptSmall	boolean	PARAM_AS	1	0	NO_USE	0
2220	351	6	AdaptiveStepsizeIntegrator.java	filterStep	THIS	AdaptiveStepsizeIntegrator	UNKNOWN_AS	0	3	FIELD_USE	1
2221	353	13	AdaptiveStepsizeIntegrator.java	filterStep	filteredH	double	NAME	0	2	NO_USE	1
2221	353	13	AdaptiveStepsizeIntegrator.java	filterStep	h	double	PARAM_AS	1	1	NO_USE	0
2221	353	13	AdaptiveStepsizeIntegrator.java	filterStep	forward	boolean	PARAM_AS	1	0	NO_USE	0
2221	353	13	AdaptiveStepsizeIntegrator.java	filterStep	acceptSmall	boolean	PARAM_AS	1	0	NO_USE	0
2221	353	13	AdaptiveStepsizeIntegrator.java	filterStep	THIS	AdaptiveStepsizeIntegrator	UNKNOWN_AS	0	3	FIELD_USE	1
2222	105	4	RungeKuttaIntegrator.java	integrate	forward	boolean	>	0	0	NO_USE	0
2222	105	4	RungeKuttaIntegrator.java	integrate	stages	int	+	0	0	NO_USE	0
2222	105	4	RungeKuttaIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2222	105	4	RungeKuttaIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2222	105	4	RungeKuttaIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	PARAM_USE	1
2222	105	4	RungeKuttaIntegrator.java	integrate	t	double	PARAM_AS	1	0	NO_USE	0
2222	105	4	RungeKuttaIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	PARAM_USE	1
2222	105	4	RungeKuttaIntegrator.java	integrate	THIS	RungeKuttaIntegrator	UNKNOWN_AS	0	1	FIELD_USE	0
2223	167	6	RungeKuttaIntegrator.java	integrate	forward	boolean	>	0	0	OTHER_USE	0
2223	167	6	RungeKuttaIntegrator.java	integrate	stages	int	+	0	0	NO_USE	0
2223	167	6	RungeKuttaIntegrator.java	integrate	yDotK	double[][]	ARRAY_CREATION	0	0	NO_USE	0
2223	167	6	RungeKuttaIntegrator.java	integrate	yTmp	double[]	+	0	0	NO_USE	0
2223	167	6	RungeKuttaIntegrator.java	integrate	yDotTmp	double[]	ARRAY_CREATION	0	0	NO_USE	0
2223	167	6	RungeKuttaIntegrator.java	integrate	interpolator	RungeKuttaStepInterpolator	CAST	0	0	CLALLER_USE	0
2223	167	6	RungeKuttaIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2223	167	6	RungeKuttaIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2223	167	6	RungeKuttaIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2223	167	6	RungeKuttaIntegrator.java	integrate	t	double	PARAM_AS	1	0	>=	0
2223	167	6	RungeKuttaIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	NO_USE	0
2223	167	6	RungeKuttaIntegrator.java	integrate	THIS	RungeKuttaIntegrator	acceptStep()	0	1	FIELD_USE	1
2224	175	10	RungeKuttaIntegrator.java	integrate	nextT	double	+	0	0	NO_USE	0
2224	175	10	RungeKuttaIntegrator.java	integrate	nextIsLast	boolean	OTHERS	0	0	NO_USE	1
2224	175	10	RungeKuttaIntegrator.java	integrate	forward	boolean	>	0	0	NO_USE	0
2224	175	10	RungeKuttaIntegrator.java	integrate	stages	int	+	0	0	NO_USE	0
2224	175	10	RungeKuttaIntegrator.java	integrate	yDotK	double[][]	ARRAY_CREATION	0	0	NO_USE	0
2224	175	10	RungeKuttaIntegrator.java	integrate	yTmp	double[]	+	0	0	NO_USE	0
2224	175	10	RungeKuttaIntegrator.java	integrate	yDotTmp	double[]	ARRAY_CREATION	0	0	NO_USE	0
2224	175	10	RungeKuttaIntegrator.java	integrate	interpolator	RungeKuttaStepInterpolator	CAST	0	0	NO_USE	0
2224	175	10	RungeKuttaIntegrator.java	integrate	equations	FirstOrderDifferentialEquations	PARAM_AS	1	0	NO_USE	0
2224	175	10	RungeKuttaIntegrator.java	integrate	t0	double	PARAM_AS	1	0	NO_USE	0
2224	175	10	RungeKuttaIntegrator.java	integrate	y0	double[]	PARAM_AS	1	1	NO_USE	0
2224	175	10	RungeKuttaIntegrator.java	integrate	t	double	PARAM_AS	1	0	-	0
2224	175	10	RungeKuttaIntegrator.java	integrate	y	double[]	PARAM_AS	1	1	NO_USE	0
2224	175	10	RungeKuttaIntegrator.java	integrate	THIS	RungeKuttaIntegrator	acceptStep()	0	1	FIELD_USE	0
2225	191	12	AdamsNordsieckTransformer.java	getInstance	t	AdamsNordsieckTransformer	get()	0	1	PARAM_USE	1
2225	191	12	AdamsNordsieckTransformer.java	getInstance	nSteps	int	PARAM_AS	1	0	OTHER_USE	0
2225	191	12	AdamsNordsieckTransformer.java	getInstance	THIS	AdamsNordsieckTransformer	UNKNOWN_AS	0	0	NO_USE	0
2226	204	8	AbstractIntegrator.java	computeDerivatives	t	double	PARAM_AS	1	0	NO_USE	0
2226	204	8	AbstractIntegrator.java	computeDerivatives	y	double[]	PARAM_AS	1	0	NO_USE	0
2226	204	8	AbstractIntegrator.java	computeDerivatives	yDot	double[]	PARAM_AS	1	0	NO_USE	0
2226	204	8	AbstractIntegrator.java	computeDerivatives	THIS	AbstractIntegrator	UNKNOWN_AS	0	2	FIELD_USE	1
2227	241	12	AbstractIntegrator.java	acceptStep	previousT	double	getGlobalPreviousTime()	0	0	NO_USE	0
2227	241	12	AbstractIntegrator.java	acceptStep	currentT	double	getGlobalCurrentTime()	0	0	NO_USE	0
2227	241	12	AbstractIntegrator.java	acceptStep	interpolator	AbstractStepInterpolator	PARAM_AS	1	2	PARAM_USE	0
2227	241	12	AbstractIntegrator.java	acceptStep	y	double[]	PARAM_AS	1	0	NO_USE	0
2227	241	12	AbstractIntegrator.java	acceptStep	yDot	double[]	PARAM_AS	1	0	NO_USE	0
2227	241	12	AbstractIntegrator.java	acceptStep	tEnd	double	PARAM_AS	1	0	NO_USE	0
2227	241	12	AbstractIntegrator.java	acceptStep	THIS	AbstractIntegrator	LITERAL	0	1	FIELD_USE	1
2228	260	16	AbstractIntegrator.java	acceptStep	previousT	double	getGlobalPreviousTime()	0	0	NO_USE	0
2228	260	16	AbstractIntegrator.java	acceptStep	currentT	double	getGlobalCurrentTime()	0	0	NO_USE	0
2228	260	16	AbstractIntegrator.java	acceptStep	orderingSign	int	OTHERS	0	0	NO_USE	0
2228	260	16	AbstractIntegrator.java	acceptStep	occuringEvents	SortedSet<EventState>	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
2228	260	16	AbstractIntegrator.java	acceptStep	interpolator	AbstractStepInterpolator	PARAM_AS	1	2	NO_USE	1
2228	260	16	AbstractIntegrator.java	acceptStep	y	double[]	PARAM_AS	1	0	NO_USE	0
2228	260	16	AbstractIntegrator.java	acceptStep	yDot	double[]	PARAM_AS	1	0	NO_USE	0
2228	260	16	AbstractIntegrator.java	acceptStep	tEnd	double	PARAM_AS	1	0	NO_USE	0
2228	260	16	AbstractIntegrator.java	acceptStep	THIS	AbstractIntegrator	LITERAL	0	1	NO_USE	1
2229	289	16	AbstractIntegrator.java	acceptStep	iterator	Iterator<EventState>	iterator()	0	0	NO_USE	0
2229	289	16	AbstractIntegrator.java	acceptStep	currentEvent	EventState	next()	0	2	NO_USE	0
2229	289	16	AbstractIntegrator.java	acceptStep	eventT	double	getEventTime()	0	1	RET_USE	0
2229	289	16	AbstractIntegrator.java	acceptStep	eventY	double[]	getInterpolatedState()	0	1	PARAM_USE	0
2229	289	16	AbstractIntegrator.java	acceptStep	previousT	double	getGlobalPreviousTime()	0	0	NO_USE	0
2229	289	16	AbstractIntegrator.java	acceptStep	currentT	double	getGlobalCurrentTime()	0	0	NO_USE	0
2229	289	16	AbstractIntegrator.java	acceptStep	orderingSign	int	OTHERS	0	0	NO_USE	0
2229	289	16	AbstractIntegrator.java	acceptStep	occuringEvents	SortedSet<EventState>	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2229	289	16	AbstractIntegrator.java	acceptStep	interpolator	AbstractStepInterpolator	PARAM_AS	1	2	NO_USE	0
2229	289	16	AbstractIntegrator.java	acceptStep	y	double[]	PARAM_AS	1	0	PARAM_USE	0
2229	289	16	AbstractIntegrator.java	acceptStep	yDot	double[]	PARAM_AS	1	0	NO_USE	0
2229	289	16	AbstractIntegrator.java	acceptStep	tEnd	double	PARAM_AS	1	0	NO_USE	0
2229	289	16	AbstractIntegrator.java	acceptStep	THIS	AbstractIntegrator	stop()	0	1	FIELD_USE	1
2230	295	16	AbstractIntegrator.java	acceptStep	iterator	Iterator<EventState>	iterator()	0	0	NO_USE	0
2230	295	16	AbstractIntegrator.java	acceptStep	currentEvent	EventState	next()	0	2	NO_USE	1
2230	295	16	AbstractIntegrator.java	acceptStep	eventT	double	getEventTime()	0	1	PARAM_USE	1
2230	295	16	AbstractIntegrator.java	acceptStep	eventY	double[]	getInterpolatedState()	0	1	PARAM_USE	1
2230	295	16	AbstractIntegrator.java	acceptStep	previousT	double	getGlobalPreviousTime()	0	0	NO_USE	0
2230	295	16	AbstractIntegrator.java	acceptStep	currentT	double	getGlobalCurrentTime()	0	0	NO_USE	0
2230	295	16	AbstractIntegrator.java	acceptStep	orderingSign	int	OTHERS	0	0	NO_USE	0
2230	295	16	AbstractIntegrator.java	acceptStep	occuringEvents	SortedSet<EventState>	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2230	295	16	AbstractIntegrator.java	acceptStep	interpolator	AbstractStepInterpolator	PARAM_AS	1	2	NO_USE	0
2230	295	16	AbstractIntegrator.java	acceptStep	y	double[]	PARAM_AS	1	0	PARAM_USE	0
2230	295	16	AbstractIntegrator.java	acceptStep	yDot	double[]	PARAM_AS	1	0	PARAM_USE	0
2230	295	16	AbstractIntegrator.java	acceptStep	tEnd	double	PARAM_AS	1	0	NO_USE	0
2230	295	16	AbstractIntegrator.java	acceptStep	THIS	AbstractIntegrator	stop()	0	1	FIELD_USE	0
2231	310	16	AbstractIntegrator.java	acceptStep	iterator	Iterator<EventState>	iterator()	0	0	NO_USE	0
2231	310	16	AbstractIntegrator.java	acceptStep	currentEvent	EventState	next()	0	2	PARAM_USE	1
2231	310	16	AbstractIntegrator.java	acceptStep	eventT	double	getEventTime()	0	1	NO_USE	0
2231	310	16	AbstractIntegrator.java	acceptStep	eventY	double[]	getInterpolatedState()	0	1	NO_USE	0
2231	310	16	AbstractIntegrator.java	acceptStep	previousT	double	NAME	0	0	NO_USE	0
2231	310	16	AbstractIntegrator.java	acceptStep	currentT	double	getGlobalCurrentTime()	0	0	NO_USE	0
2231	310	16	AbstractIntegrator.java	acceptStep	orderingSign	int	OTHERS	0	0	NO_USE	0
2231	310	16	AbstractIntegrator.java	acceptStep	occuringEvents	SortedSet<EventState>	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
2231	310	16	AbstractIntegrator.java	acceptStep	interpolator	AbstractStepInterpolator	PARAM_AS	1	2	NO_USE	1
2231	310	16	AbstractIntegrator.java	acceptStep	y	double[]	PARAM_AS	1	0	NO_USE	0
2231	310	16	AbstractIntegrator.java	acceptStep	yDot	double[]	PARAM_AS	1	0	NO_USE	0
2231	310	16	AbstractIntegrator.java	acceptStep	tEnd	double	PARAM_AS	1	0	NO_USE	0
2231	310	16	AbstractIntegrator.java	acceptStep	THIS	AbstractIntegrator	LITERAL	0	1	NO_USE	0
2232	333	12	AbstractIntegrator.java	acceptStep	cause	Throwable	getCause()	0	2	OTHER_USE	1
2232	333	12	AbstractIntegrator.java	acceptStep	interpolator	AbstractStepInterpolator	PARAM_AS	1	2	NO_USE	0
2232	333	12	AbstractIntegrator.java	acceptStep	y	double[]	PARAM_AS	1	0	NO_USE	0
2232	333	12	AbstractIntegrator.java	acceptStep	yDot	double[]	PARAM_AS	1	0	NO_USE	0
2232	333	12	AbstractIntegrator.java	acceptStep	tEnd	double	PARAM_AS	1	0	NO_USE	0
2232	333	12	AbstractIntegrator.java	acceptStep	THIS	AbstractIntegrator	||	0	1	NO_USE	0
2233	356	8	AbstractIntegrator.java	sanityChecks	ode	FirstOrderDifferentialEquations	PARAM_AS	1	2	CLALLER_USE	1
2233	356	8	AbstractIntegrator.java	sanityChecks	t0	double	PARAM_AS	1	2	NO_USE	0
2233	356	8	AbstractIntegrator.java	sanityChecks	y0	double[]	PARAM_AS	1	1	OTHER_USE	1
2233	356	8	AbstractIntegrator.java	sanityChecks	t	double	PARAM_AS	1	2	NO_USE	0
2233	356	8	AbstractIntegrator.java	sanityChecks	y	double[]	PARAM_AS	1	1	NO_USE	0
2233	356	8	AbstractIntegrator.java	sanityChecks	THIS	AbstractIntegrator	UNKNOWN_AS	0	2	FIELD_USE	1
2234	361	8	AbstractIntegrator.java	sanityChecks	ode	FirstOrderDifferentialEquations	PARAM_AS	1	2	CLALLER_USE	1
2234	361	8	AbstractIntegrator.java	sanityChecks	t0	double	PARAM_AS	1	2	NO_USE	0
2234	361	8	AbstractIntegrator.java	sanityChecks	y0	double[]	PARAM_AS	1	1	NO_USE	0
2234	361	8	AbstractIntegrator.java	sanityChecks	t	double	PARAM_AS	1	2	NO_USE	0
2234	361	8	AbstractIntegrator.java	sanityChecks	y	double[]	PARAM_AS	1	1	OTHER_USE	1
2234	361	8	AbstractIntegrator.java	sanityChecks	THIS	AbstractIntegrator	UNKNOWN_AS	0	2	FIELD_USE	1
2235	366	8	AbstractIntegrator.java	sanityChecks	ode	FirstOrderDifferentialEquations	PARAM_AS	1	2	NO_USE	0
2235	366	8	AbstractIntegrator.java	sanityChecks	t0	double	PARAM_AS	1	2	-	1
2235	366	8	AbstractIntegrator.java	sanityChecks	y0	double[]	PARAM_AS	1	1	NO_USE	0
2235	366	8	AbstractIntegrator.java	sanityChecks	t	double	PARAM_AS	1	2	-	1
2235	366	8	AbstractIntegrator.java	sanityChecks	y	double[]	PARAM_AS	1	1	NO_USE	0
2235	366	8	AbstractIntegrator.java	sanityChecks	THIS	AbstractIntegrator	UNKNOWN_AS	0	2	FIELD_USE	0
2236	161	12	EventState.java	reinitializeBegin	interpolator	StepInterpolator	PARAM_AS	1	0	CLALLER_USE	0
2236	161	12	EventState.java	reinitializeBegin	THIS	EventState	g()	0	1	FIELD_USE	1
2237	206	12	EventState.java	evaluateStep	t1	double	getCurrentTime()	0	0	NO_USE	0
2237	206	12	EventState.java	evaluateStep	dt	double	-	0	1	NO_USE	1
2237	206	12	EventState.java	evaluateStep	interpolator	StepInterpolator	PARAM_AS	1	0	NO_USE	0
2237	206	12	EventState.java	evaluateStep	THIS	EventState	isForward()	0	10	NO_USE	1
2238	234	16	EventState.java	evaluateStep	tb	double	+	0	0	PARAM_USE	0
2238	234	16	EventState.java	evaluateStep	gb	double	g()	0	1	>=	1
2238	234	16	EventState.java	evaluateStep	i	int	0	0	0	--x	0
2238	234	16	EventState.java	evaluateStep	t1	double	getCurrentTime()	0	0	NO_USE	0
2238	234	16	EventState.java	evaluateStep	dt	double	-	0	1	NO_USE	0
2238	234	16	EventState.java	evaluateStep	n	int	max()	0	0	NO_USE	0
2238	234	16	EventState.java	evaluateStep	h	double	/	0	0	NO_USE	0
2238	234	16	EventState.java	evaluateStep	f	UnivariateRealFunction	CLASS_INSTANCE_CREATION	0	0	PARAM_USE	0
2238	234	16	EventState.java	evaluateStep	ta	double	NAME	0	1	PARAM_USE	0
2238	234	16	EventState.java	evaluateStep	ga	double	NAME	0	0	>=	0
2238	234	16	EventState.java	evaluateStep	interpolator	StepInterpolator	PARAM_AS	1	0	NO_USE	0
2238	234	16	EventState.java	evaluateStep	THIS	EventState	isForward()	0	10	FIELD_USE	1
2239	242	20	EventState.java	evaluateStep	root	double	UNKNOWN_AS	0	3	NO_USE	0
2239	242	20	EventState.java	evaluateStep	tb	double	+	0	0	PARAM_USE	0
2239	242	20	EventState.java	evaluateStep	gb	double	g()	0	1	NO_USE	0
2239	242	20	EventState.java	evaluateStep	i	int	0	0	0	NO_USE	0
2239	242	20	EventState.java	evaluateStep	t1	double	getCurrentTime()	0	0	NO_USE	0
2239	242	20	EventState.java	evaluateStep	dt	double	-	0	1	NO_USE	0
2239	242	20	EventState.java	evaluateStep	n	int	max()	0	0	NO_USE	0
2239	242	20	EventState.java	evaluateStep	h	double	/	0	0	NO_USE	0
2239	242	20	EventState.java	evaluateStep	f	UnivariateRealFunction	CLASS_INSTANCE_CREATION	0	0	PARAM_USE	0
2239	242	20	EventState.java	evaluateStep	ta	double	NAME	0	1	PARAM_USE	0
2239	242	20	EventState.java	evaluateStep	ga	double	NAME	0	0	NO_USE	0
2239	242	20	EventState.java	evaluateStep	interpolator	StepInterpolator	PARAM_AS	1	0	NO_USE	0
2239	242	20	EventState.java	evaluateStep	THIS	EventState	>=	0	10	FIELD_USE	1
2240	263	20	EventState.java	evaluateStep	root	double	OTHERS	0	3	-	1
2240	263	20	EventState.java	evaluateStep	tb	double	+	0	0	OTHER_USE	0
2240	263	20	EventState.java	evaluateStep	gb	double	g()	0	1	OTHER_USE	0
2240	263	20	EventState.java	evaluateStep	i	int	0	0	0	--x	0
2240	263	20	EventState.java	evaluateStep	t1	double	getCurrentTime()	0	0	NO_USE	0
2240	263	20	EventState.java	evaluateStep	dt	double	-	0	1	NO_USE	0
2240	263	20	EventState.java	evaluateStep	n	int	max()	0	0	NO_USE	0
2240	263	20	EventState.java	evaluateStep	h	double	/	0	0	NO_USE	0
2240	263	20	EventState.java	evaluateStep	f	UnivariateRealFunction	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
2240	263	20	EventState.java	evaluateStep	ta	double	NAME	0	1	+	1
2240	263	20	EventState.java	evaluateStep	ga	double	NAME	0	0	NO_USE	0
2240	263	20	EventState.java	evaluateStep	interpolator	StepInterpolator	PARAM_AS	1	0	NO_USE	0
2240	263	20	EventState.java	evaluateStep	THIS	EventState	>=	0	10	FIELD_USE	1
2241	271	27	EventState.java	evaluateStep	root	double	OTHERS	0	3	OTHER_USE	1
2241	271	27	EventState.java	evaluateStep	tb	double	+	0	0	OTHER_USE	0
2241	271	27	EventState.java	evaluateStep	gb	double	g()	0	1	OTHER_USE	0
2241	271	27	EventState.java	evaluateStep	i	int	0	0	0	NO_USE	0
2241	271	27	EventState.java	evaluateStep	t1	double	getCurrentTime()	0	0	NO_USE	0
2241	271	27	EventState.java	evaluateStep	dt	double	-	0	1	NO_USE	0
2241	271	27	EventState.java	evaluateStep	n	int	max()	0	0	NO_USE	0
2241	271	27	EventState.java	evaluateStep	h	double	/	0	0	NO_USE	0
2241	271	27	EventState.java	evaluateStep	f	UnivariateRealFunction	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2241	271	27	EventState.java	evaluateStep	ta	double	OTHERS	0	1	NO_USE	0
2241	271	27	EventState.java	evaluateStep	ga	double	value()	0	0	NO_USE	0
2241	271	27	EventState.java	evaluateStep	interpolator	StepInterpolator	PARAM_AS	1	0	NO_USE	0
2241	271	27	EventState.java	evaluateStep	THIS	EventState	>=	0	10	NO_USE	1
2242	325	8	EventState.java	stepAccepted	t	double	PARAM_AS	1	1	OTHER_USE	1
2242	325	8	EventState.java	stepAccepted	y	double[]	PARAM_AS	1	0	PARAM_USE	0
2242	325	8	EventState.java	stepAccepted	THIS	EventState	g()	0	3	FIELD_USE	1
2243	356	8	EventState.java	reset	t	double	PARAM_AS	1	1	NO_USE	1
2243	356	8	EventState.java	reset	y	double[]	PARAM_AS	1	0	NO_USE	0
2243	356	8	EventState.java	reset	THIS	EventState	UNKNOWN_AS	0	4	NO_USE	1
2244	360	8	EventState.java	reset	t	double	PARAM_AS	1	1	PARAM_USE	0
2244	360	8	EventState.java	reset	y	double[]	PARAM_AS	1	0	PARAM_USE	0
2244	360	8	EventState.java	reset	THIS	EventState	UNKNOWN_AS	0	4	FIELD_USE	1
2245	129	4	ContinuousOutputModel.java	append	model	ContinuousOutputModel	PARAM_AS	1	3	NO_USE	1
2245	129	4	ContinuousOutputModel.java	append	THIS	ContinuousOutputModel	UNKNOWN_AS	0	7	NO_USE	1
2246	133	4	ContinuousOutputModel.java	append	model	ContinuousOutputModel	PARAM_AS	1	3	OTHER_USE	0
2246	133	4	ContinuousOutputModel.java	append	THIS	ContinuousOutputModel	UNKNOWN_AS	0	7	FIELD_USE	1
2247	138	6	ContinuousOutputModel.java	append	model	ContinuousOutputModel	PARAM_AS	1	3	CLALLER_USE	1
2247	138	6	ContinuousOutputModel.java	append	THIS	ContinuousOutputModel	NAME	0	7	FIELD_USE	1
2248	144	6	ContinuousOutputModel.java	append	model	ContinuousOutputModel	PARAM_AS	1	3	NO_USE	1
2248	144	6	ContinuousOutputModel.java	append	THIS	ContinuousOutputModel	NAME	0	7	FIELD_USE	1
2249	154	6	ContinuousOutputModel.java	append	lastInterpolator	StepInterpolator	get()	0	0	NO_USE	0
2249	154	6	ContinuousOutputModel.java	append	current	double	getCurrentTime()	0	0	NO_USE	0
2249	154	6	ContinuousOutputModel.java	append	previous	double	getPreviousTime()	0	0	NO_USE	0
2249	154	6	ContinuousOutputModel.java	append	step	double	-	0	1	NO_USE	1
2249	154	6	ContinuousOutputModel.java	append	gap	double	-	0	1	PARAM_USE	1
2249	154	6	ContinuousOutputModel.java	append	model	ContinuousOutputModel	PARAM_AS	1	3	NO_USE	0
2249	154	6	ContinuousOutputModel.java	append	THIS	ContinuousOutputModel	NAME	0	7	FIELD_USE	0
2250	193	4	ContinuousOutputModel.java	handleStep	interpolator	StepInterpolator	PARAM_AS	1	0	CLALLER_USE	0
2250	193	4	ContinuousOutputModel.java	handleStep	isLast	boolean	PARAM_AS	1	0	NO_USE	0
2250	193	4	ContinuousOutputModel.java	handleStep	THIS	ContinuousOutputModel	UNKNOWN_AS	0	1	NO_USE	1
2251	200	4	ContinuousOutputModel.java	handleStep	interpolator	StepInterpolator	PARAM_AS	1	0	CLALLER_USE	0
2251	200	4	ContinuousOutputModel.java	handleStep	isLast	boolean	PARAM_AS	1	0	NO_USE	1
2251	200	4	ContinuousOutputModel.java	handleStep	THIS	ContinuousOutputModel	isForward()	0	1	FIELD_USE	0
2252	258	6	ContinuousOutputModel.java	setInterpolatedTime	iMin	int	0	0	0	OTHER_USE	0
2252	258	6	ContinuousOutputModel.java	setInterpolatedTime	sMin	StepInterpolator	get()	0	1	CLALLER_USE	1
2252	258	6	ContinuousOutputModel.java	setInterpolatedTime	tMin	double	*	0	1	NO_USE	0
2252	258	6	ContinuousOutputModel.java	setInterpolatedTime	iMax	int	-	0	0	NO_USE	0
2252	258	6	ContinuousOutputModel.java	setInterpolatedTime	sMax	StepInterpolator	get()	0	1	NO_USE	0
2252	258	6	ContinuousOutputModel.java	setInterpolatedTime	tMax	double	*	0	1	NO_USE	0
2252	258	6	ContinuousOutputModel.java	setInterpolatedTime	time	double	PARAM_AS	1	2	PARAM_USE	1
2252	258	6	ContinuousOutputModel.java	setInterpolatedTime	THIS	ContinuousOutputModel	UNKNOWN_AS	0	4	NO_USE	1
2253	263	6	ContinuousOutputModel.java	setInterpolatedTime	iMin	int	0	0	0	NO_USE	0
2253	263	6	ContinuousOutputModel.java	setInterpolatedTime	sMin	StepInterpolator	get()	0	1	NO_USE	0
2253	263	6	ContinuousOutputModel.java	setInterpolatedTime	tMin	double	*	0	1	NO_USE	0
2253	263	6	ContinuousOutputModel.java	setInterpolatedTime	iMax	int	-	0	0	OTHER_USE	0
2253	263	6	ContinuousOutputModel.java	setInterpolatedTime	sMax	StepInterpolator	get()	0	1	CLALLER_USE	1
2253	263	6	ContinuousOutputModel.java	setInterpolatedTime	tMax	double	*	0	1	NO_USE	0
2253	263	6	ContinuousOutputModel.java	setInterpolatedTime	time	double	PARAM_AS	1	2	PARAM_USE	1
2253	263	6	ContinuousOutputModel.java	setInterpolatedTime	THIS	ContinuousOutputModel	NAME	0	4	NO_USE	1
2254	275	8	ContinuousOutputModel.java	setInterpolatedTime	si	StepInterpolator	get()	0	0	CLALLER_USE	0
2254	275	8	ContinuousOutputModel.java	setInterpolatedTime	location	int	locatePoint()	0	2	>	1
2254	275	8	ContinuousOutputModel.java	setInterpolatedTime	iMin	int	0	0	0	NO_USE	0
2254	275	8	ContinuousOutputModel.java	setInterpolatedTime	sMin	StepInterpolator	get()	0	1	NO_USE	0
2254	275	8	ContinuousOutputModel.java	setInterpolatedTime	tMin	double	*	0	1	NO_USE	0
2254	275	8	ContinuousOutputModel.java	setInterpolatedTime	iMax	int	-	0	0	NO_USE	0
2254	275	8	ContinuousOutputModel.java	setInterpolatedTime	sMax	StepInterpolator	get()	0	1	NO_USE	0
2254	275	8	ContinuousOutputModel.java	setInterpolatedTime	tMax	double	*	0	1	NO_USE	0
2254	275	8	ContinuousOutputModel.java	setInterpolatedTime	time	double	PARAM_AS	1	2	PARAM_USE	0
2254	275	8	ContinuousOutputModel.java	setInterpolatedTime	THIS	ContinuousOutputModel	NAME	0	4	FIELD_USE	0
2255	278	15	ContinuousOutputModel.java	setInterpolatedTime	si	StepInterpolator	get()	0	0	CLALLER_USE	0
2255	278	15	ContinuousOutputModel.java	setInterpolatedTime	location	int	locatePoint()	0	2	NO_USE	1
2255	278	15	ContinuousOutputModel.java	setInterpolatedTime	iMin	int	0	0	0	NO_USE	0
2255	278	15	ContinuousOutputModel.java	setInterpolatedTime	sMin	StepInterpolator	get()	0	1	NO_USE	0
2255	278	15	ContinuousOutputModel.java	setInterpolatedTime	tMin	double	*	0	1	NO_USE	0
2255	278	15	ContinuousOutputModel.java	setInterpolatedTime	iMax	int	NAME	0	0	NO_USE	0
2255	278	15	ContinuousOutputModel.java	setInterpolatedTime	sMax	StepInterpolator	get()	0	1	NO_USE	0
2255	278	15	ContinuousOutputModel.java	setInterpolatedTime	tMax	double	*	0	1	NO_USE	0
2255	278	15	ContinuousOutputModel.java	setInterpolatedTime	time	double	PARAM_AS	1	2	PARAM_USE	0
2255	278	15	ContinuousOutputModel.java	setInterpolatedTime	THIS	ContinuousOutputModel	NAME	0	4	FIELD_USE	0
2256	292	8	ContinuousOutputModel.java	setInterpolatedTime	si	StepInterpolator	get()	0	0	NO_USE	0
2256	292	8	ContinuousOutputModel.java	setInterpolatedTime	location	int	locatePoint()	0	2	NO_USE	0
2256	292	8	ContinuousOutputModel.java	setInterpolatedTime	iMed	int	/	0	0	OTHER_USE	0
2256	292	8	ContinuousOutputModel.java	setInterpolatedTime	sMed	StepInterpolator	get()	0	0	NO_USE	0
2256	292	8	ContinuousOutputModel.java	setInterpolatedTime	tMed	double	*	0	2	-	1
2256	292	8	ContinuousOutputModel.java	setInterpolatedTime	iMin	int	NAME	0	0	*	0
2256	292	8	ContinuousOutputModel.java	setInterpolatedTime	sMin	StepInterpolator	get()	0	1	NO_USE	0
2256	292	8	ContinuousOutputModel.java	setInterpolatedTime	tMin	double	*	0	1	-	1
2256	292	8	ContinuousOutputModel.java	setInterpolatedTime	iMax	int	NAME	0	0	*	0
2256	292	8	ContinuousOutputModel.java	setInterpolatedTime	sMax	StepInterpolator	get()	0	1	NO_USE	0
2256	292	8	ContinuousOutputModel.java	setInterpolatedTime	tMax	double	*	0	1	-	1
2256	292	8	ContinuousOutputModel.java	setInterpolatedTime	time	double	PARAM_AS	1	2	-	0
2256	292	8	ContinuousOutputModel.java	setInterpolatedTime	THIS	ContinuousOutputModel	NAME	0	4	NO_USE	0
2257	315	8	ContinuousOutputModel.java	setInterpolatedTime	si	StepInterpolator	get()	0	0	NO_USE	0
2257	315	8	ContinuousOutputModel.java	setInterpolatedTime	location	int	locatePoint()	0	2	NO_USE	0
2257	315	8	ContinuousOutputModel.java	setInterpolatedTime	iMed	int	/	0	0	NO_USE	0
2257	315	8	ContinuousOutputModel.java	setInterpolatedTime	sMed	StepInterpolator	get()	0	0	NO_USE	0
2257	315	8	ContinuousOutputModel.java	setInterpolatedTime	tMed	double	*	0	2	NO_USE	0
2257	315	8	ContinuousOutputModel.java	setInterpolatedTime	low	int	max()	0	1	OTHER_USE	1
2257	315	8	ContinuousOutputModel.java	setInterpolatedTime	high	int	min()	0	1	>	0
2257	315	8	ContinuousOutputModel.java	setInterpolatedTime	iMin	int	NAME	0	0	NO_USE	0
2257	315	8	ContinuousOutputModel.java	setInterpolatedTime	sMin	StepInterpolator	get()	0	1	NO_USE	0
2257	315	8	ContinuousOutputModel.java	setInterpolatedTime	tMin	double	*	0	1	NO_USE	0
2257	315	8	ContinuousOutputModel.java	setInterpolatedTime	iMax	int	NAME	0	0	NO_USE	0
2257	315	8	ContinuousOutputModel.java	setInterpolatedTime	sMax	StepInterpolator	get()	0	1	NO_USE	0
2257	315	8	ContinuousOutputModel.java	setInterpolatedTime	tMax	double	*	0	1	NO_USE	0
2257	315	8	ContinuousOutputModel.java	setInterpolatedTime	time	double	PARAM_AS	1	2	NO_USE	0
2257	315	8	ContinuousOutputModel.java	setInterpolatedTime	THIS	ContinuousOutputModel	CAST	0	4	FIELD_USE	1
2258	317	15	ContinuousOutputModel.java	setInterpolatedTime	si	StepInterpolator	get()	0	0	NO_USE	0
2258	317	15	ContinuousOutputModel.java	setInterpolatedTime	location	int	locatePoint()	0	2	NO_USE	0
2258	317	15	ContinuousOutputModel.java	setInterpolatedTime	iMed	int	/	0	0	NO_USE	0
2258	317	15	ContinuousOutputModel.java	setInterpolatedTime	sMed	StepInterpolator	get()	0	0	NO_USE	0
2258	317	15	ContinuousOutputModel.java	setInterpolatedTime	tMed	double	*	0	2	NO_USE	0
2258	317	15	ContinuousOutputModel.java	setInterpolatedTime	low	int	max()	0	1	NO_USE	0
2258	317	15	ContinuousOutputModel.java	setInterpolatedTime	high	int	min()	0	1	OTHER_USE	1
2258	317	15	ContinuousOutputModel.java	setInterpolatedTime	iMin	int	NAME	0	0	NO_USE	0
2258	317	15	ContinuousOutputModel.java	setInterpolatedTime	sMin	StepInterpolator	get()	0	1	NO_USE	0
2258	317	15	ContinuousOutputModel.java	setInterpolatedTime	tMin	double	*	0	1	NO_USE	0
2258	317	15	ContinuousOutputModel.java	setInterpolatedTime	iMax	int	NAME	0	0	NO_USE	0
2258	317	15	ContinuousOutputModel.java	setInterpolatedTime	sMax	StepInterpolator	get()	0	1	NO_USE	0
2258	317	15	ContinuousOutputModel.java	setInterpolatedTime	tMax	double	*	0	1	NO_USE	0
2258	317	15	ContinuousOutputModel.java	setInterpolatedTime	time	double	PARAM_AS	1	2	NO_USE	0
2258	317	15	ContinuousOutputModel.java	setInterpolatedTime	THIS	ContinuousOutputModel	NAME	0	4	NO_USE	1
2259	351	4	ContinuousOutputModel.java	locatePoint	time	double	PARAM_AS	1	4	<	0
2259	351	4	ContinuousOutputModel.java	locatePoint	interval	StepInterpolator	PARAM_AS	1	4	CLALLER_USE	0
2259	351	4	ContinuousOutputModel.java	locatePoint	THIS	ContinuousOutputModel	UNKNOWN_AS	0	0	NO_USE	1
2260	352	6	ContinuousOutputModel.java	locatePoint	time	double	PARAM_AS	1	4	>	1
2260	352	6	ContinuousOutputModel.java	locatePoint	interval	StepInterpolator	PARAM_AS	1	4	CLALLER_USE	1
2260	352	6	ContinuousOutputModel.java	locatePoint	THIS	ContinuousOutputModel	UNKNOWN_AS	0	0	NO_USE	0
2261	354	13	ContinuousOutputModel.java	locatePoint	time	double	PARAM_AS	1	4	NO_USE	1
2261	354	13	ContinuousOutputModel.java	locatePoint	interval	StepInterpolator	PARAM_AS	1	4	NO_USE	1
2261	354	13	ContinuousOutputModel.java	locatePoint	THIS	ContinuousOutputModel	UNKNOWN_AS	0	0	NO_USE	0
2262	360	4	ContinuousOutputModel.java	locatePoint	time	double	PARAM_AS	1	4	<	1
2262	360	4	ContinuousOutputModel.java	locatePoint	interval	StepInterpolator	PARAM_AS	1	4	CLALLER_USE	1
2262	360	4	ContinuousOutputModel.java	locatePoint	THIS	ContinuousOutputModel	UNKNOWN_AS	0	0	NO_USE	0
2263	362	11	ContinuousOutputModel.java	locatePoint	time	double	PARAM_AS	1	4	NO_USE	1
2263	362	11	ContinuousOutputModel.java	locatePoint	interval	StepInterpolator	PARAM_AS	1	4	NO_USE	1
2263	362	11	ContinuousOutputModel.java	locatePoint	THIS	ContinuousOutputModel	UNKNOWN_AS	0	0	NO_USE	0
2264	116	8	MultistepIntegrator.java	MultistepIntegrator	name	String	PARAM_AS	1	0	PARAM_USE	0
2264	116	8	MultistepIntegrator.java	MultistepIntegrator	nSteps	int	PARAM_AS	1	1	NO_USE	1
2264	116	8	MultistepIntegrator.java	MultistepIntegrator	order	int	PARAM_AS	1	0	NO_USE	0
2264	116	8	MultistepIntegrator.java	MultistepIntegrator	minStep	double	PARAM_AS	1	0	NO_USE	0
2264	116	8	MultistepIntegrator.java	MultistepIntegrator	maxStep	double	PARAM_AS	1	0	NO_USE	0
2264	116	8	MultistepIntegrator.java	MultistepIntegrator	scalAbsoluteTolerance	double	PARAM_AS	1	0	NO_USE	0
2264	116	8	MultistepIntegrator.java	MultistepIntegrator	scalRelativeTolerance	double	PARAM_AS	1	0	NO_USE	0
2264	116	8	MultistepIntegrator.java	MultistepIntegrator	THIS	MultistepIntegrator	UNKNOWN_AS	0	0	FIELD_USE	0
2265	131	8	DfpDec.java	newInstance	d	Dfp	PARAM_AS	1	1	PARAM_USE	1
2265	131	8	DfpDec.java	newInstance	THIS	DfpDec	UNKNOWN_AS	0	1	CLALLER_USE	1
2266	168	8	DfpDec.java	round	msb	int	ARRAY_ACCESS	0	1	NO_USE	1
2266	168	8	DfpDec.java	round	in	int	PARAM_AS	1	0	NO_USE	0
2266	168	8	DfpDec.java	round	THIS	DfpDec	UNKNOWN_AS	0	4	NO_USE	0
2267	192	8	DfpDec.java	round	msb	int	ARRAY_ACCESS	0	1	NO_USE	0
2267	192	8	DfpDec.java	round	cmaxdigits	int	*	0	0	NO_USE	0
2267	192	8	DfpDec.java	round	lsbthreshold	int	10	0	2	NO_USE	1
2267	192	8	DfpDec.java	round	digits	int	getDecimalDigits()	0	1	NO_USE	1
2267	192	8	DfpDec.java	round	lsbshift	int	-	0	0	NO_USE	0
2267	192	8	DfpDec.java	round	lsd	int	/	0	0	NO_USE	0
2267	192	8	DfpDec.java	round	lsb	int	ARRAY_ACCESS	0	0	NO_USE	0
2267	192	8	DfpDec.java	round	in	int	PARAM_AS	1	0	OTHER_USE	0
2267	192	8	DfpDec.java	round	THIS	DfpDec	UNKNOWN_AS	0	4	NO_USE	1
2268	198	8	DfpDec.java	round	msb	int	ARRAY_ACCESS	0	1	NO_USE	0
2268	198	8	DfpDec.java	round	cmaxdigits	int	*	0	0	NO_USE	0
2268	198	8	DfpDec.java	round	lsbthreshold	int	10	0	2	/	1
2268	198	8	DfpDec.java	round	digits	int	getDecimalDigits()	0	1	NO_USE	0
2268	198	8	DfpDec.java	round	lsbshift	int	-	0	0	NO_USE	0
2268	198	8	DfpDec.java	round	lsd	int	/	0	0	-	0
2268	198	8	DfpDec.java	round	lsb	int	ARRAY_ACCESS	0	0	*	0
2268	198	8	DfpDec.java	round	discarded	int	NAME	0	1	NO_USE	0
2268	198	8	DfpDec.java	round	n	int	UNKNOWN_AS	0	1	NO_USE	0
2268	198	8	DfpDec.java	round	in	int	PARAM_AS	1	0	NO_USE	0
2268	198	8	DfpDec.java	round	THIS	DfpDec	UNKNOWN_AS	0	4	FIELD_USE	0
2269	255	8	DfpDec.java	round	msb	int	ARRAY_ACCESS	0	1	NO_USE	0
2269	255	8	DfpDec.java	round	cmaxdigits	int	*	0	0	NO_USE	0
2269	255	8	DfpDec.java	round	lsbthreshold	int	10	0	2	OTHER_USE	0
2269	255	8	DfpDec.java	round	digits	int	getDecimalDigits()	0	1	NO_USE	0
2269	255	8	DfpDec.java	round	lsbshift	int	-	0	0	NO_USE	0
2269	255	8	DfpDec.java	round	lsd	int	*	0	0	OTHER_USE	0
2269	255	8	DfpDec.java	round	lsb	int	ARRAY_ACCESS	0	0	NO_USE	0
2269	255	8	DfpDec.java	round	discarded	int	ARRAY_ACCESS	0	1	NO_USE	0
2269	255	8	DfpDec.java	round	n	int	%	0	1	NO_USE	0
2269	255	8	DfpDec.java	round	inc	boolean	&&	0	0	NO_USE	1
2269	255	8	DfpDec.java	round	in	int	PARAM_AS	1	0	NO_USE	0
2269	255	8	DfpDec.java	round	THIS	DfpDec	*	0	4	FIELD_USE	0
2270	264	12	DfpDec.java	round	rh	int	/	0	1	OTHER_USE	1
2270	264	12	DfpDec.java	round	msb	int	ARRAY_ACCESS	0	1	NO_USE	0
2270	264	12	DfpDec.java	round	cmaxdigits	int	*	0	0	NO_USE	0
2270	264	12	DfpDec.java	round	lsbthreshold	int	10	0	2	NO_USE	0
2270	264	12	DfpDec.java	round	digits	int	getDecimalDigits()	0	1	NO_USE	0
2270	264	12	DfpDec.java	round	lsbshift	int	-	0	0	NO_USE	0
2270	264	12	DfpDec.java	round	lsd	int	*	0	0	NO_USE	0
2270	264	12	DfpDec.java	round	lsb	int	ARRAY_ACCESS	0	0	NO_USE	0
2270	264	12	DfpDec.java	round	discarded	int	ARRAY_ACCESS	0	1	NO_USE	0
2270	264	12	DfpDec.java	round	n	int	%	0	1	NO_USE	0
2270	264	12	DfpDec.java	round	inc	boolean	&&	0	0	NO_USE	0
2270	264	12	DfpDec.java	round	in	int	PARAM_AS	1	0	NO_USE	0
2270	264	12	DfpDec.java	round	THIS	DfpDec	%	0	4	CLALLER_USE	0
2271	271	8	DfpDec.java	round	msb	int	ARRAY_ACCESS	0	1	NO_USE	0
2271	271	8	DfpDec.java	round	cmaxdigits	int	*	0	0	NO_USE	0
2271	271	8	DfpDec.java	round	lsbthreshold	int	10	0	2	NO_USE	0
2271	271	8	DfpDec.java	round	digits	int	getDecimalDigits()	0	1	NO_USE	0
2271	271	8	DfpDec.java	round	lsbshift	int	-	0	0	NO_USE	0
2271	271	8	DfpDec.java	round	lsd	int	*	0	0	NO_USE	0
2271	271	8	DfpDec.java	round	lsb	int	ARRAY_ACCESS	0	0	NO_USE	0
2271	271	8	DfpDec.java	round	discarded	int	ARRAY_ACCESS	0	1	NO_USE	0
2271	271	8	DfpDec.java	round	n	int	%	0	1	NO_USE	0
2271	271	8	DfpDec.java	round	inc	boolean	&&	0	0	NO_USE	0
2271	271	8	DfpDec.java	round	in	int	PARAM_AS	1	0	NO_USE	0
2271	271	8	DfpDec.java	round	THIS	DfpDec	NAME	0	4	CLALLER_USE	1
2272	277	8	DfpDec.java	round	msb	int	ARRAY_ACCESS	0	1	NO_USE	0
2272	277	8	DfpDec.java	round	cmaxdigits	int	*	0	0	NO_USE	0
2272	277	8	DfpDec.java	round	lsbthreshold	int	10	0	2	NO_USE	0
2272	277	8	DfpDec.java	round	digits	int	getDecimalDigits()	0	1	NO_USE	0
2272	277	8	DfpDec.java	round	lsbshift	int	-	0	0	NO_USE	0
2272	277	8	DfpDec.java	round	lsd	int	*	0	0	NO_USE	0
2272	277	8	DfpDec.java	round	lsb	int	ARRAY_ACCESS	0	0	NO_USE	0
2272	277	8	DfpDec.java	round	discarded	int	ARRAY_ACCESS	0	1	NO_USE	0
2272	277	8	DfpDec.java	round	n	int	%	0	1	NO_USE	0
2272	277	8	DfpDec.java	round	inc	boolean	&&	0	0	NO_USE	0
2272	277	8	DfpDec.java	round	in	int	PARAM_AS	1	0	NO_USE	0
2272	277	8	DfpDec.java	round	THIS	DfpDec	NAME	0	4	CLALLER_USE	1
2273	283	8	DfpDec.java	round	msb	int	ARRAY_ACCESS	0	1	NO_USE	0
2273	283	8	DfpDec.java	round	cmaxdigits	int	*	0	0	NO_USE	0
2273	283	8	DfpDec.java	round	lsbthreshold	int	10	0	2	NO_USE	0
2273	283	8	DfpDec.java	round	digits	int	getDecimalDigits()	0	1	NO_USE	0
2273	283	8	DfpDec.java	round	lsbshift	int	-	0	0	NO_USE	0
2273	283	8	DfpDec.java	round	lsd	int	*	0	0	NO_USE	0
2273	283	8	DfpDec.java	round	lsb	int	ARRAY_ACCESS	0	0	NO_USE	0
2273	283	8	DfpDec.java	round	discarded	int	ARRAY_ACCESS	0	1	NO_USE	1
2273	283	8	DfpDec.java	round	n	int	%	0	1	NO_USE	1
2273	283	8	DfpDec.java	round	inc	boolean	&&	0	0	NO_USE	0
2273	283	8	DfpDec.java	round	in	int	PARAM_AS	1	0	NO_USE	0
2273	283	8	DfpDec.java	round	THIS	DfpDec	NAME	0	4	CLALLER_USE	0
2274	298	8	DfpDec.java	nextAfter	trapName	String	LITERAL	0	0	PARAM_USE	0
2274	298	8	DfpDec.java	nextAfter	x	Dfp	PARAM_AS	1	3	PARAM_USE	1
2274	298	8	DfpDec.java	nextAfter	THIS	DfpDec	UNKNOWN_AS	0	16	CLALLER_USE	1
2275	310	8	DfpDec.java	nextAfter	trapName	String	LITERAL	0	0	NO_USE	0
2275	310	8	DfpDec.java	nextAfter	up	boolean	LITERAL	0	0	NO_USE	0
2275	310	8	DfpDec.java	nextAfter	result	Dfp	UNKNOWN_AS	0	2	NO_USE	0
2275	310	8	DfpDec.java	nextAfter	inc	Dfp	UNKNOWN_AS	0	3	NO_USE	0
2275	310	8	DfpDec.java	nextAfter	x	Dfp	PARAM_AS	1	3	NO_USE	1
2275	310	8	DfpDec.java	nextAfter	THIS	DfpDec	NAME	0	16	NO_USE	1
2276	314	8	DfpDec.java	nextAfter	trapName	String	LITERAL	0	0	NO_USE	0
2276	314	8	DfpDec.java	nextAfter	up	boolean	LITERAL	0	0	NO_USE	0
2276	314	8	DfpDec.java	nextAfter	result	Dfp	UNKNOWN_AS	0	2	NO_USE	0
2276	314	8	DfpDec.java	nextAfter	inc	Dfp	UNKNOWN_AS	0	3	NO_USE	0
2276	314	8	DfpDec.java	nextAfter	x	Dfp	PARAM_AS	1	3	PARAM_USE	1
2276	314	8	DfpDec.java	nextAfter	THIS	DfpDec	NAME	0	16	CLALLER_USE	1
2277	318	8	DfpDec.java	nextAfter	trapName	String	LITERAL	0	0	NO_USE	0
2277	318	8	DfpDec.java	nextAfter	up	boolean	LITERAL	0	0	!x	0
2277	318	8	DfpDec.java	nextAfter	result	Dfp	UNKNOWN_AS	0	2	NO_USE	0
2277	318	8	DfpDec.java	nextAfter	inc	Dfp	UNKNOWN_AS	0	3	NO_USE	0
2277	318	8	DfpDec.java	nextAfter	x	Dfp	PARAM_AS	1	3	NO_USE	0
2277	318	8	DfpDec.java	nextAfter	THIS	DfpDec	NAME	0	16	NO_USE	1
2278	322	8	DfpDec.java	nextAfter	trapName	String	LITERAL	0	0	NO_USE	0
2278	322	8	DfpDec.java	nextAfter	up	boolean	PREFIX_EXPR	0	0	NO_USE	1
2278	322	8	DfpDec.java	nextAfter	result	Dfp	UNKNOWN_AS	0	2	NO_USE	0
2278	322	8	DfpDec.java	nextAfter	inc	Dfp	UNKNOWN_AS	0	3	PARAM_USE	0
2278	322	8	DfpDec.java	nextAfter	x	Dfp	PARAM_AS	1	3	NO_USE	0
2278	322	8	DfpDec.java	nextAfter	THIS	DfpDec	NAME	0	16	CLALLER_USE	0
2279	326	12	DfpDec.java	nextAfter	trapName	String	LITERAL	0	0	NO_USE	0
2279	326	12	DfpDec.java	nextAfter	up	boolean	PREFIX_EXPR	0	0	NO_USE	0
2279	326	12	DfpDec.java	nextAfter	result	Dfp	UNKNOWN_AS	0	2	NO_USE	0
2279	326	12	DfpDec.java	nextAfter	inc	Dfp	copysign()	0	3	NO_USE	0
2279	326	12	DfpDec.java	nextAfter	x	Dfp	PARAM_AS	1	3	NO_USE	0
2279	326	12	DfpDec.java	nextAfter	THIS	DfpDec	NAME	0	16	CLALLER_USE	1
2280	330	12	DfpDec.java	nextAfter	trapName	String	LITERAL	0	0	NO_USE	0
2280	330	12	DfpDec.java	nextAfter	up	boolean	PREFIX_EXPR	0	0	NO_USE	0
2280	330	12	DfpDec.java	nextAfter	result	Dfp	UNKNOWN_AS	0	2	NO_USE	0
2280	330	12	DfpDec.java	nextAfter	inc	Dfp	power10K()	0	3	PARAM_USE	1
2280	330	12	DfpDec.java	nextAfter	x	Dfp	PARAM_AS	1	3	NO_USE	0
2280	330	12	DfpDec.java	nextAfter	THIS	DfpDec	NAME	0	16	CLALLER_USE	1
2281	339	12	DfpDec.java	nextAfter	trapName	String	LITERAL	0	0	NO_USE	0
2281	339	12	DfpDec.java	nextAfter	up	boolean	PREFIX_EXPR	0	0	NO_USE	0
2281	339	12	DfpDec.java	nextAfter	result	Dfp	add()	0	2	NO_USE	0
2281	339	12	DfpDec.java	nextAfter	inc	Dfp	copysign()	0	3	CLALLER_USE	1
2281	339	12	DfpDec.java	nextAfter	x	Dfp	PARAM_AS	1	3	NO_USE	0
2281	339	12	DfpDec.java	nextAfter	THIS	DfpDec	NAME	0	16	CLALLER_USE	1
2282	345	12	DfpDec.java	nextAfter	trapName	String	LITERAL	0	0	NO_USE	0
2282	345	12	DfpDec.java	nextAfter	up	boolean	PREFIX_EXPR	0	0	NO_USE	0
2282	345	12	DfpDec.java	nextAfter	result	Dfp	add()	0	2	NO_USE	0
2282	345	12	DfpDec.java	nextAfter	inc	Dfp	divide()	0	3	NO_USE	0
2282	345	12	DfpDec.java	nextAfter	x	Dfp	PARAM_AS	1	3	NO_USE	0
2282	345	12	DfpDec.java	nextAfter	THIS	DfpDec	NAME	0	16	CLALLER_USE	1
2283	349	12	DfpDec.java	nextAfter	trapName	String	LITERAL	0	0	NO_USE	0
2283	349	12	DfpDec.java	nextAfter	up	boolean	PREFIX_EXPR	0	0	NO_USE	0
2283	349	12	DfpDec.java	nextAfter	result	Dfp	add()	0	2	NO_USE	0
2283	349	12	DfpDec.java	nextAfter	inc	Dfp	power10K()	0	3	PARAM_USE	1
2283	349	12	DfpDec.java	nextAfter	x	Dfp	PARAM_AS	1	3	NO_USE	0
2283	349	12	DfpDec.java	nextAfter	THIS	DfpDec	NAME	0	16	CLALLER_USE	1
2284	356	8	DfpDec.java	nextAfter	trapName	String	LITERAL	0	0	PARAM_USE	0
2284	356	8	DfpDec.java	nextAfter	up	boolean	PREFIX_EXPR	0	0	NO_USE	0
2284	356	8	DfpDec.java	nextAfter	result	Dfp	subtract()	0	2	PARAM_USE	1
2284	356	8	DfpDec.java	nextAfter	inc	Dfp	power10K()	0	3	NO_USE	0
2284	356	8	DfpDec.java	nextAfter	x	Dfp	PARAM_AS	1	3	PARAM_USE	0
2284	356	8	DfpDec.java	nextAfter	THIS	DfpDec	NAME	0	16	CLALLER_USE	1
2285	361	8	DfpDec.java	nextAfter	trapName	String	LITERAL	0	0	PARAM_USE	0
2285	361	8	DfpDec.java	nextAfter	up	boolean	PREFIX_EXPR	0	0	NO_USE	0
2285	361	8	DfpDec.java	nextAfter	result	Dfp	dotrap()	0	2	PARAM_USE	1
2285	361	8	DfpDec.java	nextAfter	inc	Dfp	power10K()	0	3	NO_USE	0
2285	361	8	DfpDec.java	nextAfter	x	Dfp	PARAM_AS	1	3	PARAM_USE	0
2285	361	8	DfpDec.java	nextAfter	THIS	DfpDec	NAME	0	16	CLALLER_USE	1
2286	217	8	Dfp.java	Dfp	isLongMin	boolean	LITERAL	0	0	NO_USE	0
2286	217	8	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2286	217	8	Dfp.java	Dfp	x	long	PARAM_AS	1	2	++x	1
2286	217	8	Dfp.java	Dfp	THIS	Dfp	NAME	0	1	NO_USE	0
2287	225	8	Dfp.java	Dfp	isLongMin	boolean	LITERAL	0	0	NO_USE	0
2287	225	8	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2287	225	8	Dfp.java	Dfp	x	long	PARAM_AS	1	2	-x	1
2287	225	8	Dfp.java	Dfp	THIS	Dfp	NAME	0	1	NO_USE	0
2288	240	8	Dfp.java	Dfp	isLongMin	boolean	LITERAL	0	0	NO_USE	1
2288	240	8	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2288	240	8	Dfp.java	Dfp	x	long	NAME	1	2	NO_USE	0
2288	240	8	Dfp.java	Dfp	THIS	Dfp	CAST	0	1	FIELD_USE	0
2289	244	16	Dfp.java	Dfp	i	int	0	0	1	ARRIDX_USE	1
2289	244	16	Dfp.java	Dfp	isLongMin	boolean	LITERAL	0	0	NO_USE	0
2289	244	16	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2289	244	16	Dfp.java	Dfp	x	long	NAME	1	2	NO_USE	0
2289	244	16	Dfp.java	Dfp	THIS	Dfp	CAST	0	1	FIELD_USE	1
2290	269	8	Dfp.java	Dfp	bits	long	doubleToLongBits()	0	2	&	0
2290	269	8	Dfp.java	Dfp	mantissa	long	&	0	0	&	0
2290	269	8	Dfp.java	Dfp	exponent	int	-	0	2	x++	1
2290	269	8	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2290	269	8	Dfp.java	Dfp	x	double	PARAM_AS	1	4	==	0
2290	269	8	Dfp.java	Dfp	THIS	Dfp	NAME	0	0	NO_USE	0
2291	271	12	Dfp.java	Dfp	bits	long	doubleToLongBits()	0	2	&	0
2291	271	12	Dfp.java	Dfp	mantissa	long	&	0	0	NO_USE	0
2291	271	12	Dfp.java	Dfp	exponent	int	-	0	2	NO_USE	0
2291	271	12	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2291	271	12	Dfp.java	Dfp	x	double	PARAM_AS	1	4	NO_USE	1
2291	271	12	Dfp.java	Dfp	THIS	Dfp	NAME	0	0	NO_USE	0
2292	273	16	Dfp.java	Dfp	bits	long	doubleToLongBits()	0	2	NO_USE	1
2292	273	16	Dfp.java	Dfp	mantissa	long	&	0	0	NO_USE	0
2292	273	16	Dfp.java	Dfp	exponent	int	-	0	2	NO_USE	0
2292	273	16	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2292	273	16	Dfp.java	Dfp	x	double	PARAM_AS	1	4	NO_USE	0
2292	273	16	Dfp.java	Dfp	THIS	Dfp	NAME	0	0	NO_USE	0
2293	289	8	Dfp.java	Dfp	bits	long	doubleToLongBits()	0	2	NO_USE	0
2293	289	8	Dfp.java	Dfp	mantissa	long	0x000fffffffffffffL	0	0	NO_USE	0
2293	289	8	Dfp.java	Dfp	exponent	int	-	0	2	NO_USE	1
2293	289	8	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2293	289	8	Dfp.java	Dfp	x	double	PARAM_AS	1	4	!=	0
2293	289	8	Dfp.java	Dfp	THIS	Dfp	PREFIX_EXPR	0	0	NO_USE	0
2294	291	12	Dfp.java	Dfp	bits	long	doubleToLongBits()	0	2	NO_USE	0
2294	291	12	Dfp.java	Dfp	mantissa	long	0x000fffffffffffffL	0	0	NO_USE	0
2294	291	12	Dfp.java	Dfp	exponent	int	-	0	2	NO_USE	0
2294	291	12	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2294	291	12	Dfp.java	Dfp	x	double	PARAM_AS	1	4	<	1
2294	291	12	Dfp.java	Dfp	THIS	Dfp	PREFIX_EXPR	0	0	NO_USE	0
2295	294	19	Dfp.java	Dfp	bits	long	doubleToLongBits()	0	2	NO_USE	0
2295	294	19	Dfp.java	Dfp	mantissa	long	0x000fffffffffffffL	0	0	NO_USE	0
2295	294	19	Dfp.java	Dfp	exponent	int	-	0	2	NO_USE	0
2295	294	19	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2295	294	19	Dfp.java	Dfp	x	double	PARAM_AS	1	4	NO_USE	1
2295	294	19	Dfp.java	Dfp	THIS	Dfp	NAME	0	0	NO_USE	0
2296	308	8	Dfp.java	Dfp	bits	long	doubleToLongBits()	0	2	NO_USE	1
2296	308	8	Dfp.java	Dfp	mantissa	long	0x000fffffffffffffL	0	0	NO_USE	0
2296	308	8	Dfp.java	Dfp	exponent	int	-	0	2	NO_USE	0
2296	308	8	Dfp.java	Dfp	xdfp	Dfp	multiply()	0	0	CLALLER_USE	0
2296	308	8	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2296	308	8	Dfp.java	Dfp	x	double	PARAM_AS	1	4	NO_USE	0
2296	308	8	Dfp.java	Dfp	THIS	Dfp	NAME	0	0	NO_USE	0
2297	349	8	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2297	349	8	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2297	349	8	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2297	349	8	Dfp.java	Dfp	striped	char[]	ARRAY_CREATION	0	3	NO_USE	0
2297	349	8	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2297	349	8	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	1
2297	349	8	Dfp.java	Dfp	THIS	Dfp	NAME	0	3	NO_USE	0
2298	355	8	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2298	355	8	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2298	355	8	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2298	355	8	Dfp.java	Dfp	striped	char[]	ARRAY_CREATION	0	3	NO_USE	0
2298	355	8	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2298	355	8	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	1
2298	355	8	Dfp.java	Dfp	THIS	Dfp	NAME	0	3	NO_USE	0
2299	361	8	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2299	361	8	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2299	361	8	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2299	361	8	Dfp.java	Dfp	striped	char[]	ARRAY_CREATION	0	3	NO_USE	0
2299	361	8	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2299	361	8	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	1
2299	361	8	Dfp.java	Dfp	THIS	Dfp	NAME	0	3	NO_USE	0
2300	369	8	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2300	369	8	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2300	369	8	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2300	369	8	Dfp.java	Dfp	striped	char[]	ARRAY_CREATION	0	3	NO_USE	0
2300	369	8	Dfp.java	Dfp	p	int	indexOf()	0	12	NO_USE	1
2300	369	8	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2300	369	8	Dfp.java	Dfp	s	String	PARAM_AS	1	3	CLALLER_USE	0
2300	369	8	Dfp.java	Dfp	THIS	Dfp	NAME	0	3	NO_USE	0
2301	375	8	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2301	375	8	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2301	375	8	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2301	375	8	Dfp.java	Dfp	striped	char[]	ARRAY_CREATION	0	3	NO_USE	0
2301	375	8	Dfp.java	Dfp	p	int	indexOf()	0	12	PARAM_USE	1
2301	375	8	Dfp.java	Dfp	fpdecimal	String	UNKNOWN_AS	0	10	NO_USE	0
2301	375	8	Dfp.java	Dfp	sciexp	int	0	0	0	*	0
2301	375	8	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2301	375	8	Dfp.java	Dfp	s	String	PARAM_AS	1	3	CLALLER_USE	0
2301	375	8	Dfp.java	Dfp	THIS	Dfp	NAME	0	3	NO_USE	0
2302	383	16	Dfp.java	Dfp	i	int	0	0	3	NO_USE	1
2302	383	16	Dfp.java	Dfp	fpexp	String	substring()	0	3	NO_USE	1
2302	383	16	Dfp.java	Dfp	negative	boolean	LITERAL	0	0	NO_USE	0
2302	383	16	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2302	383	16	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2302	383	16	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2302	383	16	Dfp.java	Dfp	striped	char[]	ARRAY_CREATION	0	3	NO_USE	0
2302	383	16	Dfp.java	Dfp	p	int	indexOf()	0	12	NO_USE	0
2302	383	16	Dfp.java	Dfp	fpdecimal	String	substring()	0	10	NO_USE	0
2302	383	16	Dfp.java	Dfp	sciexp	int	0	0	0	NO_USE	0
2302	383	16	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2302	383	16	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	0
2302	383	16	Dfp.java	Dfp	THIS	Dfp	NAME	0	3	NO_USE	0
2303	388	16	Dfp.java	Dfp	i	int	0	0	3	PARAM_USE	1
2303	388	16	Dfp.java	Dfp	fpexp	String	substring()	0	3	CLALLER_USE	1
2303	388	16	Dfp.java	Dfp	negative	boolean	LITERAL	0	0	NO_USE	0
2303	388	16	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2303	388	16	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2303	388	16	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2303	388	16	Dfp.java	Dfp	striped	char[]	ARRAY_CREATION	0	3	NO_USE	0
2303	388	16	Dfp.java	Dfp	p	int	indexOf()	0	12	NO_USE	0
2303	388	16	Dfp.java	Dfp	fpdecimal	String	substring()	0	10	NO_USE	0
2303	388	16	Dfp.java	Dfp	sciexp	int	0	0	0	*	0
2303	388	16	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2303	388	16	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	0
2303	388	16	Dfp.java	Dfp	THIS	Dfp	NAME	0	3	NO_USE	0
2304	393	12	Dfp.java	Dfp	fpexp	String	substring()	0	3	NO_USE	0
2304	393	12	Dfp.java	Dfp	negative	boolean	LITERAL	0	0	NO_USE	1
2304	393	12	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2304	393	12	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2304	393	12	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2304	393	12	Dfp.java	Dfp	striped	char[]	ARRAY_CREATION	0	3	NO_USE	0
2304	393	12	Dfp.java	Dfp	p	int	indexOf()	0	12	NO_USE	0
2304	393	12	Dfp.java	Dfp	fpdecimal	String	substring()	0	10	NO_USE	0
2304	393	12	Dfp.java	Dfp	sciexp	int	-	0	0	-x	0
2304	393	12	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2304	393	12	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	0
2304	393	12	Dfp.java	Dfp	THIS	Dfp	NAME	0	3	NO_USE	0
2305	402	8	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2305	402	8	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2305	402	8	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2305	402	8	Dfp.java	Dfp	striped	char[]	ARRAY_CREATION	0	3	NO_USE	0
2305	402	8	Dfp.java	Dfp	p	int	indexOf()	0	12	NO_USE	0
2305	402	8	Dfp.java	Dfp	fpdecimal	String	NAME	0	10	NO_USE	1
2305	402	8	Dfp.java	Dfp	sciexp	int	PREFIX_EXPR	0	0	NO_USE	0
2305	402	8	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2305	402	8	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	0
2305	402	8	Dfp.java	Dfp	THIS	Dfp	NAME	0	3	NO_USE	0
2306	412	12	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2306	412	12	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2306	412	12	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2306	412	12	Dfp.java	Dfp	striped	char[]	ARRAY_CREATION	0	3	NO_USE	0
2306	412	12	Dfp.java	Dfp	p	int	0	0	12	NO_USE	1
2306	412	12	Dfp.java	Dfp	fpdecimal	String	NAME	0	10	NO_USE	1
2306	412	12	Dfp.java	Dfp	sciexp	int	PREFIX_EXPR	0	0	NO_USE	0
2306	412	12	Dfp.java	Dfp	decimalPos	int	0	0	0	NO_USE	0
2306	412	12	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2306	412	12	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	0
2306	412	12	Dfp.java	Dfp	THIS	Dfp	PREFIX_EXPR	0	3	NO_USE	0
2307	416	12	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	1
2307	416	12	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2307	416	12	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2307	416	12	Dfp.java	Dfp	striped	char[]	ARRAY_CREATION	0	3	NO_USE	0
2307	416	12	Dfp.java	Dfp	p	int	0	0	12	NO_USE	1
2307	416	12	Dfp.java	Dfp	fpdecimal	String	NAME	0	10	NO_USE	1
2307	416	12	Dfp.java	Dfp	sciexp	int	PREFIX_EXPR	0	0	NO_USE	0
2307	416	12	Dfp.java	Dfp	decimalPos	int	0	0	0	x--	0
2307	416	12	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2307	416	12	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	0
2307	416	12	Dfp.java	Dfp	THIS	Dfp	PREFIX_EXPR	0	3	NO_USE	0
2308	420	12	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2308	420	12	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2308	420	12	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2308	420	12	Dfp.java	Dfp	striped	char[]	ARRAY_CREATION	0	3	NO_USE	0
2308	420	12	Dfp.java	Dfp	p	int	0	0	12	NO_USE	1
2308	420	12	Dfp.java	Dfp	fpdecimal	String	NAME	0	10	NO_USE	1
2308	420	12	Dfp.java	Dfp	sciexp	int	PREFIX_EXPR	0	0	NO_USE	0
2308	420	12	Dfp.java	Dfp	decimalPos	int	0	0	0	NO_USE	0
2308	420	12	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2308	420	12	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	0
2308	420	12	Dfp.java	Dfp	THIS	Dfp	PREFIX_EXPR	0	3	NO_USE	0
2309	426	12	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2309	426	12	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2309	426	12	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2309	426	12	Dfp.java	Dfp	striped	char[]	ARRAY_CREATION	0	3	NO_USE	0
2309	426	12	Dfp.java	Dfp	p	int	0	0	12	NO_USE	1
2309	426	12	Dfp.java	Dfp	fpdecimal	String	NAME	0	10	NO_USE	1
2309	426	12	Dfp.java	Dfp	sciexp	int	PREFIX_EXPR	0	0	NO_USE	0
2309	426	12	Dfp.java	Dfp	decimalPos	int	0	0	0	NO_USE	0
2309	426	12	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2309	426	12	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	0
2309	426	12	Dfp.java	Dfp	THIS	Dfp	PREFIX_EXPR	0	3	NO_USE	0
2310	439	12	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2310	439	12	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2310	439	12	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2310	439	12	Dfp.java	Dfp	striped	char[]	LITERAL	0	3	NO_USE	0
2310	439	12	Dfp.java	Dfp	p	int	0	0	12	NO_USE	1
2310	439	12	Dfp.java	Dfp	fpdecimal	String	NAME	0	10	NO_USE	1
2310	439	12	Dfp.java	Dfp	sciexp	int	PREFIX_EXPR	0	0	NO_USE	0
2310	439	12	Dfp.java	Dfp	decimalPos	int	0	0	0	NO_USE	0
2310	439	12	Dfp.java	Dfp	q	int	NAME	0	5	NO_USE	0
2310	439	12	Dfp.java	Dfp	significantDigits	int	0	0	1	NO_USE	0
2310	439	12	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2310	439	12	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	0
2310	439	12	Dfp.java	Dfp	THIS	Dfp	PREFIX_EXPR	0	3	NO_USE	0
2311	444	12	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2311	444	12	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	1
2311	444	12	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	1
2311	444	12	Dfp.java	Dfp	striped	char[]	LITERAL	0	3	NO_USE	0
2311	444	12	Dfp.java	Dfp	p	int	0	0	12	NO_USE	0
2311	444	12	Dfp.java	Dfp	fpdecimal	String	NAME	0	10	NO_USE	0
2311	444	12	Dfp.java	Dfp	sciexp	int	PREFIX_EXPR	0	0	NO_USE	0
2311	444	12	Dfp.java	Dfp	decimalPos	int	0	0	0	NO_USE	0
2311	444	12	Dfp.java	Dfp	q	int	NAME	0	5	NO_USE	1
2311	444	12	Dfp.java	Dfp	significantDigits	int	0	0	1	NO_USE	0
2311	444	12	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2311	444	12	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	0
2311	444	12	Dfp.java	Dfp	THIS	Dfp	PREFIX_EXPR	0	3	NO_USE	1
2312	448	12	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2312	448	12	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2312	448	12	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2312	448	12	Dfp.java	Dfp	striped	char[]	LITERAL	0	3	NO_USE	0
2312	448	12	Dfp.java	Dfp	p	int	0	0	12	x++	1
2312	448	12	Dfp.java	Dfp	fpdecimal	String	NAME	0	10	NO_USE	1
2312	448	12	Dfp.java	Dfp	sciexp	int	PREFIX_EXPR	0	0	NO_USE	0
2312	448	12	Dfp.java	Dfp	decimalPos	int	0	0	0	NO_USE	0
2312	448	12	Dfp.java	Dfp	q	int	NAME	0	5	NO_USE	0
2312	448	12	Dfp.java	Dfp	significantDigits	int	0	0	1	OTHER_USE	0
2312	448	12	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2312	448	12	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	0
2312	448	12	Dfp.java	Dfp	THIS	Dfp	PREFIX_EXPR	0	3	NO_USE	0
2313	455	12	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2313	455	12	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2313	455	12	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2313	455	12	Dfp.java	Dfp	striped	char[]	LITERAL	0	3	NO_USE	0
2313	455	12	Dfp.java	Dfp	p	int	0	0	12	x++	1
2313	455	12	Dfp.java	Dfp	fpdecimal	String	NAME	0	10	NO_USE	1
2313	455	12	Dfp.java	Dfp	sciexp	int	PREFIX_EXPR	0	0	NO_USE	0
2313	455	12	Dfp.java	Dfp	decimalPos	int	NAME	0	0	NO_USE	0
2313	455	12	Dfp.java	Dfp	q	int	NAME	0	5	NO_USE	0
2313	455	12	Dfp.java	Dfp	significantDigits	int	0	0	1	NO_USE	0
2313	455	12	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2313	455	12	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	0
2313	455	12	Dfp.java	Dfp	THIS	Dfp	PREFIX_EXPR	0	3	NO_USE	0
2314	468	8	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	1
2314	468	8	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2314	468	8	Dfp.java	Dfp	offset	int	4	0	3	==	1
2314	468	8	Dfp.java	Dfp	striped	char[]	charAt()	0	3	ARR_USE	0
2314	468	8	Dfp.java	Dfp	p	int	0	0	12	NO_USE	0
2314	468	8	Dfp.java	Dfp	fpdecimal	String	NAME	0	10	NO_USE	0
2314	468	8	Dfp.java	Dfp	sciexp	int	PREFIX_EXPR	0	0	NO_USE	0
2314	468	8	Dfp.java	Dfp	decimalPos	int	NAME	0	0	NO_USE	0
2314	468	8	Dfp.java	Dfp	q	int	charAt()	0	5	x--	1
2314	468	8	Dfp.java	Dfp	significantDigits	int	0	0	1	x--	0
2314	468	8	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2314	468	8	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	0
2314	468	8	Dfp.java	Dfp	THIS	Dfp	PREFIX_EXPR	0	3	NO_USE	0
2315	471	16	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2315	471	16	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2315	471	16	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	1
2315	471	16	Dfp.java	Dfp	striped	char[]	charAt()	0	3	NO_USE	0
2315	471	16	Dfp.java	Dfp	p	int	0	0	12	NO_USE	0
2315	471	16	Dfp.java	Dfp	fpdecimal	String	NAME	0	10	NO_USE	0
2315	471	16	Dfp.java	Dfp	sciexp	int	PREFIX_EXPR	0	0	NO_USE	0
2315	471	16	Dfp.java	Dfp	decimalPos	int	NAME	0	0	NO_USE	0
2315	471	16	Dfp.java	Dfp	q	int	charAt()	0	5	NO_USE	1
2315	471	16	Dfp.java	Dfp	significantDigits	int	0	0	1	NO_USE	0
2315	471	16	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2315	471	16	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	0
2315	471	16	Dfp.java	Dfp	THIS	Dfp	PREFIX_EXPR	0	3	NO_USE	0
2316	474	16	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2316	474	16	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2316	474	16	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2316	474	16	Dfp.java	Dfp	striped	char[]	charAt()	0	3	NO_USE	1
2316	474	16	Dfp.java	Dfp	p	int	0	0	12	NO_USE	0
2316	474	16	Dfp.java	Dfp	fpdecimal	String	NAME	0	10	NO_USE	0
2316	474	16	Dfp.java	Dfp	sciexp	int	PREFIX_EXPR	0	0	NO_USE	0
2316	474	16	Dfp.java	Dfp	decimalPos	int	NAME	0	0	NO_USE	0
2316	474	16	Dfp.java	Dfp	q	int	charAt()	0	5	NO_USE	1
2316	474	16	Dfp.java	Dfp	significantDigits	int	0	0	1	x--	0
2316	474	16	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2316	474	16	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	0
2316	474	16	Dfp.java	Dfp	THIS	Dfp	PREFIX_EXPR	0	3	NO_USE	0
2317	483	8	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	1
2317	483	8	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2317	483	8	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2317	483	8	Dfp.java	Dfp	striped	char[]	charAt()	0	3	NO_USE	0
2317	483	8	Dfp.java	Dfp	p	int	0	0	12	NO_USE	0
2317	483	8	Dfp.java	Dfp	fpdecimal	String	NAME	0	10	NO_USE	0
2317	483	8	Dfp.java	Dfp	sciexp	int	PREFIX_EXPR	0	0	NO_USE	0
2317	483	8	Dfp.java	Dfp	decimalPos	int	NAME	0	0	NO_USE	0
2317	483	8	Dfp.java	Dfp	q	int	charAt()	0	5	NO_USE	0
2317	483	8	Dfp.java	Dfp	significantDigits	int	0	0	1	NO_USE	1
2317	483	8	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2317	483	8	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	0
2317	483	8	Dfp.java	Dfp	THIS	Dfp	PREFIX_EXPR	0	3	NO_USE	0
2318	488	8	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	1
2318	488	8	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2318	488	8	Dfp.java	Dfp	offset	int	4	0	3	-	0
2318	488	8	Dfp.java	Dfp	striped	char[]	charAt()	0	3	NO_USE	0
2318	488	8	Dfp.java	Dfp	p	int	0	0	12	NO_USE	0
2318	488	8	Dfp.java	Dfp	fpdecimal	String	NAME	0	10	NO_USE	0
2318	488	8	Dfp.java	Dfp	sciexp	int	PREFIX_EXPR	0	0	NO_USE	0
2318	488	8	Dfp.java	Dfp	decimalPos	int	0	0	0	NO_USE	0
2318	488	8	Dfp.java	Dfp	q	int	charAt()	0	5	-	0
2318	488	8	Dfp.java	Dfp	significantDigits	int	0	0	1	NO_USE	0
2318	488	8	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2318	488	8	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	0
2318	488	8	Dfp.java	Dfp	THIS	Dfp	PREFIX_EXPR	0	3	NO_USE	0
2319	497	12	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2319	497	12	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2319	497	12	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2319	497	12	Dfp.java	Dfp	striped	char[]	charAt()	0	3	NO_USE	1
2319	497	12	Dfp.java	Dfp	p	int	+	0	12	NO_USE	1
2319	497	12	Dfp.java	Dfp	fpdecimal	String	NAME	0	10	NO_USE	0
2319	497	12	Dfp.java	Dfp	sciexp	int	PREFIX_EXPR	0	0	NO_USE	0
2319	497	12	Dfp.java	Dfp	decimalPos	int	-	0	0	NO_USE	0
2319	497	12	Dfp.java	Dfp	q	int	NAME	0	5	NO_USE	0
2319	497	12	Dfp.java	Dfp	significantDigits	int	0	0	1	NO_USE	0
2319	497	12	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2319	497	12	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	0
2319	497	12	Dfp.java	Dfp	THIS	Dfp	PREFIX_EXPR	0	3	NO_USE	0
2320	528	8	Dfp.java	Dfp	decimalFound	boolean	LITERAL	0	4	NO_USE	0
2320	528	8	Dfp.java	Dfp	rsize	int	4	0	1	NO_USE	0
2320	528	8	Dfp.java	Dfp	offset	int	4	0	3	NO_USE	0
2320	528	8	Dfp.java	Dfp	striped	char[]	LITERAL	0	3	ARR_USE	1
2320	528	8	Dfp.java	Dfp	p	int	LITERAL	0	12	NO_USE	0
2320	528	8	Dfp.java	Dfp	fpdecimal	String	NAME	0	10	NO_USE	0
2320	528	8	Dfp.java	Dfp	sciexp	int	PREFIX_EXPR	0	0	NO_USE	0
2320	528	8	Dfp.java	Dfp	decimalPos	int	NAME	0	0	NO_USE	0
2320	528	8	Dfp.java	Dfp	q	int	4	0	5	ARRIDX_USE	1
2320	528	8	Dfp.java	Dfp	significantDigits	int	0	0	1	NO_USE	0
2320	528	8	Dfp.java	Dfp	i	int	+	0	0	NO_USE	0
2320	528	8	Dfp.java	Dfp	field	DfpField	PARAM_AS	1	0	NO_USE	0
2320	528	8	Dfp.java	Dfp	s	String	PARAM_AS	1	3	NO_USE	0
2320	528	8	Dfp.java	Dfp	THIS	Dfp	/	0	3	CLALLER_USE	1
2321	597	8	Dfp.java	newInstance	d	Dfp	PARAM_AS	1	1	PARAM_USE	1
2321	597	8	Dfp.java	newInstance	THIS	Dfp	UNKNOWN_AS	0	2	FIELD_USE	1
2322	703	8	Dfp.java	align	lostdigit	int	0	0	1	NO_USE	0
2322	703	8	Dfp.java	align	inexact	boolean	LITERAL	0	0	NO_USE	0
2322	703	8	Dfp.java	align	diff	int	-	0	2	NO_USE	0
2322	703	8	Dfp.java	align	adiff	int	NAME	0	2	-x	1
2322	703	8	Dfp.java	align	e	int	PARAM_AS	1	0	NO_USE	0
2322	703	8	Dfp.java	align	THIS	Dfp	UNKNOWN_AS	0	2	NO_USE	0
2323	707	8	Dfp.java	align	lostdigit	int	0	0	1	NO_USE	0
2323	707	8	Dfp.java	align	inexact	boolean	LITERAL	0	0	NO_USE	0
2323	707	8	Dfp.java	align	diff	int	-	0	2	NO_USE	1
2323	707	8	Dfp.java	align	adiff	int	PREFIX_EXPR	0	2	NO_USE	0
2323	707	8	Dfp.java	align	e	int	PARAM_AS	1	0	NO_USE	0
2323	707	8	Dfp.java	align	THIS	Dfp	UNKNOWN_AS	0	2	NO_USE	0
2324	711	8	Dfp.java	align	lostdigit	int	0	0	1	NO_USE	0
2324	711	8	Dfp.java	align	inexact	boolean	LITERAL	0	0	NO_USE	0
2324	711	8	Dfp.java	align	diff	int	-	0	2	NO_USE	0
2324	711	8	Dfp.java	align	adiff	int	PREFIX_EXPR	0	2	NO_USE	1
2324	711	8	Dfp.java	align	e	int	PARAM_AS	1	0	OTHER_USE	0
2324	711	8	Dfp.java	align	THIS	Dfp	UNKNOWN_AS	0	2	FIELD_USE	1
2325	723	12	Dfp.java	align	i	int	0	0	0	NO_USE	0
2325	723	12	Dfp.java	align	lostdigit	int	0	0	1	!=	0
2325	723	12	Dfp.java	align	inexact	boolean	LITERAL	0	0	NO_USE	0
2325	723	12	Dfp.java	align	diff	int	-	0	2	NO_USE	1
2325	723	12	Dfp.java	align	adiff	int	PREFIX_EXPR	0	2	NO_USE	0
2325	723	12	Dfp.java	align	e	int	PARAM_AS	1	0	NO_USE	0
2325	723	12	Dfp.java	align	THIS	Dfp	NAME	0	2	FIELD_USE	0
2326	728	16	Dfp.java	align	i	int	0	0	0	NO_USE	0
2326	728	16	Dfp.java	align	lostdigit	int	0	0	1	NO_USE	1
2326	728	16	Dfp.java	align	inexact	boolean	LITERAL	0	0	NO_USE	0
2326	728	16	Dfp.java	align	diff	int	-	0	2	NO_USE	0
2326	728	16	Dfp.java	align	adiff	int	PREFIX_EXPR	0	2	NO_USE	0
2326	728	16	Dfp.java	align	e	int	PARAM_AS	1	0	NO_USE	0
2326	728	16	Dfp.java	align	THIS	Dfp	NAME	0	2	NO_USE	0
2327	740	8	Dfp.java	align	lostdigit	int	ARRAY_ACCESS	0	1	NO_USE	0
2327	740	8	Dfp.java	align	inexact	boolean	LITERAL	0	0	NO_USE	1
2327	740	8	Dfp.java	align	diff	int	-	0	2	NO_USE	0
2327	740	8	Dfp.java	align	adiff	int	PREFIX_EXPR	0	2	NO_USE	0
2327	740	8	Dfp.java	align	e	int	PARAM_AS	1	0	NO_USE	0
2327	740	8	Dfp.java	align	THIS	Dfp	NAME	0	2	FIELD_USE	0
2328	756	8	Dfp.java	lessThan	x	Dfp	PARAM_AS	1	2	PARAM_USE	1
2328	756	8	Dfp.java	lessThan	THIS	Dfp	UNKNOWN_AS	0	3	FIELD_USE	1
2329	765	8	Dfp.java	lessThan	x	Dfp	PARAM_AS	1	2	PARAM_USE	1
2329	765	8	Dfp.java	lessThan	THIS	Dfp	NAME	0	3	FIELD_USE	1
2330	781	8	Dfp.java	greaterThan	x	Dfp	PARAM_AS	1	2	PARAM_USE	1
2330	781	8	Dfp.java	greaterThan	THIS	Dfp	UNKNOWN_AS	0	3	FIELD_USE	1
2331	790	8	Dfp.java	greaterThan	x	Dfp	PARAM_AS	1	2	PARAM_USE	1
2331	790	8	Dfp.java	greaterThan	THIS	Dfp	NAME	0	3	FIELD_USE	1
2332	820	8	Dfp.java	equals	other	Object	PARAM_AS	1	1	OTHER_USE	1
2332	820	8	Dfp.java	equals	THIS	Dfp	UNKNOWN_AS	0	3	CLALLER_USE	0
2333	822	12	Dfp.java	equals	x	Dfp	CAST	0	2	NO_USE	1
2333	822	12	Dfp.java	equals	other	Object	PARAM_AS	1	1	NO_USE	0
2333	822	12	Dfp.java	equals	THIS	Dfp	UNKNOWN_AS	0	3	NO_USE	1
2334	847	8	Dfp.java	unequal	x	Dfp	PARAM_AS	1	2	NO_USE	1
2334	847	8	Dfp.java	unequal	THIS	Dfp	UNKNOWN_AS	0	3	NO_USE	1
2335	862	8	Dfp.java	compare	a	Dfp	PARAM_AS	1	13	NO_USE	1
2335	862	8	Dfp.java	compare	b	Dfp	PARAM_AS	1	14	NO_USE	1
2335	862	8	Dfp.java	compare	THIS	Dfp	UNKNOWN_AS	0	31	NO_USE	1
2336	867	8	Dfp.java	compare	a	Dfp	PARAM_AS	1	13	OTHER_USE	1
2336	867	8	Dfp.java	compare	b	Dfp	PARAM_AS	1	14	NO_USE	1
2336	867	8	Dfp.java	compare	THIS	Dfp	UNKNOWN_AS	0	31	FIELD_USE	1
2337	868	12	Dfp.java	compare	a	Dfp	PARAM_AS	1	13	NO_USE	1
2337	868	12	Dfp.java	compare	b	Dfp	PARAM_AS	1	14	NO_USE	0
2337	868	12	Dfp.java	compare	THIS	Dfp	UNKNOWN_AS	0	31	NO_USE	1
2338	876	8	Dfp.java	compare	a	Dfp	PARAM_AS	1	13	OTHER_USE	1
2338	876	8	Dfp.java	compare	b	Dfp	PARAM_AS	1	14	NO_USE	1
2338	876	8	Dfp.java	compare	THIS	Dfp	UNKNOWN_AS	0	31	FIELD_USE	1
2339	880	8	Dfp.java	compare	a	Dfp	PARAM_AS	1	13	NO_USE	1
2339	880	8	Dfp.java	compare	b	Dfp	PARAM_AS	1	14	OTHER_USE	1
2339	880	8	Dfp.java	compare	THIS	Dfp	UNKNOWN_AS	0	31	FIELD_USE	1
2340	884	8	Dfp.java	compare	a	Dfp	PARAM_AS	1	13	NO_USE	1
2340	884	8	Dfp.java	compare	b	Dfp	PARAM_AS	1	14	NO_USE	1
2340	884	8	Dfp.java	compare	THIS	Dfp	UNKNOWN_AS	0	31	NO_USE	1
2341	889	8	Dfp.java	compare	a	Dfp	PARAM_AS	1	13	OTHER_USE	1
2341	889	8	Dfp.java	compare	b	Dfp	PARAM_AS	1	14	OTHER_USE	1
2341	889	8	Dfp.java	compare	THIS	Dfp	UNKNOWN_AS	0	31	FIELD_USE	1
2342	890	12	Dfp.java	compare	a	Dfp	PARAM_AS	1	13	OTHER_USE	1
2342	890	12	Dfp.java	compare	b	Dfp	PARAM_AS	1	14	NO_USE	1
2342	890	12	Dfp.java	compare	THIS	Dfp	UNKNOWN_AS	0	31	FIELD_USE	1
2343	894	12	Dfp.java	compare	a	Dfp	PARAM_AS	1	13	OTHER_USE	1
2343	894	12	Dfp.java	compare	b	Dfp	PARAM_AS	1	14	NO_USE	1
2343	894	12	Dfp.java	compare	THIS	Dfp	UNKNOWN_AS	0	31	FIELD_USE	1
2344	901	12	Dfp.java	compare	i	int	-	0	4	NO_USE	1
2344	901	12	Dfp.java	compare	a	Dfp	PARAM_AS	1	13	OTHER_USE	1
2344	901	12	Dfp.java	compare	b	Dfp	PARAM_AS	1	14	NO_USE	1
2344	901	12	Dfp.java	compare	THIS	Dfp	UNKNOWN_AS	0	31	FIELD_USE	1
2345	905	12	Dfp.java	compare	i	int	-	0	4	NO_USE	1
2345	905	12	Dfp.java	compare	a	Dfp	PARAM_AS	1	13	OTHER_USE	1
2345	905	12	Dfp.java	compare	b	Dfp	PARAM_AS	1	14	NO_USE	1
2345	905	12	Dfp.java	compare	THIS	Dfp	UNKNOWN_AS	0	31	FIELD_USE	1
2346	948	8	Dfp.java	remainder	result	Dfp	subtract()	0	1	OTHER_USE	1
2346	948	8	Dfp.java	remainder	d	Dfp	PARAM_AS	1	0	NO_USE	0
2346	948	8	Dfp.java	remainder	THIS	Dfp	UNKNOWN_AS	0	3	FIELD_USE	1
2347	963	8	Dfp.java	trunc	changed	boolean	LITERAL	0	0	NO_USE	0
2347	963	8	Dfp.java	trunc	rmode	DfpField.RoundingMode	UNKNOWN_AS	1	0	NO_USE	0
2347	963	8	Dfp.java	trunc	THIS	Dfp	UNKNOWN_AS	0	16	CLALLER_USE	1
2348	967	8	Dfp.java	trunc	changed	boolean	LITERAL	0	0	NO_USE	0
2348	967	8	Dfp.java	trunc	rmode	DfpField.RoundingMode	UNKNOWN_AS	1	0	NO_USE	0
2348	967	8	Dfp.java	trunc	THIS	Dfp	UNKNOWN_AS	0	16	CLALLER_USE	1
2349	971	8	Dfp.java	trunc	changed	boolean	LITERAL	0	0	NO_USE	0
2349	971	8	Dfp.java	trunc	rmode	DfpField.RoundingMode	UNKNOWN_AS	1	0	NO_USE	0
2349	971	8	Dfp.java	trunc	THIS	Dfp	UNKNOWN_AS	0	16	CLALLER_USE	1
2350	978	8	Dfp.java	trunc	changed	boolean	LITERAL	0	0	NO_USE	0
2350	978	8	Dfp.java	trunc	rmode	DfpField.RoundingMode	UNKNOWN_AS	1	0	NO_USE	0
2350	978	8	Dfp.java	trunc	THIS	Dfp	UNKNOWN_AS	0	16	FIELD_USE	1
2351	989	8	Dfp.java	trunc	changed	boolean	LITERAL	0	0	NO_USE	0
2351	989	8	Dfp.java	trunc	rmode	DfpField.RoundingMode	UNKNOWN_AS	1	0	NO_USE	0
2351	989	8	Dfp.java	trunc	THIS	Dfp	UNKNOWN_AS	0	16	CLALLER_USE	1
2352	1002	8	Dfp.java	trunc	changed	boolean	!=	0	0	NO_USE	1
2352	1002	8	Dfp.java	trunc	result	Dfp	0	0	5	OTHER_USE	0
2352	1002	8	Dfp.java	trunc	rmode	DfpField.RoundingMode	UNKNOWN_AS	1	0	NO_USE	0
2352	1002	8	Dfp.java	trunc	THIS	Dfp	0	0	16	FIELD_USE	0
2353	1005	20	Dfp.java	trunc	changed	boolean	!=	0	0	NO_USE	0
2353	1005	20	Dfp.java	trunc	result	Dfp	0	0	5	CLALLER_USE	1
2353	1005	20	Dfp.java	trunc	rmode	DfpField.RoundingMode	UNKNOWN_AS	1	0	NO_USE	0
2353	1005	20	Dfp.java	trunc	THIS	Dfp	0	0	16	CLALLER_USE	1
2354	1012	20	Dfp.java	trunc	changed	boolean	!=	0	0	NO_USE	0
2354	1012	20	Dfp.java	trunc	result	Dfp	add()	0	5	CLALLER_USE	1
2354	1012	20	Dfp.java	trunc	rmode	DfpField.RoundingMode	UNKNOWN_AS	1	0	NO_USE	0
2354	1012	20	Dfp.java	trunc	THIS	Dfp	0	0	16	CLALLER_USE	1
2355	1023	20	Dfp.java	trunc	half	Dfp	newInstance()	0	2	NO_USE	1
2355	1023	20	Dfp.java	trunc	a	Dfp	1	0	2	OTHER_USE	1
2355	1023	20	Dfp.java	trunc	changed	boolean	!=	0	0	NO_USE	0
2355	1023	20	Dfp.java	trunc	result	Dfp	add()	0	5	CLALLER_USE	0
2355	1023	20	Dfp.java	trunc	rmode	DfpField.RoundingMode	UNKNOWN_AS	1	0	NO_USE	0
2355	1023	20	Dfp.java	trunc	THIS	Dfp	1	0	16	CLALLER_USE	0
2356	1030	20	Dfp.java	trunc	half	Dfp	newInstance()	0	2	NO_USE	1
2356	1030	20	Dfp.java	trunc	a	Dfp	NAME	0	2	OTHER_USE	1
2356	1030	20	Dfp.java	trunc	changed	boolean	!=	0	0	NO_USE	0
2356	1030	20	Dfp.java	trunc	result	Dfp	add()	0	5	CLALLER_USE	1
2356	1030	20	Dfp.java	trunc	rmode	DfpField.RoundingMode	UNKNOWN_AS	1	0	NO_USE	0
2356	1030	20	Dfp.java	trunc	THIS	Dfp	NAME	0	16	CLALLER_USE	1
2357	1056	8	Dfp.java	intValue	rounded	Dfp	rint()	0	3	NO_USE	1
2357	1056	8	Dfp.java	intValue	result	int	0	0	0	NO_USE	0
2357	1056	8	Dfp.java	intValue	THIS	Dfp	UNKNOWN_AS	0	3	NO_USE	1
2358	1060	8	Dfp.java	intValue	rounded	Dfp	rint()	0	3	NO_USE	1
2358	1060	8	Dfp.java	intValue	result	int	0	0	0	NO_USE	0
2358	1060	8	Dfp.java	intValue	THIS	Dfp	UNKNOWN_AS	0	3	NO_USE	1
2359	1068	8	Dfp.java	intValue	rounded	Dfp	rint()	0	3	NO_USE	1
2359	1068	8	Dfp.java	intValue	result	int	+	0	0	-x	0
2359	1068	8	Dfp.java	intValue	THIS	Dfp	UNKNOWN_AS	0	3	NO_USE	1
2360	1098	8	Dfp.java	log10	THIS	Dfp	UNKNOWN_AS	0	9	FIELD_USE	1
2361	1101	8	Dfp.java	log10	THIS	Dfp	UNKNOWN_AS	0	9	FIELD_USE	1
2362	1104	8	Dfp.java	log10	THIS	Dfp	UNKNOWN_AS	0	9	FIELD_USE	1
2363	1117	8	Dfp.java	power10	d	Dfp	newInstance()	0	0	OTHER_USE	0
2363	1117	8	Dfp.java	power10	e	int	PARAM_AS	1	1	/	1
2363	1117	8	Dfp.java	power10	THIS	Dfp	UNKNOWN_AS	0	0	FIELD_USE	0
2364	1170	8	Dfp.java	add	x	Dfp	PARAM_AS	1	9	PARAM_USE	1
2364	1170	8	Dfp.java	add	THIS	Dfp	UNKNOWN_AS	0	32	FIELD_USE	1
2365	1178	8	Dfp.java	add	x	Dfp	PARAM_AS	1	9	CLALLER_USE	1
2365	1178	8	Dfp.java	add	THIS	Dfp	NAME	0	32	CLALLER_USE	1
2366	1179	12	Dfp.java	add	x	Dfp	PARAM_AS	1	9	NO_USE	0
2366	1179	12	Dfp.java	add	THIS	Dfp	NAME	0	32	NO_USE	1
2367	1183	12	Dfp.java	add	x	Dfp	PARAM_AS	1	9	RET_USE	1
2367	1183	12	Dfp.java	add	THIS	Dfp	NAME	0	32	NO_USE	0
2368	1187	12	Dfp.java	add	x	Dfp	PARAM_AS	1	9	NO_USE	1
2368	1187	12	Dfp.java	add	THIS	Dfp	NAME	0	32	NO_USE	1
2369	1191	12	Dfp.java	add	x	Dfp	PARAM_AS	1	9	RET_USE	1
2369	1191	12	Dfp.java	add	THIS	Dfp	NAME	0	32	NO_USE	1
2370	1195	12	Dfp.java	add	x	Dfp	PARAM_AS	1	9	RET_USE	1
2370	1195	12	Dfp.java	add	THIS	Dfp	NAME	0	32	NO_USE	1
2371	1199	12	Dfp.java	add	x	Dfp	PARAM_AS	1	9	PARAM_USE	1
2371	1199	12	Dfp.java	add	THIS	Dfp	NAME	0	32	FIELD_USE	1
2372	1224	8	Dfp.java	add	a	Dfp	1	0	3	NO_USE	1
2372	1224	8	Dfp.java	add	b	Dfp	1	0	3	NO_USE	1
2372	1224	8	Dfp.java	add	result	Dfp	newInstance()	0	2	NO_USE	0
2372	1224	8	Dfp.java	add	asign	byte	NAME	0	4	OTHER_USE	0
2372	1224	8	Dfp.java	add	bsign	byte	NAME	0	3	NO_USE	0
2372	1224	8	Dfp.java	add	rsign	byte	NAME	0	1	NO_USE	0
2372	1224	8	Dfp.java	add	x	Dfp	PARAM_AS	1	9	NO_USE	0
2372	1224	8	Dfp.java	add	THIS	Dfp	1	0	32	NO_USE	1
2373	1231	8	Dfp.java	add	a	Dfp	1	0	3	OTHER_USE	0
2373	1231	8	Dfp.java	add	b	Dfp	1	0	3	OTHER_USE	1
2373	1231	8	Dfp.java	add	result	Dfp	newInstance()	0	2	NO_USE	0
2373	1231	8	Dfp.java	add	asign	byte	NAME	0	4	NO_USE	0
2373	1231	8	Dfp.java	add	bsign	byte	NAME	0	3	NO_USE	0
2373	1231	8	Dfp.java	add	rsign	byte	NAME	0	1	NO_USE	0
2373	1231	8	Dfp.java	add	x	Dfp	PARAM_AS	1	9	NO_USE	0
2373	1231	8	Dfp.java	add	THIS	Dfp	1	0	32	FIELD_USE	1
2374	1235	8	Dfp.java	add	a	Dfp	1	0	3	OTHER_USE	1
2374	1235	8	Dfp.java	add	b	Dfp	NAME	0	3	OTHER_USE	0
2374	1235	8	Dfp.java	add	result	Dfp	newInstance()	0	2	NO_USE	0
2374	1235	8	Dfp.java	add	asign	byte	NAME	0	4	NO_USE	0
2374	1235	8	Dfp.java	add	bsign	byte	NAME	0	3	NO_USE	0
2374	1235	8	Dfp.java	add	rsign	byte	NAME	0	1	NO_USE	0
2374	1235	8	Dfp.java	add	x	Dfp	PARAM_AS	1	9	NO_USE	0
2374	1235	8	Dfp.java	add	THIS	Dfp	NAME	0	32	FIELD_USE	1
2375	1242	8	Dfp.java	add	a	Dfp	NAME	0	3	CLALLER_USE	1
2375	1242	8	Dfp.java	add	b	Dfp	NAME	0	3	OTHER_USE	1
2375	1242	8	Dfp.java	add	result	Dfp	newInstance()	0	2	NO_USE	0
2375	1242	8	Dfp.java	add	asign	byte	NAME	0	4	NO_USE	0
2375	1242	8	Dfp.java	add	bsign	byte	NAME	0	3	NO_USE	0
2375	1242	8	Dfp.java	add	rsign	byte	NAME	0	1	NO_USE	0
2375	1242	8	Dfp.java	add	aextradigit	int	0	0	0	NO_USE	0
2375	1242	8	Dfp.java	add	bextradigit	int	0	0	0	NO_USE	0
2375	1242	8	Dfp.java	add	x	Dfp	PARAM_AS	1	9	NO_USE	0
2375	1242	8	Dfp.java	add	THIS	Dfp	NAME	0	32	FIELD_USE	1
2376	1249	8	Dfp.java	add	a	Dfp	NAME	0	3	CLALLER_USE	0
2376	1249	8	Dfp.java	add	b	Dfp	NAME	0	3	CLALLER_USE	0
2376	1249	8	Dfp.java	add	result	Dfp	newInstance()	0	2	NO_USE	0
2376	1249	8	Dfp.java	add	asign	byte	NAME	0	4	==	1
2376	1249	8	Dfp.java	add	bsign	byte	NAME	0	3	NO_USE	1
2376	1249	8	Dfp.java	add	rsign	byte	NAME	0	1	==	0
2376	1249	8	Dfp.java	add	aextradigit	int	align()	0	0	PARAM_USE	0
2376	1249	8	Dfp.java	add	bextradigit	int	align()	0	0	PARAM_USE	0
2376	1249	8	Dfp.java	add	x	Dfp	PARAM_AS	1	9	NO_USE	0
2376	1249	8	Dfp.java	add	THIS	Dfp	NAME	0	32	NO_USE	0
2377	1250	12	Dfp.java	add	a	Dfp	NAME	0	3	CLALLER_USE	0
2377	1250	12	Dfp.java	add	b	Dfp	NAME	0	3	CLALLER_USE	0
2377	1250	12	Dfp.java	add	result	Dfp	newInstance()	0	2	NO_USE	0
2377	1250	12	Dfp.java	add	asign	byte	NAME	0	4	NO_USE	1
2377	1250	12	Dfp.java	add	bsign	byte	NAME	0	3	NO_USE	0
2377	1250	12	Dfp.java	add	rsign	byte	NAME	0	1	NO_USE	1
2377	1250	12	Dfp.java	add	aextradigit	int	align()	0	0	PARAM_USE	0
2377	1250	12	Dfp.java	add	bextradigit	int	align()	0	0	PARAM_USE	0
2377	1250	12	Dfp.java	add	x	Dfp	PARAM_AS	1	9	NO_USE	0
2377	1250	12	Dfp.java	add	THIS	Dfp	NAME	0	32	NO_USE	0
2378	1270	8	Dfp.java	add	a	Dfp	NAME	0	3	NO_USE	0
2378	1270	8	Dfp.java	add	b	Dfp	NAME	0	3	NO_USE	0
2378	1270	8	Dfp.java	add	result	Dfp	NAME	0	2	OTHER_USE	0
2378	1270	8	Dfp.java	add	asign	byte	NAME	0	4	NO_USE	1
2378	1270	8	Dfp.java	add	bsign	byte	NAME	0	3	NO_USE	1
2378	1270	8	Dfp.java	add	rsign	byte	NAME	0	1	NO_USE	0
2378	1270	8	Dfp.java	add	aextradigit	int	complement()	0	0	NO_USE	0
2378	1270	8	Dfp.java	add	bextradigit	int	complement()	0	0	NO_USE	0
2378	1270	8	Dfp.java	add	rh	int	/	0	1	OTHER_USE	1
2378	1270	8	Dfp.java	add	x	Dfp	PARAM_AS	1	9	PARAM_USE	0
2378	1270	8	Dfp.java	add	THIS	Dfp	NAME	0	32	FIELD_USE	0
2379	1275	12	Dfp.java	add	lostdigit	int	ARRAY_ACCESS	0	0	NO_USE	0
2379	1275	12	Dfp.java	add	excp	int	round()	0	1	PARAM_USE	1
2379	1275	12	Dfp.java	add	a	Dfp	NAME	0	3	NO_USE	0
2379	1275	12	Dfp.java	add	b	Dfp	NAME	0	3	NO_USE	0
2379	1275	12	Dfp.java	add	result	Dfp	NAME	0	2	PARAM_USE	0
2379	1275	12	Dfp.java	add	asign	byte	NAME	0	4	NO_USE	0
2379	1275	12	Dfp.java	add	bsign	byte	NAME	0	3	NO_USE	0
2379	1275	12	Dfp.java	add	rsign	byte	NAME	0	1	NO_USE	0
2379	1275	12	Dfp.java	add	aextradigit	int	complement()	0	0	NO_USE	0
2379	1275	12	Dfp.java	add	bextradigit	int	complement()	0	0	NO_USE	0
2379	1275	12	Dfp.java	add	rh	int	/	0	1	NO_USE	0
2379	1275	12	Dfp.java	add	x	Dfp	PARAM_AS	1	9	PARAM_USE	0
2379	1275	12	Dfp.java	add	THIS	Dfp	NAME	0	32	CLALLER_USE	0
2380	1282	12	Dfp.java	add	i	int	0	0	1	NO_USE	0
2380	1282	12	Dfp.java	add	a	Dfp	NAME	0	3	NO_USE	0
2380	1282	12	Dfp.java	add	b	Dfp	NAME	0	3	NO_USE	0
2380	1282	12	Dfp.java	add	result	Dfp	dotrap()	0	2	NO_USE	1
2380	1282	12	Dfp.java	add	asign	byte	NAME	0	4	NO_USE	0
2380	1282	12	Dfp.java	add	bsign	byte	NAME	0	3	NO_USE	0
2380	1282	12	Dfp.java	add	rsign	byte	NAME	0	1	NO_USE	0
2380	1282	12	Dfp.java	add	aextradigit	int	complement()	0	0	NO_USE	0
2380	1282	12	Dfp.java	add	bextradigit	int	complement()	0	0	NO_USE	0
2380	1282	12	Dfp.java	add	rh	int	/	0	1	NO_USE	0
2380	1282	12	Dfp.java	add	x	Dfp	PARAM_AS	1	9	NO_USE	0
2380	1282	12	Dfp.java	add	THIS	Dfp	NAME	0	32	NO_USE	1
2381	1286	12	Dfp.java	add	i	int	0	0	1	NO_USE	1
2381	1286	12	Dfp.java	add	a	Dfp	NAME	0	3	NO_USE	0
2381	1286	12	Dfp.java	add	b	Dfp	NAME	0	3	NO_USE	0
2381	1286	12	Dfp.java	add	result	Dfp	dotrap()	0	2	OTHER_USE	0
2381	1286	12	Dfp.java	add	asign	byte	NAME	0	4	NO_USE	0
2381	1286	12	Dfp.java	add	bsign	byte	NAME	0	3	NO_USE	0
2381	1286	12	Dfp.java	add	rsign	byte	NAME	0	1	NO_USE	0
2381	1286	12	Dfp.java	add	aextradigit	int	complement()	0	0	+	0
2381	1286	12	Dfp.java	add	bextradigit	int	complement()	0	0	+	0
2381	1286	12	Dfp.java	add	rh	int	/	0	1	NO_USE	0
2381	1286	12	Dfp.java	add	x	Dfp	PARAM_AS	1	9	NO_USE	0
2381	1286	12	Dfp.java	add	THIS	Dfp	NAME	0	32	FIELD_USE	0
2382	1294	8	Dfp.java	add	a	Dfp	NAME	0	3	NO_USE	0
2382	1294	8	Dfp.java	add	b	Dfp	NAME	0	3	NO_USE	0
2382	1294	8	Dfp.java	add	result	Dfp	+	0	2	OTHER_USE	1
2382	1294	8	Dfp.java	add	asign	byte	NAME	0	4	!=	0
2382	1294	8	Dfp.java	add	bsign	byte	NAME	0	3	!=	0
2382	1294	8	Dfp.java	add	rsign	byte	NAME	0	1	NO_USE	0
2382	1294	8	Dfp.java	add	aextradigit	int	0	0	0	NO_USE	0
2382	1294	8	Dfp.java	add	bextradigit	int	0	0	0	NO_USE	0
2382	1294	8	Dfp.java	add	rh	int	/	0	1	NO_USE	0
2382	1294	8	Dfp.java	add	x	Dfp	PARAM_AS	1	9	NO_USE	0
2382	1294	8	Dfp.java	add	THIS	Dfp	+	0	32	FIELD_USE	1
2383	1297	12	Dfp.java	add	a	Dfp	NAME	0	3	NO_USE	0
2383	1297	12	Dfp.java	add	b	Dfp	NAME	0	3	NO_USE	0
2383	1297	12	Dfp.java	add	result	Dfp	0	0	2	OTHER_USE	0
2383	1297	12	Dfp.java	add	asign	byte	NAME	0	4	NO_USE	1
2383	1297	12	Dfp.java	add	bsign	byte	NAME	0	3	NO_USE	1
2383	1297	12	Dfp.java	add	rsign	byte	NAME	0	1	NO_USE	0
2383	1297	12	Dfp.java	add	aextradigit	int	0	0	0	NO_USE	0
2383	1297	12	Dfp.java	add	bextradigit	int	0	0	0	NO_USE	0
2383	1297	12	Dfp.java	add	rh	int	/	0	1	NO_USE	0
2383	1297	12	Dfp.java	add	x	Dfp	PARAM_AS	1	9	NO_USE	0
2383	1297	12	Dfp.java	add	THIS	Dfp	0	0	32	FIELD_USE	0
2384	1305	8	Dfp.java	add	a	Dfp	NAME	0	3	NO_USE	0
2384	1305	8	Dfp.java	add	b	Dfp	NAME	0	3	NO_USE	0
2384	1305	8	Dfp.java	add	result	Dfp	1	0	2	PARAM_USE	0
2384	1305	8	Dfp.java	add	asign	byte	NAME	0	4	NO_USE	0
2384	1305	8	Dfp.java	add	bsign	byte	NAME	0	3	NO_USE	0
2384	1305	8	Dfp.java	add	rsign	byte	NAME	0	1	NO_USE	0
2384	1305	8	Dfp.java	add	aextradigit	int	0	0	0	NO_USE	0
2384	1305	8	Dfp.java	add	bextradigit	int	0	0	0	NO_USE	0
2384	1305	8	Dfp.java	add	rh	int	/	0	1	NO_USE	0
2384	1305	8	Dfp.java	add	excp	int	round()	0	1	PARAM_USE	1
2384	1305	8	Dfp.java	add	x	Dfp	PARAM_AS	1	9	PARAM_USE	0
2384	1305	8	Dfp.java	add	THIS	Dfp	1	0	32	CLALLER_USE	0
2385	1370	8	Dfp.java	round	inc	boolean	&&	0	0	NO_USE	1
2385	1370	8	Dfp.java	round	n	int	PARAM_AS	1	1	NO_USE	0
2385	1370	8	Dfp.java	round	THIS	Dfp	UNKNOWN_AS	0	2	FIELD_USE	0
2386	1379	12	Dfp.java	round	rh	int	/	0	1	OTHER_USE	1
2386	1379	12	Dfp.java	round	inc	boolean	&&	0	0	NO_USE	0
2386	1379	12	Dfp.java	round	n	int	PARAM_AS	1	1	NO_USE	0
2386	1379	12	Dfp.java	round	THIS	Dfp	-	0	2	CLALLER_USE	0
2387	1386	8	Dfp.java	round	inc	boolean	&&	0	0	NO_USE	0
2387	1386	8	Dfp.java	round	n	int	PARAM_AS	1	1	NO_USE	0
2387	1386	8	Dfp.java	round	THIS	Dfp	NAME	0	2	FIELD_USE	1
2388	1392	8	Dfp.java	round	inc	boolean	&&	0	0	NO_USE	0
2388	1392	8	Dfp.java	round	n	int	PARAM_AS	1	1	NO_USE	0
2388	1392	8	Dfp.java	round	THIS	Dfp	NAME	0	2	FIELD_USE	1
2389	1398	8	Dfp.java	round	inc	boolean	&&	0	0	NO_USE	0
2389	1398	8	Dfp.java	round	n	int	PARAM_AS	1	1	NO_USE	1
2389	1398	8	Dfp.java	round	THIS	Dfp	NAME	0	2	FIELD_USE	0
2390	1415	8	Dfp.java	multiply	x	Dfp	PARAM_AS	1	10	PARAM_USE	1
2390	1415	8	Dfp.java	multiply	THIS	Dfp	UNKNOWN_AS	0	32	FIELD_USE	1
2391	1425	8	Dfp.java	multiply	result	Dfp	newInstance()	0	1	OTHER_USE	0
2391	1425	8	Dfp.java	multiply	x	Dfp	PARAM_AS	1	10	CLALLER_USE	1
2391	1425	8	Dfp.java	multiply	THIS	Dfp	NAME	0	32	CLALLER_USE	1
2392	1426	12	Dfp.java	multiply	result	Dfp	newInstance()	0	1	NO_USE	0
2392	1426	12	Dfp.java	multiply	x	Dfp	PARAM_AS	1	10	NO_USE	0
2392	1426	12	Dfp.java	multiply	THIS	Dfp	NAME	0	32	NO_USE	1
2393	1430	12	Dfp.java	multiply	result	Dfp	newInstance()	0	1	NO_USE	0
2393	1430	12	Dfp.java	multiply	x	Dfp	PARAM_AS	1	10	RET_USE	1
2393	1430	12	Dfp.java	multiply	THIS	Dfp	NAME	0	32	NO_USE	0
2394	1434	12	Dfp.java	multiply	result	Dfp	newInstance()	0	1	OTHER_USE	0
2394	1434	12	Dfp.java	multiply	x	Dfp	PARAM_AS	1	10	OTHER_USE	1
2394	1434	12	Dfp.java	multiply	THIS	Dfp	NAME	0	32	CLALLER_USE	1
2395	1440	12	Dfp.java	multiply	result	Dfp	CAST	0	1	OTHER_USE	0
2395	1440	12	Dfp.java	multiply	x	Dfp	PARAM_AS	1	10	PARAM_USE	1
2395	1440	12	Dfp.java	multiply	THIS	Dfp	CAST	0	32	CLALLER_USE	1
2396	1446	12	Dfp.java	multiply	result	Dfp	CAST	0	1	OTHER_USE	0
2396	1446	12	Dfp.java	multiply	x	Dfp	PARAM_AS	1	10	OTHER_USE	1
2396	1446	12	Dfp.java	multiply	THIS	Dfp	CAST	0	32	CLALLER_USE	1
2397	1452	12	Dfp.java	multiply	result	Dfp	CAST	0	1	OTHER_USE	0
2397	1452	12	Dfp.java	multiply	x	Dfp	PARAM_AS	1	10	PARAM_USE	1
2397	1452	12	Dfp.java	multiply	THIS	Dfp	CAST	0	32	FIELD_USE	1
2398	1479	12	Dfp.java	multiply	i	int	-	0	1	OTHER_USE	1
2398	1479	12	Dfp.java	multiply	result	Dfp	dotrap()	0	1	NO_USE	0
2398	1479	12	Dfp.java	multiply	product	int[]	NAME	0	1	NO_USE	1
2398	1479	12	Dfp.java	multiply	md	int	-	0	1	NO_USE	0
2398	1479	12	Dfp.java	multiply	x	Dfp	PARAM_AS	1	10	NO_USE	0
2398	1479	12	Dfp.java	multiply	THIS	Dfp	NAME	0	32	NO_USE	0
2399	1494	8	Dfp.java	multiply	result	Dfp	CAST	0	1	OTHER_USE	1
2399	1494	8	Dfp.java	multiply	product	int[]	NAME	0	1	NO_USE	0
2399	1494	8	Dfp.java	multiply	md	int	NAME	0	1	NO_USE	0
2399	1494	8	Dfp.java	multiply	x	Dfp	PARAM_AS	1	10	NO_USE	0
2399	1494	8	Dfp.java	multiply	THIS	Dfp	CAST	0	32	FIELD_USE	1
2400	1500	8	Dfp.java	multiply	result	Dfp	0	0	1	CLALLER_USE	0
2400	1500	8	Dfp.java	multiply	product	int[]	NAME	0	1	ARR_USE	0
2400	1500	8	Dfp.java	multiply	md	int	NAME	0	1	-	1
2400	1500	8	Dfp.java	multiply	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2400	1500	8	Dfp.java	multiply	x	Dfp	PARAM_AS	1	10	NO_USE	0
2400	1500	8	Dfp.java	multiply	THIS	Dfp	0	0	32	FIELD_USE	1
2401	1506	8	Dfp.java	multiply	result	Dfp	0	0	1	PARAM_USE	0
2401	1506	8	Dfp.java	multiply	product	int[]	NAME	0	1	NO_USE	0
2401	1506	8	Dfp.java	multiply	md	int	NAME	0	1	NO_USE	0
2401	1506	8	Dfp.java	multiply	excp	int	round()	0	1	PARAM_USE	1
2401	1506	8	Dfp.java	multiply	x	Dfp	PARAM_AS	1	10	PARAM_USE	0
2401	1506	8	Dfp.java	multiply	THIS	Dfp	0	0	32	CLALLER_USE	0
2402	1523	8	Dfp.java	multiply	result	Dfp	newInstance()	0	1	RET_USE	0
2402	1523	8	Dfp.java	multiply	x	int	PARAM_AS	1	4	!=	0
2402	1523	8	Dfp.java	multiply	THIS	Dfp	UNKNOWN_AS	0	7	CLALLER_USE	1
2403	1524	12	Dfp.java	multiply	result	Dfp	newInstance()	0	1	NO_USE	0
2403	1524	12	Dfp.java	multiply	x	int	PARAM_AS	1	4	NO_USE	0
2403	1524	12	Dfp.java	multiply	THIS	Dfp	UNKNOWN_AS	0	7	NO_USE	1
2404	1528	12	Dfp.java	multiply	result	Dfp	newInstance()	0	1	RET_USE	0
2404	1528	12	Dfp.java	multiply	x	int	PARAM_AS	1	4	NO_USE	1
2404	1528	12	Dfp.java	multiply	THIS	Dfp	UNKNOWN_AS	0	7	CLALLER_USE	1
2405	1533	12	Dfp.java	multiply	result	Dfp	newInstance()	0	1	OTHER_USE	0
2405	1533	12	Dfp.java	multiply	x	int	PARAM_AS	1	4	NO_USE	1
2405	1533	12	Dfp.java	multiply	THIS	Dfp	UNKNOWN_AS	0	7	FIELD_USE	1
2406	1543	8	Dfp.java	multiply	result	Dfp	dotrap()	0	1	OTHER_USE	0
2406	1543	8	Dfp.java	multiply	x	int	PARAM_AS	1	4	NO_USE	1
2406	1543	8	Dfp.java	multiply	THIS	Dfp	NAME	0	7	FIELD_USE	0
2407	1559	8	Dfp.java	multiply	result	Dfp	-	0	1	OTHER_USE	0
2407	1559	8	Dfp.java	multiply	rh	int	/	0	1	OTHER_USE	1
2407	1559	8	Dfp.java	multiply	lostdigit	int	0	0	0	NO_USE	0
2407	1559	8	Dfp.java	multiply	x	int	PARAM_AS	1	4	NO_USE	0
2407	1559	8	Dfp.java	multiply	THIS	Dfp	-	0	7	FIELD_USE	0
2408	1565	8	Dfp.java	multiply	result	Dfp	NAME	0	1	OTHER_USE	1
2408	1565	8	Dfp.java	multiply	rh	int	/	0	1	NO_USE	0
2408	1565	8	Dfp.java	multiply	lostdigit	int	ARRAY_ACCESS	0	0	NO_USE	0
2408	1565	8	Dfp.java	multiply	x	int	PARAM_AS	1	4	NO_USE	0
2408	1565	8	Dfp.java	multiply	THIS	Dfp	NAME	0	7	FIELD_USE	1
2409	1570	8	Dfp.java	multiply	result	Dfp	0	0	1	PARAM_USE	0
2409	1570	8	Dfp.java	multiply	rh	int	/	0	1	NO_USE	0
2409	1570	8	Dfp.java	multiply	lostdigit	int	ARRAY_ACCESS	0	0	NO_USE	0
2409	1570	8	Dfp.java	multiply	excp	int	round()	0	1	PARAM_USE	1
2409	1570	8	Dfp.java	multiply	x	int	PARAM_AS	1	4	NO_USE	0
2409	1570	8	Dfp.java	multiply	THIS	Dfp	0	0	7	CLALLER_USE	0
2410	1594	8	Dfp.java	divide	dividend	int[]	UNKNOWN_AS	0	0	NO_USE	0
2410	1594	8	Dfp.java	divide	quotient	int[]	UNKNOWN_AS	0	1	NO_USE	0
2410	1594	8	Dfp.java	divide	remainder	int[]	UNKNOWN_AS	0	3	NO_USE	0
2410	1594	8	Dfp.java	divide	qd	int	UNKNOWN_AS	0	0	NO_USE	0
2410	1594	8	Dfp.java	divide	nsqd	int	UNKNOWN_AS	0	3	NO_USE	0
2410	1594	8	Dfp.java	divide	trial	int	0	0	1	NO_USE	0
2410	1594	8	Dfp.java	divide	minadj	int	UNKNOWN_AS	0	1	NO_USE	0
2410	1594	8	Dfp.java	divide	trialgood	boolean	UNKNOWN_AS	0	1	NO_USE	0
2410	1594	8	Dfp.java	divide	md	int	0	0	1	NO_USE	0
2410	1594	8	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2410	1594	8	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	PARAM_USE	1
2410	1594	8	Dfp.java	divide	THIS	Dfp	UNKNOWN_AS	0	29	FIELD_USE	1
2411	1604	8	Dfp.java	divide	dividend	int[]	UNKNOWN_AS	0	0	NO_USE	0
2411	1604	8	Dfp.java	divide	quotient	int[]	UNKNOWN_AS	0	1	NO_USE	0
2411	1604	8	Dfp.java	divide	remainder	int[]	UNKNOWN_AS	0	3	NO_USE	0
2411	1604	8	Dfp.java	divide	qd	int	UNKNOWN_AS	0	0	NO_USE	0
2411	1604	8	Dfp.java	divide	nsqd	int	UNKNOWN_AS	0	3	NO_USE	0
2411	1604	8	Dfp.java	divide	trial	int	0	0	1	NO_USE	0
2411	1604	8	Dfp.java	divide	minadj	int	UNKNOWN_AS	0	1	NO_USE	0
2411	1604	8	Dfp.java	divide	trialgood	boolean	UNKNOWN_AS	0	1	NO_USE	0
2411	1604	8	Dfp.java	divide	md	int	0	0	1	NO_USE	0
2411	1604	8	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2411	1604	8	Dfp.java	divide	result	Dfp	newInstance()	0	1	OTHER_USE	0
2411	1604	8	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	CLALLER_USE	1
2411	1604	8	Dfp.java	divide	THIS	Dfp	NAME	0	29	CLALLER_USE	1
2412	1605	12	Dfp.java	divide	dividend	int[]	UNKNOWN_AS	0	0	NO_USE	0
2412	1605	12	Dfp.java	divide	quotient	int[]	UNKNOWN_AS	0	1	NO_USE	0
2412	1605	12	Dfp.java	divide	remainder	int[]	UNKNOWN_AS	0	3	NO_USE	0
2412	1605	12	Dfp.java	divide	qd	int	UNKNOWN_AS	0	0	NO_USE	0
2412	1605	12	Dfp.java	divide	nsqd	int	UNKNOWN_AS	0	3	NO_USE	0
2412	1605	12	Dfp.java	divide	trial	int	0	0	1	NO_USE	0
2412	1605	12	Dfp.java	divide	minadj	int	UNKNOWN_AS	0	1	NO_USE	0
2412	1605	12	Dfp.java	divide	trialgood	boolean	UNKNOWN_AS	0	1	NO_USE	0
2412	1605	12	Dfp.java	divide	md	int	0	0	1	NO_USE	0
2412	1605	12	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2412	1605	12	Dfp.java	divide	result	Dfp	newInstance()	0	1	NO_USE	0
2412	1605	12	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	NO_USE	0
2412	1605	12	Dfp.java	divide	THIS	Dfp	NAME	0	29	NO_USE	1
2413	1609	12	Dfp.java	divide	dividend	int[]	UNKNOWN_AS	0	0	NO_USE	0
2413	1609	12	Dfp.java	divide	quotient	int[]	UNKNOWN_AS	0	1	NO_USE	0
2413	1609	12	Dfp.java	divide	remainder	int[]	UNKNOWN_AS	0	3	NO_USE	0
2413	1609	12	Dfp.java	divide	qd	int	UNKNOWN_AS	0	0	NO_USE	0
2413	1609	12	Dfp.java	divide	nsqd	int	UNKNOWN_AS	0	3	NO_USE	0
2413	1609	12	Dfp.java	divide	trial	int	0	0	1	NO_USE	0
2413	1609	12	Dfp.java	divide	minadj	int	UNKNOWN_AS	0	1	NO_USE	0
2413	1609	12	Dfp.java	divide	trialgood	boolean	UNKNOWN_AS	0	1	NO_USE	0
2413	1609	12	Dfp.java	divide	md	int	0	0	1	NO_USE	0
2413	1609	12	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2413	1609	12	Dfp.java	divide	result	Dfp	newInstance()	0	1	NO_USE	0
2413	1609	12	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	RET_USE	1
2413	1609	12	Dfp.java	divide	THIS	Dfp	NAME	0	29	NO_USE	0
2414	1613	12	Dfp.java	divide	dividend	int[]	UNKNOWN_AS	0	0	NO_USE	0
2414	1613	12	Dfp.java	divide	quotient	int[]	UNKNOWN_AS	0	1	NO_USE	0
2414	1613	12	Dfp.java	divide	remainder	int[]	UNKNOWN_AS	0	3	NO_USE	0
2414	1613	12	Dfp.java	divide	qd	int	UNKNOWN_AS	0	0	NO_USE	0
2414	1613	12	Dfp.java	divide	nsqd	int	UNKNOWN_AS	0	3	NO_USE	0
2414	1613	12	Dfp.java	divide	trial	int	0	0	1	NO_USE	0
2414	1613	12	Dfp.java	divide	minadj	int	UNKNOWN_AS	0	1	NO_USE	0
2414	1613	12	Dfp.java	divide	trialgood	boolean	UNKNOWN_AS	0	1	NO_USE	0
2414	1613	12	Dfp.java	divide	md	int	0	0	1	NO_USE	0
2414	1613	12	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2414	1613	12	Dfp.java	divide	result	Dfp	newInstance()	0	1	OTHER_USE	0
2414	1613	12	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	OTHER_USE	1
2414	1613	12	Dfp.java	divide	THIS	Dfp	NAME	0	29	CLALLER_USE	1
2415	1619	12	Dfp.java	divide	dividend	int[]	UNKNOWN_AS	0	0	NO_USE	0
2415	1619	12	Dfp.java	divide	quotient	int[]	UNKNOWN_AS	0	1	NO_USE	0
2415	1619	12	Dfp.java	divide	remainder	int[]	UNKNOWN_AS	0	3	NO_USE	0
2415	1619	12	Dfp.java	divide	qd	int	UNKNOWN_AS	0	0	NO_USE	0
2415	1619	12	Dfp.java	divide	nsqd	int	UNKNOWN_AS	0	3	NO_USE	0
2415	1619	12	Dfp.java	divide	trial	int	0	0	1	NO_USE	0
2415	1619	12	Dfp.java	divide	minadj	int	UNKNOWN_AS	0	1	NO_USE	0
2415	1619	12	Dfp.java	divide	trialgood	boolean	UNKNOWN_AS	0	1	NO_USE	0
2415	1619	12	Dfp.java	divide	md	int	0	0	1	NO_USE	0
2415	1619	12	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2415	1619	12	Dfp.java	divide	result	Dfp	CAST	0	1	OTHER_USE	0
2415	1619	12	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	OTHER_USE	1
2415	1619	12	Dfp.java	divide	THIS	Dfp	CAST	0	29	CLALLER_USE	1
2416	1625	12	Dfp.java	divide	dividend	int[]	UNKNOWN_AS	0	0	NO_USE	0
2416	1625	12	Dfp.java	divide	quotient	int[]	UNKNOWN_AS	0	1	NO_USE	0
2416	1625	12	Dfp.java	divide	remainder	int[]	UNKNOWN_AS	0	3	NO_USE	0
2416	1625	12	Dfp.java	divide	qd	int	UNKNOWN_AS	0	0	NO_USE	0
2416	1625	12	Dfp.java	divide	nsqd	int	UNKNOWN_AS	0	3	NO_USE	0
2416	1625	12	Dfp.java	divide	trial	int	0	0	1	NO_USE	0
2416	1625	12	Dfp.java	divide	minadj	int	UNKNOWN_AS	0	1	NO_USE	0
2416	1625	12	Dfp.java	divide	trialgood	boolean	UNKNOWN_AS	0	1	NO_USE	0
2416	1625	12	Dfp.java	divide	md	int	0	0	1	NO_USE	0
2416	1625	12	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2416	1625	12	Dfp.java	divide	result	Dfp	CAST	0	1	OTHER_USE	0
2416	1625	12	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	PARAM_USE	1
2416	1625	12	Dfp.java	divide	THIS	Dfp	CAST	0	29	FIELD_USE	1
2417	1635	8	Dfp.java	divide	dividend	int[]	UNKNOWN_AS	0	0	NO_USE	0
2417	1635	8	Dfp.java	divide	quotient	int[]	UNKNOWN_AS	0	1	NO_USE	0
2417	1635	8	Dfp.java	divide	remainder	int[]	UNKNOWN_AS	0	3	NO_USE	0
2417	1635	8	Dfp.java	divide	qd	int	UNKNOWN_AS	0	0	NO_USE	0
2417	1635	8	Dfp.java	divide	nsqd	int	UNKNOWN_AS	0	3	NO_USE	0
2417	1635	8	Dfp.java	divide	trial	int	0	0	1	NO_USE	0
2417	1635	8	Dfp.java	divide	minadj	int	UNKNOWN_AS	0	1	NO_USE	0
2417	1635	8	Dfp.java	divide	trialgood	boolean	UNKNOWN_AS	0	1	NO_USE	0
2417	1635	8	Dfp.java	divide	md	int	0	0	1	NO_USE	0
2417	1635	8	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2417	1635	8	Dfp.java	divide	result	Dfp	dotrap()	0	1	OTHER_USE	0
2417	1635	8	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	OTHER_USE	1
2417	1635	8	Dfp.java	divide	THIS	Dfp	NAME	0	29	FIELD_USE	1
2418	1697	16	Dfp.java	divide	rh	int	/	0	1	NO_USE	1
2418	1697	16	Dfp.java	divide	divMsb	int	+	0	0	NO_USE	0
2418	1697	16	Dfp.java	divide	min	int	/	0	0	NO_USE	0
2418	1697	16	Dfp.java	divide	max	int	/	0	0	NO_USE	0
2418	1697	16	Dfp.java	divide	dividend	int[]	ARRAY_ACCESS	0	0	NO_USE	0
2418	1697	16	Dfp.java	divide	quotient	int[]	0	0	1	NO_USE	0
2418	1697	16	Dfp.java	divide	remainder	int[]	-	0	3	NO_USE	0
2418	1697	16	Dfp.java	divide	qd	int	+	0	0	NO_USE	0
2418	1697	16	Dfp.java	divide	nsqd	int	0	0	3	NO_USE	0
2418	1697	16	Dfp.java	divide	trial	int	/	0	1	-	0
2418	1697	16	Dfp.java	divide	minadj	int	UNKNOWN_AS	0	1	NO_USE	0
2418	1697	16	Dfp.java	divide	trialgood	boolean	LITERAL	0	1	NO_USE	0
2418	1697	16	Dfp.java	divide	md	int	0	0	1	NO_USE	0
2418	1697	16	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2418	1697	16	Dfp.java	divide	result	Dfp	dotrap()	0	1	NO_USE	0
2418	1697	16	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	NO_USE	0
2418	1697	16	Dfp.java	divide	THIS	Dfp	0	0	29	NO_USE	0
2419	1707	16	Dfp.java	divide	rh	int	/	0	1	NO_USE	0
2419	1707	16	Dfp.java	divide	divMsb	int	+	0	0	NO_USE	0
2419	1707	16	Dfp.java	divide	min	int	/	0	0	NO_USE	0
2419	1707	16	Dfp.java	divide	max	int	-	0	0	NO_USE	0
2419	1707	16	Dfp.java	divide	dividend	int[]	ARRAY_ACCESS	0	0	NO_USE	0
2419	1707	16	Dfp.java	divide	quotient	int[]	0	0	1	NO_USE	0
2419	1707	16	Dfp.java	divide	remainder	int[]	-	0	3	NO_USE	0
2419	1707	16	Dfp.java	divide	qd	int	+	0	0	NO_USE	0
2419	1707	16	Dfp.java	divide	nsqd	int	0	0	3	NO_USE	0
2419	1707	16	Dfp.java	divide	trial	int	/	0	1	+	0
2419	1707	16	Dfp.java	divide	minadj	int	/	0	1	+	1
2419	1707	16	Dfp.java	divide	trialgood	boolean	LITERAL	0	1	NO_USE	0
2419	1707	16	Dfp.java	divide	md	int	0	0	1	NO_USE	0
2419	1707	16	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2419	1707	16	Dfp.java	divide	result	Dfp	dotrap()	0	1	NO_USE	0
2419	1707	16	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	NO_USE	0
2419	1707	16	Dfp.java	divide	THIS	Dfp	0	0	29	NO_USE	0
2420	1716	20	Dfp.java	divide	i	int	-	0	4	NO_USE	1
2420	1716	20	Dfp.java	divide	rh	int	/	0	1	NO_USE	0
2420	1716	20	Dfp.java	divide	divMsb	int	+	0	0	NO_USE	0
2420	1716	20	Dfp.java	divide	min	int	+	0	0	NO_USE	0
2420	1716	20	Dfp.java	divide	max	int	-	0	0	NO_USE	0
2420	1716	20	Dfp.java	divide	dividend	int[]	ARRAY_ACCESS	0	0	NO_USE	0
2420	1716	20	Dfp.java	divide	quotient	int[]	0	0	1	NO_USE	0
2420	1716	20	Dfp.java	divide	remainder	int[]	-	0	3	NO_USE	1
2420	1716	20	Dfp.java	divide	qd	int	+	0	0	NO_USE	0
2420	1716	20	Dfp.java	divide	nsqd	int	0	0	3	NO_USE	0
2420	1716	20	Dfp.java	divide	trial	int	/	0	1	NO_USE	0
2420	1716	20	Dfp.java	divide	minadj	int	/	0	1	NO_USE	0
2420	1716	20	Dfp.java	divide	trialgood	boolean	LITERAL	0	1	NO_USE	0
2420	1716	20	Dfp.java	divide	md	int	0	0	1	NO_USE	0
2420	1716	20	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2420	1716	20	Dfp.java	divide	result	Dfp	dotrap()	0	1	NO_USE	0
2420	1716	20	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	NO_USE	1
2420	1716	20	Dfp.java	divide	THIS	Dfp	0	0	29	NO_USE	1
2421	1719	20	Dfp.java	divide	i	int	-	0	4	NO_USE	1
2421	1719	20	Dfp.java	divide	rh	int	/	0	1	NO_USE	0
2421	1719	20	Dfp.java	divide	divMsb	int	+	0	0	NO_USE	0
2421	1719	20	Dfp.java	divide	min	int	+	0	0	NO_USE	0
2421	1719	20	Dfp.java	divide	max	int	-	0	0	NO_USE	0
2421	1719	20	Dfp.java	divide	dividend	int[]	ARRAY_ACCESS	0	0	NO_USE	0
2421	1719	20	Dfp.java	divide	quotient	int[]	0	0	1	NO_USE	0
2421	1719	20	Dfp.java	divide	remainder	int[]	-	0	3	NO_USE	1
2421	1719	20	Dfp.java	divide	qd	int	+	0	0	NO_USE	0
2421	1719	20	Dfp.java	divide	nsqd	int	0	0	3	NO_USE	0
2421	1719	20	Dfp.java	divide	trial	int	/	0	1	NO_USE	0
2421	1719	20	Dfp.java	divide	minadj	int	/	0	1	NO_USE	0
2421	1719	20	Dfp.java	divide	trialgood	boolean	LITERAL	0	1	NO_USE	0
2421	1719	20	Dfp.java	divide	md	int	0	0	1	NO_USE	0
2421	1719	20	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2421	1719	20	Dfp.java	divide	result	Dfp	dotrap()	0	1	NO_USE	0
2421	1719	20	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	NO_USE	1
2421	1719	20	Dfp.java	divide	THIS	Dfp	0	0	29	NO_USE	1
2422	1724	16	Dfp.java	divide	rh	int	/	0	1	NO_USE	0
2422	1724	16	Dfp.java	divide	divMsb	int	+	0	0	NO_USE	0
2422	1724	16	Dfp.java	divide	min	int	+	0	0	NO_USE	0
2422	1724	16	Dfp.java	divide	max	int	-	0	0	NO_USE	0
2422	1724	16	Dfp.java	divide	dividend	int[]	ARRAY_ACCESS	0	0	NO_USE	0
2422	1724	16	Dfp.java	divide	quotient	int[]	0	0	1	NO_USE	0
2422	1724	16	Dfp.java	divide	remainder	int[]	-	0	3	NO_USE	1
2422	1724	16	Dfp.java	divide	qd	int	+	0	0	NO_USE	0
2422	1724	16	Dfp.java	divide	nsqd	int	0	0	3	NO_USE	0
2422	1724	16	Dfp.java	divide	trial	int	/	0	1	NO_USE	0
2422	1724	16	Dfp.java	divide	minadj	int	/	0	1	NO_USE	0
2422	1724	16	Dfp.java	divide	trialgood	boolean	LITERAL	0	1	NO_USE	0
2422	1724	16	Dfp.java	divide	md	int	0	0	1	NO_USE	0
2422	1724	16	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2422	1724	16	Dfp.java	divide	result	Dfp	dotrap()	0	1	NO_USE	0
2422	1724	16	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	NO_USE	0
2422	1724	16	Dfp.java	divide	THIS	Dfp	0	0	29	NO_USE	1
2423	1728	16	Dfp.java	divide	rh	int	/	0	1	NO_USE	0
2423	1728	16	Dfp.java	divide	divMsb	int	+	0	0	NO_USE	0
2423	1728	16	Dfp.java	divide	min	int	+	0	0	NO_USE	0
2423	1728	16	Dfp.java	divide	max	int	-	0	0	NO_USE	0
2423	1728	16	Dfp.java	divide	dividend	int[]	ARRAY_ACCESS	0	0	NO_USE	0
2423	1728	16	Dfp.java	divide	quotient	int[]	0	0	1	NO_USE	0
2423	1728	16	Dfp.java	divide	remainder	int[]	-	0	3	NO_USE	0
2423	1728	16	Dfp.java	divide	qd	int	+	0	0	NO_USE	0
2423	1728	16	Dfp.java	divide	nsqd	int	0	0	3	NO_USE	0
2423	1728	16	Dfp.java	divide	trial	int	/	0	1	+	0
2423	1728	16	Dfp.java	divide	minadj	int	/	0	1	NO_USE	0
2423	1728	16	Dfp.java	divide	trialgood	boolean	LITERAL	0	1	NO_USE	1
2423	1728	16	Dfp.java	divide	md	int	0	0	1	NO_USE	0
2423	1728	16	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2423	1728	16	Dfp.java	divide	result	Dfp	dotrap()	0	1	NO_USE	0
2423	1728	16	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	NO_USE	0
2423	1728	16	Dfp.java	divide	THIS	Dfp	0	0	29	NO_USE	0
2424	1735	12	Dfp.java	divide	divMsb	int	+	0	0	NO_USE	0
2424	1735	12	Dfp.java	divide	min	int	+	0	0	NO_USE	0
2424	1735	12	Dfp.java	divide	max	int	-	0	0	NO_USE	0
2424	1735	12	Dfp.java	divide	dividend	int[]	ARRAY_ACCESS	0	0	NO_USE	0
2424	1735	12	Dfp.java	divide	quotient	int[]	NAME	0	1	NO_USE	0
2424	1735	12	Dfp.java	divide	remainder	int[]	-	0	3	NO_USE	0
2424	1735	12	Dfp.java	divide	qd	int	NAME	0	0	NO_USE	0
2424	1735	12	Dfp.java	divide	nsqd	int	0	0	3	x++	1
2424	1735	12	Dfp.java	divide	trial	int	/	0	1	NO_USE	1
2424	1735	12	Dfp.java	divide	minadj	int	/	0	1	NO_USE	0
2424	1735	12	Dfp.java	divide	trialgood	boolean	LITERAL	0	1	NO_USE	0
2424	1735	12	Dfp.java	divide	md	int	0	0	1	NO_USE	0
2424	1735	12	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2424	1735	12	Dfp.java	divide	result	Dfp	dotrap()	0	1	NO_USE	0
2424	1735	12	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	NO_USE	0
2424	1735	12	Dfp.java	divide	THIS	Dfp	0	0	29	NO_USE	0
2425	1739	12	Dfp.java	divide	divMsb	int	+	0	0	NO_USE	0
2425	1739	12	Dfp.java	divide	min	int	+	0	0	NO_USE	0
2425	1739	12	Dfp.java	divide	max	int	-	0	0	NO_USE	0
2425	1739	12	Dfp.java	divide	dividend	int[]	ARRAY_ACCESS	0	0	NO_USE	0
2425	1739	12	Dfp.java	divide	quotient	int[]	NAME	0	1	NO_USE	0
2425	1739	12	Dfp.java	divide	remainder	int[]	-	0	3	NO_USE	0
2425	1739	12	Dfp.java	divide	qd	int	NAME	0	0	NO_USE	0
2425	1739	12	Dfp.java	divide	nsqd	int	0	0	3	NO_USE	1
2425	1739	12	Dfp.java	divide	trial	int	/	0	1	NO_USE	0
2425	1739	12	Dfp.java	divide	minadj	int	/	0	1	NO_USE	0
2425	1739	12	Dfp.java	divide	trialgood	boolean	LITERAL	0	1	NO_USE	0
2425	1739	12	Dfp.java	divide	md	int	0	0	1	NO_USE	0
2425	1739	12	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2425	1739	12	Dfp.java	divide	result	Dfp	dotrap()	0	1	NO_USE	0
2425	1739	12	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	NO_USE	0
2425	1739	12	Dfp.java	divide	THIS	Dfp	0	0	29	NO_USE	1
2426	1744	12	Dfp.java	divide	divMsb	int	+	0	0	NO_USE	0
2426	1744	12	Dfp.java	divide	min	int	+	0	0	NO_USE	0
2426	1744	12	Dfp.java	divide	max	int	-	0	0	NO_USE	0
2426	1744	12	Dfp.java	divide	dividend	int[]	ARRAY_ACCESS	0	0	NO_USE	0
2426	1744	12	Dfp.java	divide	quotient	int[]	NAME	0	1	NO_USE	0
2426	1744	12	Dfp.java	divide	remainder	int[]	-	0	3	NO_USE	0
2426	1744	12	Dfp.java	divide	qd	int	NAME	0	0	NO_USE	0
2426	1744	12	Dfp.java	divide	nsqd	int	0	0	3	NO_USE	1
2426	1744	12	Dfp.java	divide	trial	int	/	0	1	NO_USE	0
2426	1744	12	Dfp.java	divide	minadj	int	/	0	1	NO_USE	0
2426	1744	12	Dfp.java	divide	trialgood	boolean	LITERAL	0	1	NO_USE	0
2426	1744	12	Dfp.java	divide	md	int	0	0	1	NO_USE	0
2426	1744	12	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2426	1744	12	Dfp.java	divide	result	Dfp	dotrap()	0	1	NO_USE	0
2426	1744	12	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	NO_USE	0
2426	1744	12	Dfp.java	divide	THIS	Dfp	0	0	29	NO_USE	1
2427	1759	12	Dfp.java	divide	i	int	+	0	1	OTHER_USE	1
2427	1759	12	Dfp.java	divide	dividend	int[]	ARRAY_ACCESS	0	0	NO_USE	0
2427	1759	12	Dfp.java	divide	quotient	int[]	NAME	0	1	NO_USE	1
2427	1759	12	Dfp.java	divide	remainder	int[]	-	0	3	NO_USE	0
2427	1759	12	Dfp.java	divide	qd	int	NAME	0	0	NO_USE	0
2427	1759	12	Dfp.java	divide	nsqd	int	0	0	3	NO_USE	0
2427	1759	12	Dfp.java	divide	trial	int	/	0	1	NO_USE	0
2427	1759	12	Dfp.java	divide	minadj	int	/	0	1	NO_USE	0
2427	1759	12	Dfp.java	divide	trialgood	boolean	LITERAL	0	1	NO_USE	0
2427	1759	12	Dfp.java	divide	md	int	NAME	0	1	NO_USE	0
2427	1759	12	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2427	1759	12	Dfp.java	divide	result	Dfp	dotrap()	0	1	NO_USE	0
2427	1759	12	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	NO_USE	0
2427	1759	12	Dfp.java	divide	THIS	Dfp	0	0	29	NO_USE	0
2428	1774	8	Dfp.java	divide	dividend	int[]	ARRAY_ACCESS	0	0	NO_USE	0
2428	1774	8	Dfp.java	divide	quotient	int[]	NAME	0	1	NO_USE	0
2428	1774	8	Dfp.java	divide	remainder	int[]	-	0	3	NO_USE	0
2428	1774	8	Dfp.java	divide	qd	int	NAME	0	0	NO_USE	0
2428	1774	8	Dfp.java	divide	nsqd	int	0	0	3	NO_USE	0
2428	1774	8	Dfp.java	divide	trial	int	/	0	1	NO_USE	0
2428	1774	8	Dfp.java	divide	minadj	int	/	0	1	NO_USE	0
2428	1774	8	Dfp.java	divide	trialgood	boolean	LITERAL	0	1	NO_USE	0
2428	1774	8	Dfp.java	divide	md	int	NAME	0	1	NO_USE	0
2428	1774	8	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2428	1774	8	Dfp.java	divide	result	Dfp	CAST	0	1	OTHER_USE	1
2428	1774	8	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	NO_USE	0
2428	1774	8	Dfp.java	divide	THIS	Dfp	CAST	0	29	FIELD_USE	1
2429	1778	8	Dfp.java	divide	dividend	int[]	ARRAY_ACCESS	0	0	NO_USE	0
2429	1778	8	Dfp.java	divide	quotient	int[]	NAME	0	1	ARR_USE	0
2429	1778	8	Dfp.java	divide	remainder	int[]	-	0	3	NO_USE	0
2429	1778	8	Dfp.java	divide	qd	int	NAME	0	0	NO_USE	0
2429	1778	8	Dfp.java	divide	nsqd	int	0	0	3	NO_USE	0
2429	1778	8	Dfp.java	divide	trial	int	/	0	1	NO_USE	0
2429	1778	8	Dfp.java	divide	minadj	int	/	0	1	NO_USE	0
2429	1778	8	Dfp.java	divide	trialgood	boolean	LITERAL	0	1	NO_USE	0
2429	1778	8	Dfp.java	divide	md	int	NAME	0	1	-	1
2429	1778	8	Dfp.java	divide	excp	int	UNKNOWN_AS	0	1	NO_USE	0
2429	1778	8	Dfp.java	divide	result	Dfp	0	0	1	CLALLER_USE	0
2429	1778	8	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	NO_USE	0
2429	1778	8	Dfp.java	divide	THIS	Dfp	0	0	29	FIELD_USE	1
2430	1784	8	Dfp.java	divide	dividend	int[]	ARRAY_ACCESS	0	0	NO_USE	0
2430	1784	8	Dfp.java	divide	quotient	int[]	NAME	0	1	NO_USE	0
2430	1784	8	Dfp.java	divide	remainder	int[]	-	0	3	NO_USE	0
2430	1784	8	Dfp.java	divide	qd	int	NAME	0	0	NO_USE	0
2430	1784	8	Dfp.java	divide	nsqd	int	0	0	3	NO_USE	0
2430	1784	8	Dfp.java	divide	trial	int	/	0	1	NO_USE	0
2430	1784	8	Dfp.java	divide	minadj	int	/	0	1	NO_USE	0
2430	1784	8	Dfp.java	divide	trialgood	boolean	LITERAL	0	1	NO_USE	0
2430	1784	8	Dfp.java	divide	md	int	NAME	0	1	NO_USE	0
2430	1784	8	Dfp.java	divide	excp	int	round()	0	1	PARAM_USE	1
2430	1784	8	Dfp.java	divide	result	Dfp	0	0	1	PARAM_USE	0
2430	1784	8	Dfp.java	divide	divisor	Dfp	PARAM_AS	1	9	PARAM_USE	0
2430	1784	8	Dfp.java	divide	THIS	Dfp	0	0	29	CLALLER_USE	0
2431	1799	8	Dfp.java	divide	divisor	int	PARAM_AS	1	3	NO_USE	0
2431	1799	8	Dfp.java	divide	THIS	Dfp	UNKNOWN_AS	0	6	CLALLER_USE	1
2432	1800	12	Dfp.java	divide	divisor	int	PARAM_AS	1	3	NO_USE	0
2432	1800	12	Dfp.java	divide	THIS	Dfp	UNKNOWN_AS	0	6	NO_USE	1
2433	1804	12	Dfp.java	divide	divisor	int	PARAM_AS	1	3	NO_USE	0
2433	1804	12	Dfp.java	divide	THIS	Dfp	UNKNOWN_AS	0	6	CLALLER_USE	1
2434	1810	8	Dfp.java	divide	divisor	int	PARAM_AS	1	3	NO_USE	1
2434	1810	8	Dfp.java	divide	THIS	Dfp	UNKNOWN_AS	0	6	FIELD_USE	0
2435	1820	8	Dfp.java	divide	divisor	int	PARAM_AS	1	3	NO_USE	1
2435	1820	8	Dfp.java	divide	THIS	Dfp	NAME	0	6	FIELD_USE	0
2436	1838	8	Dfp.java	divide	result	Dfp	NAME	0	1	CLALLER_USE	1
2436	1838	8	Dfp.java	divide	rl	int	-	0	0	*	0
2436	1838	8	Dfp.java	divide	divisor	int	PARAM_AS	1	3	/	0
2436	1838	8	Dfp.java	divide	THIS	Dfp	NAME	0	6	FIELD_USE	1
2437	1848	8	Dfp.java	divide	result	Dfp	NAME	0	1	PARAM_USE	0
2437	1848	8	Dfp.java	divide	rl	int	-	0	0	NO_USE	0
2437	1848	8	Dfp.java	divide	excp	int	round()	0	1	PARAM_USE	1
2437	1848	8	Dfp.java	divide	divisor	int	PARAM_AS	1	3	NO_USE	0
2437	1848	8	Dfp.java	divide	THIS	Dfp	NAME	0	6	CLALLER_USE	0
2438	1862	8	Dfp.java	sqrt	THIS	Dfp	UNKNOWN_AS	0	15	CLALLER_USE	1
2439	1867	8	Dfp.java	sqrt	THIS	Dfp	UNKNOWN_AS	0	15	FIELD_USE	1
2440	1868	12	Dfp.java	sqrt	THIS	Dfp	UNKNOWN_AS	0	15	CLALLER_USE	1
2441	1873	12	Dfp.java	sqrt	THIS	Dfp	UNKNOWN_AS	0	15	CLALLER_USE	1
2442	1877	12	Dfp.java	sqrt	THIS	Dfp	UNKNOWN_AS	0	15	FIELD_USE	1
2443	1887	8	Dfp.java	sqrt	THIS	Dfp	UNKNOWN_AS	0	15	FIELD_USE	1
2444	1901	8	Dfp.java	sqrt	x	Dfp	newInstance()	0	3	OTHER_USE	1
2444	1901	8	Dfp.java	sqrt	THIS	Dfp	NAME	0	15	FIELD_USE	1
2445	1936	12	Dfp.java	sqrt	x	Dfp	add()	0	3	NO_USE	1
2445	1936	12	Dfp.java	sqrt	dx	Dfp	divide()	0	1	NO_USE	0
2445	1936	12	Dfp.java	sqrt	px	Dfp	NAME	0	0	NO_USE	0
2445	1936	12	Dfp.java	sqrt	ppx	Dfp	NAME	0	1	NO_USE	1
2445	1936	12	Dfp.java	sqrt	THIS	Dfp	PREFIX_EXPR	0	15	NO_USE	0
2446	1943	12	Dfp.java	sqrt	x	Dfp	add()	0	3	NO_USE	0
2446	1943	12	Dfp.java	sqrt	dx	Dfp	divide()	0	1	NO_USE	1
2446	1943	12	Dfp.java	sqrt	px	Dfp	NAME	0	0	NO_USE	0
2446	1943	12	Dfp.java	sqrt	ppx	Dfp	NAME	0	1	NO_USE	0
2446	1943	12	Dfp.java	sqrt	THIS	Dfp	PREFIX_EXPR	0	15	NO_USE	1
2447	1957	8	Dfp.java	toString	THIS	Dfp	UNKNOWN_AS	0	6	FIELD_USE	1
2448	1959	12	Dfp.java	toString	THIS	Dfp	UNKNOWN_AS	0	6	FIELD_USE	1
2449	1966	8	Dfp.java	toString	THIS	Dfp	UNKNOWN_AS	0	6	CLALLER_USE	1
2450	1997	12	Dfp.java	dfp2sci	rawdigits	char[]	CAST	0	2	NO_USE	1
2450	1997	12	Dfp.java	dfp2sci	outputbuffer	char[]	ARRAY_CREATION	0	0	NO_USE	0
2450	1997	12	Dfp.java	dfp2sci	p	int	0	0	2	NO_USE	1
2450	1997	12	Dfp.java	dfp2sci	q	int	UNKNOWN_AS	0	0	NO_USE	0
2450	1997	12	Dfp.java	dfp2sci	e	int	UNKNOWN_AS	0	2	NO_USE	0
2450	1997	12	Dfp.java	dfp2sci	ae	int	UNKNOWN_AS	0	0	NO_USE	0
2450	1997	12	Dfp.java	dfp2sci	shf	int	UNKNOWN_AS	0	0	NO_USE	0
2450	1997	12	Dfp.java	dfp2sci	THIS	Dfp	UNKNOWN_AS	0	2	NO_USE	0
2451	2005	8	Dfp.java	dfp2sci	rawdigits	char[]	CAST	0	2	NO_USE	0
2451	2005	8	Dfp.java	dfp2sci	outputbuffer	char[]	ARRAY_CREATION	0	0	ARR_USE	0
2451	2005	8	Dfp.java	dfp2sci	p	int	0	0	2	NO_USE	0
2451	2005	8	Dfp.java	dfp2sci	q	int	0	0	0	x++	0
2451	2005	8	Dfp.java	dfp2sci	e	int	UNKNOWN_AS	0	2	NO_USE	0
2451	2005	8	Dfp.java	dfp2sci	ae	int	UNKNOWN_AS	0	0	NO_USE	0
2451	2005	8	Dfp.java	dfp2sci	shf	int	NAME	0	0	NO_USE	0
2451	2005	8	Dfp.java	dfp2sci	THIS	Dfp	UNKNOWN_AS	0	2	NO_USE	1
2452	2009	8	Dfp.java	dfp2sci	rawdigits	char[]	CAST	0	2	ARR_USE	1
2452	2009	8	Dfp.java	dfp2sci	outputbuffer	char[]	LITERAL	0	0	ARR_USE	0
2452	2009	8	Dfp.java	dfp2sci	p	int	0	0	2	x++	1
2452	2009	8	Dfp.java	dfp2sci	q	int	LITERAL	0	0	x++	0
2452	2009	8	Dfp.java	dfp2sci	e	int	UNKNOWN_AS	0	2	NO_USE	0
2452	2009	8	Dfp.java	dfp2sci	ae	int	UNKNOWN_AS	0	0	NO_USE	0
2452	2009	8	Dfp.java	dfp2sci	shf	int	NAME	0	0	NO_USE	0
2452	2009	8	Dfp.java	dfp2sci	THIS	Dfp	UNKNOWN_AS	0	2	FIELD_USE	1
2453	2032	8	Dfp.java	dfp2sci	rawdigits	char[]	CAST	0	2	NO_USE	0
2453	2032	8	Dfp.java	dfp2sci	outputbuffer	char[]	LITERAL	0	0	NO_USE	0
2453	2032	8	Dfp.java	dfp2sci	p	int	0	0	2	NO_USE	0
2453	2032	8	Dfp.java	dfp2sci	q	int	LITERAL	0	0	NO_USE	0
2453	2032	8	Dfp.java	dfp2sci	e	int	-	0	2	-x	1
2453	2032	8	Dfp.java	dfp2sci	ae	int	NAME	0	0	NO_USE	0
2453	2032	8	Dfp.java	dfp2sci	shf	int	NAME	0	0	NO_USE	0
2453	2032	8	Dfp.java	dfp2sci	THIS	Dfp	UNKNOWN_AS	0	2	NO_USE	0
2454	2041	8	Dfp.java	dfp2sci	rawdigits	char[]	CAST	0	2	NO_USE	0
2454	2041	8	Dfp.java	dfp2sci	outputbuffer	char[]	LITERAL	0	0	ARR_USE	0
2454	2041	8	Dfp.java	dfp2sci	p	int	10	0	2	NO_USE	0
2454	2041	8	Dfp.java	dfp2sci	q	int	LITERAL	0	0	x++	0
2454	2041	8	Dfp.java	dfp2sci	e	int	-	0	2	NO_USE	1
2454	2041	8	Dfp.java	dfp2sci	ae	int	PREFIX_EXPR	0	0	NO_USE	0
2454	2041	8	Dfp.java	dfp2sci	shf	int	NAME	0	0	NO_USE	0
2454	2041	8	Dfp.java	dfp2sci	THIS	Dfp	UNKNOWN_AS	0	2	NO_USE	0
2455	2067	8	Dfp.java	dfp2string	buffer	char[]	LITERAL	0	1	ARR_USE	0
2455	2067	8	Dfp.java	dfp2string	p	int	1	0	0	x++	0
2455	2067	8	Dfp.java	dfp2string	q	int	UNKNOWN_AS	0	1	NO_USE	0
2455	2067	8	Dfp.java	dfp2string	e	int	NAME	0	2	NO_USE	1
2455	2067	8	Dfp.java	dfp2string	pointInserted	boolean	LITERAL	0	1	NO_USE	0
2455	2067	8	Dfp.java	dfp2string	THIS	Dfp	UNKNOWN_AS	0	1	NO_USE	0
2456	2086	12	Dfp.java	dfp2string	i	int	-	0	0	NO_USE	0
2456	2086	12	Dfp.java	dfp2string	buffer	char[]	CAST	0	1	ARR_USE	0
2456	2086	12	Dfp.java	dfp2string	p	int	CAST	0	0	x++	0
2456	2086	12	Dfp.java	dfp2string	q	int	UNKNOWN_AS	0	1	NO_USE	0
2456	2086	12	Dfp.java	dfp2string	e	int	NAME	0	2	NO_USE	1
2456	2086	12	Dfp.java	dfp2string	pointInserted	boolean	LITERAL	0	1	NO_USE	0
2456	2086	12	Dfp.java	dfp2string	THIS	Dfp	UNKNOWN_AS	0	1	NO_USE	0
2457	2100	8	Dfp.java	dfp2string	buffer	char[]	LITERAL	0	1	ARR_USE	0
2457	2100	8	Dfp.java	dfp2string	p	int	LITERAL	0	0	x++	0
2457	2100	8	Dfp.java	dfp2string	q	int	UNKNOWN_AS	0	1	NO_USE	0
2457	2100	8	Dfp.java	dfp2string	e	int	NAME	0	2	NO_USE	0
2457	2100	8	Dfp.java	dfp2string	pointInserted	boolean	LITERAL	0	1	NO_USE	1
2457	2100	8	Dfp.java	dfp2string	THIS	Dfp	UNKNOWN_AS	0	1	NO_USE	0
2458	2110	8	Dfp.java	dfp2string	buffer	char[]	LITERAL	0	1	NO_USE	1
2458	2110	8	Dfp.java	dfp2string	p	int	LITERAL	0	0	NO_USE	0
2458	2110	8	Dfp.java	dfp2string	q	int	1	0	1	x--	1
2458	2110	8	Dfp.java	dfp2string	e	int	NAME	0	2	NO_USE	0
2458	2110	8	Dfp.java	dfp2string	pointInserted	boolean	LITERAL	0	1	NO_USE	0
2458	2110	8	Dfp.java	dfp2string	THIS	Dfp	UNKNOWN_AS	0	1	NO_USE	0
2459	2120	8	Dfp.java	dfp2string	buffer	char[]	LITERAL	0	1	ARR_USE	0
2459	2120	8	Dfp.java	dfp2string	p	int	LITERAL	0	0	NO_USE	0
2459	2120	8	Dfp.java	dfp2string	q	int	1	0	1	--x	0
2459	2120	8	Dfp.java	dfp2string	e	int	NAME	0	2	NO_USE	0
2459	2120	8	Dfp.java	dfp2string	pointInserted	boolean	LITERAL	0	1	NO_USE	0
2459	2120	8	Dfp.java	dfp2string	THIS	Dfp	UNKNOWN_AS	0	1	NO_USE	1
2460	2146	16	Dfp.java	dotrap	def	Dfp	NAME	0	0	OTHER_USE	0
2460	2146	16	Dfp.java	dotrap	type	int	PARAM_AS	1	0	NO_USE	0
2460	2146	16	Dfp.java	dotrap	what	String	PARAM_AS	1	0	NO_USE	0
2460	2146	16	Dfp.java	dotrap	oper	Dfp	PARAM_AS	1	0	OTHER_USE	0
2460	2146	16	Dfp.java	dotrap	result	Dfp	PARAM_AS	1	1	NO_USE	0
2460	2146	16	Dfp.java	dotrap	THIS	Dfp	NAME	0	15	CLALLER_USE	1
2461	2153	16	Dfp.java	dotrap	def	Dfp	NAME	0	0	OTHER_USE	0
2461	2153	16	Dfp.java	dotrap	type	int	PARAM_AS	1	0	NO_USE	0
2461	2153	16	Dfp.java	dotrap	what	String	PARAM_AS	1	0	NO_USE	0
2461	2153	16	Dfp.java	dotrap	oper	Dfp	PARAM_AS	1	0	NO_USE	0
2461	2153	16	Dfp.java	dotrap	result	Dfp	PARAM_AS	1	1	NO_USE	0
2461	2153	16	Dfp.java	dotrap	THIS	Dfp	NAME	0	15	CLALLER_USE	1
2462	2159	16	Dfp.java	dotrap	def	Dfp	NAME	0	0	OTHER_USE	0
2462	2159	16	Dfp.java	dotrap	type	int	PARAM_AS	1	0	NO_USE	0
2462	2159	16	Dfp.java	dotrap	what	String	PARAM_AS	1	0	NO_USE	0
2462	2159	16	Dfp.java	dotrap	oper	Dfp	PARAM_AS	1	0	NO_USE	0
2462	2159	16	Dfp.java	dotrap	result	Dfp	PARAM_AS	1	1	NO_USE	0
2462	2159	16	Dfp.java	dotrap	THIS	Dfp	NAME	0	15	CLALLER_USE	1
2463	2164	16	Dfp.java	dotrap	def	Dfp	NAME	0	0	OTHER_USE	0
2463	2164	16	Dfp.java	dotrap	type	int	PARAM_AS	1	0	NO_USE	0
2463	2164	16	Dfp.java	dotrap	what	String	PARAM_AS	1	0	NO_USE	0
2463	2164	16	Dfp.java	dotrap	oper	Dfp	PARAM_AS	1	0	NO_USE	0
2463	2164	16	Dfp.java	dotrap	result	Dfp	PARAM_AS	1	1	NO_USE	0
2463	2164	16	Dfp.java	dotrap	THIS	Dfp	NAME	0	15	CLALLER_USE	1
2464	2171	16	Dfp.java	dotrap	def	Dfp	NAME	0	0	OTHER_USE	0
2464	2171	16	Dfp.java	dotrap	type	int	PARAM_AS	1	0	NO_USE	0
2464	2171	16	Dfp.java	dotrap	what	String	PARAM_AS	1	0	NO_USE	0
2464	2171	16	Dfp.java	dotrap	oper	Dfp	PARAM_AS	1	0	NO_USE	0
2464	2171	16	Dfp.java	dotrap	result	Dfp	PARAM_AS	1	1	OTHER_USE	1
2464	2171	16	Dfp.java	dotrap	THIS	Dfp	NAME	0	15	CLALLER_USE	1
2465	2236	8	Dfp.java	nextAfter	x	Dfp	PARAM_AS	1	3	PARAM_USE	1
2465	2236	8	Dfp.java	nextAfter	THIS	Dfp	UNKNOWN_AS	0	15	FIELD_USE	1
2466	2245	8	Dfp.java	nextAfter	up	boolean	LITERAL	0	0	NO_USE	0
2466	2245	8	Dfp.java	nextAfter	x	Dfp	PARAM_AS	1	3	NO_USE	1
2466	2245	8	Dfp.java	nextAfter	THIS	Dfp	NAME	0	15	NO_USE	1
2467	2249	8	Dfp.java	nextAfter	up	boolean	LITERAL	0	0	NO_USE	0
2467	2249	8	Dfp.java	nextAfter	x	Dfp	PARAM_AS	1	3	PARAM_USE	1
2467	2249	8	Dfp.java	nextAfter	THIS	Dfp	NAME	0	15	CLALLER_USE	1
2468	2253	8	Dfp.java	nextAfter	up	boolean	LITERAL	0	0	!x	0
2468	2253	8	Dfp.java	nextAfter	x	Dfp	PARAM_AS	1	3	NO_USE	0
2468	2253	8	Dfp.java	nextAfter	THIS	Dfp	NAME	0	15	NO_USE	1
2469	2259	8	Dfp.java	nextAfter	up	boolean	PREFIX_EXPR	0	0	NO_USE	1
2469	2259	8	Dfp.java	nextAfter	inc	Dfp	UNKNOWN_AS	0	1	OTHER_USE	0
2469	2259	8	Dfp.java	nextAfter	result	Dfp	UNKNOWN_AS	0	2	NO_USE	0
2469	2259	8	Dfp.java	nextAfter	x	Dfp	PARAM_AS	1	3	NO_USE	0
2469	2259	8	Dfp.java	nextAfter	THIS	Dfp	NAME	0	15	CLALLER_USE	0
2470	2264	12	Dfp.java	nextAfter	up	boolean	PREFIX_EXPR	0	0	NO_USE	0
2470	2264	12	Dfp.java	nextAfter	inc	Dfp	FIELD_ACCESS	0	1	OTHER_USE	0
2470	2264	12	Dfp.java	nextAfter	result	Dfp	UNKNOWN_AS	0	2	NO_USE	0
2470	2264	12	Dfp.java	nextAfter	x	Dfp	PARAM_AS	1	3	NO_USE	0
2470	2264	12	Dfp.java	nextAfter	THIS	Dfp	FIELD_ACCESS	0	15	FIELD_USE	1
2471	2274	12	Dfp.java	nextAfter	up	boolean	PREFIX_EXPR	0	0	NO_USE	0
2471	2274	12	Dfp.java	nextAfter	inc	Dfp	FIELD_ACCESS	0	1	OTHER_USE	1
2471	2274	12	Dfp.java	nextAfter	result	Dfp	add()	0	2	NO_USE	0
2471	2274	12	Dfp.java	nextAfter	x	Dfp	PARAM_AS	1	3	NO_USE	0
2471	2274	12	Dfp.java	nextAfter	THIS	Dfp	FIELD_ACCESS	0	15	FIELD_USE	1
2472	2280	12	Dfp.java	nextAfter	up	boolean	PREFIX_EXPR	0	0	NO_USE	0
2472	2280	12	Dfp.java	nextAfter	inc	Dfp	+	0	1	OTHER_USE	0
2472	2280	12	Dfp.java	nextAfter	result	Dfp	add()	0	2	NO_USE	0
2472	2280	12	Dfp.java	nextAfter	x	Dfp	PARAM_AS	1	3	NO_USE	0
2472	2280	12	Dfp.java	nextAfter	THIS	Dfp	+	0	15	FIELD_USE	1
2473	2287	8	Dfp.java	nextAfter	up	boolean	PREFIX_EXPR	0	0	NO_USE	0
2473	2287	8	Dfp.java	nextAfter	inc	Dfp	-	0	1	NO_USE	0
2473	2287	8	Dfp.java	nextAfter	result	Dfp	subtract()	0	2	PARAM_USE	1
2473	2287	8	Dfp.java	nextAfter	x	Dfp	PARAM_AS	1	3	PARAM_USE	0
2473	2287	8	Dfp.java	nextAfter	THIS	Dfp	-	0	15	FIELD_USE	1
2474	2292	8	Dfp.java	nextAfter	up	boolean	PREFIX_EXPR	0	0	NO_USE	0
2474	2292	8	Dfp.java	nextAfter	inc	Dfp	-	0	1	NO_USE	0
2474	2292	8	Dfp.java	nextAfter	result	Dfp	dotrap()	0	2	PARAM_USE	1
2474	2292	8	Dfp.java	nextAfter	x	Dfp	PARAM_AS	1	3	PARAM_USE	0
2474	2292	8	Dfp.java	nextAfter	THIS	Dfp	-	0	15	FIELD_USE	1
2475	2307	8	Dfp.java	toDouble	THIS	Dfp	UNKNOWN_AS	0	4	CLALLER_USE	1
2476	2308	12	Dfp.java	toDouble	THIS	Dfp	UNKNOWN_AS	0	4	NO_USE	1
2477	2315	8	Dfp.java	toDouble	THIS	Dfp	UNKNOWN_AS	0	4	FIELD_USE	1
2478	2322	8	Dfp.java	toDouble	y	Dfp	OTHERS	0	0	NO_USE	0
2478	2322	8	Dfp.java	toDouble	negate	boolean	LITERAL	0	0	NO_USE	0
2478	2322	8	Dfp.java	toDouble	cmp0	int	compare()	0	2	<	1
2478	2322	8	Dfp.java	toDouble	THIS	Dfp	UNKNOWN_AS	0	4	FIELD_USE	0
2479	2324	15	Dfp.java	toDouble	y	Dfp	OTHERS	0	0	NO_USE	0
2479	2324	15	Dfp.java	toDouble	negate	boolean	LITERAL	0	0	NO_USE	0
2479	2324	15	Dfp.java	toDouble	cmp0	int	compare()	0	2	NO_USE	1
2479	2324	15	Dfp.java	toDouble	THIS	Dfp	UNKNOWN_AS	0	4	CLALLER_USE	0
2480	2332	8	Dfp.java	toDouble	y	Dfp	negate()	0	0	NO_USE	0
2480	2332	8	Dfp.java	toDouble	negate	boolean	LITERAL	0	0	NO_USE	0
2480	2332	8	Dfp.java	toDouble	cmp0	int	compare()	0	2	NO_USE	0
2480	2332	8	Dfp.java	toDouble	exponent	int	CAST	0	5	x--	1
2480	2332	8	Dfp.java	toDouble	THIS	Dfp	UNKNOWN_AS	0	4	NO_USE	0
2481	2346	8	Dfp.java	toDouble	y	Dfp	divide()	0	0	CLALLER_USE	0
2481	2346	8	Dfp.java	toDouble	negate	boolean	LITERAL	0	0	NO_USE	0
2481	2346	8	Dfp.java	toDouble	cmp0	int	compare()	0	2	NO_USE	0
2481	2346	8	Dfp.java	toDouble	exponent	int	CAST	0	5	NO_USE	1
2481	2346	8	Dfp.java	toDouble	tempDfp	Dfp	multiply()	0	0	NO_USE	0
2481	2346	8	Dfp.java	toDouble	THIS	Dfp	UNKNOWN_AS	0	4	CLALLER_USE	0
2482	2350	8	Dfp.java	toDouble	y	Dfp	subtract()	0	0	NO_USE	0
2482	2350	8	Dfp.java	toDouble	negate	boolean	LITERAL	0	0	NO_USE	0
2482	2350	8	Dfp.java	toDouble	cmp0	int	compare()	0	2	NO_USE	0
2482	2350	8	Dfp.java	toDouble	exponent	int	CAST	0	5	NO_USE	1
2482	2350	8	Dfp.java	toDouble	tempDfp	Dfp	multiply()	0	0	NO_USE	0
2482	2350	8	Dfp.java	toDouble	THIS	Dfp	UNKNOWN_AS	0	4	NO_USE	0
2483	2354	8	Dfp.java	toDouble	y	Dfp	subtract()	0	0	NO_USE	0
2483	2354	8	Dfp.java	toDouble	negate	boolean	LITERAL	0	0	OTHER_USE	0
2483	2354	8	Dfp.java	toDouble	cmp0	int	compare()	0	2	NO_USE	0
2483	2354	8	Dfp.java	toDouble	exponent	int	CAST	0	5	NO_USE	1
2483	2354	8	Dfp.java	toDouble	tempDfp	Dfp	multiply()	0	0	NO_USE	0
2483	2354	8	Dfp.java	toDouble	THIS	Dfp	UNKNOWN_AS	0	4	NO_USE	0
2484	2364	8	Dfp.java	toDouble	y	Dfp	rint()	0	0	NO_USE	0
2484	2364	8	Dfp.java	toDouble	negate	boolean	LITERAL	0	0	NO_USE	0
2484	2364	8	Dfp.java	toDouble	cmp0	int	compare()	0	2	NO_USE	0
2484	2364	8	Dfp.java	toDouble	exponent	int	CAST	0	5	x++	0
2484	2364	8	Dfp.java	toDouble	tempDfp	Dfp	multiply()	0	0	NO_USE	0
2484	2364	8	Dfp.java	toDouble	str	String	substring()	0	0	NO_USE	0
2484	2364	8	Dfp.java	toDouble	mantissa	long	parseLong()	0	1	NO_USE	1
2484	2364	8	Dfp.java	toDouble	THIS	Dfp	UNKNOWN_AS	0	4	NO_USE	0
2485	2371	8	Dfp.java	toDouble	y	Dfp	rint()	0	0	NO_USE	0
2485	2371	8	Dfp.java	toDouble	negate	boolean	LITERAL	0	0	NO_USE	0
2485	2371	8	Dfp.java	toDouble	cmp0	int	compare()	0	2	NO_USE	0
2485	2371	8	Dfp.java	toDouble	exponent	int	CAST	0	5	x--	1
2485	2371	8	Dfp.java	toDouble	tempDfp	Dfp	multiply()	0	0	NO_USE	0
2485	2371	8	Dfp.java	toDouble	str	String	substring()	0	0	NO_USE	0
2485	2371	8	Dfp.java	toDouble	mantissa	long	0	0	1	NO_USE	0
2485	2371	8	Dfp.java	toDouble	THIS	Dfp	UNKNOWN_AS	0	4	NO_USE	0
2486	2383	8	Dfp.java	toDouble	y	Dfp	rint()	0	0	NO_USE	0
2486	2383	8	Dfp.java	toDouble	negate	boolean	LITERAL	0	0	NO_USE	1
2486	2383	8	Dfp.java	toDouble	cmp0	int	compare()	0	2	NO_USE	0
2486	2383	8	Dfp.java	toDouble	exponent	int	CAST	0	5	NO_USE	0
2486	2383	8	Dfp.java	toDouble	tempDfp	Dfp	multiply()	0	0	NO_USE	0
2486	2383	8	Dfp.java	toDouble	str	String	substring()	0	0	NO_USE	0
2486	2383	8	Dfp.java	toDouble	mantissa	long	1	0	1	NO_USE	0
2486	2383	8	Dfp.java	toDouble	bits	long	|	0	0	NO_USE	0
2486	2383	8	Dfp.java	toDouble	x	double	longBitsToDouble()	0	0	-x	0
2486	2383	8	Dfp.java	toDouble	THIS	Dfp	UNKNOWN_AS	0	4	NO_USE	0
2487	197	8	DfpField.java	DfpField	decimalDigits	int	PARAM_AS	1	0	<	0
2487	197	8	DfpField.java	DfpField	computeConstants	boolean	PARAM_AS	1	0	NO_USE	1
2487	197	8	DfpField.java	DfpField	THIS	DfpField	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
2488	532	8	DfpField.java	split	i	int	charAt()	0	5	NO_USE	1
2488	532	8	DfpField.java	split	result	Dfp[]	ARRAY_CREATION	0	0	NO_USE	0
2488	532	8	DfpField.java	split	leading	boolean	LITERAL	0	1	NO_USE	0
2488	532	8	DfpField.java	split	sp	int	0	0	1	NO_USE	0
2488	532	8	DfpField.java	split	sig	int	0	0	1	NO_USE	0
2488	532	8	DfpField.java	split	buf	char[]	charAt()	0	7	NO_USE	1
2488	532	8	DfpField.java	split	a	String	PARAM_AS	1	0	NO_USE	0
2488	532	8	DfpField.java	split	THIS	DfpField	UNKNOWN_AS	0	1	NO_USE	0
2489	536	8	DfpField.java	split	i	int	charAt()	0	5	NO_USE	1
2489	536	8	DfpField.java	split	result	Dfp[]	ARRAY_CREATION	0	0	NO_USE	0
2489	536	8	DfpField.java	split	leading	boolean	LITERAL	0	1	NO_USE	0
2489	536	8	DfpField.java	split	sp	int	0	0	1	NO_USE	0
2489	536	8	DfpField.java	split	sig	int	0	0	1	-	0
2489	536	8	DfpField.java	split	buf	char[]	charAt()	0	7	NO_USE	1
2489	536	8	DfpField.java	split	a	String	PARAM_AS	1	0	NO_USE	0
2489	536	8	DfpField.java	split	THIS	DfpField	UNKNOWN_AS	0	1	NO_USE	0
2490	541	8	DfpField.java	split	i	int	charAt()	0	5	OTHER_USE	0
2490	541	8	DfpField.java	split	result	Dfp[]	ARRAY_CREATION	0	0	NO_USE	0
2490	541	8	DfpField.java	split	leading	boolean	LITERAL	0	1	NO_USE	0
2490	541	8	DfpField.java	split	sp	int	0	0	1	NO_USE	0
2490	541	8	DfpField.java	split	sig	int	%	0	1	NO_USE	1
2490	541	8	DfpField.java	split	buf	char[]	charAt()	0	7	NO_USE	0
2490	541	8	DfpField.java	split	a	String	PARAM_AS	1	0	NO_USE	0
2490	541	8	DfpField.java	split	THIS	DfpField	UNKNOWN_AS	0	1	NO_USE	1
2491	546	8	DfpField.java	split	i	int	charAt()	0	5	NO_USE	1
2491	546	8	DfpField.java	split	result	Dfp[]	ARRAY_CREATION	0	0	NO_USE	0
2491	546	8	DfpField.java	split	leading	boolean	LITERAL	0	1	NO_USE	1
2491	546	8	DfpField.java	split	sp	int	NAME	0	1	NO_USE	0
2491	546	8	DfpField.java	split	sig	int	%	0	1	x++	0
2491	546	8	DfpField.java	split	buf	char[]	charAt()	0	7	NO_USE	1
2491	546	8	DfpField.java	split	a	String	PARAM_AS	1	0	NO_USE	0
2491	546	8	DfpField.java	split	THIS	DfpField	UNKNOWN_AS	0	1	NO_USE	0
2492	555	8	DfpField.java	split	i	int	charAt()	0	3	ARRIDX_USE	1
2492	555	8	DfpField.java	split	result	Dfp[]	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2492	555	8	DfpField.java	split	leading	boolean	LITERAL	0	1	NO_USE	0
2492	555	8	DfpField.java	split	sp	int	NAME	0	1	NO_USE	1
2492	555	8	DfpField.java	split	sig	int	%	0	1	NO_USE	0
2492	555	8	DfpField.java	split	buf	char[]	charAt()	0	7	ARR_USE	1
2492	555	8	DfpField.java	split	a	String	PARAM_AS	1	0	NO_USE	0
2492	555	8	DfpField.java	split	THIS	DfpField	UNKNOWN_AS	0	1	NO_USE	0
2493	570	8	DfpField.java	computeStringConstants	highPrecisionDecimalDigits	int	PARAM_AS	1	1	OTHER_USE	1
2493	570	8	DfpField.java	computeStringConstants	THIS	DfpField	UNKNOWN_AS	0	2	CLALLER_USE	1
2494	629	12	DfpField.java	computePi	ykM1	Dfp	NAME	0	1	NO_USE	1
2494	629	12	DfpField.java	computePi	y2	Dfp	multiply()	0	0	NO_USE	0
2494	629	12	DfpField.java	computePi	oneMinusY4	Dfp	subtract()	0	0	NO_USE	0
2494	629	12	DfpField.java	computePi	s	Dfp	sqrt()	0	0	NO_USE	0
2494	629	12	DfpField.java	computePi	p	Dfp	add()	0	0	NO_USE	0
2494	629	12	DfpField.java	computePi	p2	Dfp	multiply()	0	0	NO_USE	0
2494	629	12	DfpField.java	computePi	i	int	1	0	0	NO_USE	0
2494	629	12	DfpField.java	computePi	sqrt2	Dfp	sqrt()	0	0	NO_USE	0
2494	629	12	DfpField.java	computePi	yk	Dfp	divide()	0	1	NO_USE	1
2494	629	12	DfpField.java	computePi	four	Dfp	add()	0	0	NO_USE	0
2494	629	12	DfpField.java	computePi	two2kp3	Dfp	multiply()	0	0	NO_USE	0
2494	629	12	DfpField.java	computePi	ak	Dfp	subtract()	0	0	NO_USE	0
2494	629	12	DfpField.java	computePi	one	Dfp	PARAM_AS	1	0	NO_USE	0
2494	629	12	DfpField.java	computePi	two	Dfp	PARAM_AS	1	0	NO_USE	0
2494	629	12	DfpField.java	computePi	three	Dfp	PARAM_AS	1	0	NO_USE	0
2494	629	12	DfpField.java	computePi	THIS	DfpField	UNKNOWN_AS	0	0	NO_USE	0
2495	656	12	DfpField.java	computeExp	i	int	0	0	0	NO_USE	0
2495	656	12	DfpField.java	computeExp	y	Dfp	add()	0	1	NO_USE	1
2495	656	12	DfpField.java	computeExp	py	Dfp	CLASS_INSTANCE_CREATION	0	1	NO_USE	1
2495	656	12	DfpField.java	computeExp	f	Dfp	multiply()	0	0	NO_USE	0
2495	656	12	DfpField.java	computeExp	fi	Dfp	add()	0	0	NO_USE	0
2495	656	12	DfpField.java	computeExp	x	Dfp	multiply()	0	0	NO_USE	0
2495	656	12	DfpField.java	computeExp	a	Dfp	PARAM_AS	1	0	NO_USE	0
2495	656	12	DfpField.java	computeExp	one	Dfp	PARAM_AS	1	0	NO_USE	0
2495	656	12	DfpField.java	computeExp	THIS	DfpField	UNKNOWN_AS	0	0	NO_USE	0
2496	740	12	DfpField.java	computeLn	t	Dfp	divide()	0	0	NO_USE	0
2496	740	12	DfpField.java	computeLn	i	int	0	0	0	NO_USE	0
2496	740	12	DfpField.java	computeLn	den	int	+	0	0	NO_USE	0
2496	740	12	DfpField.java	computeLn	x	Dfp	divide()	0	0	NO_USE	0
2496	740	12	DfpField.java	computeLn	y	Dfp	add()	0	1	NO_USE	1
2496	740	12	DfpField.java	computeLn	num	Dfp	multiply()	0	0	NO_USE	0
2496	740	12	DfpField.java	computeLn	py	Dfp	CLASS_INSTANCE_CREATION	0	1	NO_USE	1
2496	740	12	DfpField.java	computeLn	a	Dfp	PARAM_AS	1	0	NO_USE	0
2496	740	12	DfpField.java	computeLn	one	Dfp	PARAM_AS	1	0	NO_USE	0
2496	740	12	DfpField.java	computeLn	two	Dfp	PARAM_AS	1	0	NO_USE	0
2496	740	12	DfpField.java	computeLn	THIS	DfpField	UNKNOWN_AS	0	0	NO_USE	0
2497	57	12	DfpMath.java	split	i	int	charAt()	0	5	NO_USE	1
2497	57	12	DfpMath.java	split	result	Dfp[]	ARRAY_CREATION	0	0	NO_USE	0
2497	57	12	DfpMath.java	split	buf	char[]	charAt()	0	7	NO_USE	1
2497	57	12	DfpMath.java	split	leading	boolean	LITERAL	0	1	NO_USE	0
2497	57	12	DfpMath.java	split	sp	int	0	0	1	NO_USE	0
2497	57	12	DfpMath.java	split	sig	int	0	0	1	NO_USE	0
2497	57	12	DfpMath.java	split	field	DfpField	PARAM_AS	1	1	NO_USE	0
2497	57	12	DfpMath.java	split	a	String	PARAM_AS	1	0	NO_USE	0
2497	57	12	DfpMath.java	split	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2498	61	12	DfpMath.java	split	i	int	charAt()	0	5	NO_USE	1
2498	61	12	DfpMath.java	split	result	Dfp[]	ARRAY_CREATION	0	0	NO_USE	0
2498	61	12	DfpMath.java	split	buf	char[]	charAt()	0	7	NO_USE	1
2498	61	12	DfpMath.java	split	leading	boolean	LITERAL	0	1	NO_USE	0
2498	61	12	DfpMath.java	split	sp	int	0	0	1	NO_USE	0
2498	61	12	DfpMath.java	split	sig	int	0	0	1	-	0
2498	61	12	DfpMath.java	split	field	DfpField	PARAM_AS	1	1	NO_USE	0
2498	61	12	DfpMath.java	split	a	String	PARAM_AS	1	0	NO_USE	0
2498	61	12	DfpMath.java	split	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2499	66	12	DfpMath.java	split	i	int	charAt()	0	5	OTHER_USE	0
2499	66	12	DfpMath.java	split	result	Dfp[]	ARRAY_CREATION	0	0	NO_USE	0
2499	66	12	DfpMath.java	split	buf	char[]	charAt()	0	7	NO_USE	0
2499	66	12	DfpMath.java	split	leading	boolean	LITERAL	0	1	NO_USE	0
2499	66	12	DfpMath.java	split	sp	int	0	0	1	NO_USE	0
2499	66	12	DfpMath.java	split	sig	int	%	0	1	NO_USE	1
2499	66	12	DfpMath.java	split	field	DfpField	PARAM_AS	1	1	NO_USE	1
2499	66	12	DfpMath.java	split	a	String	PARAM_AS	1	0	NO_USE	0
2499	66	12	DfpMath.java	split	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2500	71	12	DfpMath.java	split	i	int	charAt()	0	5	NO_USE	1
2500	71	12	DfpMath.java	split	result	Dfp[]	ARRAY_CREATION	0	0	NO_USE	0
2500	71	12	DfpMath.java	split	buf	char[]	charAt()	0	7	NO_USE	1
2500	71	12	DfpMath.java	split	leading	boolean	LITERAL	0	1	NO_USE	1
2500	71	12	DfpMath.java	split	sp	int	NAME	0	1	NO_USE	0
2500	71	12	DfpMath.java	split	sig	int	%	0	1	x++	0
2500	71	12	DfpMath.java	split	field	DfpField	PARAM_AS	1	1	NO_USE	0
2500	71	12	DfpMath.java	split	a	String	PARAM_AS	1	0	NO_USE	0
2500	71	12	DfpMath.java	split	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2501	80	12	DfpMath.java	split	i	int	charAt()	0	3	ARRIDX_USE	1
2501	80	12	DfpMath.java	split	result	Dfp[]	newDfp()	0	0	NO_USE	0
2501	80	12	DfpMath.java	split	buf	char[]	charAt()	0	7	ARR_USE	1
2501	80	12	DfpMath.java	split	leading	boolean	LITERAL	0	1	NO_USE	0
2501	80	12	DfpMath.java	split	sp	int	NAME	0	1	NO_USE	1
2501	80	12	DfpMath.java	split	sig	int	%	0	1	NO_USE	0
2501	80	12	DfpMath.java	split	field	DfpField	PARAM_AS	1	1	NO_USE	0
2501	80	12	DfpMath.java	split	a	String	PARAM_AS	1	0	NO_USE	0
2501	80	12	DfpMath.java	split	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2502	120	8	DfpMath.java	splitMult	result	Dfp[]	multiply()	0	3	RET_USE	1
2502	120	8	DfpMath.java	splitMult	a	Dfp[]	PARAM_AS	1	0	NO_USE	0
2502	120	8	DfpMath.java	splitMult	b	Dfp[]	PARAM_AS	1	0	NO_USE	0
2502	120	8	DfpMath.java	splitMult	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2503	162	8	DfpMath.java	splitPow	invert	boolean	LITERAL	0	0	NO_USE	0
2503	162	8	DfpMath.java	splitPow	r	Dfp[]	ARRAY_CREATION	0	0	NO_USE	0
2503	162	8	DfpMath.java	splitPow	result	Dfp[]	getZero()	0	0	ARR_USE	0
2503	162	8	DfpMath.java	splitPow	base	Dfp[]	PARAM_AS	1	0	NO_USE	0
2503	162	8	DfpMath.java	splitPow	a	int	PARAM_AS	1	3	NO_USE	1
2503	162	8	DfpMath.java	splitPow	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2504	167	8	DfpMath.java	splitPow	invert	boolean	LITERAL	0	0	NO_USE	0
2504	167	8	DfpMath.java	splitPow	r	Dfp[]	ARRAY_CREATION	0	0	NO_USE	0
2504	167	8	DfpMath.java	splitPow	result	Dfp[]	getZero()	0	0	NO_USE	0
2504	167	8	DfpMath.java	splitPow	base	Dfp[]	PARAM_AS	1	0	NO_USE	0
2504	167	8	DfpMath.java	splitPow	a	int	PARAM_AS	1	3	-x	1
2504	167	8	DfpMath.java	splitPow	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2505	183	16	DfpMath.java	splitPow	trial	int	*	0	1	NO_USE	1
2505	183	16	DfpMath.java	splitPow	prevtrial	int	NAME	0	0	NO_USE	0
2505	183	16	DfpMath.java	splitPow	invert	boolean	LITERAL	0	0	NO_USE	0
2505	183	16	DfpMath.java	splitPow	r	Dfp[]	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2505	183	16	DfpMath.java	splitPow	result	Dfp[]	getZero()	0	0	NO_USE	0
2505	183	16	DfpMath.java	splitPow	base	Dfp[]	PARAM_AS	1	0	NO_USE	0
2505	183	16	DfpMath.java	splitPow	a	int	PREFIX_EXPR	1	3	NO_USE	1
2505	183	16	DfpMath.java	splitPow	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2506	198	8	DfpMath.java	splitPow	invert	boolean	LITERAL	0	0	NO_USE	1
2506	198	8	DfpMath.java	splitPow	r	Dfp[]	splitMult()	0	0	NO_USE	0
2506	198	8	DfpMath.java	splitPow	result	Dfp[]	add()	0	0	ARR_USE	0
2506	198	8	DfpMath.java	splitPow	base	Dfp[]	PARAM_AS	1	0	ARR_USE	0
2506	198	8	DfpMath.java	splitPow	a	int	NAME	1	3	NO_USE	0
2506	198	8	DfpMath.java	splitPow	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2507	217	8	DfpMath.java	pow	invert	boolean	LITERAL	0	0	NO_USE	0
2507	217	8	DfpMath.java	pow	result	Dfp	getOne()	0	0	RET_USE	0
2507	217	8	DfpMath.java	pow	base	Dfp	PARAM_AS	1	0	NO_USE	0
2507	217	8	DfpMath.java	pow	a	int	PARAM_AS	1	2	NO_USE	1
2507	217	8	DfpMath.java	pow	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2508	222	8	DfpMath.java	pow	invert	boolean	LITERAL	0	0	NO_USE	0
2508	222	8	DfpMath.java	pow	result	Dfp	getOne()	0	0	NO_USE	0
2508	222	8	DfpMath.java	pow	base	Dfp	PARAM_AS	1	0	NO_USE	0
2508	222	8	DfpMath.java	pow	a	int	PARAM_AS	1	2	-x	1
2508	222	8	DfpMath.java	pow	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2509	249	8	DfpMath.java	pow	invert	boolean	LITERAL	0	0	NO_USE	1
2509	249	8	DfpMath.java	pow	result	Dfp	multiply()	0	0	PARAM_USE	0
2509	249	8	DfpMath.java	pow	base	Dfp	PARAM_AS	1	0	CLALLER_USE	0
2509	249	8	DfpMath.java	pow	a	int	-	1	2	NO_USE	0
2509	249	8	DfpMath.java	pow	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2510	270	8	DfpMath.java	exp	inta	Dfp	rint()	0	0	NO_USE	0
2510	270	8	DfpMath.java	exp	fraca	Dfp	subtract()	0	0	NO_USE	0
2510	270	8	DfpMath.java	exp	ia	int	intValue()	0	2	NO_USE	1
2510	270	8	DfpMath.java	exp	a	Dfp	PARAM_AS	1	0	CLALLER_USE	0
2510	270	8	DfpMath.java	exp	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2511	275	8	DfpMath.java	exp	inta	Dfp	rint()	0	0	NO_USE	0
2511	275	8	DfpMath.java	exp	fraca	Dfp	subtract()	0	0	NO_USE	0
2511	275	8	DfpMath.java	exp	ia	int	intValue()	0	2	NO_USE	1
2511	275	8	DfpMath.java	exp	a	Dfp	PARAM_AS	1	0	CLALLER_USE	0
2511	275	8	DfpMath.java	exp	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2512	301	12	DfpMath.java	expInternal	i	int	1	0	0	NO_USE	0
2512	301	12	DfpMath.java	expInternal	y	Dfp	add()	0	1	NO_USE	1
2512	301	12	DfpMath.java	expInternal	x	Dfp	multiply()	0	0	NO_USE	0
2512	301	12	DfpMath.java	expInternal	fact	Dfp	divide()	0	0	NO_USE	0
2512	301	12	DfpMath.java	expInternal	py	Dfp	CLASS_INSTANCE_CREATION	0	1	NO_USE	1
2512	301	12	DfpMath.java	expInternal	a	Dfp	PARAM_AS	1	0	NO_USE	0
2512	301	12	DfpMath.java	expInternal	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2513	324	8	DfpMath.java	log	lr	int	UNKNOWN_AS	0	0	NO_USE	0
2513	324	8	DfpMath.java	log	x	Dfp	UNKNOWN_AS	0	0	NO_USE	0
2513	324	8	DfpMath.java	log	ix	int	UNKNOWN_AS	0	0	NO_USE	0
2513	324	8	DfpMath.java	log	p2	int	0	0	0	NO_USE	0
2513	324	8	DfpMath.java	log	a	Dfp	PARAM_AS	1	6	CLALLER_USE	1
2513	324	8	DfpMath.java	log	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2514	330	8	DfpMath.java	log	lr	int	UNKNOWN_AS	0	0	NO_USE	0
2514	330	8	DfpMath.java	log	x	Dfp	UNKNOWN_AS	0	0	NO_USE	0
2514	330	8	DfpMath.java	log	ix	int	UNKNOWN_AS	0	0	NO_USE	0
2514	330	8	DfpMath.java	log	p2	int	0	0	0	NO_USE	0
2514	330	8	DfpMath.java	log	a	Dfp	PARAM_AS	1	6	RET_USE	1
2514	330	8	DfpMath.java	log	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2515	453	12	DfpMath.java	logInternal	i	int	0	0	0	NO_USE	0
2515	453	12	DfpMath.java	logInternal	t	Dfp	divide()	0	0	NO_USE	0
2515	453	12	DfpMath.java	logInternal	x	Dfp	divide()	0	0	NO_USE	0
2515	453	12	DfpMath.java	logInternal	y	Dfp	add()	0	1	NO_USE	1
2515	453	12	DfpMath.java	logInternal	num	Dfp	multiply()	0	0	NO_USE	0
2515	453	12	DfpMath.java	logInternal	py	Dfp	CLASS_INSTANCE_CREATION	0	1	NO_USE	1
2515	453	12	DfpMath.java	logInternal	den	int	+	0	0	NO_USE	0
2515	453	12	DfpMath.java	logInternal	a	Dfp	PARAM_AS	1	0	NO_USE	0
2515	453	12	DfpMath.java	logInternal	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2516	508	8	DfpMath.java	pow	x	Dfp	PARAM_AS	1	12	CLALLER_USE	1
2516	508	8	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	NO_USE	1
2516	508	8	DfpMath.java	pow	THIS	DfpMath	UNKNOWN_AS	0	0	FIELD_USE	0
2517	522	8	DfpMath.java	pow	zero	Dfp	getZero()	0	16	NO_USE	1
2517	522	8	DfpMath.java	pow	one	Dfp	getOne()	0	5	PARAM_USE	0
2517	522	8	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	0
2517	522	8	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2517	522	8	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2517	522	8	DfpMath.java	pow	x	Dfp	PARAM_AS	1	12	CLALLER_USE	0
2517	522	8	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	NO_USE	1
2517	522	8	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2518	526	8	DfpMath.java	pow	zero	Dfp	getZero()	0	16	NO_USE	0
2518	526	8	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	1
2518	526	8	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	0
2518	526	8	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2518	526	8	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2518	526	8	DfpMath.java	pow	x	Dfp	PARAM_AS	1	12	CLALLER_USE	0
2518	526	8	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	NO_USE	1
2518	526	8	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2519	527	12	DfpMath.java	pow	zero	Dfp	getZero()	0	16	NO_USE	0
2519	527	12	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	0
2519	527	12	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	0
2519	527	12	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2519	527	12	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2519	527	12	DfpMath.java	pow	x	Dfp	PARAM_AS	1	12	CLALLER_USE	1
2519	527	12	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	NO_USE	0
2519	527	12	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2520	535	8	DfpMath.java	pow	zero	Dfp	getZero()	0	16	NO_USE	0
2520	535	8	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	0
2520	535	8	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	0
2520	535	8	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2520	535	8	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2520	535	8	DfpMath.java	pow	x	Dfp	PARAM_AS	1	12	CLALLER_USE	1
2520	535	8	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	NO_USE	1
2520	535	8	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2521	542	8	DfpMath.java	pow	zero	Dfp	getZero()	0	16	PARAM_USE	1
2521	542	8	DfpMath.java	pow	one	Dfp	getOne()	0	5	PARAM_USE	0
2521	542	8	DfpMath.java	pow	two	Dfp	getTwo()	0	3	PARAM_USE	0
2521	542	8	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2521	542	8	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2521	542	8	DfpMath.java	pow	x	Dfp	PARAM_AS	1	12	PARAM_USE	1
2521	542	8	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	CLALLER_USE	0
2521	542	8	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2522	543	12	DfpMath.java	pow	zero	Dfp	getZero()	0	16	PARAM_USE	1
2522	543	12	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	1
2522	543	12	DfpMath.java	pow	two	Dfp	getTwo()	0	3	PARAM_USE	0
2522	543	12	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2522	543	12	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2522	543	12	DfpMath.java	pow	x	Dfp	PARAM_AS	1	12	CLALLER_USE	1
2522	543	12	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	CLALLER_USE	0
2522	543	12	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2523	545	16	DfpMath.java	pow	zero	Dfp	getZero()	0	16	PARAM_USE	1
2523	545	16	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	0
2523	545	16	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	0
2523	545	16	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2523	545	16	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2523	545	16	DfpMath.java	pow	x	Dfp	PARAM_AS	1	12	CLALLER_USE	0
2523	545	16	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	NO_USE	1
2523	545	16	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2524	552	16	DfpMath.java	pow	zero	Dfp	getZero()	0	16	PARAM_USE	1
2524	552	16	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	0
2524	552	16	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	1
2524	552	16	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2524	552	16	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2524	552	16	DfpMath.java	pow	x	Dfp	PARAM_AS	1	12	CLALLER_USE	0
2524	552	16	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	CLALLER_USE	1
2524	552	16	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2525	554	20	DfpMath.java	pow	zero	Dfp	getZero()	0	16	CLALLER_USE	1
2525	554	20	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	0
2525	554	20	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	0
2525	554	20	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2525	554	20	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2525	554	20	DfpMath.java	pow	x	Dfp	PARAM_AS	1	12	CLALLER_USE	0
2525	554	20	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	NO_USE	1
2525	554	20	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2526	561	20	DfpMath.java	pow	zero	Dfp	getZero()	0	16	PARAM_USE	1
2526	561	20	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	0
2526	561	20	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	0
2526	561	20	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2526	561	20	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2526	561	20	DfpMath.java	pow	x	Dfp	PARAM_AS	1	12	CLALLER_USE	0
2526	561	20	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	NO_USE	1
2526	561	20	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2527	570	8	DfpMath.java	pow	zero	Dfp	getZero()	0	16	NO_USE	1
2527	570	8	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	0
2527	570	8	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	0
2527	570	8	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2527	570	8	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2527	570	8	DfpMath.java	pow	x	Dfp	PARAM_AS	1	12	CLALLER_USE	1
2527	570	8	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	NO_USE	0
2527	570	8	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2528	576	8	DfpMath.java	pow	zero	Dfp	getZero()	0	16	PARAM_USE	0
2528	576	8	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	1
2528	576	8	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	0
2528	576	8	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2528	576	8	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2528	576	8	DfpMath.java	pow	x	Dfp	negate()	1	12	CLALLER_USE	1
2528	576	8	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	CLALLER_USE	1
2528	576	8	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2529	577	12	DfpMath.java	pow	zero	Dfp	getZero()	0	16	PARAM_USE	1
2529	577	12	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	0
2529	577	12	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	0
2529	577	12	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2529	577	12	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2529	577	12	DfpMath.java	pow	x	Dfp	negate()	1	12	CLALLER_USE	0
2529	577	12	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	RET_USE	1
2529	577	12	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2530	584	8	DfpMath.java	pow	zero	Dfp	getZero()	0	16	PARAM_USE	0
2530	584	8	DfpMath.java	pow	one	Dfp	getOne()	0	5	PARAM_USE	1
2530	584	8	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	0
2530	584	8	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2530	584	8	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2530	584	8	DfpMath.java	pow	x	Dfp	negate()	1	12	CLALLER_USE	1
2530	584	8	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	CLALLER_USE	1
2530	584	8	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2531	585	12	DfpMath.java	pow	zero	Dfp	getZero()	0	16	PARAM_USE	1
2531	585	12	DfpMath.java	pow	one	Dfp	getOne()	0	5	PARAM_USE	0
2531	585	12	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	0
2531	585	12	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2531	585	12	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2531	585	12	DfpMath.java	pow	x	Dfp	negate()	1	12	CLALLER_USE	0
2531	585	12	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	PARAM_USE	1
2531	585	12	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2532	592	8	DfpMath.java	pow	zero	Dfp	getZero()	0	16	NO_USE	0
2532	592	8	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	1
2532	592	8	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	0
2532	592	8	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2532	592	8	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2532	592	8	DfpMath.java	pow	x	Dfp	negate()	1	12	CLALLER_USE	1
2532	592	8	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	NO_USE	1
2532	592	8	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2533	597	8	DfpMath.java	pow	zero	Dfp	getZero()	0	16	PARAM_USE	0
2533	597	8	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	0
2533	597	8	DfpMath.java	pow	two	Dfp	getTwo()	0	3	PARAM_USE	0
2533	597	8	DfpMath.java	pow	invert	boolean	LITERAL	0	1	OTHER_USE	0
2533	597	8	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2533	597	8	DfpMath.java	pow	x	Dfp	negate()	1	12	CLALLER_USE	1
2533	597	8	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	CLALLER_USE	0
2533	597	8	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2534	599	12	DfpMath.java	pow	zero	Dfp	getZero()	0	16	PARAM_USE	0
2534	599	12	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	0
2534	599	12	DfpMath.java	pow	two	Dfp	getTwo()	0	3	PARAM_USE	0
2534	599	12	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	1
2534	599	12	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2534	599	12	DfpMath.java	pow	x	Dfp	negate()	1	12	CLALLER_USE	0
2534	599	12	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	CLALLER_USE	0
2534	599	12	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2535	601	16	DfpMath.java	pow	zero	Dfp	getZero()	0	16	PARAM_USE	1
2535	601	16	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	0
2535	601	16	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	1
2535	601	16	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2535	601	16	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2535	601	16	DfpMath.java	pow	x	Dfp	negate()	1	12	CLALLER_USE	0
2535	601	16	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	CLALLER_USE	1
2535	601	16	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2536	603	20	DfpMath.java	pow	zero	Dfp	getZero()	0	16	CLALLER_USE	1
2536	603	20	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	0
2536	603	20	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	0
2536	603	20	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2536	603	20	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2536	603	20	DfpMath.java	pow	x	Dfp	negate()	1	12	CLALLER_USE	0
2536	603	20	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	NO_USE	1
2536	603	20	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2537	610	20	DfpMath.java	pow	zero	Dfp	getZero()	0	16	PARAM_USE	1
2537	610	20	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	0
2537	610	20	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	0
2537	610	20	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2537	610	20	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2537	610	20	DfpMath.java	pow	x	Dfp	negate()	1	12	CLALLER_USE	0
2537	610	20	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	NO_USE	1
2537	610	20	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2538	618	16	DfpMath.java	pow	zero	Dfp	getZero()	0	16	PARAM_USE	1
2538	618	16	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	0
2538	618	16	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	0
2538	618	16	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2538	618	16	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2538	618	16	DfpMath.java	pow	x	Dfp	negate()	1	12	RET_USE	0
2538	618	16	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	NO_USE	1
2538	618	16	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2539	626	8	DfpMath.java	pow	zero	Dfp	getZero()	0	16	NO_USE	0
2539	626	8	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	0
2539	626	8	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	0
2539	626	8	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	1
2539	626	8	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	NO_USE	0
2539	626	8	DfpMath.java	pow	x	Dfp	negate()	1	12	CLALLER_USE	0
2539	626	8	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	NO_USE	1
2539	626	8	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2540	634	8	DfpMath.java	pow	zero	Dfp	getZero()	0	16	PARAM_USE	0
2540	634	8	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	0
2540	634	8	DfpMath.java	pow	two	Dfp	getTwo()	0	3	PARAM_USE	0
2540	634	8	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2540	634	8	DfpMath.java	pow	ui	int	UNKNOWN_AS	0	0	PARAM_USE	0
2540	634	8	DfpMath.java	pow	r	Dfp	UNKNOWN_AS	0	0	CLALLER_USE	0
2540	634	8	DfpMath.java	pow	x	Dfp	negate()	1	12	PARAM_USE	1
2540	634	8	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	CLALLER_USE	1
2540	634	8	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	CLALLER_USE	0
2541	640	12	DfpMath.java	pow	u	Dfp	rint()	0	0	NO_USE	0
2541	640	12	DfpMath.java	pow	v	Dfp	subtract()	0	1	CLALLER_USE	1
2541	640	12	DfpMath.java	pow	zero	Dfp	getZero()	0	16	NO_USE	1
2541	640	12	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	0
2541	640	12	DfpMath.java	pow	two	Dfp	getTwo()	0	3	PARAM_USE	0
2541	640	12	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2541	640	12	DfpMath.java	pow	ui	int	intValue()	0	0	PARAM_USE	0
2541	640	12	DfpMath.java	pow	r	Dfp	UNKNOWN_AS	0	0	CLALLER_USE	0
2541	640	12	DfpMath.java	pow	x	Dfp	negate()	1	12	PARAM_USE	0
2541	640	12	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	NO_USE	0
2541	640	12	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	CLALLER_USE	0
2542	656	8	DfpMath.java	pow	zero	Dfp	getZero()	0	16	PARAM_USE	0
2542	656	8	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	0
2542	656	8	DfpMath.java	pow	two	Dfp	getTwo()	0	3	PARAM_USE	0
2542	656	8	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	1
2542	656	8	DfpMath.java	pow	ui	int	intValue()	0	0	NO_USE	0
2542	656	8	DfpMath.java	pow	r	Dfp	exp()	0	0	CLALLER_USE	0
2542	656	8	DfpMath.java	pow	x	Dfp	negate()	1	12	NO_USE	0
2542	656	8	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	CLALLER_USE	0
2542	656	8	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2543	658	12	DfpMath.java	pow	zero	Dfp	getZero()	0	16	NO_USE	1
2543	658	12	DfpMath.java	pow	one	Dfp	getOne()	0	5	NO_USE	0
2543	658	12	DfpMath.java	pow	two	Dfp	getTwo()	0	3	NO_USE	1
2543	658	12	DfpMath.java	pow	invert	boolean	LITERAL	0	1	NO_USE	0
2543	658	12	DfpMath.java	pow	ui	int	intValue()	0	0	NO_USE	0
2543	658	12	DfpMath.java	pow	r	Dfp	exp()	0	0	CLALLER_USE	0
2543	658	12	DfpMath.java	pow	x	Dfp	negate()	1	12	NO_USE	0
2543	658	12	DfpMath.java	pow	y	Dfp	PARAM_AS	1	30	NO_USE	1
2543	658	12	DfpMath.java	pow	THIS	DfpMath	NAME	0	0	NO_USE	0
2544	687	12	DfpMath.java	sinInternal	i	int	2	0	0	NO_USE	0
2544	687	12	DfpMath.java	sinInternal	c	Dfp	multiply()	0	0	NO_USE	0
2544	687	12	DfpMath.java	sinInternal	y	Dfp	add()	0	1	NO_USE	1
2544	687	12	DfpMath.java	sinInternal	x	Dfp	negate()	0	0	NO_USE	0
2544	687	12	DfpMath.java	sinInternal	fact	Dfp	divide()	0	0	NO_USE	0
2544	687	12	DfpMath.java	sinInternal	py	Dfp	CLASS_INSTANCE_CREATION	0	1	NO_USE	1
2544	687	12	DfpMath.java	sinInternal	a	Dfp	PARAM_AS	1	0	NO_USE	0
2544	687	12	DfpMath.java	sinInternal	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2545	721	12	DfpMath.java	cosInternal	i	int	2	0	0	NO_USE	0
2545	721	12	DfpMath.java	cosInternal	one	Dfp	getOne()	0	0	NO_USE	0
2545	721	12	DfpMath.java	cosInternal	x	Dfp	negate()	0	0	NO_USE	0
2545	721	12	DfpMath.java	cosInternal	y	Dfp	add()	0	1	NO_USE	1
2545	721	12	DfpMath.java	cosInternal	c	Dfp	multiply()	0	0	NO_USE	0
2545	721	12	DfpMath.java	cosInternal	fact	Dfp	divide()	0	0	NO_USE	0
2545	721	12	DfpMath.java	cosInternal	py	Dfp	CLASS_INSTANCE_CREATION	0	1	NO_USE	1
2545	721	12	DfpMath.java	cosInternal	a	Dfp	PARAM_AS	1	0	NO_USE	0
2545	721	12	DfpMath.java	cosInternal	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2546	745	8	DfpMath.java	sin	pi	Dfp	getPi()	0	2	NO_USE	0
2546	745	8	DfpMath.java	sin	zero	Dfp	getZero()	0	1	NO_USE	1
2546	745	8	DfpMath.java	sin	neg	boolean	LITERAL	0	0	NO_USE	0
2546	745	8	DfpMath.java	sin	x	Dfp	remainder()	0	3	CLALLER_USE	1
2546	745	8	DfpMath.java	sin	a	Dfp	PARAM_AS	1	0	NO_USE	0
2546	745	8	DfpMath.java	sin	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2547	754	8	DfpMath.java	sin	pi	Dfp	getPi()	0	2	CLALLER_USE	1
2547	754	8	DfpMath.java	sin	zero	Dfp	getZero()	0	1	NO_USE	0
2547	754	8	DfpMath.java	sin	neg	boolean	LITERAL	0	0	NO_USE	0
2547	754	8	DfpMath.java	sin	x	Dfp	negate()	0	3	PARAM_USE	1
2547	754	8	DfpMath.java	sin	a	Dfp	PARAM_AS	1	0	NO_USE	0
2547	754	8	DfpMath.java	sin	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2548	759	8	DfpMath.java	sin	pi	Dfp	getPi()	0	2	NO_USE	1
2548	759	8	DfpMath.java	sin	zero	Dfp	getZero()	0	1	OTHER_USE	0
2548	759	8	DfpMath.java	sin	neg	boolean	LITERAL	0	0	NO_USE	0
2548	759	8	DfpMath.java	sin	x	Dfp	subtract()	0	3	OTHER_USE	1
2548	759	8	DfpMath.java	sin	y	Dfp	UNKNOWN_AS	0	0	NO_USE	0
2548	759	8	DfpMath.java	sin	a	Dfp	PARAM_AS	1	0	CLALLER_USE	0
2548	759	8	DfpMath.java	sin	THIS	DfpMath	UNKNOWN_AS	0	0	CLALLER_USE	0
2549	774	8	DfpMath.java	sin	pi	Dfp	getPi()	0	2	NO_USE	0
2549	774	8	DfpMath.java	sin	zero	Dfp	getZero()	0	1	NO_USE	0
2549	774	8	DfpMath.java	sin	neg	boolean	LITERAL	0	0	NO_USE	1
2549	774	8	DfpMath.java	sin	x	Dfp	subtract()	0	3	NO_USE	0
2549	774	8	DfpMath.java	sin	y	Dfp	cosInternal()	0	0	CLALLER_USE	0
2549	774	8	DfpMath.java	sin	a	Dfp	PARAM_AS	1	0	NO_USE	0
2549	774	8	DfpMath.java	sin	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2550	796	8	DfpMath.java	cos	pi	Dfp	getPi()	0	2	NO_USE	0
2550	796	8	DfpMath.java	cos	zero	Dfp	getZero()	0	1	NO_USE	1
2550	796	8	DfpMath.java	cos	neg	boolean	LITERAL	0	0	NO_USE	0
2550	796	8	DfpMath.java	cos	x	Dfp	remainder()	0	3	CLALLER_USE	1
2550	796	8	DfpMath.java	cos	a	Dfp	PARAM_AS	1	0	NO_USE	0
2550	796	8	DfpMath.java	cos	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2551	804	8	DfpMath.java	cos	pi	Dfp	getPi()	0	2	CLALLER_USE	1
2551	804	8	DfpMath.java	cos	zero	Dfp	getZero()	0	1	NO_USE	0
2551	804	8	DfpMath.java	cos	neg	boolean	LITERAL	0	0	NO_USE	0
2551	804	8	DfpMath.java	cos	x	Dfp	negate()	0	3	PARAM_USE	1
2551	804	8	DfpMath.java	cos	a	Dfp	PARAM_AS	1	0	NO_USE	0
2551	804	8	DfpMath.java	cos	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2552	810	8	DfpMath.java	cos	pi	Dfp	getPi()	0	2	NO_USE	1
2552	810	8	DfpMath.java	cos	zero	Dfp	getZero()	0	1	OTHER_USE	0
2552	810	8	DfpMath.java	cos	neg	boolean	LITERAL	0	0	NO_USE	0
2552	810	8	DfpMath.java	cos	x	Dfp	subtract()	0	3	OTHER_USE	1
2552	810	8	DfpMath.java	cos	y	Dfp	UNKNOWN_AS	0	0	NO_USE	0
2552	810	8	DfpMath.java	cos	a	Dfp	PARAM_AS	1	0	CLALLER_USE	0
2552	810	8	DfpMath.java	cos	THIS	DfpMath	UNKNOWN_AS	0	0	CLALLER_USE	0
2553	824	8	DfpMath.java	cos	pi	Dfp	getPi()	0	2	NO_USE	0
2553	824	8	DfpMath.java	cos	zero	Dfp	getZero()	0	1	NO_USE	0
2553	824	8	DfpMath.java	cos	neg	boolean	LITERAL	0	0	NO_USE	1
2553	824	8	DfpMath.java	cos	x	Dfp	subtract()	0	3	NO_USE	0
2553	824	8	DfpMath.java	cos	y	Dfp	sinInternal()	0	0	CLALLER_USE	0
2553	824	8	DfpMath.java	cos	a	Dfp	PARAM_AS	1	0	NO_USE	0
2553	824	8	DfpMath.java	cos	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2554	855	12	DfpMath.java	atanInternal	i	int	2	0	0	NO_USE	0
2554	855	12	DfpMath.java	atanInternal	y	Dfp	add()	0	1	NO_USE	1
2554	855	12	DfpMath.java	atanInternal	x	Dfp	negate()	0	0	NO_USE	0
2554	855	12	DfpMath.java	atanInternal	py	Dfp	CLASS_INSTANCE_CREATION	0	1	NO_USE	1
2554	855	12	DfpMath.java	atanInternal	a	Dfp	PARAM_AS	1	0	NO_USE	0
2554	855	12	DfpMath.java	atanInternal	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2555	890	8	DfpMath.java	atan	zero	Dfp	getZero()	0	1	NO_USE	1
2555	890	8	DfpMath.java	atan	one	Dfp	getOne()	0	1	NO_USE	0
2555	890	8	DfpMath.java	atan	sqr2Split	Dfp[]	getSqr2Split()	0	0	NO_USE	0
2555	890	8	DfpMath.java	atan	piSplit	Dfp[]	getPiSplit()	0	0	NO_USE	0
2555	890	8	DfpMath.java	atan	recp	boolean	LITERAL	0	0	NO_USE	0
2555	890	8	DfpMath.java	atan	neg	boolean	LITERAL	0	0	NO_USE	0
2555	890	8	DfpMath.java	atan	sub	boolean	LITERAL	0	0	NO_USE	0
2555	890	8	DfpMath.java	atan	ty	Dfp	add()	0	1	NO_USE	0
2555	890	8	DfpMath.java	atan	x	Dfp	CLASS_INSTANCE_CREATION	0	3	CLALLER_USE	1
2555	890	8	DfpMath.java	atan	a	Dfp	PARAM_AS	1	0	NO_USE	0
2555	890	8	DfpMath.java	atan	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2556	895	8	DfpMath.java	atan	zero	Dfp	getZero()	0	1	NO_USE	0
2556	895	8	DfpMath.java	atan	one	Dfp	getOne()	0	1	CLALLER_USE	1
2556	895	8	DfpMath.java	atan	sqr2Split	Dfp[]	getSqr2Split()	0	0	NO_USE	0
2556	895	8	DfpMath.java	atan	piSplit	Dfp[]	getPiSplit()	0	0	NO_USE	0
2556	895	8	DfpMath.java	atan	recp	boolean	LITERAL	0	0	NO_USE	0
2556	895	8	DfpMath.java	atan	neg	boolean	LITERAL	0	0	NO_USE	0
2556	895	8	DfpMath.java	atan	sub	boolean	LITERAL	0	0	NO_USE	0
2556	895	8	DfpMath.java	atan	ty	Dfp	add()	0	1	NO_USE	0
2556	895	8	DfpMath.java	atan	x	Dfp	negate()	0	3	PARAM_USE	1
2556	895	8	DfpMath.java	atan	a	Dfp	PARAM_AS	1	0	NO_USE	0
2556	895	8	DfpMath.java	atan	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2557	900	8	DfpMath.java	atan	zero	Dfp	getZero()	0	1	NO_USE	0
2557	900	8	DfpMath.java	atan	one	Dfp	getOne()	0	1	PARAM_USE	0
2557	900	8	DfpMath.java	atan	sqr2Split	Dfp[]	getSqr2Split()	0	0	ARR_USE	0
2557	900	8	DfpMath.java	atan	piSplit	Dfp[]	getPiSplit()	0	0	NO_USE	0
2557	900	8	DfpMath.java	atan	recp	boolean	LITERAL	0	0	NO_USE	0
2557	900	8	DfpMath.java	atan	neg	boolean	LITERAL	0	0	NO_USE	0
2557	900	8	DfpMath.java	atan	sub	boolean	LITERAL	0	0	NO_USE	0
2557	900	8	DfpMath.java	atan	ty	Dfp	add()	0	1	NO_USE	1
2557	900	8	DfpMath.java	atan	x	Dfp	divide()	0	3	PARAM_USE	1
2557	900	8	DfpMath.java	atan	a	Dfp	PARAM_AS	1	0	NO_USE	0
2557	900	8	DfpMath.java	atan	THIS	DfpMath	UNKNOWN_AS	0	0	CLALLER_USE	0
2558	923	8	DfpMath.java	atan	zero	Dfp	getZero()	0	1	NO_USE	0
2558	923	8	DfpMath.java	atan	one	Dfp	getOne()	0	1	NO_USE	0
2558	923	8	DfpMath.java	atan	sqr2Split	Dfp[]	getSqr2Split()	0	0	NO_USE	0
2558	923	8	DfpMath.java	atan	piSplit	Dfp[]	getPiSplit()	0	0	ARR_USE	0
2558	923	8	DfpMath.java	atan	recp	boolean	LITERAL	0	0	NO_USE	0
2558	923	8	DfpMath.java	atan	neg	boolean	LITERAL	0	0	NO_USE	0
2558	923	8	DfpMath.java	atan	sub	boolean	LITERAL	0	0	NO_USE	1
2558	923	8	DfpMath.java	atan	ty	Dfp	add()	0	1	NO_USE	0
2558	923	8	DfpMath.java	atan	x	Dfp	add()	0	3	NO_USE	0
2558	923	8	DfpMath.java	atan	y	Dfp	atanInternal()	0	0	CLALLER_USE	0
2558	923	8	DfpMath.java	atan	a	Dfp	PARAM_AS	1	0	NO_USE	0
2558	923	8	DfpMath.java	atan	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2559	927	8	DfpMath.java	atan	zero	Dfp	getZero()	0	1	NO_USE	0
2559	927	8	DfpMath.java	atan	one	Dfp	getOne()	0	1	NO_USE	0
2559	927	8	DfpMath.java	atan	sqr2Split	Dfp[]	getSqr2Split()	0	0	NO_USE	0
2559	927	8	DfpMath.java	atan	piSplit	Dfp[]	getPiSplit()	0	0	ARR_USE	0
2559	927	8	DfpMath.java	atan	recp	boolean	LITERAL	0	0	NO_USE	1
2559	927	8	DfpMath.java	atan	neg	boolean	LITERAL	0	0	NO_USE	0
2559	927	8	DfpMath.java	atan	sub	boolean	LITERAL	0	0	NO_USE	0
2559	927	8	DfpMath.java	atan	ty	Dfp	add()	0	1	NO_USE	0
2559	927	8	DfpMath.java	atan	x	Dfp	add()	0	3	NO_USE	0
2559	927	8	DfpMath.java	atan	y	Dfp	add()	0	0	PARAM_USE	0
2559	927	8	DfpMath.java	atan	a	Dfp	PARAM_AS	1	0	NO_USE	0
2559	927	8	DfpMath.java	atan	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2560	931	8	DfpMath.java	atan	zero	Dfp	getZero()	0	1	NO_USE	0
2560	931	8	DfpMath.java	atan	one	Dfp	getOne()	0	1	NO_USE	0
2560	931	8	DfpMath.java	atan	sqr2Split	Dfp[]	getSqr2Split()	0	0	NO_USE	0
2560	931	8	DfpMath.java	atan	piSplit	Dfp[]	getPiSplit()	0	0	NO_USE	0
2560	931	8	DfpMath.java	atan	recp	boolean	LITERAL	0	0	NO_USE	0
2560	931	8	DfpMath.java	atan	neg	boolean	LITERAL	0	0	NO_USE	1
2560	931	8	DfpMath.java	atan	sub	boolean	LITERAL	0	0	NO_USE	0
2560	931	8	DfpMath.java	atan	ty	Dfp	add()	0	1	NO_USE	0
2560	931	8	DfpMath.java	atan	x	Dfp	add()	0	3	NO_USE	0
2560	931	8	DfpMath.java	atan	y	Dfp	add()	0	0	CLALLER_USE	0
2560	931	8	DfpMath.java	atan	a	Dfp	PARAM_AS	1	0	NO_USE	0
2560	931	8	DfpMath.java	atan	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2561	955	8	DfpMath.java	acos	result	Dfp	UNKNOWN_AS	0	0	NO_USE	0
2561	955	8	DfpMath.java	acos	negative	boolean	LITERAL	0	0	NO_USE	0
2561	955	8	DfpMath.java	acos	a	Dfp	PARAM_AS	1	2	NO_USE	1
2561	955	8	DfpMath.java	acos	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2562	963	8	DfpMath.java	acos	result	Dfp	atan()	0	0	PARAM_USE	0
2562	963	8	DfpMath.java	acos	negative	boolean	LITERAL	0	0	NO_USE	1
2562	963	8	DfpMath.java	acos	a	Dfp	copysign()	1	2	CLALLER_USE	0
2562	963	8	DfpMath.java	acos	THIS	DfpMath	UNKNOWN_AS	0	0	NO_USE	0
2563	68	8	SplineInterpolator.java	interpolate	x	double	PARAM_AS	1	2	OTHER_USE	1
2563	68	8	SplineInterpolator.java	interpolate	y	double	PARAM_AS	1	1	OTHER_USE	1
2563	68	8	SplineInterpolator.java	interpolate	THIS	SplineInterpolator	UNKNOWN_AS	0	3	FIELD_USE	1
2564	72	8	SplineInterpolator.java	interpolate	x	double	PARAM_AS	1	2	OTHER_USE	1
2564	72	8	SplineInterpolator.java	interpolate	y	double	PARAM_AS	1	1	NO_USE	0
2564	72	8	SplineInterpolator.java	interpolate	THIS	SplineInterpolator	UNKNOWN_AS	0	3	FIELD_USE	1
2565	44	8	LinearInterpolator.java	interpolate	x	double	PARAM_AS	1	2	OTHER_USE	1
2565	44	8	LinearInterpolator.java	interpolate	y	double	PARAM_AS	1	1	OTHER_USE	1
2565	44	8	LinearInterpolator.java	interpolate	THIS	LinearInterpolator	UNKNOWN_AS	0	3	FIELD_USE	1
2566	48	8	LinearInterpolator.java	interpolate	x	double	PARAM_AS	1	2	OTHER_USE	1
2566	48	8	LinearInterpolator.java	interpolate	y	double	PARAM_AS	1	1	NO_USE	0
2566	48	8	LinearInterpolator.java	interpolate	THIS	LinearInterpolator	UNKNOWN_AS	0	3	FIELD_USE	1
2567	160	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	NO_USE	1
2567	160	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	NO_USE	1
2567	160	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	NO_USE	0
2567	160	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2567	160	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2567	160	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	1
2567	160	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	1
2567	160	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2567	160	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2567	160	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2567	160	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2567	160	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2567	160	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2567	160	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2567	160	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	UNKNOWN_AS	0	27	NO_USE	1
2568	163	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	OTHER_USE	1
2568	163	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	NO_USE	0
2568	163	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	NO_USE	0
2568	163	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2568	163	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2568	163	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2568	163	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	OTHER_USE	1
2568	163	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2568	163	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2568	163	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2568	163	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2568	163	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2568	163	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2568	163	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2568	163	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	UNKNOWN_AS	0	27	FIELD_USE	1
2569	166	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	OTHER_USE	1
2569	166	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	NO_USE	0
2569	166	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	NO_USE	0
2569	166	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2569	166	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2569	166	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2569	166	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2569	166	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	OTHER_USE	1
2569	166	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2569	166	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2569	166	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2569	166	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2569	166	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2569	166	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2569	166	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	UNKNOWN_AS	0	27	FIELD_USE	1
2570	169	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	OTHER_USE	1
2570	169	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	NO_USE	0
2570	169	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	NO_USE	0
2570	169	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2570	169	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2570	169	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2570	169	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2570	169	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2570	169	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	OTHER_USE	1
2570	169	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2570	169	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2570	169	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2570	169	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2570	169	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2570	169	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	UNKNOWN_AS	0	27	FIELD_USE	1
2571	172	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	OTHER_USE	1
2571	172	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	NO_USE	0
2571	172	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	NO_USE	0
2571	172	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2571	172	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2571	172	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2571	172	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2571	172	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2571	172	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2571	172	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	OTHER_USE	1
2571	172	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2571	172	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2571	172	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2571	172	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2571	172	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	UNKNOWN_AS	0	27	FIELD_USE	1
2572	175	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	OTHER_USE	1
2572	175	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	NO_USE	0
2572	175	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	NO_USE	0
2572	175	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2572	175	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2572	175	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2572	175	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2572	175	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2572	175	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2572	175	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2572	175	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	OTHER_USE	1
2572	175	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2572	175	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2572	175	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2572	175	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	UNKNOWN_AS	0	27	FIELD_USE	1
2573	178	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	OTHER_USE	1
2573	178	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	NO_USE	0
2573	178	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	NO_USE	0
2573	178	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2573	178	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2573	178	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2573	178	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2573	178	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2573	178	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2573	178	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2573	178	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2573	178	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	OTHER_USE	1
2573	178	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2573	178	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2573	178	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	UNKNOWN_AS	0	27	FIELD_USE	1
2574	181	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	OTHER_USE	1
2574	181	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	NO_USE	0
2574	181	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	NO_USE	0
2574	181	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2574	181	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2574	181	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2574	181	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2574	181	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2574	181	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2574	181	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2574	181	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2574	181	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2574	181	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	OTHER_USE	1
2574	181	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2574	181	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	UNKNOWN_AS	0	27	FIELD_USE	1
2575	184	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	OTHER_USE	1
2575	184	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	NO_USE	0
2575	184	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	NO_USE	0
2575	184	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2575	184	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2575	184	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2575	184	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2575	184	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2575	184	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2575	184	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2575	184	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2575	184	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2575	184	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2575	184	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	OTHER_USE	1
2575	184	8	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	UNKNOWN_AS	0	27	FIELD_USE	1
2576	202	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	i	int	0	0	16	ARRIDX_USE	1
2576	202	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	NO_USE	0
2576	202	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	OTHER_USE	1
2576	202	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	NO_USE	0
2576	202	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2576	202	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2576	202	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastK	int	-	0	0	NO_USE	0
2576	202	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2576	202	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2576	202	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2576	202	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	ARR_USE	1
2576	202	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2576	202	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2576	202	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2576	202	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2576	202	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2576	202	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2576	202	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2576	202	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	ARRAY_CREATION	0	27	FIELD_USE	1
2577	205	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	i	int	0	0	16	ARRIDX_USE	1
2577	205	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	NO_USE	0
2577	205	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	OTHER_USE	1
2577	205	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	NO_USE	0
2577	205	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2577	205	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2577	205	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastK	int	-	0	0	NO_USE	0
2577	205	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2577	205	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2577	205	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2577	205	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2577	205	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	ARR_USE	1
2577	205	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2577	205	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2577	205	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2577	205	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2577	205	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2577	205	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2577	205	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	ARRAY_CREATION	0	27	FIELD_USE	1
2578	208	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	i	int	0	0	16	ARRIDX_USE	1
2578	208	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	NO_USE	0
2578	208	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	OTHER_USE	1
2578	208	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	NO_USE	0
2578	208	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2578	208	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2578	208	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastK	int	-	0	0	NO_USE	0
2578	208	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2578	208	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2578	208	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2578	208	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2578	208	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2578	208	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	ARR_USE	1
2578	208	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2578	208	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2578	208	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2578	208	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2578	208	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2578	208	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	ARRAY_CREATION	0	27	FIELD_USE	1
2579	211	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	i	int	0	0	16	ARRIDX_USE	1
2579	211	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	NO_USE	0
2579	211	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	OTHER_USE	1
2579	211	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	NO_USE	0
2579	211	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2579	211	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2579	211	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastK	int	-	0	0	NO_USE	0
2579	211	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2579	211	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2579	211	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2579	211	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2579	211	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2579	211	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2579	211	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	ARR_USE	1
2579	211	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2579	211	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2579	211	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2579	211	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2579	211	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	ARRAY_CREATION	0	27	FIELD_USE	1
2580	214	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	i	int	0	0	16	ARRIDX_USE	1
2580	214	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	NO_USE	0
2580	214	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	OTHER_USE	1
2580	214	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	NO_USE	0
2580	214	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2580	214	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2580	214	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastK	int	-	0	0	NO_USE	0
2580	214	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2580	214	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2580	214	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2580	214	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2580	214	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2580	214	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2580	214	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2580	214	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	ARR_USE	1
2580	214	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2580	214	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2580	214	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2580	214	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	ARRAY_CREATION	0	27	FIELD_USE	1
2581	217	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	i	int	0	0	16	ARRIDX_USE	1
2581	217	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	NO_USE	0
2581	217	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	OTHER_USE	1
2581	217	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	NO_USE	0
2581	217	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2581	217	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2581	217	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastK	int	-	0	0	NO_USE	0
2581	217	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2581	217	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2581	217	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2581	217	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2581	217	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2581	217	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2581	217	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2581	217	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2581	217	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	ARR_USE	1
2581	217	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2581	217	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2581	217	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	ARRAY_CREATION	0	27	FIELD_USE	1
2582	220	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	i	int	0	0	16	ARRIDX_USE	1
2582	220	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	NO_USE	0
2582	220	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	OTHER_USE	1
2582	220	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	NO_USE	0
2582	220	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2582	220	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2582	220	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastK	int	-	0	0	NO_USE	0
2582	220	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2582	220	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2582	220	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2582	220	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2582	220	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2582	220	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2582	220	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2582	220	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2582	220	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2582	220	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	ARR_USE	1
2582	220	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2582	220	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	ARRAY_CREATION	0	27	FIELD_USE	1
2583	223	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	i	int	0	0	16	ARRIDX_USE	1
2583	223	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	NO_USE	0
2583	223	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	OTHER_USE	1
2583	223	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	NO_USE	0
2583	223	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2583	223	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2583	223	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastK	int	-	0	0	NO_USE	0
2583	223	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2583	223	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2583	223	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2583	223	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2583	223	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2583	223	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2583	223	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2583	223	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2583	223	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2583	223	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2583	223	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	ARR_USE	1
2583	223	12	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	ARRAY_CREATION	0	27	FIELD_USE	1
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	j	int	0	0	8	ARRIDX_USE	1
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	ip1	int	+	0	0	NO_USE	0
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	i	int	0	0	16	ARRIDX_USE	1
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	NO_USE	0
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	NO_USE	0
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	OTHER_USE	1
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastK	int	-	0	0	NO_USE	0
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	ARR_USE	1
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2584	229	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	ARRAY_CREATION	0	27	FIELD_USE	1
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	j	int	0	0	8	ARRIDX_USE	1
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	ip1	int	+	0	0	NO_USE	0
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	i	int	0	0	16	ARRIDX_USE	1
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	NO_USE	0
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	NO_USE	0
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	OTHER_USE	1
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastK	int	-	0	0	NO_USE	0
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	ARR_USE	1
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2585	232	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	ARRAY_CREATION	0	27	FIELD_USE	1
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	j	int	0	0	8	ARRIDX_USE	1
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	ip1	int	+	0	0	NO_USE	0
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	i	int	0	0	16	ARRIDX_USE	1
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	NO_USE	0
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	NO_USE	0
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	OTHER_USE	1
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastK	int	-	0	0	NO_USE	0
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	ARR_USE	1
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2586	235	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	ARRAY_CREATION	0	27	FIELD_USE	1
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	j	int	0	0	8	ARRIDX_USE	1
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	ip1	int	+	0	0	NO_USE	0
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	i	int	0	0	16	ARRIDX_USE	1
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	NO_USE	0
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	NO_USE	0
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	OTHER_USE	1
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastK	int	-	0	0	NO_USE	0
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	ARR_USE	1
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2587	238	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	ARRAY_CREATION	0	27	FIELD_USE	1
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	j	int	0	0	8	ARRIDX_USE	1
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	ip1	int	+	0	0	NO_USE	0
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	i	int	0	0	16	ARRIDX_USE	1
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	NO_USE	0
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	NO_USE	0
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	OTHER_USE	1
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastK	int	-	0	0	NO_USE	0
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	ARR_USE	1
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2588	241	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	ARRAY_CREATION	0	27	FIELD_USE	1
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	j	int	0	0	8	ARRIDX_USE	1
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	ip1	int	+	0	0	NO_USE	0
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	i	int	0	0	16	ARRIDX_USE	1
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	NO_USE	0
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	NO_USE	0
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	OTHER_USE	1
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastK	int	-	0	0	NO_USE	0
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	ARR_USE	1
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2589	244	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	ARRAY_CREATION	0	27	FIELD_USE	1
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	j	int	0	0	8	ARRIDX_USE	1
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	ip1	int	+	0	0	NO_USE	0
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	i	int	0	0	16	ARRIDX_USE	1
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	NO_USE	0
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	NO_USE	0
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	OTHER_USE	1
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastK	int	-	0	0	NO_USE	0
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	ARR_USE	1
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2590	247	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	ARRAY_CREATION	0	27	FIELD_USE	1
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	j	int	0	0	8	ARRIDX_USE	1
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	ip1	int	+	0	0	NO_USE	0
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	i	int	0	0	16	ARRIDX_USE	1
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	xLen	int	NAME	0	9	NO_USE	0
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	yLen	int	NAME	0	9	NO_USE	0
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	zLen	int	NAME	0	8	OTHER_USE	1
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	lastK	int	-	0	0	NO_USE	0
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	z	double[]	PARAM_AS	1	1	NO_USE	0
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	f	double[][][]	PARAM_AS	1	5	NO_USE	0
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdX	double[][][]	PARAM_AS	1	3	NO_USE	0
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	dFdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdY	double[][][]	PARAM_AS	1	3	NO_USE	0
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdXdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d2FdYdZ	double[][][]	PARAM_AS	1	3	NO_USE	0
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	d3FdXdYdZ	double[][][]	PARAM_AS	1	3	ARR_USE	1
2591	250	16	TricubicSplineInterpolatingFunction.java	TricubicSplineInterpolatingFunction	THIS	TricubicSplineInterpolatingFunction	ARRAY_CREATION	0	27	FIELD_USE	1
2592	311	8	TricubicSplineInterpolatingFunction.java	value	i	int	searchIndex()	0	1	NO_USE	1
2592	311	8	TricubicSplineInterpolatingFunction.java	value	x	double	PARAM_AS	1	0	OTHER_USE	0
2592	311	8	TricubicSplineInterpolatingFunction.java	value	y	double	PARAM_AS	1	0	NO_USE	0
2592	311	8	TricubicSplineInterpolatingFunction.java	value	z	double	PARAM_AS	1	0	NO_USE	0
2592	311	8	TricubicSplineInterpolatingFunction.java	value	THIS	TricubicSplineInterpolatingFunction	UNKNOWN_AS	0	0	FIELD_USE	0
2593	315	8	TricubicSplineInterpolatingFunction.java	value	i	int	searchIndex()	0	1	NO_USE	0
2593	315	8	TricubicSplineInterpolatingFunction.java	value	j	int	searchIndex()	0	1	NO_USE	1
2593	315	8	TricubicSplineInterpolatingFunction.java	value	x	double	PARAM_AS	1	0	NO_USE	0
2593	315	8	TricubicSplineInterpolatingFunction.java	value	y	double	PARAM_AS	1	0	OTHER_USE	0
2593	315	8	TricubicSplineInterpolatingFunction.java	value	z	double	PARAM_AS	1	0	NO_USE	0
2593	315	8	TricubicSplineInterpolatingFunction.java	value	THIS	TricubicSplineInterpolatingFunction	UNKNOWN_AS	0	0	FIELD_USE	0
2594	319	8	TricubicSplineInterpolatingFunction.java	value	i	int	searchIndex()	0	1	NO_USE	0
2594	319	8	TricubicSplineInterpolatingFunction.java	value	j	int	searchIndex()	0	1	NO_USE	0
2594	319	8	TricubicSplineInterpolatingFunction.java	value	k	int	searchIndex()	0	1	NO_USE	1
2594	319	8	TricubicSplineInterpolatingFunction.java	value	x	double	PARAM_AS	1	0	NO_USE	0
2594	319	8	TricubicSplineInterpolatingFunction.java	value	y	double	PARAM_AS	1	0	NO_USE	0
2594	319	8	TricubicSplineInterpolatingFunction.java	value	z	double	PARAM_AS	1	0	OTHER_USE	0
2594	319	8	TricubicSplineInterpolatingFunction.java	value	THIS	TricubicSplineInterpolatingFunction	UNKNOWN_AS	0	0	FIELD_USE	0
2595	338	8	TricubicSplineInterpolatingFunction.java	searchIndex	c	double	PARAM_AS	1	2	NO_USE	1
2595	338	8	TricubicSplineInterpolatingFunction.java	searchIndex	val	double[]	PARAM_AS	1	2	NO_USE	1
2595	338	8	TricubicSplineInterpolatingFunction.java	searchIndex	THIS	TricubicSplineInterpolatingFunction	UNKNOWN_AS	0	0	NO_USE	0
2596	344	12	TricubicSplineInterpolatingFunction.java	searchIndex	i	int	1	0	1	-	1
2596	344	12	TricubicSplineInterpolatingFunction.java	searchIndex	max	int	NAME	0	0	NO_USE	0
2596	344	12	TricubicSplineInterpolatingFunction.java	searchIndex	c	double	PARAM_AS	1	2	NO_USE	1
2596	344	12	TricubicSplineInterpolatingFunction.java	searchIndex	val	double[]	PARAM_AS	1	2	NO_USE	1
2596	344	12	TricubicSplineInterpolatingFunction.java	searchIndex	THIS	TricubicSplineInterpolatingFunction	UNKNOWN_AS	0	0	NO_USE	0
2597	450	8	TricubicSplineInterpolatingFunction.java	value	x	double	PARAM_AS	1	2	OTHER_USE	1
2597	450	8	TricubicSplineInterpolatingFunction.java	value	y	double	PARAM_AS	1	2	NO_USE	0
2597	450	8	TricubicSplineInterpolatingFunction.java	value	z	double	PARAM_AS	1	2	NO_USE	0
2597	450	8	TricubicSplineInterpolatingFunction.java	value	THIS	TricubicSplineFunction	UNKNOWN_AS	0	0	NO_USE	0
2598	453	8	TricubicSplineInterpolatingFunction.java	value	x	double	PARAM_AS	1	2	NO_USE	0
2598	453	8	TricubicSplineInterpolatingFunction.java	value	y	double	PARAM_AS	1	2	OTHER_USE	1
2598	453	8	TricubicSplineInterpolatingFunction.java	value	z	double	PARAM_AS	1	2	NO_USE	0
2598	453	8	TricubicSplineInterpolatingFunction.java	value	THIS	TricubicSplineFunction	UNKNOWN_AS	0	0	NO_USE	0
2599	456	8	TricubicSplineInterpolatingFunction.java	value	x	double	PARAM_AS	1	2	NO_USE	0
2599	456	8	TricubicSplineInterpolatingFunction.java	value	y	double	PARAM_AS	1	2	NO_USE	0
2599	456	8	TricubicSplineInterpolatingFunction.java	value	z	double	PARAM_AS	1	2	OTHER_USE	1
2599	456	8	TricubicSplineInterpolatingFunction.java	value	THIS	TricubicSplineFunction	UNKNOWN_AS	0	0	NO_USE	0
2600	151	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	xval	double[][]	PARAM_AS	1	4	NO_USE	1
2600	151	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	yval	double[]	PARAM_AS	1	2	NO_USE	1
2600	151	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	brightnessExponent	int	PARAM_AS	1	0	NO_USE	0
2600	151	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	microsphereElements	int	PARAM_AS	1	0	NO_USE	0
2600	151	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	rand	UnitSphereRandomVectorGenerator	PARAM_AS	1	0	NO_USE	0
2600	151	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	THIS	MicrosphereInterpolatingFunction	UNKNOWN_AS	0	5	NO_USE	0
2601	155	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	xval	double[][]	PARAM_AS	1	4	NO_USE	1
2601	155	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	yval	double[]	PARAM_AS	1	2	NO_USE	0
2601	155	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	brightnessExponent	int	PARAM_AS	1	0	NO_USE	0
2601	155	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	microsphereElements	int	PARAM_AS	1	0	NO_USE	0
2601	155	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	rand	UnitSphereRandomVectorGenerator	PARAM_AS	1	0	NO_USE	0
2601	155	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	THIS	MicrosphereInterpolatingFunction	UNKNOWN_AS	0	5	NO_USE	1
2602	158	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	xval	double[][]	PARAM_AS	1	4	OTHER_USE	1
2602	158	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	yval	double[]	PARAM_AS	1	2	OTHER_USE	1
2602	158	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	brightnessExponent	int	PARAM_AS	1	0	NO_USE	0
2602	158	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	microsphereElements	int	PARAM_AS	1	0	NO_USE	0
2602	158	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	rand	UnitSphereRandomVectorGenerator	PARAM_AS	1	0	NO_USE	0
2602	158	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	THIS	MicrosphereInterpolatingFunction	UNKNOWN_AS	0	5	FIELD_USE	1
2603	161	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	xval	double[][]	PARAM_AS	1	4	NO_USE	1
2603	161	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	yval	double[]	PARAM_AS	1	2	NO_USE	0
2603	161	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	brightnessExponent	int	PARAM_AS	1	0	NO_USE	0
2603	161	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	microsphereElements	int	PARAM_AS	1	0	NO_USE	0
2603	161	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	rand	UnitSphereRandomVectorGenerator	PARAM_AS	1	0	NO_USE	0
2603	161	8	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	THIS	MicrosphereInterpolatingFunction	UNKNOWN_AS	0	5	NO_USE	0
2604	172	12	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	xvalI	double[]	ARRAY_ACCESS	0	2	NO_USE	1
2604	172	12	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	i	int	0	0	0	NO_USE	0
2604	172	12	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	xval	double[][]	PARAM_AS	1	4	NO_USE	0
2604	172	12	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	yval	double[]	PARAM_AS	1	2	NO_USE	0
2604	172	12	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	brightnessExponent	int	PARAM_AS	1	0	NO_USE	0
2604	172	12	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	microsphereElements	int	PARAM_AS	1	0	NO_USE	0
2604	172	12	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	rand	UnitSphereRandomVectorGenerator	PARAM_AS	1	0	NO_USE	0
2604	172	12	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	THIS	MicrosphereInterpolatingFunction	CLASS_INSTANCE_CREATION	0	5	NO_USE	0
2605	175	12	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	xvalI	double[]	ARRAY_ACCESS	0	2	OTHER_USE	1
2605	175	12	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	i	int	0	0	0	NO_USE	0
2605	175	12	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	xval	double[][]	PARAM_AS	1	4	NO_USE	0
2605	175	12	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	yval	double[]	PARAM_AS	1	2	NO_USE	0
2605	175	12	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	brightnessExponent	int	PARAM_AS	1	0	NO_USE	0
2605	175	12	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	microsphereElements	int	PARAM_AS	1	0	NO_USE	0
2605	175	12	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	rand	UnitSphereRandomVectorGenerator	PARAM_AS	1	0	NO_USE	0
2605	175	12	MicrosphereInterpolatingFunction.java	MicrosphereInterpolatingFunction	THIS	MicrosphereInterpolatingFunction	CLASS_INSTANCE_CREATION	0	5	FIELD_USE	1
2606	209	12	MicrosphereInterpolatingFunction.java	value	diff	RealVector	subtract()	0	0	NO_USE	0
2606	209	12	MicrosphereInterpolatingFunction.java	value	diffNorm	double	getNorm()	0	1	NO_USE	1
2606	209	12	MicrosphereInterpolatingFunction.java	value	p	RealVector	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2606	209	12	MicrosphereInterpolatingFunction.java	value	point	double[]	PARAM_AS	1	0	NO_USE	0
2606	209	12	MicrosphereInterpolatingFunction.java	value	THIS	MicrosphereInterpolatingFunction	UNKNOWN_AS	0	0	NO_USE	0
2607	228	12	MicrosphereInterpolatingFunction.java	value	iV	double	illumination()	0	0	*	0
2607	228	12	MicrosphereInterpolatingFunction.java	value	sd	Entry<RealVector,Double>	sample()	0	1	CLALLER_USE	1
2607	228	12	MicrosphereInterpolatingFunction.java	value	p	RealVector	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2607	228	12	MicrosphereInterpolatingFunction.java	value	value	double	0	0	0	NO_USE	0
2607	228	12	MicrosphereInterpolatingFunction.java	value	totalWeight	double	0	0	0	NO_USE	0
2607	228	12	MicrosphereInterpolatingFunction.java	value	point	double[]	PARAM_AS	1	0	NO_USE	0
2607	228	12	MicrosphereInterpolatingFunction.java	value	THIS	MicrosphereInterpolatingFunction	UNKNOWN_AS	0	0	NO_USE	0
2608	39	8	BicubicSplineInterpolator.java	interpolate	xval	double[]	PARAM_AS	1	2	NO_USE	1
2608	39	8	BicubicSplineInterpolator.java	interpolate	yval	double[]	PARAM_AS	1	1	NO_USE	1
2608	39	8	BicubicSplineInterpolator.java	interpolate	fval	double[][]	PARAM_AS	1	3	NO_USE	1
2608	39	8	BicubicSplineInterpolator.java	interpolate	THIS	BicubicSplineInterpolator	UNKNOWN_AS	0	6	NO_USE	1
2609	42	8	BicubicSplineInterpolator.java	interpolate	xval	double[]	PARAM_AS	1	2	OTHER_USE	1
2609	42	8	BicubicSplineInterpolator.java	interpolate	yval	double[]	PARAM_AS	1	1	NO_USE	0
2609	42	8	BicubicSplineInterpolator.java	interpolate	fval	double[][]	PARAM_AS	1	3	OTHER_USE	1
2609	42	8	BicubicSplineInterpolator.java	interpolate	THIS	BicubicSplineInterpolator	UNKNOWN_AS	0	6	FIELD_USE	1
2610	58	12	BicubicSplineInterpolator.java	interpolate	i	int	0	0	1	ARRIDX_USE	1
2610	58	12	BicubicSplineInterpolator.java	interpolate	xLen	int	NAME	0	0	NO_USE	0
2610	58	12	BicubicSplineInterpolator.java	interpolate	yLen	int	NAME	0	1	OTHER_USE	1
2610	58	12	BicubicSplineInterpolator.java	interpolate	fX	double[][]	ARRAY_CREATION	0	0	NO_USE	0
2610	58	12	BicubicSplineInterpolator.java	interpolate	xval	double[]	PARAM_AS	1	2	NO_USE	0
2610	58	12	BicubicSplineInterpolator.java	interpolate	yval	double[]	PARAM_AS	1	1	NO_USE	0
2610	58	12	BicubicSplineInterpolator.java	interpolate	fval	double[][]	PARAM_AS	1	3	ARR_USE	1
2610	58	12	BicubicSplineInterpolator.java	interpolate	THIS	BicubicSplineInterpolator	UNKNOWN_AS	0	6	FIELD_USE	1
2611	101	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	xLen	int	NAME	0	5	NO_USE	1
2611	101	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	yLen	int	NAME	0	5	NO_USE	1
2611	101	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2611	101	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2611	101	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	f	double[][]	PARAM_AS	1	4	NO_USE	1
2611	101	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	dFdX	double[][]	PARAM_AS	1	2	NO_USE	0
2611	101	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	dFdY	double[][]	PARAM_AS	1	2	NO_USE	0
2611	101	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	d2FdXdY	double[][]	PARAM_AS	1	2	NO_USE	0
2611	101	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	THIS	BicubicSplineInterpolatingFunction	UNKNOWN_AS	0	10	NO_USE	1
2612	104	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	xLen	int	NAME	0	5	OTHER_USE	1
2612	104	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	yLen	int	NAME	0	5	NO_USE	0
2612	104	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2612	104	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2612	104	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	f	double[][]	PARAM_AS	1	4	OTHER_USE	1
2612	104	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	dFdX	double[][]	PARAM_AS	1	2	NO_USE	0
2612	104	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	dFdY	double[][]	PARAM_AS	1	2	NO_USE	0
2612	104	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	d2FdXdY	double[][]	PARAM_AS	1	2	NO_USE	0
2612	104	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	THIS	BicubicSplineInterpolatingFunction	UNKNOWN_AS	0	10	FIELD_USE	1
2613	107	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	xLen	int	NAME	0	5	OTHER_USE	1
2613	107	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	yLen	int	NAME	0	5	NO_USE	0
2613	107	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2613	107	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2613	107	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	f	double[][]	PARAM_AS	1	4	NO_USE	0
2613	107	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	dFdX	double[][]	PARAM_AS	1	2	OTHER_USE	1
2613	107	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	dFdY	double[][]	PARAM_AS	1	2	NO_USE	0
2613	107	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	d2FdXdY	double[][]	PARAM_AS	1	2	NO_USE	0
2613	107	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	THIS	BicubicSplineInterpolatingFunction	UNKNOWN_AS	0	10	FIELD_USE	1
2614	110	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	xLen	int	NAME	0	5	OTHER_USE	1
2614	110	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	yLen	int	NAME	0	5	NO_USE	0
2614	110	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2614	110	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2614	110	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	f	double[][]	PARAM_AS	1	4	NO_USE	0
2614	110	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	dFdX	double[][]	PARAM_AS	1	2	NO_USE	0
2614	110	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	dFdY	double[][]	PARAM_AS	1	2	OTHER_USE	1
2614	110	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	d2FdXdY	double[][]	PARAM_AS	1	2	NO_USE	0
2614	110	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	THIS	BicubicSplineInterpolatingFunction	UNKNOWN_AS	0	10	FIELD_USE	1
2615	113	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	xLen	int	NAME	0	5	OTHER_USE	1
2615	113	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	yLen	int	NAME	0	5	NO_USE	0
2615	113	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2615	113	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2615	113	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	f	double[][]	PARAM_AS	1	4	NO_USE	0
2615	113	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	dFdX	double[][]	PARAM_AS	1	2	NO_USE	0
2615	113	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	dFdY	double[][]	PARAM_AS	1	2	NO_USE	0
2615	113	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	d2FdXdY	double[][]	PARAM_AS	1	2	OTHER_USE	1
2615	113	8	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	THIS	BicubicSplineInterpolatingFunction	UNKNOWN_AS	0	10	FIELD_USE	1
2616	128	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	i	int	0	0	4	ARRIDX_USE	1
2616	128	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	xLen	int	NAME	0	5	NO_USE	0
2616	128	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	yLen	int	NAME	0	5	OTHER_USE	1
2616	128	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2616	128	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2616	128	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2616	128	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2616	128	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	f	double[][]	PARAM_AS	1	4	ARR_USE	1
2616	128	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	dFdX	double[][]	PARAM_AS	1	2	NO_USE	0
2616	128	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	dFdY	double[][]	PARAM_AS	1	2	NO_USE	0
2616	128	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	d2FdXdY	double[][]	PARAM_AS	1	2	NO_USE	0
2616	128	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	THIS	BicubicSplineInterpolatingFunction	ARRAY_CREATION	0	10	FIELD_USE	1
2617	131	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	i	int	0	0	4	ARRIDX_USE	1
2617	131	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	xLen	int	NAME	0	5	NO_USE	0
2617	131	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	yLen	int	NAME	0	5	OTHER_USE	1
2617	131	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2617	131	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2617	131	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2617	131	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2617	131	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	f	double[][]	PARAM_AS	1	4	NO_USE	0
2617	131	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	dFdX	double[][]	PARAM_AS	1	2	ARR_USE	1
2617	131	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	dFdY	double[][]	PARAM_AS	1	2	NO_USE	0
2617	131	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	d2FdXdY	double[][]	PARAM_AS	1	2	NO_USE	0
2617	131	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	THIS	BicubicSplineInterpolatingFunction	ARRAY_CREATION	0	10	FIELD_USE	1
2618	134	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	i	int	0	0	4	ARRIDX_USE	1
2618	134	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	xLen	int	NAME	0	5	NO_USE	0
2618	134	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	yLen	int	NAME	0	5	OTHER_USE	1
2618	134	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2618	134	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2618	134	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2618	134	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2618	134	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	f	double[][]	PARAM_AS	1	4	NO_USE	0
2618	134	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	dFdX	double[][]	PARAM_AS	1	2	NO_USE	0
2618	134	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	dFdY	double[][]	PARAM_AS	1	2	ARR_USE	1
2618	134	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	d2FdXdY	double[][]	PARAM_AS	1	2	NO_USE	0
2618	134	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	THIS	BicubicSplineInterpolatingFunction	ARRAY_CREATION	0	10	FIELD_USE	1
2619	137	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	i	int	0	0	4	ARRIDX_USE	1
2619	137	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	xLen	int	NAME	0	5	NO_USE	0
2619	137	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	yLen	int	NAME	0	5	OTHER_USE	1
2619	137	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	lastI	int	-	0	0	NO_USE	0
2619	137	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	lastJ	int	-	0	0	NO_USE	0
2619	137	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	x	double[]	PARAM_AS	1	0	NO_USE	0
2619	137	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	y	double[]	PARAM_AS	1	0	NO_USE	0
2619	137	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	f	double[][]	PARAM_AS	1	4	NO_USE	0
2619	137	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	dFdX	double[][]	PARAM_AS	1	2	NO_USE	0
2619	137	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	dFdY	double[][]	PARAM_AS	1	2	NO_USE	0
2619	137	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	d2FdXdY	double[][]	PARAM_AS	1	2	ARR_USE	1
2619	137	12	BicubicSplineInterpolatingFunction.java	BicubicSplineInterpolatingFunction	THIS	BicubicSplineInterpolatingFunction	ARRAY_CREATION	0	10	FIELD_USE	1
2620	160	8	BicubicSplineInterpolatingFunction.java	value	i	int	searchIndex()	0	1	NO_USE	1
2620	160	8	BicubicSplineInterpolatingFunction.java	value	x	double	PARAM_AS	1	0	OTHER_USE	0
2620	160	8	BicubicSplineInterpolatingFunction.java	value	y	double	PARAM_AS	1	0	NO_USE	0
2620	160	8	BicubicSplineInterpolatingFunction.java	value	THIS	BicubicSplineInterpolatingFunction	UNKNOWN_AS	0	0	FIELD_USE	0
2621	164	8	BicubicSplineInterpolatingFunction.java	value	i	int	searchIndex()	0	1	NO_USE	0
2621	164	8	BicubicSplineInterpolatingFunction.java	value	j	int	searchIndex()	0	1	NO_USE	1
2621	164	8	BicubicSplineInterpolatingFunction.java	value	x	double	PARAM_AS	1	0	NO_USE	0
2621	164	8	BicubicSplineInterpolatingFunction.java	value	y	double	PARAM_AS	1	0	OTHER_USE	0
2621	164	8	BicubicSplineInterpolatingFunction.java	value	THIS	BicubicSplineInterpolatingFunction	UNKNOWN_AS	0	0	FIELD_USE	0
2622	226	8	BicubicSplineInterpolatingFunction.java	partialDerivative	which	int	PARAM_AS	1	0	NO_USE	0
2622	226	8	BicubicSplineInterpolatingFunction.java	partialDerivative	x	double	PARAM_AS	1	0	NO_USE	0
2622	226	8	BicubicSplineInterpolatingFunction.java	partialDerivative	y	double	PARAM_AS	1	0	NO_USE	0
2622	226	8	BicubicSplineInterpolatingFunction.java	partialDerivative	THIS	BicubicSplineInterpolatingFunction	UNKNOWN_AS	0	1	CLALLER_USE	1
2623	231	8	BicubicSplineInterpolatingFunction.java	partialDerivative	i	int	searchIndex()	0	1	NO_USE	1
2623	231	8	BicubicSplineInterpolatingFunction.java	partialDerivative	which	int	PARAM_AS	1	0	NO_USE	0
2623	231	8	BicubicSplineInterpolatingFunction.java	partialDerivative	x	double	PARAM_AS	1	0	OTHER_USE	0
2623	231	8	BicubicSplineInterpolatingFunction.java	partialDerivative	y	double	PARAM_AS	1	0	NO_USE	0
2623	231	8	BicubicSplineInterpolatingFunction.java	partialDerivative	THIS	BicubicSplineInterpolatingFunction	UNKNOWN_AS	0	1	FIELD_USE	0
2624	235	8	BicubicSplineInterpolatingFunction.java	partialDerivative	i	int	searchIndex()	0	1	NO_USE	0
2624	235	8	BicubicSplineInterpolatingFunction.java	partialDerivative	j	int	searchIndex()	0	1	NO_USE	1
2624	235	8	BicubicSplineInterpolatingFunction.java	partialDerivative	which	int	PARAM_AS	1	0	NO_USE	0
2624	235	8	BicubicSplineInterpolatingFunction.java	partialDerivative	x	double	PARAM_AS	1	0	NO_USE	0
2624	235	8	BicubicSplineInterpolatingFunction.java	partialDerivative	y	double	PARAM_AS	1	0	OTHER_USE	0
2624	235	8	BicubicSplineInterpolatingFunction.java	partialDerivative	THIS	BicubicSplineInterpolatingFunction	UNKNOWN_AS	0	1	FIELD_USE	0
2625	273	8	BicubicSplineInterpolatingFunction.java	searchIndex	c	double	PARAM_AS	1	2	NO_USE	1
2625	273	8	BicubicSplineInterpolatingFunction.java	searchIndex	val	double[]	PARAM_AS	1	2	NO_USE	1
2625	273	8	BicubicSplineInterpolatingFunction.java	searchIndex	THIS	BicubicSplineInterpolatingFunction	UNKNOWN_AS	0	0	NO_USE	0
2626	279	12	BicubicSplineInterpolatingFunction.java	searchIndex	i	int	1	0	1	-	1
2626	279	12	BicubicSplineInterpolatingFunction.java	searchIndex	max	int	NAME	0	0	NO_USE	0
2626	279	12	BicubicSplineInterpolatingFunction.java	searchIndex	c	double	PARAM_AS	1	2	NO_USE	1
2626	279	12	BicubicSplineInterpolatingFunction.java	searchIndex	val	double[]	PARAM_AS	1	2	NO_USE	1
2626	279	12	BicubicSplineInterpolatingFunction.java	searchIndex	THIS	BicubicSplineInterpolatingFunction	UNKNOWN_AS	0	0	NO_USE	0
2627	378	8	BicubicSplineInterpolatingFunction.java	value	x	double	PARAM_AS	1	2	OTHER_USE	1
2627	378	8	BicubicSplineInterpolatingFunction.java	value	y	double	PARAM_AS	1	2	NO_USE	0
2627	378	8	BicubicSplineInterpolatingFunction.java	value	THIS	BicubicSplineFunction	UNKNOWN_AS	0	0	NO_USE	0
2628	381	8	BicubicSplineInterpolatingFunction.java	value	x	double	PARAM_AS	1	2	NO_USE	0
2628	381	8	BicubicSplineInterpolatingFunction.java	value	y	double	PARAM_AS	1	2	OTHER_USE	1
2628	381	8	BicubicSplineInterpolatingFunction.java	value	THIS	BicubicSplineFunction	UNKNOWN_AS	0	0	NO_USE	0
2629	419	8	BicubicSplineInterpolatingFunction.java	partialDerivativeX	THIS	BicubicSplineFunction	UNKNOWN_AS	0	1	CLALLER_USE	1
2630	429	8	BicubicSplineInterpolatingFunction.java	partialDerivativeY	THIS	BicubicSplineFunction	UNKNOWN_AS	0	1	CLALLER_USE	1
2631	439	8	BicubicSplineInterpolatingFunction.java	partialDerivativeXX	THIS	BicubicSplineFunction	UNKNOWN_AS	0	1	CLALLER_USE	1
2632	449	8	BicubicSplineInterpolatingFunction.java	partialDerivativeYY	THIS	BicubicSplineFunction	UNKNOWN_AS	0	1	CLALLER_USE	1
2633	459	8	BicubicSplineInterpolatingFunction.java	partialDerivativeXY	THIS	BicubicSplineFunction	UNKNOWN_AS	0	1	CLALLER_USE	1
2634	72	8	MicrosphereInterpolator.java	MicrosphereInterpolator	elements	int	PARAM_AS	1	1	NO_USE	0
2634	72	8	MicrosphereInterpolator.java	MicrosphereInterpolator	exponent	int	PARAM_AS	1	1	OTHER_USE	1
2634	72	8	MicrosphereInterpolator.java	MicrosphereInterpolator	THIS	MicrosphereInterpolator	UNKNOWN_AS	0	0	NO_USE	0
2635	75	8	MicrosphereInterpolator.java	MicrosphereInterpolator	elements	int	PARAM_AS	1	1	OTHER_USE	1
2635	75	8	MicrosphereInterpolator.java	MicrosphereInterpolator	exponent	int	PARAM_AS	1	1	NO_USE	0
2635	75	8	MicrosphereInterpolator.java	MicrosphereInterpolator	THIS	MicrosphereInterpolator	UNKNOWN_AS	0	0	NO_USE	0
2636	38	8	TricubicSplineInterpolator.java	interpolate	xval	double[]	PARAM_AS	1	2	NO_USE	1
2636	38	8	TricubicSplineInterpolator.java	interpolate	yval	double[]	PARAM_AS	1	1	NO_USE	1
2636	38	8	TricubicSplineInterpolator.java	interpolate	zval	double[]	PARAM_AS	1	1	NO_USE	1
2636	38	8	TricubicSplineInterpolator.java	interpolate	fval	double[][][]	PARAM_AS	1	4	NO_USE	1
2636	38	8	TricubicSplineInterpolator.java	interpolate	THIS	TricubicSplineInterpolator	UNKNOWN_AS	0	8	NO_USE	1
2637	41	8	TricubicSplineInterpolator.java	interpolate	xval	double[]	PARAM_AS	1	2	OTHER_USE	1
2637	41	8	TricubicSplineInterpolator.java	interpolate	yval	double[]	PARAM_AS	1	1	NO_USE	0
2637	41	8	TricubicSplineInterpolator.java	interpolate	zval	double[]	PARAM_AS	1	1	NO_USE	0
2637	41	8	TricubicSplineInterpolator.java	interpolate	fval	double[][][]	PARAM_AS	1	4	OTHER_USE	1
2637	41	8	TricubicSplineInterpolator.java	interpolate	THIS	TricubicSplineInterpolator	UNKNOWN_AS	0	8	FIELD_USE	1
2638	59	12	TricubicSplineInterpolator.java	interpolate	i	int	0	0	2	ARRIDX_USE	1
2638	59	12	TricubicSplineInterpolator.java	interpolate	xLen	int	NAME	0	0	NO_USE	0
2638	59	12	TricubicSplineInterpolator.java	interpolate	yLen	int	NAME	0	1	OTHER_USE	1
2638	59	12	TricubicSplineInterpolator.java	interpolate	zLen	int	NAME	0	1	NO_USE	0
2638	59	12	TricubicSplineInterpolator.java	interpolate	fvalXY	double[][][]	ARRAY_CREATION	0	0	NO_USE	0
2638	59	12	TricubicSplineInterpolator.java	interpolate	fvalZX	double[][][]	ARRAY_CREATION	0	0	NO_USE	0
2638	59	12	TricubicSplineInterpolator.java	interpolate	xval	double[]	PARAM_AS	1	2	NO_USE	0
2638	59	12	TricubicSplineInterpolator.java	interpolate	yval	double[]	PARAM_AS	1	1	NO_USE	0
2638	59	12	TricubicSplineInterpolator.java	interpolate	zval	double[]	PARAM_AS	1	1	NO_USE	0
2638	59	12	TricubicSplineInterpolator.java	interpolate	fval	double[][][]	PARAM_AS	1	4	ARR_USE	1
2638	59	12	TricubicSplineInterpolator.java	interpolate	THIS	TricubicSplineInterpolator	UNKNOWN_AS	0	8	FIELD_USE	1
2639	64	16	TricubicSplineInterpolator.java	interpolate	j	int	0	0	1	ARRIDX_USE	1
2639	64	16	TricubicSplineInterpolator.java	interpolate	i	int	0	0	2	ARRIDX_USE	1
2639	64	16	TricubicSplineInterpolator.java	interpolate	xLen	int	NAME	0	0	NO_USE	0
2639	64	16	TricubicSplineInterpolator.java	interpolate	yLen	int	NAME	0	1	NO_USE	0
2639	64	16	TricubicSplineInterpolator.java	interpolate	zLen	int	NAME	0	1	OTHER_USE	1
2639	64	16	TricubicSplineInterpolator.java	interpolate	fvalXY	double[][][]	ARRAY_CREATION	0	0	NO_USE	0
2639	64	16	TricubicSplineInterpolator.java	interpolate	fvalZX	double[][][]	ARRAY_CREATION	0	0	NO_USE	0
2639	64	16	TricubicSplineInterpolator.java	interpolate	xval	double[]	PARAM_AS	1	2	NO_USE	0
2639	64	16	TricubicSplineInterpolator.java	interpolate	yval	double[]	PARAM_AS	1	1	NO_USE	0
2639	64	16	TricubicSplineInterpolator.java	interpolate	zval	double[]	PARAM_AS	1	1	NO_USE	0
2639	64	16	TricubicSplineInterpolator.java	interpolate	fval	double[][][]	PARAM_AS	1	4	ARR_USE	1
2639	64	16	TricubicSplineInterpolator.java	interpolate	THIS	TricubicSplineInterpolator	UNKNOWN_AS	0	8	FIELD_USE	1
2640	84	8	UnivariateRealPeriodicInterpolator.java	interpolate	xval	double[]	PARAM_AS	1	1	OTHER_USE	1
2640	84	8	UnivariateRealPeriodicInterpolator.java	interpolate	yval	double[]	PARAM_AS	1	0	NO_USE	0
2640	84	8	UnivariateRealPeriodicInterpolator.java	interpolate	THIS	UnivariateRealPeriodicInterpolator	UNKNOWN_AS	0	2	FIELD_USE	1
2641	146	8	LoessInterpolator.java	LoessInterpolator	bandwidth	double	PARAM_AS	1	2	OTHER_USE	1
2641	146	8	LoessInterpolator.java	LoessInterpolator	robustnessIters	int	PARAM_AS	1	1	NO_USE	0
2641	146	8	LoessInterpolator.java	LoessInterpolator	accuracy	double	PARAM_AS	1	0	NO_USE	0
2641	146	8	LoessInterpolator.java	LoessInterpolator	THIS	LoessInterpolator	UNKNOWN_AS	0	0	FIELD_USE	0
2642	151	8	LoessInterpolator.java	LoessInterpolator	bandwidth	double	PARAM_AS	1	2	NO_USE	0
2642	151	8	LoessInterpolator.java	LoessInterpolator	robustnessIters	int	PARAM_AS	1	1	OTHER_USE	1
2642	151	8	LoessInterpolator.java	LoessInterpolator	accuracy	double	PARAM_AS	1	0	NO_USE	0
2642	151	8	LoessInterpolator.java	LoessInterpolator	THIS	LoessInterpolator	NAME	0	0	FIELD_USE	0
2643	205	8	LoessInterpolator.java	smooth	xval	double[]	PARAM_AS	1	5	OTHER_USE	1
2643	205	8	LoessInterpolator.java	smooth	yval	double[]	PARAM_AS	1	1	OTHER_USE	1
2643	205	8	LoessInterpolator.java	smooth	weights	double[]	PARAM_AS	1	0	NO_USE	0
2643	205	8	LoessInterpolator.java	smooth	THIS	LoessInterpolator	UNKNOWN_AS	0	5	FIELD_USE	1
2644	211	8	LoessInterpolator.java	smooth	n	int	NAME	0	3	NO_USE	1
2644	211	8	LoessInterpolator.java	smooth	xval	double[]	PARAM_AS	1	5	NO_USE	0
2644	211	8	LoessInterpolator.java	smooth	yval	double[]	PARAM_AS	1	1	NO_USE	0
2644	211	8	LoessInterpolator.java	smooth	weights	double[]	PARAM_AS	1	0	NO_USE	0
2644	211	8	LoessInterpolator.java	smooth	THIS	LoessInterpolator	UNKNOWN_AS	0	5	NO_USE	0
2645	221	8	LoessInterpolator.java	smooth	n	int	NAME	0	3	NO_USE	1
2645	221	8	LoessInterpolator.java	smooth	xval	double[]	PARAM_AS	1	5	NO_USE	0
2645	221	8	LoessInterpolator.java	smooth	yval	double[]	PARAM_AS	1	1	ARR_USE	0
2645	221	8	LoessInterpolator.java	smooth	weights	double[]	PARAM_AS	1	0	NO_USE	0
2645	221	8	LoessInterpolator.java	smooth	THIS	LoessInterpolator	UNKNOWN_AS	0	5	NO_USE	0
2646	225	8	LoessInterpolator.java	smooth	n	int	NAME	0	3	NO_USE	1
2646	225	8	LoessInterpolator.java	smooth	xval	double[]	PARAM_AS	1	5	NO_USE	0
2646	225	8	LoessInterpolator.java	smooth	yval	double[]	PARAM_AS	1	1	ARR_USE	0
2646	225	8	LoessInterpolator.java	smooth	weights	double[]	PARAM_AS	1	0	NO_USE	0
2646	225	8	LoessInterpolator.java	smooth	THIS	LoessInterpolator	UNKNOWN_AS	0	5	NO_USE	0
2647	231	8	LoessInterpolator.java	smooth	n	int	NAME	0	3	NO_USE	0
2647	231	8	LoessInterpolator.java	smooth	bandwidthInPoints	int	CAST	0	1	OTHER_USE	1
2647	231	8	LoessInterpolator.java	smooth	xval	double[]	PARAM_AS	1	5	NO_USE	0
2647	231	8	LoessInterpolator.java	smooth	yval	double[]	PARAM_AS	1	1	NO_USE	0
2647	231	8	LoessInterpolator.java	smooth	weights	double[]	PARAM_AS	1	0	NO_USE	0
2647	231	8	LoessInterpolator.java	smooth	THIS	LoessInterpolator	UNKNOWN_AS	0	5	FIELD_USE	0
2648	256	16	LoessInterpolator.java	smooth	x	double	ARRAY_ACCESS	0	0	NO_USE	0
2648	256	16	LoessInterpolator.java	smooth	i	int	0	0	3	PARAM_USE	1
2648	256	16	LoessInterpolator.java	smooth	bandwidthInterval	int[]	OTHERS	0	0	PARAM_USE	0
2648	256	16	LoessInterpolator.java	smooth	iter	int	0	0	1	NO_USE	0
2648	256	16	LoessInterpolator.java	smooth	n	int	NAME	0	3	NO_USE	0
2648	256	16	LoessInterpolator.java	smooth	bandwidthInPoints	int	CAST	0	1	NO_USE	0
2648	256	16	LoessInterpolator.java	smooth	res	double[]	ARRAY_CREATION	0	0	NO_USE	0
2648	256	16	LoessInterpolator.java	smooth	residuals	double[]	ARRAY_CREATION	0	0	NO_USE	0
2648	256	16	LoessInterpolator.java	smooth	sortedResiduals	double[]	ARRAY_CREATION	0	0	NO_USE	0
2648	256	16	LoessInterpolator.java	smooth	robustnessWeights	double[]	ARRAY_CREATION	0	0	NO_USE	0
2648	256	16	LoessInterpolator.java	smooth	xval	double[]	PARAM_AS	1	5	PARAM_USE	0
2648	256	16	LoessInterpolator.java	smooth	yval	double[]	PARAM_AS	1	1	NO_USE	0
2648	256	16	LoessInterpolator.java	smooth	weights	double[]	PARAM_AS	1	0	PARAM_USE	0
2648	256	16	LoessInterpolator.java	smooth	THIS	LoessInterpolator	UNKNOWN_AS	0	5	CLALLER_USE	0
2649	266	16	LoessInterpolator.java	smooth	x	double	ARRAY_ACCESS	0	0	NO_USE	0
2649	266	16	LoessInterpolator.java	smooth	ileft	int	ARRAY_ACCESS	0	1	OTHER_USE	1
2649	266	16	LoessInterpolator.java	smooth	iright	int	ARRAY_ACCESS	0	1	OTHER_USE	1
2649	266	16	LoessInterpolator.java	smooth	edge	int	UNKNOWN_AS	0	0	NO_USE	0
2649	266	16	LoessInterpolator.java	smooth	i	int	0	0	3	NO_USE	1
2649	266	16	LoessInterpolator.java	smooth	bandwidthInterval	int[]	OTHERS	0	0	NO_USE	0
2649	266	16	LoessInterpolator.java	smooth	iter	int	0	0	1	NO_USE	0
2649	266	16	LoessInterpolator.java	smooth	n	int	NAME	0	3	NO_USE	0
2649	266	16	LoessInterpolator.java	smooth	bandwidthInPoints	int	CAST	0	1	NO_USE	0
2649	266	16	LoessInterpolator.java	smooth	res	double[]	ARRAY_CREATION	0	0	NO_USE	0
2649	266	16	LoessInterpolator.java	smooth	residuals	double[]	ARRAY_CREATION	0	0	NO_USE	0
2649	266	16	LoessInterpolator.java	smooth	sortedResiduals	double[]	ARRAY_CREATION	0	0	NO_USE	0
2649	266	16	LoessInterpolator.java	smooth	robustnessWeights	double[]	ARRAY_CREATION	0	0	NO_USE	0
2649	266	16	LoessInterpolator.java	smooth	xval	double[]	PARAM_AS	1	5	NO_USE	1
2649	266	16	LoessInterpolator.java	smooth	yval	double[]	PARAM_AS	1	1	NO_USE	0
2649	266	16	LoessInterpolator.java	smooth	weights	double[]	PARAM_AS	1	0	NO_USE	0
2649	266	16	LoessInterpolator.java	smooth	THIS	LoessInterpolator	UNKNOWN_AS	0	5	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	x	double	ARRAY_ACCESS	0	0	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	ileft	int	ARRAY_ACCESS	0	1	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	iright	int	ARRAY_ACCESS	0	1	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	edge	int	NAME	0	0	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	sumWeights	double	NAME	0	0	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	sumX	double	NAME	0	0	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	sumXSquared	double	*	0	0	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	sumY	double	*	0	0	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	sumXY	double	*	0	0	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	denom	double	abs()	0	0	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	meanX	double	/	0	2	*	1
2650	304	16	LoessInterpolator.java	smooth	meanY	double	/	0	0	*	0
2650	304	16	LoessInterpolator.java	smooth	meanXY	double	/	0	0	-	0
2650	304	16	LoessInterpolator.java	smooth	meanXSquared	double	/	0	1	-	1
2650	304	16	LoessInterpolator.java	smooth	beta	double	UNKNOWN_AS	0	0	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	i	int	0	0	3	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	bandwidthInterval	int[]	OTHERS	0	0	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	iter	int	0	0	1	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	n	int	NAME	0	3	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	bandwidthInPoints	int	CAST	0	1	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	res	double[]	ARRAY_CREATION	0	0	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	residuals	double[]	ARRAY_CREATION	0	0	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	sortedResiduals	double[]	ARRAY_CREATION	0	0	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	robustnessWeights	double[]	ARRAY_CREATION	0	0	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	xval	double[]	PARAM_AS	1	5	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	yval	double[]	PARAM_AS	1	1	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	weights	double[]	PARAM_AS	1	0	NO_USE	0
2650	304	16	LoessInterpolator.java	smooth	THIS	LoessInterpolator	UNKNOWN_AS	0	5	NO_USE	1
2651	318	12	LoessInterpolator.java	smooth	bandwidthInterval	int[]	OTHERS	0	0	NO_USE	0
2651	318	12	LoessInterpolator.java	smooth	iter	int	0	0	1	NO_USE	1
2651	318	12	LoessInterpolator.java	smooth	n	int	NAME	0	3	NO_USE	0
2651	318	12	LoessInterpolator.java	smooth	bandwidthInPoints	int	CAST	0	1	NO_USE	0
2651	318	12	LoessInterpolator.java	smooth	res	double[]	+	0	0	NO_USE	0
2651	318	12	LoessInterpolator.java	smooth	residuals	double[]	abs()	0	0	NO_USE	0
2651	318	12	LoessInterpolator.java	smooth	sortedResiduals	double[]	ARRAY_CREATION	0	0	NO_USE	0
2651	318	12	LoessInterpolator.java	smooth	robustnessWeights	double[]	ARRAY_CREATION	0	0	NO_USE	0
2651	318	12	LoessInterpolator.java	smooth	xval	double[]	PARAM_AS	1	5	NO_USE	0
2651	318	12	LoessInterpolator.java	smooth	yval	double[]	PARAM_AS	1	1	NO_USE	0
2651	318	12	LoessInterpolator.java	smooth	weights	double[]	PARAM_AS	1	0	NO_USE	0
2651	318	12	LoessInterpolator.java	smooth	THIS	LoessInterpolator	UNKNOWN_AS	0	5	NO_USE	1
2652	331	12	LoessInterpolator.java	smooth	bandwidthInterval	int[]	OTHERS	0	0	NO_USE	0
2652	331	12	LoessInterpolator.java	smooth	medianResidual	double	ARRAY_ACCESS	0	1	NO_USE	1
2652	331	12	LoessInterpolator.java	smooth	iter	int	0	0	1	NO_USE	0
2652	331	12	LoessInterpolator.java	smooth	n	int	NAME	0	3	NO_USE	0
2652	331	12	LoessInterpolator.java	smooth	bandwidthInPoints	int	CAST	0	1	NO_USE	0
2652	331	12	LoessInterpolator.java	smooth	res	double[]	+	0	0	NO_USE	0
2652	331	12	LoessInterpolator.java	smooth	residuals	double[]	abs()	0	0	NO_USE	0
2652	331	12	LoessInterpolator.java	smooth	sortedResiduals	double[]	ARRAY_CREATION	0	0	NO_USE	0
2652	331	12	LoessInterpolator.java	smooth	robustnessWeights	double[]	ARRAY_CREATION	0	0	NO_USE	0
2652	331	12	LoessInterpolator.java	smooth	xval	double[]	PARAM_AS	1	5	NO_USE	0
2652	331	12	LoessInterpolator.java	smooth	yval	double[]	PARAM_AS	1	1	NO_USE	0
2652	331	12	LoessInterpolator.java	smooth	weights	double[]	PARAM_AS	1	0	NO_USE	0
2652	331	12	LoessInterpolator.java	smooth	THIS	LoessInterpolator	UNKNOWN_AS	0	5	NO_USE	1
2653	337	16	LoessInterpolator.java	smooth	arg	double	/	0	1	*	1
2653	337	16	LoessInterpolator.java	smooth	i	int	0	0	0	ARRIDX_USE	0
2653	337	16	LoessInterpolator.java	smooth	bandwidthInterval	int[]	OTHERS	0	0	NO_USE	0
2653	337	16	LoessInterpolator.java	smooth	medianResidual	double	ARRAY_ACCESS	0	1	NO_USE	0
2653	337	16	LoessInterpolator.java	smooth	iter	int	0	0	1	NO_USE	0
2653	337	16	LoessInterpolator.java	smooth	n	int	NAME	0	3	NO_USE	0
2653	337	16	LoessInterpolator.java	smooth	bandwidthInPoints	int	CAST	0	1	NO_USE	0
2653	337	16	LoessInterpolator.java	smooth	res	double[]	+	0	0	NO_USE	0
2653	337	16	LoessInterpolator.java	smooth	residuals	double[]	abs()	0	0	NO_USE	0
2653	337	16	LoessInterpolator.java	smooth	sortedResiduals	double[]	ARRAY_CREATION	0	0	NO_USE	0
2653	337	16	LoessInterpolator.java	smooth	robustnessWeights	double[]	ARRAY_CREATION	0	0	ARR_USE	0
2653	337	16	LoessInterpolator.java	smooth	xval	double[]	PARAM_AS	1	5	NO_USE	0
2653	337	16	LoessInterpolator.java	smooth	yval	double[]	PARAM_AS	1	1	NO_USE	0
2653	337	16	LoessInterpolator.java	smooth	weights	double[]	PARAM_AS	1	0	NO_USE	0
2653	337	16	LoessInterpolator.java	smooth	THIS	LoessInterpolator	UNKNOWN_AS	0	5	NO_USE	0
2654	367	8	LoessInterpolator.java	smooth	xval	double[]	PARAM_AS	1	1	OTHER_USE	1
2654	367	8	LoessInterpolator.java	smooth	yval	double[]	PARAM_AS	1	1	OTHER_USE	1
2654	367	8	LoessInterpolator.java	smooth	THIS	LoessInterpolator	UNKNOWN_AS	0	2	FIELD_USE	1
2655	401	8	LoessInterpolator.java	updateBandwidthInterval	left	int	ARRAY_ACCESS	0	1	NO_USE	1
2655	401	8	LoessInterpolator.java	updateBandwidthInterval	right	int	ARRAY_ACCESS	0	0	NO_USE	0
2655	401	8	LoessInterpolator.java	updateBandwidthInterval	nextRight	int	nextNonzero()	0	2	OTHER_USE	1
2655	401	8	LoessInterpolator.java	updateBandwidthInterval	xval	double[]	PARAM_AS	1	5	NO_USE	1
2655	401	8	LoessInterpolator.java	updateBandwidthInterval	weights	double[]	PARAM_AS	1	0	PARAM_USE	0
2655	401	8	LoessInterpolator.java	updateBandwidthInterval	i	int	PARAM_AS	1	2	NO_USE	1
2655	401	8	LoessInterpolator.java	updateBandwidthInterval	bandwidthInterval	int[]	PARAM_AS	1	0	ARR_USE	0
2655	401	8	LoessInterpolator.java	updateBandwidthInterval	THIS	LoessInterpolator	UNKNOWN_AS	0	1	CLALLER_USE	1
2656	434	8	LoessInterpolator.java	tricube	absX	double	abs()	0	1	NO_USE	1
2656	434	8	LoessInterpolator.java	tricube	x	double	PARAM_AS	1	0	NO_USE	0
2656	434	8	LoessInterpolator.java	tricube	THIS	LoessInterpolator	UNKNOWN_AS	0	0	NO_USE	0
2657	74	8	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	xval	double[]	PARAM_AS	1	2	NO_USE	1
2657	74	8	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	yval	double[]	PARAM_AS	1	1	NO_USE	1
2657	74	8	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	fval	double[][]	PARAM_AS	1	3	NO_USE	1
2657	74	8	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	THIS	SmoothingPolynomialBicubicSplineInterpolator	UNKNOWN_AS	0	6	NO_USE	1
2658	77	8	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	xval	double[]	PARAM_AS	1	2	OTHER_USE	1
2658	77	8	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	yval	double[]	PARAM_AS	1	1	NO_USE	0
2658	77	8	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	fval	double[][]	PARAM_AS	1	3	OTHER_USE	1
2658	77	8	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	THIS	SmoothingPolynomialBicubicSplineInterpolator	UNKNOWN_AS	0	6	FIELD_USE	1
2659	85	12	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	i	int	0	0	1	ARRIDX_USE	1
2659	85	12	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	xLen	int	NAME	0	0	NO_USE	0
2659	85	12	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	yLen	int	NAME	0	1	OTHER_USE	1
2659	85	12	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	xval	double[]	PARAM_AS	1	2	NO_USE	0
2659	85	12	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	yval	double[]	PARAM_AS	1	1	NO_USE	0
2659	85	12	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	fval	double[][]	PARAM_AS	1	3	ARR_USE	1
2659	85	12	SmoothingPolynomialBicubicSplineInterpolator.java	interpolate	THIS	SmoothingPolynomialBicubicSplineInterpolator	UNKNOWN_AS	0	6	FIELD_USE	1
2660	152	8	Logit.java	value	x	double	PARAM_AS	1	2	OTHER_USE	1
2660	152	8	Logit.java	value	lo	double	PARAM_AS	1	1	OTHER_USE	1
2660	152	8	Logit.java	value	hi	double	PARAM_AS	1	1	OTHER_USE	1
2660	152	8	Logit.java	value	THIS	Logit	UNKNOWN_AS	0	0	NO_USE	0
2661	54	8	Gaussian.java	Gaussian	norm	double	PARAM_AS	1	0	NO_USE	0
2661	54	8	Gaussian.java	Gaussian	mean	double	PARAM_AS	1	0	NO_USE	0
2661	54	8	Gaussian.java	Gaussian	sigma	double	PARAM_AS	1	1	OTHER_USE	1
2661	54	8	Gaussian.java	Gaussian	THIS	Gaussian	UNKNOWN_AS	0	0	NO_USE	0
2662	68	8	Logistic.java	Logistic	k	double	PARAM_AS	1	0	NO_USE	0
2662	68	8	Logistic.java	Logistic	m	double	PARAM_AS	1	0	NO_USE	0
2662	68	8	Logistic.java	Logistic	b	double	PARAM_AS	1	0	NO_USE	0
2662	68	8	Logistic.java	Logistic	q	double	PARAM_AS	1	0	NO_USE	0
2662	68	8	Logistic.java	Logistic	a	double	PARAM_AS	1	0	NO_USE	0
2662	68	8	Logistic.java	Logistic	n	double	PARAM_AS	1	1	OTHER_USE	1
2662	68	8	Logistic.java	Logistic	THIS	Logistic	UNKNOWN_AS	0	0	NO_USE	0
2663	53	8	StepFunction.java	StepFunction	x	double[]	PARAM_AS	1	3	NO_USE	1
2663	53	8	StepFunction.java	StepFunction	y	double[]	PARAM_AS	1	3	NO_USE	1
2663	53	8	StepFunction.java	StepFunction	THIS	StepFunction	UNKNOWN_AS	0	4	NO_USE	0
2664	57	8	StepFunction.java	StepFunction	x	double[]	PARAM_AS	1	3	NO_USE	1
2664	57	8	StepFunction.java	StepFunction	y	double[]	PARAM_AS	1	3	NO_USE	1
2664	57	8	StepFunction.java	StepFunction	THIS	StepFunction	UNKNOWN_AS	0	4	NO_USE	1
2665	61	8	StepFunction.java	StepFunction	x	double[]	PARAM_AS	1	3	OTHER_USE	1
2665	61	8	StepFunction.java	StepFunction	y	double[]	PARAM_AS	1	3	OTHER_USE	1
2665	61	8	StepFunction.java	StepFunction	THIS	StepFunction	UNKNOWN_AS	0	4	FIELD_USE	1
2666	75	8	StepFunction.java	value	index	int	binarySearch()	0	2	-x	1
2666	75	8	StepFunction.java	value	fx	double	0	0	0	NO_USE	0
2666	75	8	StepFunction.java	value	x	double	PARAM_AS	1	0	NO_USE	0
2666	75	8	StepFunction.java	value	THIS	StepFunction	UNKNOWN_AS	0	0	FIELD_USE	0
2667	78	15	StepFunction.java	value	index	int	binarySearch()	0	2	ARRIDX_USE	1
2667	78	15	StepFunction.java	value	fx	double	ARRAY_ACCESS	0	0	NO_USE	0
2667	78	15	StepFunction.java	value	x	double	PARAM_AS	1	0	NO_USE	0
2667	78	15	StepFunction.java	value	THIS	StepFunction	UNKNOWN_AS	0	0	FIELD_USE	0
2668	138	8	BaseSecantSolver.java	doSolve	x0	double	getMin()	0	1	RET_USE	0
2668	138	8	BaseSecantSolver.java	doSolve	x1	double	getMax()	0	2	NO_USE	0
2668	138	8	BaseSecantSolver.java	doSolve	f0	double	computeObjectiveValue()	0	1	NO_USE	1
2668	138	8	BaseSecantSolver.java	doSolve	f1	double	computeObjectiveValue()	0	5	NO_USE	0
2668	138	8	BaseSecantSolver.java	doSolve	THIS	BaseSecantSolver	UNKNOWN_AS	0	4	NO_USE	0
2669	141	8	BaseSecantSolver.java	doSolve	x0	double	getMin()	0	1	NO_USE	0
2669	141	8	BaseSecantSolver.java	doSolve	x1	double	getMax()	0	2	RET_USE	0
2669	141	8	BaseSecantSolver.java	doSolve	f0	double	computeObjectiveValue()	0	1	NO_USE	0
2669	141	8	BaseSecantSolver.java	doSolve	f1	double	computeObjectiveValue()	0	5	NO_USE	1
2669	141	8	BaseSecantSolver.java	doSolve	THIS	BaseSecantSolver	UNKNOWN_AS	0	4	NO_USE	0
2670	166	12	BaseSecantSolver.java	doSolve	x	double	-	0	0	RET_USE	0
2670	166	12	BaseSecantSolver.java	doSolve	fx	double	computeObjectiveValue()	0	2	NO_USE	1
2670	166	12	BaseSecantSolver.java	doSolve	x0	double	getMin()	0	1	NO_USE	0
2670	166	12	BaseSecantSolver.java	doSolve	x1	double	getMax()	0	2	NO_USE	0
2670	166	12	BaseSecantSolver.java	doSolve	f0	double	computeObjectiveValue()	0	1	NO_USE	0
2670	166	12	BaseSecantSolver.java	doSolve	f1	double	computeObjectiveValue()	0	5	NO_USE	0
2670	166	12	BaseSecantSolver.java	doSolve	ftol	double	getFunctionValueAccuracy()	0	1	NO_USE	0
2670	166	12	BaseSecantSolver.java	doSolve	atol	double	getAbsoluteAccuracy()	0	1	NO_USE	0
2670	166	12	BaseSecantSolver.java	doSolve	rtol	double	getRelativeAccuracy()	0	1	NO_USE	0
2670	166	12	BaseSecantSolver.java	doSolve	inverted	boolean	LITERAL	0	1	NO_USE	0
2670	166	12	BaseSecantSolver.java	doSolve	THIS	BaseSecantSolver	UNKNOWN_AS	0	4	NO_USE	0
2671	171	12	BaseSecantSolver.java	doSolve	x	double	-	0	0	OTHER_USE	0
2671	171	12	BaseSecantSolver.java	doSolve	fx	double	computeObjectiveValue()	0	2	OTHER_USE	1
2671	171	12	BaseSecantSolver.java	doSolve	x0	double	getMin()	0	1	NO_USE	0
2671	171	12	BaseSecantSolver.java	doSolve	x1	double	getMax()	0	2	OTHER_USE	0
2671	171	12	BaseSecantSolver.java	doSolve	f0	double	computeObjectiveValue()	0	1	NO_USE	0
2671	171	12	BaseSecantSolver.java	doSolve	f1	double	computeObjectiveValue()	0	5	OTHER_USE	1
2671	171	12	BaseSecantSolver.java	doSolve	ftol	double	getFunctionValueAccuracy()	0	1	NO_USE	0
2671	171	12	BaseSecantSolver.java	doSolve	atol	double	getAbsoluteAccuracy()	0	1	NO_USE	0
2671	171	12	BaseSecantSolver.java	doSolve	rtol	double	getRelativeAccuracy()	0	1	NO_USE	0
2671	171	12	BaseSecantSolver.java	doSolve	inverted	boolean	LITERAL	0	1	!x	0
2671	171	12	BaseSecantSolver.java	doSolve	THIS	BaseSecantSolver	UNKNOWN_AS	0	4	FIELD_USE	0
2672	182	16	BaseSecantSolver.java	doSolve	x	double	-	0	0	NO_USE	0
2672	182	16	BaseSecantSolver.java	doSolve	fx	double	computeObjectiveValue()	0	2	NO_USE	0
2672	182	16	BaseSecantSolver.java	doSolve	x0	double	NAME	0	1	NO_USE	0
2672	182	16	BaseSecantSolver.java	doSolve	x1	double	NAME	0	2	NO_USE	0
2672	182	16	BaseSecantSolver.java	doSolve	f0	double	NAME	0	1	NO_USE	0
2672	182	16	BaseSecantSolver.java	doSolve	f1	double	NAME	0	5	NO_USE	0
2672	182	16	BaseSecantSolver.java	doSolve	ftol	double	getFunctionValueAccuracy()	0	1	NO_USE	0
2672	182	16	BaseSecantSolver.java	doSolve	atol	double	getAbsoluteAccuracy()	0	1	NO_USE	0
2672	182	16	BaseSecantSolver.java	doSolve	rtol	double	getRelativeAccuracy()	0	1	NO_USE	0
2672	182	16	BaseSecantSolver.java	doSolve	inverted	boolean	PREFIX_EXPR	0	1	NO_USE	0
2672	182	16	BaseSecantSolver.java	doSolve	THIS	BaseSecantSolver	UNKNOWN_AS	0	4	NO_USE	1
2673	185	16	BaseSecantSolver.java	doSolve	x	double	-	0	0	NO_USE	0
2673	185	16	BaseSecantSolver.java	doSolve	fx	double	computeObjectiveValue()	0	2	+	0
2673	185	16	BaseSecantSolver.java	doSolve	x0	double	NAME	0	1	NO_USE	0
2673	185	16	BaseSecantSolver.java	doSolve	x1	double	NAME	0	2	NO_USE	0
2673	185	16	BaseSecantSolver.java	doSolve	f0	double	0.5	0	1	NO_USE	0
2673	185	16	BaseSecantSolver.java	doSolve	f1	double	NAME	0	5	/	0
2673	185	16	BaseSecantSolver.java	doSolve	ftol	double	getFunctionValueAccuracy()	0	1	NO_USE	0
2673	185	16	BaseSecantSolver.java	doSolve	atol	double	getAbsoluteAccuracy()	0	1	NO_USE	0
2673	185	16	BaseSecantSolver.java	doSolve	rtol	double	getRelativeAccuracy()	0	1	NO_USE	0
2673	185	16	BaseSecantSolver.java	doSolve	inverted	boolean	PREFIX_EXPR	0	1	NO_USE	0
2673	185	16	BaseSecantSolver.java	doSolve	THIS	BaseSecantSolver	UNKNOWN_AS	0	4	NO_USE	1
2674	195	12	BaseSecantSolver.java	doSolve	x	double	-	0	0	NO_USE	0
2674	195	12	BaseSecantSolver.java	doSolve	fx	double	computeObjectiveValue()	0	2	NO_USE	0
2674	195	12	BaseSecantSolver.java	doSolve	x0	double	NAME	0	1	NO_USE	0
2674	195	12	BaseSecantSolver.java	doSolve	x1	double	NAME	0	2	RET_USE	0
2674	195	12	BaseSecantSolver.java	doSolve	f0	double	/	0	1	NO_USE	0
2674	195	12	BaseSecantSolver.java	doSolve	f1	double	NAME	0	5	<=	1
2674	195	12	BaseSecantSolver.java	doSolve	ftol	double	getFunctionValueAccuracy()	0	1	NO_USE	1
2674	195	12	BaseSecantSolver.java	doSolve	atol	double	getAbsoluteAccuracy()	0	1	NO_USE	0
2674	195	12	BaseSecantSolver.java	doSolve	rtol	double	getRelativeAccuracy()	0	1	NO_USE	0
2674	195	12	BaseSecantSolver.java	doSolve	inverted	boolean	PREFIX_EXPR	0	1	OTHER_USE	0
2674	195	12	BaseSecantSolver.java	doSolve	THIS	BaseSecantSolver	UNKNOWN_AS	0	4	FIELD_USE	0
2675	200	20	BaseSecantSolver.java	doSolve	x	double	-	0	0	NO_USE	0
2675	200	20	BaseSecantSolver.java	doSolve	fx	double	computeObjectiveValue()	0	2	NO_USE	0
2675	200	20	BaseSecantSolver.java	doSolve	x0	double	NAME	0	1	NO_USE	0
2675	200	20	BaseSecantSolver.java	doSolve	x1	double	NAME	0	2	RET_USE	0
2675	200	20	BaseSecantSolver.java	doSolve	f0	double	/	0	1	NO_USE	0
2675	200	20	BaseSecantSolver.java	doSolve	f1	double	NAME	0	5	NO_USE	0
2675	200	20	BaseSecantSolver.java	doSolve	ftol	double	getFunctionValueAccuracy()	0	1	NO_USE	0
2675	200	20	BaseSecantSolver.java	doSolve	atol	double	getAbsoluteAccuracy()	0	1	NO_USE	0
2675	200	20	BaseSecantSolver.java	doSolve	rtol	double	getRelativeAccuracy()	0	1	NO_USE	0
2675	200	20	BaseSecantSolver.java	doSolve	inverted	boolean	PREFIX_EXPR	0	1	NO_USE	1
2675	200	20	BaseSecantSolver.java	doSolve	THIS	BaseSecantSolver	UNKNOWN_AS	0	4	NO_USE	0
2676	205	20	BaseSecantSolver.java	doSolve	x	double	-	0	0	NO_USE	0
2676	205	20	BaseSecantSolver.java	doSolve	fx	double	computeObjectiveValue()	0	2	NO_USE	0
2676	205	20	BaseSecantSolver.java	doSolve	x0	double	NAME	0	1	NO_USE	0
2676	205	20	BaseSecantSolver.java	doSolve	x1	double	NAME	0	2	RET_USE	0
2676	205	20	BaseSecantSolver.java	doSolve	f0	double	/	0	1	NO_USE	0
2676	205	20	BaseSecantSolver.java	doSolve	f1	double	NAME	0	5	NO_USE	0
2676	205	20	BaseSecantSolver.java	doSolve	ftol	double	getFunctionValueAccuracy()	0	1	NO_USE	0
2676	205	20	BaseSecantSolver.java	doSolve	atol	double	getAbsoluteAccuracy()	0	1	NO_USE	0
2676	205	20	BaseSecantSolver.java	doSolve	rtol	double	getRelativeAccuracy()	0	1	NO_USE	0
2676	205	20	BaseSecantSolver.java	doSolve	inverted	boolean	PREFIX_EXPR	0	1	NO_USE	1
2676	205	20	BaseSecantSolver.java	doSolve	THIS	BaseSecantSolver	UNKNOWN_AS	0	4	NO_USE	0
2677	210	20	BaseSecantSolver.java	doSolve	x	double	-	0	0	NO_USE	0
2677	210	20	BaseSecantSolver.java	doSolve	fx	double	computeObjectiveValue()	0	2	NO_USE	0
2677	210	20	BaseSecantSolver.java	doSolve	x0	double	NAME	0	1	NO_USE	0
2677	210	20	BaseSecantSolver.java	doSolve	x1	double	NAME	0	2	RET_USE	0
2677	210	20	BaseSecantSolver.java	doSolve	f0	double	/	0	1	NO_USE	0
2677	210	20	BaseSecantSolver.java	doSolve	f1	double	NAME	0	5	NO_USE	1
2677	210	20	BaseSecantSolver.java	doSolve	ftol	double	getFunctionValueAccuracy()	0	1	NO_USE	0
2677	210	20	BaseSecantSolver.java	doSolve	atol	double	getAbsoluteAccuracy()	0	1	NO_USE	0
2677	210	20	BaseSecantSolver.java	doSolve	rtol	double	getRelativeAccuracy()	0	1	NO_USE	0
2677	210	20	BaseSecantSolver.java	doSolve	inverted	boolean	PREFIX_EXPR	0	1	NO_USE	0
2677	210	20	BaseSecantSolver.java	doSolve	THIS	BaseSecantSolver	UNKNOWN_AS	0	4	NO_USE	0
2678	215	20	BaseSecantSolver.java	doSolve	x	double	-	0	0	NO_USE	0
2678	215	20	BaseSecantSolver.java	doSolve	fx	double	computeObjectiveValue()	0	2	NO_USE	0
2678	215	20	BaseSecantSolver.java	doSolve	x0	double	NAME	0	1	NO_USE	0
2678	215	20	BaseSecantSolver.java	doSolve	x1	double	NAME	0	2	RET_USE	0
2678	215	20	BaseSecantSolver.java	doSolve	f0	double	/	0	1	NO_USE	0
2678	215	20	BaseSecantSolver.java	doSolve	f1	double	NAME	0	5	NO_USE	1
2678	215	20	BaseSecantSolver.java	doSolve	ftol	double	getFunctionValueAccuracy()	0	1	NO_USE	0
2678	215	20	BaseSecantSolver.java	doSolve	atol	double	getAbsoluteAccuracy()	0	1	NO_USE	0
2678	215	20	BaseSecantSolver.java	doSolve	rtol	double	getRelativeAccuracy()	0	1	NO_USE	0
2678	215	20	BaseSecantSolver.java	doSolve	inverted	boolean	PREFIX_EXPR	0	1	NO_USE	0
2678	215	20	BaseSecantSolver.java	doSolve	THIS	BaseSecantSolver	UNKNOWN_AS	0	4	NO_USE	0
2679	226	12	BaseSecantSolver.java	doSolve	x	double	-	0	0	NO_USE	0
2679	226	12	BaseSecantSolver.java	doSolve	fx	double	computeObjectiveValue()	0	2	NO_USE	0
2679	226	12	BaseSecantSolver.java	doSolve	x0	double	NAME	0	1	OTHER_USE	1
2679	226	12	BaseSecantSolver.java	doSolve	x1	double	NAME	0	2	RET_USE	1
2679	226	12	BaseSecantSolver.java	doSolve	f0	double	/	0	1	NO_USE	0
2679	226	12	BaseSecantSolver.java	doSolve	f1	double	NAME	0	5	<=	0
2679	226	12	BaseSecantSolver.java	doSolve	ftol	double	getFunctionValueAccuracy()	0	1	NO_USE	0
2679	226	12	BaseSecantSolver.java	doSolve	atol	double	getAbsoluteAccuracy()	0	1	NO_USE	1
2679	226	12	BaseSecantSolver.java	doSolve	rtol	double	getRelativeAccuracy()	0	1	NO_USE	1
2679	226	12	BaseSecantSolver.java	doSolve	inverted	boolean	PREFIX_EXPR	0	1	OTHER_USE	0
2679	226	12	BaseSecantSolver.java	doSolve	THIS	BaseSecantSolver	UNKNOWN_AS	0	4	FIELD_USE	0
2680	81	12	NewtonSolver.java	doSolve	startValue	double	getStartValue()	0	0	NO_USE	0
2680	81	12	NewtonSolver.java	doSolve	absoluteAccuracy	double	getAbsoluteAccuracy()	0	1	NO_USE	1
2680	81	12	NewtonSolver.java	doSolve	x0	double	NAME	0	1	NO_USE	1
2680	81	12	NewtonSolver.java	doSolve	x1	double	-	0	1	RET_USE	1
2680	81	12	NewtonSolver.java	doSolve	THIS	NewtonSolver	UNKNOWN_AS	0	0	NO_USE	0
2681	79	8	RiddersSolver.java	doSolve	min	double	getMin()	0	0	RET_USE	0
2681	79	8	RiddersSolver.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2681	79	8	RiddersSolver.java	doSolve	x1	double	NAME	0	0	NO_USE	0
2681	79	8	RiddersSolver.java	doSolve	y1	double	computeObjectiveValue()	0	2	NO_USE	1
2681	79	8	RiddersSolver.java	doSolve	x2	double	NAME	0	0	NO_USE	0
2681	79	8	RiddersSolver.java	doSolve	y2	double	computeObjectiveValue()	0	2	NO_USE	0
2681	79	8	RiddersSolver.java	doSolve	THIS	RiddersSolver	UNKNOWN_AS	0	0	NO_USE	0
2682	82	8	RiddersSolver.java	doSolve	min	double	getMin()	0	0	NO_USE	0
2682	82	8	RiddersSolver.java	doSolve	max	double	getMax()	0	0	RET_USE	0
2682	82	8	RiddersSolver.java	doSolve	x1	double	NAME	0	0	NO_USE	0
2682	82	8	RiddersSolver.java	doSolve	y1	double	computeObjectiveValue()	0	2	NO_USE	0
2682	82	8	RiddersSolver.java	doSolve	x2	double	NAME	0	0	NO_USE	0
2682	82	8	RiddersSolver.java	doSolve	y2	double	computeObjectiveValue()	0	2	NO_USE	1
2682	82	8	RiddersSolver.java	doSolve	THIS	RiddersSolver	UNKNOWN_AS	0	0	NO_USE	0
2683	96	12	RiddersSolver.java	doSolve	x3	double	*	0	0	RET_USE	0
2683	96	12	RiddersSolver.java	doSolve	y3	double	computeObjectiveValue()	0	1	NO_USE	1
2683	96	12	RiddersSolver.java	doSolve	min	double	getMin()	0	0	NO_USE	0
2683	96	12	RiddersSolver.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2683	96	12	RiddersSolver.java	doSolve	x1	double	NAME	0	0	NO_USE	0
2683	96	12	RiddersSolver.java	doSolve	y1	double	computeObjectiveValue()	0	2	NO_USE	0
2683	96	12	RiddersSolver.java	doSolve	x2	double	NAME	0	0	NO_USE	0
2683	96	12	RiddersSolver.java	doSolve	y2	double	computeObjectiveValue()	0	2	NO_USE	0
2683	96	12	RiddersSolver.java	doSolve	absoluteAccuracy	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2683	96	12	RiddersSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	2	NO_USE	1
2683	96	12	RiddersSolver.java	doSolve	relativeAccuracy	double	getRelativeAccuracy()	0	0	NO_USE	0
2683	96	12	RiddersSolver.java	doSolve	oldx	double	NAME	0	1	NO_USE	0
2683	96	12	RiddersSolver.java	doSolve	THIS	RiddersSolver	UNKNOWN_AS	0	0	NO_USE	0
2684	107	12	RiddersSolver.java	doSolve	x3	double	*	0	0	NO_USE	0
2684	107	12	RiddersSolver.java	doSolve	y3	double	computeObjectiveValue()	0	1	NO_USE	0
2684	107	12	RiddersSolver.java	doSolve	delta	double	-	0	0	NO_USE	0
2684	107	12	RiddersSolver.java	doSolve	correction	double	/	0	1	NO_USE	0
2684	107	12	RiddersSolver.java	doSolve	x	double	-	0	1	RET_USE	1
2684	107	12	RiddersSolver.java	doSolve	y	double	computeObjectiveValue()	0	3	NO_USE	0
2684	107	12	RiddersSolver.java	doSolve	tolerance	double	max()	0	1	NO_USE	1
2684	107	12	RiddersSolver.java	doSolve	min	double	getMin()	0	0	NO_USE	0
2684	107	12	RiddersSolver.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2684	107	12	RiddersSolver.java	doSolve	x1	double	NAME	0	0	NO_USE	0
2684	107	12	RiddersSolver.java	doSolve	y1	double	computeObjectiveValue()	0	2	NO_USE	0
2684	107	12	RiddersSolver.java	doSolve	x2	double	NAME	0	0	NO_USE	0
2684	107	12	RiddersSolver.java	doSolve	y2	double	computeObjectiveValue()	0	2	NO_USE	0
2684	107	12	RiddersSolver.java	doSolve	absoluteAccuracy	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2684	107	12	RiddersSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	2	NO_USE	0
2684	107	12	RiddersSolver.java	doSolve	relativeAccuracy	double	getRelativeAccuracy()	0	0	NO_USE	0
2684	107	12	RiddersSolver.java	doSolve	oldx	double	NAME	0	1	NO_USE	1
2684	107	12	RiddersSolver.java	doSolve	THIS	RiddersSolver	UNKNOWN_AS	0	0	NO_USE	0
2685	110	12	RiddersSolver.java	doSolve	x3	double	*	0	0	NO_USE	0
2685	110	12	RiddersSolver.java	doSolve	y3	double	computeObjectiveValue()	0	1	NO_USE	0
2685	110	12	RiddersSolver.java	doSolve	delta	double	-	0	0	NO_USE	0
2685	110	12	RiddersSolver.java	doSolve	correction	double	/	0	1	NO_USE	0
2685	110	12	RiddersSolver.java	doSolve	x	double	-	0	1	RET_USE	0
2685	110	12	RiddersSolver.java	doSolve	y	double	computeObjectiveValue()	0	3	NO_USE	1
2685	110	12	RiddersSolver.java	doSolve	tolerance	double	max()	0	1	NO_USE	0
2685	110	12	RiddersSolver.java	doSolve	min	double	getMin()	0	0	NO_USE	0
2685	110	12	RiddersSolver.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2685	110	12	RiddersSolver.java	doSolve	x1	double	NAME	0	0	NO_USE	0
2685	110	12	RiddersSolver.java	doSolve	y1	double	computeObjectiveValue()	0	2	NO_USE	0
2685	110	12	RiddersSolver.java	doSolve	x2	double	NAME	0	0	NO_USE	0
2685	110	12	RiddersSolver.java	doSolve	y2	double	computeObjectiveValue()	0	2	NO_USE	0
2685	110	12	RiddersSolver.java	doSolve	absoluteAccuracy	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2685	110	12	RiddersSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	2	NO_USE	1
2685	110	12	RiddersSolver.java	doSolve	relativeAccuracy	double	getRelativeAccuracy()	0	0	NO_USE	0
2685	110	12	RiddersSolver.java	doSolve	oldx	double	NAME	0	1	NO_USE	0
2685	110	12	RiddersSolver.java	doSolve	THIS	RiddersSolver	UNKNOWN_AS	0	0	NO_USE	0
2686	116	12	RiddersSolver.java	doSolve	x3	double	*	0	0	OTHER_USE	0
2686	116	12	RiddersSolver.java	doSolve	y3	double	computeObjectiveValue()	0	1	OTHER_USE	0
2686	116	12	RiddersSolver.java	doSolve	delta	double	-	0	0	NO_USE	0
2686	116	12	RiddersSolver.java	doSolve	correction	double	/	0	1	NO_USE	1
2686	116	12	RiddersSolver.java	doSolve	x	double	-	0	1	OTHER_USE	0
2686	116	12	RiddersSolver.java	doSolve	y	double	computeObjectiveValue()	0	3	PARAM_USE	0
2686	116	12	RiddersSolver.java	doSolve	tolerance	double	max()	0	1	NO_USE	0
2686	116	12	RiddersSolver.java	doSolve	min	double	getMin()	0	0	NO_USE	0
2686	116	12	RiddersSolver.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2686	116	12	RiddersSolver.java	doSolve	x1	double	NAME	0	0	NO_USE	0
2686	116	12	RiddersSolver.java	doSolve	y1	double	computeObjectiveValue()	0	2	PARAM_USE	0
2686	116	12	RiddersSolver.java	doSolve	x2	double	NAME	0	0	NO_USE	0
2686	116	12	RiddersSolver.java	doSolve	y2	double	computeObjectiveValue()	0	2	PARAM_USE	0
2686	116	12	RiddersSolver.java	doSolve	absoluteAccuracy	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2686	116	12	RiddersSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	2	NO_USE	0
2686	116	12	RiddersSolver.java	doSolve	relativeAccuracy	double	getRelativeAccuracy()	0	0	NO_USE	0
2686	116	12	RiddersSolver.java	doSolve	oldx	double	NAME	0	1	NO_USE	0
2686	116	12	RiddersSolver.java	doSolve	THIS	RiddersSolver	UNKNOWN_AS	0	0	NO_USE	0
2687	117	16	RiddersSolver.java	doSolve	x3	double	*	0	0	OTHER_USE	0
2687	117	16	RiddersSolver.java	doSolve	y3	double	computeObjectiveValue()	0	1	OTHER_USE	0
2687	117	16	RiddersSolver.java	doSolve	delta	double	-	0	0	NO_USE	0
2687	117	16	RiddersSolver.java	doSolve	correction	double	/	0	1	NO_USE	0
2687	117	16	RiddersSolver.java	doSolve	x	double	-	0	1	OTHER_USE	0
2687	117	16	RiddersSolver.java	doSolve	y	double	computeObjectiveValue()	0	3	OTHER_USE	1
2687	117	16	RiddersSolver.java	doSolve	tolerance	double	max()	0	1	NO_USE	0
2687	117	16	RiddersSolver.java	doSolve	min	double	getMin()	0	0	NO_USE	0
2687	117	16	RiddersSolver.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2687	117	16	RiddersSolver.java	doSolve	x1	double	NAME	0	0	NO_USE	0
2687	117	16	RiddersSolver.java	doSolve	y1	double	computeObjectiveValue()	0	2	NO_USE	1
2687	117	16	RiddersSolver.java	doSolve	x2	double	NAME	0	0	NO_USE	0
2687	117	16	RiddersSolver.java	doSolve	y2	double	computeObjectiveValue()	0	2	NO_USE	0
2687	117	16	RiddersSolver.java	doSolve	absoluteAccuracy	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2687	117	16	RiddersSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	2	NO_USE	0
2687	117	16	RiddersSolver.java	doSolve	relativeAccuracy	double	getRelativeAccuracy()	0	0	NO_USE	0
2687	117	16	RiddersSolver.java	doSolve	oldx	double	NAME	0	1	NO_USE	0
2687	117	16	RiddersSolver.java	doSolve	THIS	RiddersSolver	UNKNOWN_AS	0	0	NO_USE	0
2688	127	16	RiddersSolver.java	doSolve	x3	double	*	0	0	OTHER_USE	0
2688	127	16	RiddersSolver.java	doSolve	y3	double	computeObjectiveValue()	0	1	OTHER_USE	0
2688	127	16	RiddersSolver.java	doSolve	delta	double	-	0	0	NO_USE	0
2688	127	16	RiddersSolver.java	doSolve	correction	double	/	0	1	NO_USE	0
2688	127	16	RiddersSolver.java	doSolve	x	double	-	0	1	OTHER_USE	0
2688	127	16	RiddersSolver.java	doSolve	y	double	computeObjectiveValue()	0	3	OTHER_USE	1
2688	127	16	RiddersSolver.java	doSolve	tolerance	double	max()	0	1	NO_USE	0
2688	127	16	RiddersSolver.java	doSolve	min	double	getMin()	0	0	NO_USE	0
2688	127	16	RiddersSolver.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2688	127	16	RiddersSolver.java	doSolve	x1	double	NAME	0	0	NO_USE	0
2688	127	16	RiddersSolver.java	doSolve	y1	double	NAME	0	2	NO_USE	0
2688	127	16	RiddersSolver.java	doSolve	x2	double	NAME	0	0	NO_USE	0
2688	127	16	RiddersSolver.java	doSolve	y2	double	NAME	0	2	NO_USE	1
2688	127	16	RiddersSolver.java	doSolve	absoluteAccuracy	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2688	127	16	RiddersSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	2	NO_USE	0
2688	127	16	RiddersSolver.java	doSolve	relativeAccuracy	double	getRelativeAccuracy()	0	0	NO_USE	0
2688	127	16	RiddersSolver.java	doSolve	oldx	double	NAME	0	1	NO_USE	0
2688	127	16	RiddersSolver.java	doSolve	THIS	RiddersSolver	UNKNOWN_AS	0	0	NO_USE	0
2689	98	8	MullerSolver2.java	doSolve	min	double	getMin()	0	0	NO_USE	0
2689	98	8	MullerSolver2.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2689	98	8	MullerSolver2.java	doSolve	relativeAccuracy	double	getRelativeAccuracy()	0	0	NO_USE	0
2689	98	8	MullerSolver2.java	doSolve	absoluteAccuracy	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2689	98	8	MullerSolver2.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	1
2689	98	8	MullerSolver2.java	doSolve	x0	double	NAME	0	0	RET_USE	0
2689	98	8	MullerSolver2.java	doSolve	y0	double	computeObjectiveValue()	0	2	NO_USE	1
2689	98	8	MullerSolver2.java	doSolve	THIS	MullerSolver2	UNKNOWN_AS	0	0	NO_USE	0
2690	103	8	MullerSolver2.java	doSolve	min	double	getMin()	0	0	NO_USE	0
2690	103	8	MullerSolver2.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2690	103	8	MullerSolver2.java	doSolve	relativeAccuracy	double	getRelativeAccuracy()	0	0	NO_USE	0
2690	103	8	MullerSolver2.java	doSolve	absoluteAccuracy	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2690	103	8	MullerSolver2.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	1
2690	103	8	MullerSolver2.java	doSolve	x0	double	NAME	0	0	NO_USE	0
2690	103	8	MullerSolver2.java	doSolve	y0	double	computeObjectiveValue()	0	2	NO_USE	0
2690	103	8	MullerSolver2.java	doSolve	x1	double	NAME	0	0	RET_USE	0
2690	103	8	MullerSolver2.java	doSolve	y1	double	computeObjectiveValue()	0	2	NO_USE	1
2690	103	8	MullerSolver2.java	doSolve	THIS	MullerSolver2	UNKNOWN_AS	0	0	NO_USE	0
2691	107	8	MullerSolver2.java	doSolve	min	double	getMin()	0	0	NO_USE	0
2691	107	8	MullerSolver2.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2691	107	8	MullerSolver2.java	doSolve	relativeAccuracy	double	getRelativeAccuracy()	0	0	NO_USE	0
2691	107	8	MullerSolver2.java	doSolve	absoluteAccuracy	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2691	107	8	MullerSolver2.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	0
2691	107	8	MullerSolver2.java	doSolve	x0	double	NAME	0	0	OTHER_USE	0
2691	107	8	MullerSolver2.java	doSolve	y0	double	computeObjectiveValue()	0	2	OTHER_USE	1
2691	107	8	MullerSolver2.java	doSolve	x1	double	NAME	0	0	OTHER_USE	0
2691	107	8	MullerSolver2.java	doSolve	y1	double	computeObjectiveValue()	0	2	OTHER_USE	1
2691	107	8	MullerSolver2.java	doSolve	THIS	MullerSolver2	UNKNOWN_AS	0	0	NO_USE	0
2692	124	12	MullerSolver2.java	doSolve	q	double	/	0	0	NO_USE	0
2692	124	12	MullerSolver2.java	doSolve	a	double	*	0	0	NO_USE	0
2692	124	12	MullerSolver2.java	doSolve	b	double	+	0	0	+	0
2692	124	12	MullerSolver2.java	doSolve	c	double	*	0	0	NO_USE	0
2692	124	12	MullerSolver2.java	doSolve	delta	double	-	0	1	PARAM_USE	1
2692	124	12	MullerSolver2.java	doSolve	x	double	UNKNOWN_AS	0	1	NO_USE	0
2692	124	12	MullerSolver2.java	doSolve	denominator	double	UNKNOWN_AS	0	1	NO_USE	0
2692	124	12	MullerSolver2.java	doSolve	min	double	getMin()	0	0	NO_USE	0
2692	124	12	MullerSolver2.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2692	124	12	MullerSolver2.java	doSolve	relativeAccuracy	double	getRelativeAccuracy()	0	0	NO_USE	0
2692	124	12	MullerSolver2.java	doSolve	absoluteAccuracy	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2692	124	12	MullerSolver2.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	0
2692	124	12	MullerSolver2.java	doSolve	x0	double	NAME	0	0	NO_USE	0
2692	124	12	MullerSolver2.java	doSolve	y0	double	computeObjectiveValue()	0	2	NO_USE	0
2692	124	12	MullerSolver2.java	doSolve	x1	double	NAME	0	0	NO_USE	0
2692	124	12	MullerSolver2.java	doSolve	y1	double	computeObjectiveValue()	0	2	NO_USE	0
2692	124	12	MullerSolver2.java	doSolve	x2	double	*	0	0	NO_USE	0
2692	124	12	MullerSolver2.java	doSolve	y2	double	computeObjectiveValue()	0	0	NO_USE	0
2692	124	12	MullerSolver2.java	doSolve	oldx	double	NAME	0	1	NO_USE	0
2692	124	12	MullerSolver2.java	doSolve	THIS	MullerSolver2	UNKNOWN_AS	0	0	NO_USE	0
2693	133	12	MullerSolver2.java	doSolve	q	double	/	0	0	NO_USE	0
2693	133	12	MullerSolver2.java	doSolve	a	double	*	0	0	NO_USE	0
2693	133	12	MullerSolver2.java	doSolve	b	double	+	0	0	NO_USE	0
2693	133	12	MullerSolver2.java	doSolve	c	double	*	0	0	*	0
2693	133	12	MullerSolver2.java	doSolve	delta	double	-	0	1	NO_USE	0
2693	133	12	MullerSolver2.java	doSolve	x	double	UNKNOWN_AS	0	1	==	0
2693	133	12	MullerSolver2.java	doSolve	denominator	double	sqrt()	0	1	/	1
2693	133	12	MullerSolver2.java	doSolve	min	double	getMin()	0	0	+	0
2693	133	12	MullerSolver2.java	doSolve	max	double	getMax()	0	0	-	0
2693	133	12	MullerSolver2.java	doSolve	relativeAccuracy	double	getRelativeAccuracy()	0	0	NO_USE	0
2693	133	12	MullerSolver2.java	doSolve	absoluteAccuracy	double	getAbsoluteAccuracy()	0	0	OTHER_USE	0
2693	133	12	MullerSolver2.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	0
2693	133	12	MullerSolver2.java	doSolve	x0	double	NAME	0	0	NO_USE	0
2693	133	12	MullerSolver2.java	doSolve	y0	double	computeObjectiveValue()	0	2	NO_USE	0
2693	133	12	MullerSolver2.java	doSolve	x1	double	NAME	0	0	-	0
2693	133	12	MullerSolver2.java	doSolve	y1	double	computeObjectiveValue()	0	2	NO_USE	0
2693	133	12	MullerSolver2.java	doSolve	x2	double	*	0	0	-	0
2693	133	12	MullerSolver2.java	doSolve	y2	double	computeObjectiveValue()	0	0	NO_USE	0
2693	133	12	MullerSolver2.java	doSolve	oldx	double	NAME	0	1	NO_USE	0
2693	133	12	MullerSolver2.java	doSolve	THIS	MullerSolver2	UNKNOWN_AS	0	0	NO_USE	0
2694	149	12	MullerSolver2.java	doSolve	q	double	/	0	0	NO_USE	0
2694	149	12	MullerSolver2.java	doSolve	a	double	*	0	0	NO_USE	0
2694	149	12	MullerSolver2.java	doSolve	b	double	+	0	0	NO_USE	0
2694	149	12	MullerSolver2.java	doSolve	c	double	*	0	0	NO_USE	0
2694	149	12	MullerSolver2.java	doSolve	delta	double	-	0	1	NO_USE	0
2694	149	12	MullerSolver2.java	doSolve	x	double	+	0	1	RET_USE	1
2694	149	12	MullerSolver2.java	doSolve	denominator	double	sqrt()	0	1	NO_USE	0
2694	149	12	MullerSolver2.java	doSolve	y	double	computeObjectiveValue()	0	1	NO_USE	1
2694	149	12	MullerSolver2.java	doSolve	tolerance	double	max()	0	1	NO_USE	1
2694	149	12	MullerSolver2.java	doSolve	min	double	getMin()	0	0	NO_USE	0
2694	149	12	MullerSolver2.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2694	149	12	MullerSolver2.java	doSolve	relativeAccuracy	double	getRelativeAccuracy()	0	0	NO_USE	0
2694	149	12	MullerSolver2.java	doSolve	absoluteAccuracy	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2694	149	12	MullerSolver2.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	1
2694	149	12	MullerSolver2.java	doSolve	x0	double	NAME	0	0	NO_USE	0
2694	149	12	MullerSolver2.java	doSolve	y0	double	computeObjectiveValue()	0	2	NO_USE	0
2694	149	12	MullerSolver2.java	doSolve	x1	double	NAME	0	0	NO_USE	0
2694	149	12	MullerSolver2.java	doSolve	y1	double	computeObjectiveValue()	0	2	NO_USE	0
2694	149	12	MullerSolver2.java	doSolve	x2	double	*	0	0	NO_USE	0
2694	149	12	MullerSolver2.java	doSolve	y2	double	computeObjectiveValue()	0	0	NO_USE	0
2694	149	12	MullerSolver2.java	doSolve	oldx	double	NAME	0	1	NO_USE	1
2694	149	12	MullerSolver2.java	doSolve	THIS	MullerSolver2	UNKNOWN_AS	0	0	NO_USE	0
2695	93	8	MullerSolver.java	doSolve	min	double	getMin()	0	1	RET_USE	0
2695	93	8	MullerSolver.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2695	93	8	MullerSolver.java	doSolve	initial	double	getStartValue()	0	1	NO_USE	0
2695	93	8	MullerSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	1
2695	93	8	MullerSolver.java	doSolve	fMin	double	computeObjectiveValue()	0	1	NO_USE	1
2695	93	8	MullerSolver.java	doSolve	THIS	MullerSolver	UNKNOWN_AS	0	1	NO_USE	0
2696	97	8	MullerSolver.java	doSolve	min	double	getMin()	0	1	NO_USE	0
2696	97	8	MullerSolver.java	doSolve	max	double	getMax()	0	0	RET_USE	0
2696	97	8	MullerSolver.java	doSolve	initial	double	getStartValue()	0	1	NO_USE	0
2696	97	8	MullerSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	1
2696	97	8	MullerSolver.java	doSolve	fMin	double	computeObjectiveValue()	0	1	NO_USE	0
2696	97	8	MullerSolver.java	doSolve	fMax	double	computeObjectiveValue()	0	1	NO_USE	1
2696	97	8	MullerSolver.java	doSolve	THIS	MullerSolver	UNKNOWN_AS	0	1	NO_USE	0
2697	101	8	MullerSolver.java	doSolve	min	double	getMin()	0	1	NO_USE	0
2697	101	8	MullerSolver.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2697	101	8	MullerSolver.java	doSolve	initial	double	getStartValue()	0	1	RET_USE	0
2697	101	8	MullerSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	1
2697	101	8	MullerSolver.java	doSolve	fMin	double	computeObjectiveValue()	0	1	NO_USE	0
2697	101	8	MullerSolver.java	doSolve	fMax	double	computeObjectiveValue()	0	1	NO_USE	0
2697	101	8	MullerSolver.java	doSolve	fInitial	double	computeObjectiveValue()	0	1	NO_USE	1
2697	101	8	MullerSolver.java	doSolve	THIS	MullerSolver	UNKNOWN_AS	0	1	NO_USE	0
2698	107	8	MullerSolver.java	doSolve	min	double	getMin()	0	1	PARAM_USE	1
2698	107	8	MullerSolver.java	doSolve	max	double	getMax()	0	0	PARAM_USE	0
2698	107	8	MullerSolver.java	doSolve	initial	double	getStartValue()	0	1	PARAM_USE	1
2698	107	8	MullerSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	0
2698	107	8	MullerSolver.java	doSolve	fMin	double	computeObjectiveValue()	0	1	PARAM_USE	0
2698	107	8	MullerSolver.java	doSolve	fMax	double	computeObjectiveValue()	0	1	PARAM_USE	0
2698	107	8	MullerSolver.java	doSolve	fInitial	double	computeObjectiveValue()	0	1	PARAM_USE	0
2698	107	8	MullerSolver.java	doSolve	THIS	MullerSolver	UNKNOWN_AS	0	1	CLALLER_USE	1
2699	161	12	MullerSolver.java	solve	d01	double	/	0	0	NO_USE	0
2699	161	12	MullerSolver.java	solve	d12	double	/	0	0	NO_USE	0
2699	161	12	MullerSolver.java	solve	d012	double	/	0	0	NO_USE	0
2699	161	12	MullerSolver.java	solve	c1	double	+	0	0	NO_USE	0
2699	161	12	MullerSolver.java	solve	delta	double	-	0	0	NO_USE	0
2699	161	12	MullerSolver.java	solve	xplus	double	+	0	0	NO_USE	0
2699	161	12	MullerSolver.java	solve	xminus	double	+	0	0	NO_USE	0
2699	161	12	MullerSolver.java	solve	x	double	OTHERS	0	1	RET_USE	1
2699	161	12	MullerSolver.java	solve	y	double	computeObjectiveValue()	0	1	NO_USE	1
2699	161	12	MullerSolver.java	solve	tolerance	double	max()	0	1	NO_USE	1
2699	161	12	MullerSolver.java	solve	relativeAccuracy	double	getRelativeAccuracy()	0	0	NO_USE	0
2699	161	12	MullerSolver.java	solve	absoluteAccuracy	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2699	161	12	MullerSolver.java	solve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	1	NO_USE	1
2699	161	12	MullerSolver.java	solve	x0	double	NAME	0	0	NO_USE	0
2699	161	12	MullerSolver.java	solve	y0	double	NAME	0	1	NO_USE	0
2699	161	12	MullerSolver.java	solve	x2	double	NAME	0	0	NO_USE	0
2699	161	12	MullerSolver.java	solve	y2	double	NAME	0	0	NO_USE	0
2699	161	12	MullerSolver.java	solve	x1	double	*	0	0	NO_USE	0
2699	161	12	MullerSolver.java	solve	y1	double	computeObjectiveValue()	0	0	NO_USE	0
2699	161	12	MullerSolver.java	solve	oldx	double	NAME	0	1	NO_USE	1
2699	161	12	MullerSolver.java	solve	min	double	PARAM_AS	1	0	NO_USE	0
2699	161	12	MullerSolver.java	solve	max	double	PARAM_AS	1	0	NO_USE	0
2699	161	12	MullerSolver.java	solve	fMin	double	PARAM_AS	1	0	NO_USE	0
2699	161	12	MullerSolver.java	solve	fMax	double	PARAM_AS	1	0	NO_USE	0
2699	161	12	MullerSolver.java	solve	THIS	MullerSolver	UNKNOWN_AS	0	0	NO_USE	0
2700	174	12	MullerSolver.java	solve	d01	double	/	0	0	NO_USE	0
2700	174	12	MullerSolver.java	solve	d12	double	/	0	0	NO_USE	0
2700	174	12	MullerSolver.java	solve	d012	double	/	0	0	NO_USE	0
2700	174	12	MullerSolver.java	solve	c1	double	+	0	0	NO_USE	0
2700	174	12	MullerSolver.java	solve	delta	double	-	0	0	NO_USE	0
2700	174	12	MullerSolver.java	solve	xplus	double	+	0	0	NO_USE	0
2700	174	12	MullerSolver.java	solve	xminus	double	+	0	0	NO_USE	0
2700	174	12	MullerSolver.java	solve	x	double	OTHERS	0	1	<	0
2700	174	12	MullerSolver.java	solve	y	double	computeObjectiveValue()	0	1	OTHER_USE	0
2700	174	12	MullerSolver.java	solve	tolerance	double	max()	0	1	NO_USE	0
2700	174	12	MullerSolver.java	solve	bisect	boolean	||	0	1	NO_USE	1
2700	174	12	MullerSolver.java	solve	relativeAccuracy	double	getRelativeAccuracy()	0	0	NO_USE	0
2700	174	12	MullerSolver.java	solve	absoluteAccuracy	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2700	174	12	MullerSolver.java	solve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	1	NO_USE	0
2700	174	12	MullerSolver.java	solve	x0	double	NAME	0	0	OTHER_USE	0
2700	174	12	MullerSolver.java	solve	y0	double	NAME	0	1	OTHER_USE	0
2700	174	12	MullerSolver.java	solve	x2	double	NAME	0	0	OTHER_USE	0
2700	174	12	MullerSolver.java	solve	y2	double	NAME	0	0	OTHER_USE	0
2700	174	12	MullerSolver.java	solve	x1	double	*	0	0	<	0
2700	174	12	MullerSolver.java	solve	y1	double	computeObjectiveValue()	0	0	OTHER_USE	0
2700	174	12	MullerSolver.java	solve	oldx	double	NAME	0	1	NO_USE	0
2700	174	12	MullerSolver.java	solve	min	double	PARAM_AS	1	0	NO_USE	0
2700	174	12	MullerSolver.java	solve	max	double	PARAM_AS	1	0	NO_USE	0
2700	174	12	MullerSolver.java	solve	fMin	double	PARAM_AS	1	0	NO_USE	0
2700	174	12	MullerSolver.java	solve	fMax	double	PARAM_AS	1	0	NO_USE	0
2700	174	12	MullerSolver.java	solve	THIS	MullerSolver	UNKNOWN_AS	0	0	CLALLER_USE	0
2701	184	16	MullerSolver.java	solve	xm	double	*	0	0	OTHER_USE	0
2701	184	16	MullerSolver.java	solve	ym	double	computeObjectiveValue()	0	1	OTHER_USE	1
2701	184	16	MullerSolver.java	solve	d01	double	/	0	0	NO_USE	0
2701	184	16	MullerSolver.java	solve	d12	double	/	0	0	NO_USE	0
2701	184	16	MullerSolver.java	solve	d012	double	/	0	0	NO_USE	0
2701	184	16	MullerSolver.java	solve	c1	double	+	0	0	NO_USE	0
2701	184	16	MullerSolver.java	solve	delta	double	-	0	0	NO_USE	0
2701	184	16	MullerSolver.java	solve	xplus	double	+	0	0	NO_USE	0
2701	184	16	MullerSolver.java	solve	xminus	double	+	0	0	NO_USE	0
2701	184	16	MullerSolver.java	solve	x	double	OTHERS	0	1	NO_USE	0
2701	184	16	MullerSolver.java	solve	y	double	computeObjectiveValue()	0	1	NO_USE	0
2701	184	16	MullerSolver.java	solve	tolerance	double	max()	0	1	NO_USE	0
2701	184	16	MullerSolver.java	solve	bisect	boolean	||	0	1	NO_USE	0
2701	184	16	MullerSolver.java	solve	relativeAccuracy	double	getRelativeAccuracy()	0	0	NO_USE	0
2701	184	16	MullerSolver.java	solve	absoluteAccuracy	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2701	184	16	MullerSolver.java	solve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	1	NO_USE	0
2701	184	16	MullerSolver.java	solve	x0	double	OTHERS	0	0	NO_USE	0
2701	184	16	MullerSolver.java	solve	y0	double	OTHERS	0	1	NO_USE	1
2701	184	16	MullerSolver.java	solve	x2	double	OTHERS	0	0	NO_USE	0
2701	184	16	MullerSolver.java	solve	y2	double	OTHERS	0	0	NO_USE	0
2701	184	16	MullerSolver.java	solve	x1	double	NAME	0	0	NO_USE	0
2701	184	16	MullerSolver.java	solve	y1	double	NAME	0	0	NO_USE	0
2701	184	16	MullerSolver.java	solve	oldx	double	NAME	0	1	NO_USE	0
2701	184	16	MullerSolver.java	solve	min	double	PARAM_AS	1	0	NO_USE	0
2701	184	16	MullerSolver.java	solve	max	double	PARAM_AS	1	0	NO_USE	0
2701	184	16	MullerSolver.java	solve	fMin	double	PARAM_AS	1	0	NO_USE	0
2701	184	16	MullerSolver.java	solve	fMax	double	PARAM_AS	1	0	NO_USE	0
2701	184	16	MullerSolver.java	solve	THIS	MullerSolver	UNKNOWN_AS	0	0	NO_USE	0
2702	83	8	SecantSolver.java	doSolve	x0	double	getMin()	0	1	RET_USE	0
2702	83	8	SecantSolver.java	doSolve	x1	double	getMax()	0	2	NO_USE	0
2702	83	8	SecantSolver.java	doSolve	f0	double	computeObjectiveValue()	0	1	NO_USE	1
2702	83	8	SecantSolver.java	doSolve	f1	double	computeObjectiveValue()	0	2	NO_USE	0
2702	83	8	SecantSolver.java	doSolve	THIS	SecantSolver	UNKNOWN_AS	0	0	NO_USE	0
2703	86	8	SecantSolver.java	doSolve	x0	double	getMin()	0	1	NO_USE	0
2703	86	8	SecantSolver.java	doSolve	x1	double	getMax()	0	2	RET_USE	0
2703	86	8	SecantSolver.java	doSolve	f0	double	computeObjectiveValue()	0	1	NO_USE	0
2703	86	8	SecantSolver.java	doSolve	f1	double	computeObjectiveValue()	0	2	NO_USE	1
2703	86	8	SecantSolver.java	doSolve	THIS	SecantSolver	UNKNOWN_AS	0	0	NO_USE	0
2704	107	12	SecantSolver.java	doSolve	x	double	-	0	0	RET_USE	0
2704	107	12	SecantSolver.java	doSolve	fx	double	computeObjectiveValue()	0	1	NO_USE	1
2704	107	12	SecantSolver.java	doSolve	x0	double	getMin()	0	1	NO_USE	0
2704	107	12	SecantSolver.java	doSolve	x1	double	getMax()	0	2	NO_USE	0
2704	107	12	SecantSolver.java	doSolve	f0	double	computeObjectiveValue()	0	1	NO_USE	0
2704	107	12	SecantSolver.java	doSolve	f1	double	computeObjectiveValue()	0	2	NO_USE	0
2704	107	12	SecantSolver.java	doSolve	ftol	double	getFunctionValueAccuracy()	0	1	NO_USE	0
2704	107	12	SecantSolver.java	doSolve	atol	double	getAbsoluteAccuracy()	0	1	NO_USE	0
2704	107	12	SecantSolver.java	doSolve	rtol	double	getRelativeAccuracy()	0	1	NO_USE	0
2704	107	12	SecantSolver.java	doSolve	THIS	SecantSolver	UNKNOWN_AS	0	0	NO_USE	0
2705	120	12	SecantSolver.java	doSolve	x	double	-	0	0	NO_USE	0
2705	120	12	SecantSolver.java	doSolve	fx	double	computeObjectiveValue()	0	1	NO_USE	0
2705	120	12	SecantSolver.java	doSolve	x0	double	NAME	0	1	NO_USE	0
2705	120	12	SecantSolver.java	doSolve	x1	double	NAME	0	2	RET_USE	0
2705	120	12	SecantSolver.java	doSolve	f0	double	NAME	0	1	NO_USE	0
2705	120	12	SecantSolver.java	doSolve	f1	double	NAME	0	2	NO_USE	1
2705	120	12	SecantSolver.java	doSolve	ftol	double	getFunctionValueAccuracy()	0	1	NO_USE	1
2705	120	12	SecantSolver.java	doSolve	atol	double	getAbsoluteAccuracy()	0	1	NO_USE	0
2705	120	12	SecantSolver.java	doSolve	rtol	double	getRelativeAccuracy()	0	1	NO_USE	0
2705	120	12	SecantSolver.java	doSolve	THIS	SecantSolver	UNKNOWN_AS	0	0	NO_USE	0
2706	126	12	SecantSolver.java	doSolve	x	double	-	0	0	NO_USE	0
2706	126	12	SecantSolver.java	doSolve	fx	double	computeObjectiveValue()	0	1	NO_USE	0
2706	126	12	SecantSolver.java	doSolve	x0	double	NAME	0	1	NO_USE	1
2706	126	12	SecantSolver.java	doSolve	x1	double	NAME	0	2	RET_USE	1
2706	126	12	SecantSolver.java	doSolve	f0	double	NAME	0	1	NO_USE	0
2706	126	12	SecantSolver.java	doSolve	f1	double	NAME	0	2	NO_USE	0
2706	126	12	SecantSolver.java	doSolve	ftol	double	getFunctionValueAccuracy()	0	1	NO_USE	0
2706	126	12	SecantSolver.java	doSolve	atol	double	getAbsoluteAccuracy()	0	1	NO_USE	1
2706	126	12	SecantSolver.java	doSolve	rtol	double	getRelativeAccuracy()	0	1	NO_USE	1
2706	126	12	SecantSolver.java	doSolve	THIS	SecantSolver	UNKNOWN_AS	0	0	NO_USE	0
2707	50	8	UnivariateRealSolverUtils.java	solve	function	UnivariateRealFunction	PARAM_AS	1	1	NO_USE	1
2707	50	8	UnivariateRealSolverUtils.java	solve	x0	double	PARAM_AS	1	0	NO_USE	0
2707	50	8	UnivariateRealSolverUtils.java	solve	x1	double	PARAM_AS	1	0	NO_USE	0
2707	50	8	UnivariateRealSolverUtils.java	solve	THIS	UnivariateRealSolverUtils	UNKNOWN_AS	0	0	FIELD_USE	0
2708	73	8	UnivariateRealSolverUtils.java	solve	function	UnivariateRealFunction	PARAM_AS	1	1	NO_USE	1
2708	73	8	UnivariateRealSolverUtils.java	solve	x0	double	PARAM_AS	1	0	NO_USE	0
2708	73	8	UnivariateRealSolverUtils.java	solve	x1	double	PARAM_AS	1	0	NO_USE	0
2708	73	8	UnivariateRealSolverUtils.java	solve	absoluteAccuracy	double	PARAM_AS	1	0	NO_USE	0
2708	73	8	UnivariateRealSolverUtils.java	solve	THIS	UnivariateRealSolverUtils	UNKNOWN_AS	0	0	FIELD_USE	0
2709	99	8	UnivariateRealSolverUtils.java	forceSide	maxEval	int	PARAM_AS	1	0	NO_USE	0
2709	99	8	UnivariateRealSolverUtils.java	forceSide	f	UnivariateRealFunction	PARAM_AS	1	0	NO_USE	0
2709	99	8	UnivariateRealSolverUtils.java	forceSide	bracketing	BracketedUnivariateRealSolver<UnivariateRealFunction>	PARAM_AS	1	0	NO_USE	0
2709	99	8	UnivariateRealSolverUtils.java	forceSide	baseRoot	double	PARAM_AS	1	0	RET_USE	0
2709	99	8	UnivariateRealSolverUtils.java	forceSide	min	double	PARAM_AS	1	0	NO_USE	0
2709	99	8	UnivariateRealSolverUtils.java	forceSide	max	double	PARAM_AS	1	0	NO_USE	0
2709	99	8	UnivariateRealSolverUtils.java	forceSide	allowedSolutions	AllowedSolutions	PARAM_AS	1	1	NO_USE	1
2709	99	8	UnivariateRealSolverUtils.java	forceSide	THIS	UnivariateRealSolverUtils	UNKNOWN_AS	0	1	NO_USE	1
2710	114	12	UnivariateRealSolverUtils.java	forceSide	step	double	max()	0	0	NO_USE	0
2710	114	12	UnivariateRealSolverUtils.java	forceSide	xLo	double	max()	0	0	PARAM_USE	0
2710	114	12	UnivariateRealSolverUtils.java	forceSide	fLo	double	value()	0	6	NO_USE	1
2710	114	12	UnivariateRealSolverUtils.java	forceSide	xHi	double	min()	0	0	PARAM_USE	0
2710	114	12	UnivariateRealSolverUtils.java	forceSide	fHi	double	value()	0	4	NO_USE	1
2710	114	12	UnivariateRealSolverUtils.java	forceSide	remainingEval	int	-	0	0	PARAM_USE	0
2710	114	12	UnivariateRealSolverUtils.java	forceSide	maxEval	int	PARAM_AS	1	0	NO_USE	0
2710	114	12	UnivariateRealSolverUtils.java	forceSide	f	UnivariateRealFunction	PARAM_AS	1	0	PARAM_USE	0
2710	114	12	UnivariateRealSolverUtils.java	forceSide	bracketing	BracketedUnivariateRealSolver<UnivariateRealFunction>	PARAM_AS	1	0	CLALLER_USE	0
2710	114	12	UnivariateRealSolverUtils.java	forceSide	baseRoot	double	PARAM_AS	1	0	PARAM_USE	0
2710	114	12	UnivariateRealSolverUtils.java	forceSide	min	double	PARAM_AS	1	0	NO_USE	0
2710	114	12	UnivariateRealSolverUtils.java	forceSide	max	double	PARAM_AS	1	0	NO_USE	0
2710	114	12	UnivariateRealSolverUtils.java	forceSide	allowedSolutions	AllowedSolutions	PARAM_AS	1	1	PARAM_USE	0
2710	114	12	UnivariateRealSolverUtils.java	forceSide	THIS	UnivariateRealSolverUtils	UNKNOWN_AS	0	1	NO_USE	0
2711	122	12	UnivariateRealSolverUtils.java	forceSide	changeLo	boolean	LITERAL	0	0	NO_USE	0
2711	122	12	UnivariateRealSolverUtils.java	forceSide	changeHi	boolean	LITERAL	0	0	NO_USE	0
2711	122	12	UnivariateRealSolverUtils.java	forceSide	step	double	max()	0	0	NO_USE	0
2711	122	12	UnivariateRealSolverUtils.java	forceSide	xLo	double	max()	0	0	NO_USE	0
2711	122	12	UnivariateRealSolverUtils.java	forceSide	fLo	double	value()	0	6	>=	1
2711	122	12	UnivariateRealSolverUtils.java	forceSide	xHi	double	min()	0	0	NO_USE	0
2711	122	12	UnivariateRealSolverUtils.java	forceSide	fHi	double	value()	0	4	>	1
2711	122	12	UnivariateRealSolverUtils.java	forceSide	remainingEval	int	-	0	0	NO_USE	0
2711	122	12	UnivariateRealSolverUtils.java	forceSide	maxEval	int	PARAM_AS	1	0	NO_USE	0
2711	122	12	UnivariateRealSolverUtils.java	forceSide	f	UnivariateRealFunction	PARAM_AS	1	0	NO_USE	0
2711	122	12	UnivariateRealSolverUtils.java	forceSide	bracketing	BracketedUnivariateRealSolver<UnivariateRealFunction>	PARAM_AS	1	0	NO_USE	0
2711	122	12	UnivariateRealSolverUtils.java	forceSide	baseRoot	double	PARAM_AS	1	0	NO_USE	0
2711	122	12	UnivariateRealSolverUtils.java	forceSide	min	double	PARAM_AS	1	0	NO_USE	0
2711	122	12	UnivariateRealSolverUtils.java	forceSide	max	double	PARAM_AS	1	0	NO_USE	0
2711	122	12	UnivariateRealSolverUtils.java	forceSide	allowedSolutions	AllowedSolutions	PARAM_AS	1	1	NO_USE	0
2711	122	12	UnivariateRealSolverUtils.java	forceSide	THIS	UnivariateRealSolverUtils	UNKNOWN_AS	0	1	NO_USE	0
2712	124	16	UnivariateRealSolverUtils.java	forceSide	changeLo	boolean	LITERAL	0	0	NO_USE	0
2712	124	16	UnivariateRealSolverUtils.java	forceSide	changeHi	boolean	LITERAL	0	0	NO_USE	0
2712	124	16	UnivariateRealSolverUtils.java	forceSide	step	double	max()	0	0	NO_USE	0
2712	124	16	UnivariateRealSolverUtils.java	forceSide	xLo	double	max()	0	0	NO_USE	0
2712	124	16	UnivariateRealSolverUtils.java	forceSide	fLo	double	value()	0	6	NO_USE	1
2712	124	16	UnivariateRealSolverUtils.java	forceSide	xHi	double	min()	0	0	NO_USE	0
2712	124	16	UnivariateRealSolverUtils.java	forceSide	fHi	double	value()	0	4	NO_USE	0
2712	124	16	UnivariateRealSolverUtils.java	forceSide	remainingEval	int	-	0	0	NO_USE	0
2712	124	16	UnivariateRealSolverUtils.java	forceSide	maxEval	int	PARAM_AS	1	0	NO_USE	0
2712	124	16	UnivariateRealSolverUtils.java	forceSide	f	UnivariateRealFunction	PARAM_AS	1	0	NO_USE	0
2712	124	16	UnivariateRealSolverUtils.java	forceSide	bracketing	BracketedUnivariateRealSolver<UnivariateRealFunction>	PARAM_AS	1	0	NO_USE	0
2712	124	16	UnivariateRealSolverUtils.java	forceSide	baseRoot	double	PARAM_AS	1	0	NO_USE	0
2712	124	16	UnivariateRealSolverUtils.java	forceSide	min	double	PARAM_AS	1	0	NO_USE	0
2712	124	16	UnivariateRealSolverUtils.java	forceSide	max	double	PARAM_AS	1	0	NO_USE	0
2712	124	16	UnivariateRealSolverUtils.java	forceSide	allowedSolutions	AllowedSolutions	PARAM_AS	1	1	NO_USE	0
2712	124	16	UnivariateRealSolverUtils.java	forceSide	THIS	UnivariateRealSolverUtils	UNKNOWN_AS	0	1	NO_USE	0
2713	129	19	UnivariateRealSolverUtils.java	forceSide	changeLo	boolean	LITERAL	0	0	NO_USE	0
2713	129	19	UnivariateRealSolverUtils.java	forceSide	changeHi	boolean	LITERAL	0	0	NO_USE	0
2713	129	19	UnivariateRealSolverUtils.java	forceSide	step	double	max()	0	0	NO_USE	0
2713	129	19	UnivariateRealSolverUtils.java	forceSide	xLo	double	max()	0	0	NO_USE	0
2713	129	19	UnivariateRealSolverUtils.java	forceSide	fLo	double	value()	0	6	<=	1
2713	129	19	UnivariateRealSolverUtils.java	forceSide	xHi	double	min()	0	0	NO_USE	0
2713	129	19	UnivariateRealSolverUtils.java	forceSide	fHi	double	value()	0	4	NO_USE	1
2713	129	19	UnivariateRealSolverUtils.java	forceSide	remainingEval	int	-	0	0	NO_USE	0
2713	129	19	UnivariateRealSolverUtils.java	forceSide	maxEval	int	PARAM_AS	1	0	NO_USE	0
2713	129	19	UnivariateRealSolverUtils.java	forceSide	f	UnivariateRealFunction	PARAM_AS	1	0	NO_USE	0
2713	129	19	UnivariateRealSolverUtils.java	forceSide	bracketing	BracketedUnivariateRealSolver<UnivariateRealFunction>	PARAM_AS	1	0	NO_USE	0
2713	129	19	UnivariateRealSolverUtils.java	forceSide	baseRoot	double	PARAM_AS	1	0	NO_USE	0
2713	129	19	UnivariateRealSolverUtils.java	forceSide	min	double	PARAM_AS	1	0	NO_USE	0
2713	129	19	UnivariateRealSolverUtils.java	forceSide	max	double	PARAM_AS	1	0	NO_USE	0
2713	129	19	UnivariateRealSolverUtils.java	forceSide	allowedSolutions	AllowedSolutions	PARAM_AS	1	1	NO_USE	0
2713	129	19	UnivariateRealSolverUtils.java	forceSide	THIS	UnivariateRealSolverUtils	UNKNOWN_AS	0	1	NO_USE	0
2714	131	16	UnivariateRealSolverUtils.java	forceSide	changeLo	boolean	LITERAL	0	0	NO_USE	0
2714	131	16	UnivariateRealSolverUtils.java	forceSide	changeHi	boolean	LITERAL	0	0	NO_USE	0
2714	131	16	UnivariateRealSolverUtils.java	forceSide	step	double	max()	0	0	NO_USE	0
2714	131	16	UnivariateRealSolverUtils.java	forceSide	xLo	double	max()	0	0	NO_USE	0
2714	131	16	UnivariateRealSolverUtils.java	forceSide	fLo	double	value()	0	6	NO_USE	1
2714	131	16	UnivariateRealSolverUtils.java	forceSide	xHi	double	min()	0	0	NO_USE	0
2714	131	16	UnivariateRealSolverUtils.java	forceSide	fHi	double	value()	0	4	NO_USE	0
2714	131	16	UnivariateRealSolverUtils.java	forceSide	remainingEval	int	-	0	0	NO_USE	0
2714	131	16	UnivariateRealSolverUtils.java	forceSide	maxEval	int	PARAM_AS	1	0	NO_USE	0
2714	131	16	UnivariateRealSolverUtils.java	forceSide	f	UnivariateRealFunction	PARAM_AS	1	0	NO_USE	0
2714	131	16	UnivariateRealSolverUtils.java	forceSide	bracketing	BracketedUnivariateRealSolver<UnivariateRealFunction>	PARAM_AS	1	0	NO_USE	0
2714	131	16	UnivariateRealSolverUtils.java	forceSide	baseRoot	double	PARAM_AS	1	0	NO_USE	0
2714	131	16	UnivariateRealSolverUtils.java	forceSide	min	double	PARAM_AS	1	0	NO_USE	0
2714	131	16	UnivariateRealSolverUtils.java	forceSide	max	double	PARAM_AS	1	0	NO_USE	0
2714	131	16	UnivariateRealSolverUtils.java	forceSide	allowedSolutions	AllowedSolutions	PARAM_AS	1	1	NO_USE	0
2714	131	16	UnivariateRealSolverUtils.java	forceSide	THIS	UnivariateRealSolverUtils	UNKNOWN_AS	0	1	NO_USE	0
2715	143	12	UnivariateRealSolverUtils.java	forceSide	changeLo	boolean	LITERAL	0	0	NO_USE	1
2715	143	12	UnivariateRealSolverUtils.java	forceSide	changeHi	boolean	LITERAL	0	0	NO_USE	0
2715	143	12	UnivariateRealSolverUtils.java	forceSide	step	double	max()	0	0	-	0
2715	143	12	UnivariateRealSolverUtils.java	forceSide	xLo	double	max()	0	0	-	0
2715	143	12	UnivariateRealSolverUtils.java	forceSide	fLo	double	value()	0	6	NO_USE	0
2715	143	12	UnivariateRealSolverUtils.java	forceSide	xHi	double	min()	0	0	NO_USE	0
2715	143	12	UnivariateRealSolverUtils.java	forceSide	fHi	double	value()	0	4	NO_USE	0
2715	143	12	UnivariateRealSolverUtils.java	forceSide	remainingEval	int	-	0	0	x--	0
2715	143	12	UnivariateRealSolverUtils.java	forceSide	maxEval	int	PARAM_AS	1	0	NO_USE	0
2715	143	12	UnivariateRealSolverUtils.java	forceSide	f	UnivariateRealFunction	PARAM_AS	1	0	CLALLER_USE	0
2715	143	12	UnivariateRealSolverUtils.java	forceSide	bracketing	BracketedUnivariateRealSolver<UnivariateRealFunction>	PARAM_AS	1	0	NO_USE	0
2715	143	12	UnivariateRealSolverUtils.java	forceSide	baseRoot	double	PARAM_AS	1	0	NO_USE	0
2715	143	12	UnivariateRealSolverUtils.java	forceSide	min	double	PARAM_AS	1	0	PARAM_USE	0
2715	143	12	UnivariateRealSolverUtils.java	forceSide	max	double	PARAM_AS	1	0	NO_USE	0
2715	143	12	UnivariateRealSolverUtils.java	forceSide	allowedSolutions	AllowedSolutions	PARAM_AS	1	1	NO_USE	0
2715	143	12	UnivariateRealSolverUtils.java	forceSide	THIS	UnivariateRealSolverUtils	UNKNOWN_AS	0	1	NO_USE	0
2716	150	12	UnivariateRealSolverUtils.java	forceSide	changeLo	boolean	LITERAL	0	0	NO_USE	0
2716	150	12	UnivariateRealSolverUtils.java	forceSide	changeHi	boolean	LITERAL	0	0	NO_USE	1
2716	150	12	UnivariateRealSolverUtils.java	forceSide	step	double	max()	0	0	+	0
2716	150	12	UnivariateRealSolverUtils.java	forceSide	xLo	double	max()	0	0	NO_USE	0
2716	150	12	UnivariateRealSolverUtils.java	forceSide	fLo	double	value()	0	6	NO_USE	0
2716	150	12	UnivariateRealSolverUtils.java	forceSide	xHi	double	min()	0	0	+	0
2716	150	12	UnivariateRealSolverUtils.java	forceSide	fHi	double	value()	0	4	NO_USE	0
2716	150	12	UnivariateRealSolverUtils.java	forceSide	remainingEval	int	-	0	0	x--	0
2716	150	12	UnivariateRealSolverUtils.java	forceSide	maxEval	int	PARAM_AS	1	0	NO_USE	0
2716	150	12	UnivariateRealSolverUtils.java	forceSide	f	UnivariateRealFunction	PARAM_AS	1	0	CLALLER_USE	0
2716	150	12	UnivariateRealSolverUtils.java	forceSide	bracketing	BracketedUnivariateRealSolver<UnivariateRealFunction>	PARAM_AS	1	0	NO_USE	0
2716	150	12	UnivariateRealSolverUtils.java	forceSide	baseRoot	double	PARAM_AS	1	0	NO_USE	0
2716	150	12	UnivariateRealSolverUtils.java	forceSide	min	double	PARAM_AS	1	0	NO_USE	0
2716	150	12	UnivariateRealSolverUtils.java	forceSide	max	double	PARAM_AS	1	0	PARAM_USE	0
2716	150	12	UnivariateRealSolverUtils.java	forceSide	allowedSolutions	AllowedSolutions	PARAM_AS	1	1	NO_USE	0
2716	150	12	UnivariateRealSolverUtils.java	forceSide	THIS	UnivariateRealSolverUtils	UNKNOWN_AS	0	1	NO_USE	0
2717	246	8	UnivariateRealSolverUtils.java	bracket	function	UnivariateRealFunction	PARAM_AS	1	1	NO_USE	1
2717	246	8	UnivariateRealSolverUtils.java	bracket	initial	double	PARAM_AS	1	0	NO_USE	0
2717	246	8	UnivariateRealSolverUtils.java	bracket	lowerBound	double	PARAM_AS	1	0	NO_USE	0
2717	246	8	UnivariateRealSolverUtils.java	bracket	upperBound	double	PARAM_AS	1	0	NO_USE	0
2717	246	8	UnivariateRealSolverUtils.java	bracket	maximumIterations	int	PARAM_AS	1	1	NO_USE	0
2717	246	8	UnivariateRealSolverUtils.java	bracket	THIS	UnivariateRealSolverUtils	UNKNOWN_AS	0	0	FIELD_USE	0
2718	249	8	UnivariateRealSolverUtils.java	bracket	function	UnivariateRealFunction	PARAM_AS	1	1	NO_USE	0
2718	249	8	UnivariateRealSolverUtils.java	bracket	initial	double	PARAM_AS	1	0	NO_USE	0
2718	249	8	UnivariateRealSolverUtils.java	bracket	lowerBound	double	PARAM_AS	1	0	NO_USE	0
2718	249	8	UnivariateRealSolverUtils.java	bracket	upperBound	double	PARAM_AS	1	0	NO_USE	0
2718	249	8	UnivariateRealSolverUtils.java	bracket	maximumIterations	int	PARAM_AS	1	1	OTHER_USE	1
2718	249	8	UnivariateRealSolverUtils.java	bracket	THIS	UnivariateRealSolverUtils	UNKNOWN_AS	0	0	FIELD_USE	0
2719	270	8	UnivariateRealSolverUtils.java	bracket	a	double	max()	0	0	OTHER_USE	0
2719	270	8	UnivariateRealSolverUtils.java	bracket	b	double	min()	0	0	OTHER_USE	0
2719	270	8	UnivariateRealSolverUtils.java	bracket	fa	double	value()	0	1	OTHER_USE	1
2719	270	8	UnivariateRealSolverUtils.java	bracket	fb	double	value()	0	1	OTHER_USE	1
2719	270	8	UnivariateRealSolverUtils.java	bracket	numIterations	int	0	0	0	OTHER_USE	0
2719	270	8	UnivariateRealSolverUtils.java	bracket	function	UnivariateRealFunction	PARAM_AS	1	1	NO_USE	0
2719	270	8	UnivariateRealSolverUtils.java	bracket	initial	double	PARAM_AS	1	0	OTHER_USE	0
2719	270	8	UnivariateRealSolverUtils.java	bracket	lowerBound	double	PARAM_AS	1	0	OTHER_USE	0
2719	270	8	UnivariateRealSolverUtils.java	bracket	upperBound	double	PARAM_AS	1	0	OTHER_USE	0
2719	270	8	UnivariateRealSolverUtils.java	bracket	maximumIterations	int	PARAM_AS	1	1	OTHER_USE	0
2719	270	8	UnivariateRealSolverUtils.java	bracket	THIS	UnivariateRealSolverUtils	UNKNOWN_AS	0	0	FIELD_USE	0
2720	305	8	UnivariateRealSolverUtils.java	isBracketing	function	UnivariateRealFunction	PARAM_AS	1	1	NO_USE	1
2720	305	8	UnivariateRealSolverUtils.java	isBracketing	lower	double	PARAM_AS	1	0	NO_USE	0
2720	305	8	UnivariateRealSolverUtils.java	isBracketing	upper	double	PARAM_AS	1	0	NO_USE	0
2720	305	8	UnivariateRealSolverUtils.java	isBracketing	THIS	UnivariateRealSolverUtils	UNKNOWN_AS	0	0	FIELD_USE	0
2721	336	8	UnivariateRealSolverUtils.java	verifyInterval	lower	double	PARAM_AS	1	1	OTHER_USE	1
2721	336	8	UnivariateRealSolverUtils.java	verifyInterval	upper	double	PARAM_AS	1	1	OTHER_USE	1
2721	336	8	UnivariateRealSolverUtils.java	verifyInterval	THIS	UnivariateRealSolverUtils	UNKNOWN_AS	0	0	FIELD_USE	0
2722	371	8	UnivariateRealSolverUtils.java	verifyBracketing	function	UnivariateRealFunction	PARAM_AS	1	2	NO_USE	1
2722	371	8	UnivariateRealSolverUtils.java	verifyBracketing	lower	double	PARAM_AS	1	1	NO_USE	0
2722	371	8	UnivariateRealSolverUtils.java	verifyBracketing	upper	double	PARAM_AS	1	1	NO_USE	0
2722	371	8	UnivariateRealSolverUtils.java	verifyBracketing	THIS	UnivariateRealSolverUtils	UNKNOWN_AS	0	1	FIELD_USE	0
2723	375	8	UnivariateRealSolverUtils.java	verifyBracketing	function	UnivariateRealFunction	PARAM_AS	1	2	CLALLER_USE	1
2723	375	8	UnivariateRealSolverUtils.java	verifyBracketing	lower	double	PARAM_AS	1	1	OTHER_USE	1
2723	375	8	UnivariateRealSolverUtils.java	verifyBracketing	upper	double	PARAM_AS	1	1	OTHER_USE	1
2723	375	8	UnivariateRealSolverUtils.java	verifyBracketing	THIS	UnivariateRealSolverUtils	UNKNOWN_AS	0	1	NO_USE	1
2724	76	12	BisectionSolver.java	doSolve	min	double	getMin()	0	1	NO_USE	0
2724	76	12	BisectionSolver.java	doSolve	max	double	getMax()	0	1	NO_USE	0
2724	76	12	BisectionSolver.java	doSolve	absoluteAccuracy	double	getAbsoluteAccuracy()	0	1	NO_USE	0
2724	76	12	BisectionSolver.java	doSolve	m	double	midpoint()	0	0	OTHER_USE	0
2724	76	12	BisectionSolver.java	doSolve	fm	double	computeObjectiveValue()	0	1	NO_USE	1
2724	76	12	BisectionSolver.java	doSolve	fmin	double	computeObjectiveValue()	0	1	NO_USE	1
2724	76	12	BisectionSolver.java	doSolve	THIS	BisectionSolver	UNKNOWN_AS	0	0	NO_USE	0
2725	84	12	BisectionSolver.java	doSolve	min	double	NAME	0	1	PARAM_USE	1
2725	84	12	BisectionSolver.java	doSolve	max	double	NAME	0	1	PARAM_USE	1
2725	84	12	BisectionSolver.java	doSolve	absoluteAccuracy	double	getAbsoluteAccuracy()	0	1	NO_USE	1
2725	84	12	BisectionSolver.java	doSolve	m	double	midpoint()	0	0	RET_USE	0
2725	84	12	BisectionSolver.java	doSolve	fm	double	computeObjectiveValue()	0	1	NO_USE	0
2725	84	12	BisectionSolver.java	doSolve	fmin	double	computeObjectiveValue()	0	1	NO_USE	0
2725	84	12	BisectionSolver.java	doSolve	THIS	BisectionSolver	UNKNOWN_AS	0	0	NO_USE	0
2726	98	8	LaguerreSolver.java	doSolve	min	double	getMin()	0	0	NO_USE	0
2726	98	8	LaguerreSolver.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2726	98	8	LaguerreSolver.java	doSolve	initial	double	getStartValue()	0	0	RET_USE	0
2726	98	8	LaguerreSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	1
2726	98	8	LaguerreSolver.java	doSolve	yInitial	double	computeObjectiveValue()	0	3	NO_USE	1
2726	98	8	LaguerreSolver.java	doSolve	THIS	LaguerreSolver	UNKNOWN_AS	0	0	NO_USE	0
2727	104	8	LaguerreSolver.java	doSolve	min	double	getMin()	0	0	RET_USE	0
2727	104	8	LaguerreSolver.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2727	104	8	LaguerreSolver.java	doSolve	initial	double	getStartValue()	0	0	NO_USE	0
2727	104	8	LaguerreSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	1
2727	104	8	LaguerreSolver.java	doSolve	yInitial	double	computeObjectiveValue()	0	3	NO_USE	0
2727	104	8	LaguerreSolver.java	doSolve	yMin	double	computeObjectiveValue()	0	2	NO_USE	1
2727	104	8	LaguerreSolver.java	doSolve	THIS	LaguerreSolver	UNKNOWN_AS	0	0	NO_USE	0
2728	109	8	LaguerreSolver.java	doSolve	min	double	getMin()	0	0	PARAM_USE	0
2728	109	8	LaguerreSolver.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2728	109	8	LaguerreSolver.java	doSolve	initial	double	getStartValue()	0	0	PARAM_USE	0
2728	109	8	LaguerreSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	0
2728	109	8	LaguerreSolver.java	doSolve	yInitial	double	computeObjectiveValue()	0	3	PARAM_USE	1
2728	109	8	LaguerreSolver.java	doSolve	yMin	double	computeObjectiveValue()	0	2	PARAM_USE	1
2728	109	8	LaguerreSolver.java	doSolve	THIS	LaguerreSolver	UNKNOWN_AS	0	0	CLALLER_USE	0
2729	115	8	LaguerreSolver.java	doSolve	min	double	getMin()	0	0	NO_USE	0
2729	115	8	LaguerreSolver.java	doSolve	max	double	getMax()	0	0	RET_USE	0
2729	115	8	LaguerreSolver.java	doSolve	initial	double	getStartValue()	0	0	NO_USE	0
2729	115	8	LaguerreSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	1
2729	115	8	LaguerreSolver.java	doSolve	yInitial	double	computeObjectiveValue()	0	3	NO_USE	0
2729	115	8	LaguerreSolver.java	doSolve	yMin	double	computeObjectiveValue()	0	2	NO_USE	0
2729	115	8	LaguerreSolver.java	doSolve	yMax	double	computeObjectiveValue()	0	2	NO_USE	1
2729	115	8	LaguerreSolver.java	doSolve	THIS	LaguerreSolver	UNKNOWN_AS	0	0	NO_USE	0
2730	120	8	LaguerreSolver.java	doSolve	min	double	getMin()	0	0	NO_USE	0
2730	120	8	LaguerreSolver.java	doSolve	max	double	getMax()	0	0	PARAM_USE	0
2730	120	8	LaguerreSolver.java	doSolve	initial	double	getStartValue()	0	0	PARAM_USE	0
2730	120	8	LaguerreSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	0
2730	120	8	LaguerreSolver.java	doSolve	yInitial	double	computeObjectiveValue()	0	3	PARAM_USE	1
2730	120	8	LaguerreSolver.java	doSolve	yMin	double	computeObjectiveValue()	0	2	NO_USE	0
2730	120	8	LaguerreSolver.java	doSolve	yMax	double	computeObjectiveValue()	0	2	PARAM_USE	1
2730	120	8	LaguerreSolver.java	doSolve	THIS	LaguerreSolver	UNKNOWN_AS	0	0	CLALLER_USE	0
2731	154	8	LaguerreSolver.java	laguerre	coefficients	double[]	getCoefficients()	0	0	NO_USE	0
2731	154	8	LaguerreSolver.java	laguerre	c	Complex[]	CLASS_INSTANCE_CREATION	0	0	PARAM_USE	0
2731	154	8	LaguerreSolver.java	laguerre	initial	Complex	CLASS_INSTANCE_CREATION	0	0	PARAM_USE	0
2731	154	8	LaguerreSolver.java	laguerre	z	Complex	solve()	0	1	CLALLER_USE	1
2731	154	8	LaguerreSolver.java	laguerre	lo	double	PARAM_AS	1	2	PARAM_USE	1
2731	154	8	LaguerreSolver.java	laguerre	hi	double	PARAM_AS	1	2	PARAM_USE	1
2731	154	8	LaguerreSolver.java	laguerre	fLo	double	PARAM_AS	1	0	NO_USE	0
2731	154	8	LaguerreSolver.java	laguerre	fHi	double	PARAM_AS	1	0	NO_USE	0
2731	154	8	LaguerreSolver.java	laguerre	THIS	LaguerreSolver	UNKNOWN_AS	0	2	FIELD_USE	1
2732	161	16	LaguerreSolver.java	laguerre	i	int	0	0	1	ARRIDX_USE	1
2732	161	16	LaguerreSolver.java	laguerre	r	double	NAME	0	0	NO_USE	0
2732	161	16	LaguerreSolver.java	laguerre	root	Complex[]	solveAll()	0	1	ARR_USE	1
2732	161	16	LaguerreSolver.java	laguerre	coefficients	double[]	getCoefficients()	0	0	NO_USE	0
2732	161	16	LaguerreSolver.java	laguerre	c	Complex[]	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2732	161	16	LaguerreSolver.java	laguerre	initial	Complex	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2732	161	16	LaguerreSolver.java	laguerre	z	Complex	solve()	0	1	NO_USE	0
2732	161	16	LaguerreSolver.java	laguerre	lo	double	PARAM_AS	1	2	NO_USE	1
2732	161	16	LaguerreSolver.java	laguerre	hi	double	PARAM_AS	1	2	NO_USE	1
2732	161	16	LaguerreSolver.java	laguerre	fLo	double	PARAM_AS	1	0	NO_USE	0
2732	161	16	LaguerreSolver.java	laguerre	fHi	double	PARAM_AS	1	0	NO_USE	0
2732	161	16	LaguerreSolver.java	laguerre	THIS	LaguerreSolver	UNKNOWN_AS	0	2	NO_USE	1
2733	92	8	BrentSolver.java	doSolve	min	double	getMin()	0	0	NO_USE	0
2733	92	8	BrentSolver.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2733	92	8	BrentSolver.java	doSolve	initial	double	getStartValue()	0	0	RET_USE	0
2733	92	8	BrentSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	1
2733	92	8	BrentSolver.java	doSolve	yInitial	double	computeObjectiveValue()	0	3	NO_USE	1
2733	92	8	BrentSolver.java	doSolve	THIS	BrentSolver	UNKNOWN_AS	0	0	NO_USE	0
2734	98	8	BrentSolver.java	doSolve	min	double	getMin()	0	0	RET_USE	0
2734	98	8	BrentSolver.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2734	98	8	BrentSolver.java	doSolve	initial	double	getStartValue()	0	0	NO_USE	0
2734	98	8	BrentSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	1
2734	98	8	BrentSolver.java	doSolve	yInitial	double	computeObjectiveValue()	0	3	NO_USE	0
2734	98	8	BrentSolver.java	doSolve	yMin	double	computeObjectiveValue()	0	2	NO_USE	1
2734	98	8	BrentSolver.java	doSolve	THIS	BrentSolver	UNKNOWN_AS	0	0	NO_USE	0
2735	103	8	BrentSolver.java	doSolve	min	double	getMin()	0	0	PARAM_USE	0
2735	103	8	BrentSolver.java	doSolve	max	double	getMax()	0	0	NO_USE	0
2735	103	8	BrentSolver.java	doSolve	initial	double	getStartValue()	0	0	PARAM_USE	0
2735	103	8	BrentSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	0
2735	103	8	BrentSolver.java	doSolve	yInitial	double	computeObjectiveValue()	0	3	PARAM_USE	1
2735	103	8	BrentSolver.java	doSolve	yMin	double	computeObjectiveValue()	0	2	PARAM_USE	1
2735	103	8	BrentSolver.java	doSolve	THIS	BrentSolver	UNKNOWN_AS	0	0	CLALLER_USE	0
2736	109	8	BrentSolver.java	doSolve	min	double	getMin()	0	0	NO_USE	0
2736	109	8	BrentSolver.java	doSolve	max	double	getMax()	0	0	RET_USE	0
2736	109	8	BrentSolver.java	doSolve	initial	double	getStartValue()	0	0	NO_USE	0
2736	109	8	BrentSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	1
2736	109	8	BrentSolver.java	doSolve	yInitial	double	computeObjectiveValue()	0	3	NO_USE	0
2736	109	8	BrentSolver.java	doSolve	yMin	double	computeObjectiveValue()	0	2	NO_USE	0
2736	109	8	BrentSolver.java	doSolve	yMax	double	computeObjectiveValue()	0	2	NO_USE	1
2736	109	8	BrentSolver.java	doSolve	THIS	BrentSolver	UNKNOWN_AS	0	0	NO_USE	0
2737	114	8	BrentSolver.java	doSolve	min	double	getMin()	0	0	NO_USE	0
2737	114	8	BrentSolver.java	doSolve	max	double	getMax()	0	0	PARAM_USE	0
2737	114	8	BrentSolver.java	doSolve	initial	double	getStartValue()	0	0	PARAM_USE	0
2737	114	8	BrentSolver.java	doSolve	functionValueAccuracy	double	getFunctionValueAccuracy()	0	3	NO_USE	0
2737	114	8	BrentSolver.java	doSolve	yInitial	double	computeObjectiveValue()	0	3	PARAM_USE	1
2737	114	8	BrentSolver.java	doSolve	yMin	double	computeObjectiveValue()	0	2	NO_USE	0
2737	114	8	BrentSolver.java	doSolve	yMax	double	computeObjectiveValue()	0	2	PARAM_USE	1
2737	114	8	BrentSolver.java	doSolve	THIS	BrentSolver	UNKNOWN_AS	0	0	CLALLER_USE	0
2738	152	12	BrentSolver.java	brent	a	double	NAME	0	1	OTHER_USE	0
2738	152	12	BrentSolver.java	brent	fa	double	NAME	0	1	OTHER_USE	0
2738	152	12	BrentSolver.java	brent	b	double	NAME	0	0	OTHER_USE	0
2738	152	12	BrentSolver.java	brent	fb	double	NAME	0	5	OTHER_USE	1
2738	152	12	BrentSolver.java	brent	c	double	NAME	0	1	OTHER_USE	0
2738	152	12	BrentSolver.java	brent	fc	double	NAME	0	3	OTHER_USE	1
2738	152	12	BrentSolver.java	brent	d	double	-	0	1	NO_USE	0
2738	152	12	BrentSolver.java	brent	e	double	NAME	0	1	NO_USE	0
2738	152	12	BrentSolver.java	brent	t	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2738	152	12	BrentSolver.java	brent	eps	double	getRelativeAccuracy()	0	0	NO_USE	0
2738	152	12	BrentSolver.java	brent	lo	double	PARAM_AS	1	0	NO_USE	0
2738	152	12	BrentSolver.java	brent	hi	double	PARAM_AS	1	0	NO_USE	0
2738	152	12	BrentSolver.java	brent	fLo	double	PARAM_AS	1	0	NO_USE	0
2738	152	12	BrentSolver.java	brent	fHi	double	PARAM_AS	1	0	NO_USE	0
2738	152	12	BrentSolver.java	brent	THIS	BrentSolver	UNKNOWN_AS	0	0	NO_USE	0
2739	164	12	BrentSolver.java	brent	tol	double	+	0	4	NO_USE	1
2739	164	12	BrentSolver.java	brent	m	double	*	0	3	NO_USE	1
2739	164	12	BrentSolver.java	brent	a	double	NAME	0	1	NO_USE	0
2739	164	12	BrentSolver.java	brent	fa	double	NAME	0	1	NO_USE	0
2739	164	12	BrentSolver.java	brent	b	double	NAME	0	0	RET_USE	0
2739	164	12	BrentSolver.java	brent	fb	double	NAME	0	5	NO_USE	1
2739	164	12	BrentSolver.java	brent	c	double	NAME	0	1	NO_USE	0
2739	164	12	BrentSolver.java	brent	fc	double	NAME	0	3	NO_USE	0
2739	164	12	BrentSolver.java	brent	d	double	-	0	1	NO_USE	0
2739	164	12	BrentSolver.java	brent	e	double	NAME	0	1	NO_USE	0
2739	164	12	BrentSolver.java	brent	t	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2739	164	12	BrentSolver.java	brent	eps	double	getRelativeAccuracy()	0	0	NO_USE	0
2739	164	12	BrentSolver.java	brent	lo	double	PARAM_AS	1	0	NO_USE	0
2739	164	12	BrentSolver.java	brent	hi	double	PARAM_AS	1	0	NO_USE	0
2739	164	12	BrentSolver.java	brent	fLo	double	PARAM_AS	1	0	NO_USE	0
2739	164	12	BrentSolver.java	brent	fHi	double	PARAM_AS	1	0	NO_USE	0
2739	164	12	BrentSolver.java	brent	THIS	BrentSolver	UNKNOWN_AS	0	0	NO_USE	0
2740	168	12	BrentSolver.java	brent	tol	double	+	0	4	*	1
2740	168	12	BrentSolver.java	brent	m	double	*	0	3	OTHER_USE	0
2740	168	12	BrentSolver.java	brent	a	double	NAME	0	1	==	0
2740	168	12	BrentSolver.java	brent	fa	double	NAME	0	1	/	1
2740	168	12	BrentSolver.java	brent	b	double	NAME	0	0	-	0
2740	168	12	BrentSolver.java	brent	fb	double	NAME	0	5	/	1
2740	168	12	BrentSolver.java	brent	c	double	NAME	0	1	==	0
2740	168	12	BrentSolver.java	brent	fc	double	NAME	0	3	/	0
2740	168	12	BrentSolver.java	brent	d	double	-	0	1	OTHER_USE	0
2740	168	12	BrentSolver.java	brent	e	double	NAME	0	1	OTHER_USE	1
2740	168	12	BrentSolver.java	brent	t	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2740	168	12	BrentSolver.java	brent	eps	double	getRelativeAccuracy()	0	0	NO_USE	0
2740	168	12	BrentSolver.java	brent	lo	double	PARAM_AS	1	0	NO_USE	0
2740	168	12	BrentSolver.java	brent	hi	double	PARAM_AS	1	0	NO_USE	0
2740	168	12	BrentSolver.java	brent	fLo	double	PARAM_AS	1	0	NO_USE	0
2740	168	12	BrentSolver.java	brent	fHi	double	PARAM_AS	1	0	NO_USE	0
2740	168	12	BrentSolver.java	brent	THIS	BrentSolver	UNKNOWN_AS	0	0	NO_USE	0
2741	180	16	BrentSolver.java	brent	s	double	/	0	1	OTHER_USE	0
2741	180	16	BrentSolver.java	brent	p	double	UNKNOWN_AS	0	3	NO_USE	0
2741	180	16	BrentSolver.java	brent	q	double	UNKNOWN_AS	0	3	OTHER_USE	0
2741	180	16	BrentSolver.java	brent	tol	double	+	0	4	NO_USE	0
2741	180	16	BrentSolver.java	brent	m	double	*	0	3	*	0
2741	180	16	BrentSolver.java	brent	a	double	NAME	0	1	-	1
2741	180	16	BrentSolver.java	brent	fa	double	NAME	0	1	/	0
2741	180	16	BrentSolver.java	brent	b	double	NAME	0	0	-	0
2741	180	16	BrentSolver.java	brent	fb	double	NAME	0	5	/	0
2741	180	16	BrentSolver.java	brent	c	double	NAME	0	1	NO_USE	1
2741	180	16	BrentSolver.java	brent	fc	double	NAME	0	3	/	0
2741	180	16	BrentSolver.java	brent	d	double	NAME	0	1	NO_USE	0
2741	180	16	BrentSolver.java	brent	e	double	NAME	0	1	NO_USE	0
2741	180	16	BrentSolver.java	brent	t	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2741	180	16	BrentSolver.java	brent	eps	double	getRelativeAccuracy()	0	0	NO_USE	0
2741	180	16	BrentSolver.java	brent	lo	double	PARAM_AS	1	0	NO_USE	0
2741	180	16	BrentSolver.java	brent	hi	double	PARAM_AS	1	0	NO_USE	0
2741	180	16	BrentSolver.java	brent	fLo	double	PARAM_AS	1	0	NO_USE	0
2741	180	16	BrentSolver.java	brent	fHi	double	PARAM_AS	1	0	NO_USE	0
2741	180	16	BrentSolver.java	brent	THIS	BrentSolver	UNKNOWN_AS	0	0	NO_USE	0
2742	191	16	BrentSolver.java	brent	s	double	/	0	1	NO_USE	0
2742	191	16	BrentSolver.java	brent	p	double	*	0	3	-x	1
2742	191	16	BrentSolver.java	brent	q	double	*	0	3	-x	0
2742	191	16	BrentSolver.java	brent	tol	double	+	0	4	NO_USE	0
2742	191	16	BrentSolver.java	brent	m	double	*	0	3	NO_USE	0
2742	191	16	BrentSolver.java	brent	a	double	NAME	0	1	NO_USE	0
2742	191	16	BrentSolver.java	brent	fa	double	NAME	0	1	NO_USE	0
2742	191	16	BrentSolver.java	brent	b	double	NAME	0	0	NO_USE	0
2742	191	16	BrentSolver.java	brent	fb	double	NAME	0	5	NO_USE	0
2742	191	16	BrentSolver.java	brent	c	double	NAME	0	1	NO_USE	0
2742	191	16	BrentSolver.java	brent	fc	double	NAME	0	3	NO_USE	0
2742	191	16	BrentSolver.java	brent	d	double	NAME	0	1	NO_USE	0
2742	191	16	BrentSolver.java	brent	e	double	NAME	0	1	NO_USE	0
2742	191	16	BrentSolver.java	brent	t	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2742	191	16	BrentSolver.java	brent	eps	double	getRelativeAccuracy()	0	0	NO_USE	0
2742	191	16	BrentSolver.java	brent	lo	double	PARAM_AS	1	0	NO_USE	0
2742	191	16	BrentSolver.java	brent	hi	double	PARAM_AS	1	0	NO_USE	0
2742	191	16	BrentSolver.java	brent	fLo	double	PARAM_AS	1	0	NO_USE	0
2742	191	16	BrentSolver.java	brent	fHi	double	PARAM_AS	1	0	NO_USE	0
2742	191	16	BrentSolver.java	brent	THIS	BrentSolver	UNKNOWN_AS	0	0	NO_USE	0
2743	198	16	BrentSolver.java	brent	s	double	NAME	0	1	NO_USE	1
2743	198	16	BrentSolver.java	brent	p	double	PREFIX_EXPR	0	3	/	1
2743	198	16	BrentSolver.java	brent	q	double	PREFIX_EXPR	0	3	/	1
2743	198	16	BrentSolver.java	brent	tol	double	+	0	4	NO_USE	1
2743	198	16	BrentSolver.java	brent	m	double	*	0	3	OTHER_USE	1
2743	198	16	BrentSolver.java	brent	a	double	NAME	0	1	NO_USE	0
2743	198	16	BrentSolver.java	brent	fa	double	NAME	0	1	NO_USE	0
2743	198	16	BrentSolver.java	brent	b	double	NAME	0	0	NO_USE	0
2743	198	16	BrentSolver.java	brent	fb	double	NAME	0	5	NO_USE	0
2743	198	16	BrentSolver.java	brent	c	double	NAME	0	1	NO_USE	0
2743	198	16	BrentSolver.java	brent	fc	double	NAME	0	3	NO_USE	0
2743	198	16	BrentSolver.java	brent	d	double	NAME	0	1	OTHER_USE	0
2743	198	16	BrentSolver.java	brent	e	double	NAME	0	1	NO_USE	0
2743	198	16	BrentSolver.java	brent	t	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2743	198	16	BrentSolver.java	brent	eps	double	getRelativeAccuracy()	0	0	NO_USE	0
2743	198	16	BrentSolver.java	brent	lo	double	PARAM_AS	1	0	NO_USE	0
2743	198	16	BrentSolver.java	brent	hi	double	PARAM_AS	1	0	NO_USE	0
2743	198	16	BrentSolver.java	brent	fLo	double	PARAM_AS	1	0	NO_USE	0
2743	198	16	BrentSolver.java	brent	fHi	double	PARAM_AS	1	0	NO_USE	0
2743	198	16	BrentSolver.java	brent	THIS	BrentSolver	UNKNOWN_AS	0	0	NO_USE	0
2744	212	12	BrentSolver.java	brent	tol	double	+	0	4	OTHER_USE	1
2744	212	12	BrentSolver.java	brent	m	double	*	0	3	>	0
2744	212	12	BrentSolver.java	brent	a	double	NAME	0	1	NO_USE	0
2744	212	12	BrentSolver.java	brent	fa	double	NAME	0	1	NO_USE	0
2744	212	12	BrentSolver.java	brent	b	double	NAME	0	0	NO_USE	0
2744	212	12	BrentSolver.java	brent	fb	double	NAME	0	5	NO_USE	0
2744	212	12	BrentSolver.java	brent	c	double	NAME	0	1	NO_USE	0
2744	212	12	BrentSolver.java	brent	fc	double	NAME	0	3	NO_USE	0
2744	212	12	BrentSolver.java	brent	d	double	/	0	1	OTHER_USE	1
2744	212	12	BrentSolver.java	brent	e	double	NAME	0	1	NO_USE	0
2744	212	12	BrentSolver.java	brent	t	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2744	212	12	BrentSolver.java	brent	eps	double	getRelativeAccuracy()	0	0	NO_USE	0
2744	212	12	BrentSolver.java	brent	lo	double	PARAM_AS	1	0	NO_USE	0
2744	212	12	BrentSolver.java	brent	hi	double	PARAM_AS	1	0	NO_USE	0
2744	212	12	BrentSolver.java	brent	fLo	double	PARAM_AS	1	0	NO_USE	0
2744	212	12	BrentSolver.java	brent	fHi	double	PARAM_AS	1	0	NO_USE	0
2744	212	12	BrentSolver.java	brent	THIS	BrentSolver	UNKNOWN_AS	0	0	NO_USE	0
2745	214	19	BrentSolver.java	brent	tol	double	+	0	4	OTHER_USE	0
2745	214	19	BrentSolver.java	brent	m	double	*	0	3	NO_USE	1
2745	214	19	BrentSolver.java	brent	a	double	NAME	0	1	NO_USE	0
2745	214	19	BrentSolver.java	brent	fa	double	NAME	0	1	NO_USE	0
2745	214	19	BrentSolver.java	brent	b	double	NAME	0	0	NO_USE	0
2745	214	19	BrentSolver.java	brent	fb	double	NAME	0	5	NO_USE	0
2745	214	19	BrentSolver.java	brent	c	double	NAME	0	1	NO_USE	0
2745	214	19	BrentSolver.java	brent	fc	double	NAME	0	3	NO_USE	0
2745	214	19	BrentSolver.java	brent	d	double	/	0	1	NO_USE	0
2745	214	19	BrentSolver.java	brent	e	double	NAME	0	1	NO_USE	0
2745	214	19	BrentSolver.java	brent	t	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2745	214	19	BrentSolver.java	brent	eps	double	getRelativeAccuracy()	0	0	NO_USE	0
2745	214	19	BrentSolver.java	brent	lo	double	PARAM_AS	1	0	NO_USE	0
2745	214	19	BrentSolver.java	brent	hi	double	PARAM_AS	1	0	NO_USE	0
2745	214	19	BrentSolver.java	brent	fLo	double	PARAM_AS	1	0	NO_USE	0
2745	214	19	BrentSolver.java	brent	fHi	double	PARAM_AS	1	0	NO_USE	0
2745	214	19	BrentSolver.java	brent	THIS	BrentSolver	UNKNOWN_AS	0	0	NO_USE	0
2746	220	12	BrentSolver.java	brent	tol	double	+	0	4	NO_USE	0
2746	220	12	BrentSolver.java	brent	m	double	*	0	3	NO_USE	0
2746	220	12	BrentSolver.java	brent	a	double	NAME	0	1	OTHER_USE	0
2746	220	12	BrentSolver.java	brent	fa	double	NAME	0	1	OTHER_USE	0
2746	220	12	BrentSolver.java	brent	b	double	NAME	0	0	-	0
2746	220	12	BrentSolver.java	brent	fb	double	computeObjectiveValue()	0	5	NO_USE	1
2746	220	12	BrentSolver.java	brent	c	double	NAME	0	1	NO_USE	0
2746	220	12	BrentSolver.java	brent	fc	double	NAME	0	3	NO_USE	1
2746	220	12	BrentSolver.java	brent	d	double	/	0	1	OTHER_USE	0
2746	220	12	BrentSolver.java	brent	e	double	NAME	0	1	NO_USE	0
2746	220	12	BrentSolver.java	brent	t	double	getAbsoluteAccuracy()	0	0	NO_USE	0
2746	220	12	BrentSolver.java	brent	eps	double	getRelativeAccuracy()	0	0	NO_USE	0
2746	220	12	BrentSolver.java	brent	lo	double	PARAM_AS	1	0	NO_USE	0
2746	220	12	BrentSolver.java	brent	hi	double	PARAM_AS	1	0	NO_USE	0
2746	220	12	BrentSolver.java	brent	fLo	double	PARAM_AS	1	0	NO_USE	0
2746	220	12	BrentSolver.java	brent	fHi	double	PARAM_AS	1	0	NO_USE	0
2746	220	12	BrentSolver.java	brent	THIS	BrentSolver	UNKNOWN_AS	0	0	NO_USE	0
2747	101	8	PolynomialSplineFunction.java	PolynomialSplineFunction	knots	double	PARAM_AS	1	3	NO_USE	1
2747	101	8	PolynomialSplineFunction.java	PolynomialSplineFunction	polynomials	PolynomialFunction	PARAM_AS	1	2	NO_USE	1
2747	101	8	PolynomialSplineFunction.java	PolynomialSplineFunction	THIS	PolynomialSplineFunction	UNKNOWN_AS	0	3	NO_USE	0
2748	105	8	PolynomialSplineFunction.java	PolynomialSplineFunction	knots	double	PARAM_AS	1	3	OTHER_USE	1
2748	105	8	PolynomialSplineFunction.java	PolynomialSplineFunction	polynomials	PolynomialFunction	PARAM_AS	1	2	NO_USE	0
2748	105	8	PolynomialSplineFunction.java	PolynomialSplineFunction	THIS	PolynomialSplineFunction	UNKNOWN_AS	0	3	FIELD_USE	1
2749	109	8	PolynomialSplineFunction.java	PolynomialSplineFunction	knots	double	PARAM_AS	1	3	OTHER_USE	1
2749	109	8	PolynomialSplineFunction.java	PolynomialSplineFunction	polynomials	PolynomialFunction	PARAM_AS	1	2	OTHER_USE	1
2749	109	8	PolynomialSplineFunction.java	PolynomialSplineFunction	THIS	PolynomialSplineFunction	UNKNOWN_AS	0	3	FIELD_USE	1
2750	133	8	PolynomialSplineFunction.java	value	v	double	PARAM_AS	1	2	OTHER_USE	1
2750	133	8	PolynomialSplineFunction.java	value	THIS	PolynomialSplineFunction	UNKNOWN_AS	0	5	FIELD_USE	1
2751	137	8	PolynomialSplineFunction.java	value	i	int	binarySearch()	0	2	-x	1
2751	137	8	PolynomialSplineFunction.java	value	v	double	PARAM_AS	1	2	NO_USE	0
2751	137	8	PolynomialSplineFunction.java	value	THIS	PolynomialSplineFunction	UNKNOWN_AS	0	5	NO_USE	0
2752	143	8	PolynomialSplineFunction.java	value	i	int	-	0	2	x--	1
2752	143	8	PolynomialSplineFunction.java	value	v	double	PARAM_AS	1	2	NO_USE	0
2752	143	8	PolynomialSplineFunction.java	value	THIS	PolynomialSplineFunction	UNKNOWN_AS	0	5	NO_USE	1
2753	78	8	PolynomialFunctionLagrangeForm.java	PolynomialFunctionLagrangeForm	x	double	PARAM_AS	1	1	NO_USE	1
2753	78	8	PolynomialFunctionLagrangeForm.java	PolynomialFunctionLagrangeForm	y	double	PARAM_AS	1	1	NO_USE	1
2753	78	8	PolynomialFunctionLagrangeForm.java	PolynomialFunctionLagrangeForm	THIS	PolynomialFunctionLagrangeForm	LITERAL	0	1	FIELD_USE	1
2754	147	8	PolynomialFunctionLagrangeForm.java	getCoefficients	THIS	PolynomialFunctionLagrangeForm	UNKNOWN_AS	0	1	CLALLER_USE	1
2755	172	8	PolynomialFunctionLagrangeForm.java	evaluate	x	double	PARAM_AS	1	1	PARAM_USE	1
2755	172	8	PolynomialFunctionLagrangeForm.java	evaluate	y	double	PARAM_AS	1	1	PARAM_USE	1
2755	172	8	PolynomialFunctionLagrangeForm.java	evaluate	z	double	PARAM_AS	1	0	PARAM_USE	0
2755	172	8	PolynomialFunctionLagrangeForm.java	evaluate	THIS	PolynomialFunctionLagrangeForm	UNKNOWN_AS	0	1	CLALLER_USE	1
2756	216	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	dist	double	abs()	0	1	OTHER_USE	1
2756	216	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	i	int	ARRAY_ACCESS	0	0	OTHER_USE	0
2756	216	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	nearest	int	0	0	1	NO_USE	0
2756	216	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	n	int	NAME	0	1	NO_USE	0
2756	216	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	c	double[]	ARRAY_ACCESS	0	0	NO_USE	0
2756	216	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	d	double[]	ARRAY_ACCESS	0	0	NO_USE	0
2756	216	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	min_dist	double	NAME	0	1	NO_USE	1
2756	216	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	x	double	PARAM_AS	1	0	NO_USE	0
2756	216	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	y	double	PARAM_AS	1	0	NO_USE	0
2756	216	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	z	double	PARAM_AS	1	0	NO_USE	0
2756	216	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	THIS	PolynomialFunctionLagrangeForm	UNKNOWN_AS	0	0	NO_USE	0
2757	236	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	i	int	1	0	1	NO_USE	1
2757	236	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	nearest	int	NAME	0	1	ARRIDX_USE	1
2757	236	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	n	int	NAME	0	1	NO_USE	1
2757	236	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	c	double[]	*	0	0	ARR_USE	0
2757	236	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	d	double[]	*	0	0	ARR_USE	0
2757	236	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	min_dist	double	NAME	0	1	NO_USE	0
2757	236	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	value	double	ARRAY_ACCESS	0	0	NO_USE	0
2757	236	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	x	double	PARAM_AS	1	0	NO_USE	0
2757	236	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	y	double	PARAM_AS	1	0	NO_USE	0
2757	236	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	z	double	PARAM_AS	1	0	NO_USE	0
2757	236	12	PolynomialFunctionLagrangeForm.java	evaluateInternal	THIS	PolynomialFunctionLagrangeForm	UNKNOWN_AS	0	0	NO_USE	0
2758	276	16	PolynomialFunctionLagrangeForm.java	computeCoefficients	j	int	0	0	1	ARRIDX_USE	1
2758	276	16	PolynomialFunctionLagrangeForm.java	computeCoefficients	d	double	1	0	0	NO_USE	0
2758	276	16	PolynomialFunctionLagrangeForm.java	computeCoefficients	i	int	0	0	1	ARRIDX_USE	1
2758	276	16	PolynomialFunctionLagrangeForm.java	computeCoefficients	n	int	+	0	0	NO_USE	0
2758	276	16	PolynomialFunctionLagrangeForm.java	computeCoefficients	c	double[]	1	0	0	NO_USE	0
2758	276	16	PolynomialFunctionLagrangeForm.java	computeCoefficients	tc	double[]	ARRAY_CREATION	0	0	NO_USE	0
2758	276	16	PolynomialFunctionLagrangeForm.java	computeCoefficients	THIS	PolynomialFunctionLagrangeForm	0.0	0	0	FIELD_USE	0
2759	314	8	PolynomialFunctionLagrangeForm.java	verifyInterpolationArray	x	double	PARAM_AS	1	2	OTHER_USE	1
2759	314	8	PolynomialFunctionLagrangeForm.java	verifyInterpolationArray	y	double	PARAM_AS	1	1	OTHER_USE	1
2759	314	8	PolynomialFunctionLagrangeForm.java	verifyInterpolationArray	abort	boolean	PARAM_AS	1	0	NO_USE	0
2759	314	8	PolynomialFunctionLagrangeForm.java	verifyInterpolationArray	THIS	PolynomialFunctionLagrangeForm	UNKNOWN_AS	0	3	FIELD_USE	1
2760	317	8	PolynomialFunctionLagrangeForm.java	verifyInterpolationArray	x	double	PARAM_AS	1	2	OTHER_USE	1
2760	317	8	PolynomialFunctionLagrangeForm.java	verifyInterpolationArray	y	double	PARAM_AS	1	1	NO_USE	0
2760	317	8	PolynomialFunctionLagrangeForm.java	verifyInterpolationArray	abort	boolean	PARAM_AS	1	0	NO_USE	0
2760	317	8	PolynomialFunctionLagrangeForm.java	verifyInterpolationArray	THIS	PolynomialFunctionLagrangeForm	UNKNOWN_AS	0	3	FIELD_USE	1
2761	70	8	PolynomialFunction.java	PolynomialFunction	n	int	NAME	0	1	NO_USE	1
2761	70	8	PolynomialFunction.java	PolynomialFunction	c	double	PARAM_AS	1	0	NO_USE	0
2761	70	8	PolynomialFunction.java	PolynomialFunction	THIS	PolynomialFunction	UNKNOWN_AS	0	0	FIELD_USE	0
2762	130	8	PolynomialFunction.java	evaluate	n	int	NAME	0	1	NO_USE	1
2762	130	8	PolynomialFunction.java	evaluate	coefficients	double[]	PARAM_AS	1	0	NO_USE	0
2762	130	8	PolynomialFunction.java	evaluate	argument	double	PARAM_AS	1	0	NO_USE	0
2762	130	8	PolynomialFunction.java	evaluate	THIS	PolynomialFunction	UNKNOWN_AS	0	0	FIELD_USE	0
2763	181	8	PolynomialFunction.java	subtract	lowLength	int	min()	0	0	OTHER_USE	0
2763	181	8	PolynomialFunction.java	subtract	highLength	int	max()	0	0	<	0
2763	181	8	PolynomialFunction.java	subtract	newCoefficients	double[]	-	0	0	ARR_USE	0
2763	181	8	PolynomialFunction.java	subtract	p	PolynomialFunction	PARAM_AS	1	1	OTHER_USE	1
2763	181	8	PolynomialFunction.java	subtract	THIS	PolynomialFunction	UNKNOWN_AS	0	4	FIELD_USE	1
2764	239	8	PolynomialFunction.java	differentiate	n	int	NAME	0	2	NO_USE	1
2764	239	8	PolynomialFunction.java	differentiate	coefficients	double[]	PARAM_AS	1	0	NO_USE	0
2764	239	8	PolynomialFunction.java	differentiate	THIS	PolynomialFunction	UNKNOWN_AS	0	0	FIELD_USE	0
2765	242	8	PolynomialFunction.java	differentiate	n	int	NAME	0	2	NO_USE	1
2765	242	8	PolynomialFunction.java	differentiate	coefficients	double[]	PARAM_AS	1	0	NO_USE	0
2765	242	8	PolynomialFunction.java	differentiate	THIS	PolynomialFunction	UNKNOWN_AS	0	0	NO_USE	0
2766	288	8	PolynomialFunction.java	toString	s	StringBuilder	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	0
2766	288	8	PolynomialFunction.java	toString	THIS	PolynomialFunction	UNKNOWN_AS	0	6	FIELD_USE	1
2767	289	12	PolynomialFunction.java	toString	s	StringBuilder	CLASS_INSTANCE_CREATION	0	1	NO_USE	0
2767	289	12	PolynomialFunction.java	toString	THIS	PolynomialFunction	UNKNOWN_AS	0	6	NO_USE	1
2768	297	12	PolynomialFunction.java	toString	i	int	1	0	4	ARRIDX_USE	1
2768	297	12	PolynomialFunction.java	toString	s	StringBuilder	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	0
2768	297	12	PolynomialFunction.java	toString	THIS	PolynomialFunction	UNKNOWN_AS	0	6	FIELD_USE	1
2769	298	16	PolynomialFunction.java	toString	i	int	1	0	4	ARRIDX_USE	0
2769	298	16	PolynomialFunction.java	toString	s	StringBuilder	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	1
2769	298	16	PolynomialFunction.java	toString	THIS	PolynomialFunction	UNKNOWN_AS	0	6	FIELD_USE	0
2770	299	20	PolynomialFunction.java	toString	i	int	1	0	4	NO_USE	1
2770	299	20	PolynomialFunction.java	toString	s	StringBuilder	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	0
2770	299	20	PolynomialFunction.java	toString	THIS	PolynomialFunction	UNKNOWN_AS	0	6	NO_USE	1
2771	305	20	PolynomialFunction.java	toString	i	int	1	0	4	NO_USE	1
2771	305	20	PolynomialFunction.java	toString	s	StringBuilder	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	0
2771	305	20	PolynomialFunction.java	toString	THIS	PolynomialFunction	UNKNOWN_AS	0	6	NO_USE	1
2772	311	16	PolynomialFunction.java	toString	absAi	double	abs()	0	1	PARAM_USE	1
2772	311	16	PolynomialFunction.java	toString	i	int	1	0	4	NO_USE	0
2772	311	16	PolynomialFunction.java	toString	s	StringBuilder	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	0
2772	311	16	PolynomialFunction.java	toString	THIS	PolynomialFunction	UNKNOWN_AS	0	6	CLALLER_USE	0
2773	317	16	PolynomialFunction.java	toString	absAi	double	abs()	0	1	NO_USE	0
2773	317	16	PolynomialFunction.java	toString	i	int	1	0	4	PARAM_USE	1
2773	317	16	PolynomialFunction.java	toString	s	StringBuilder	CLASS_INSTANCE_CREATION	0	1	CLALLER_USE	0
2773	317	16	PolynomialFunction.java	toString	THIS	PolynomialFunction	UNKNOWN_AS	0	6	NO_USE	0
2774	335	8	PolynomialFunction.java	toString	c	String	toString()	0	1	CLALLER_USE	1
2774	335	8	PolynomialFunction.java	toString	coeff	double	PARAM_AS	1	0	NO_USE	0
2774	335	8	PolynomialFunction.java	toString	THIS	PolynomialFunction	UNKNOWN_AS	0	0	NO_USE	0
2775	354	8	PolynomialFunction.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	1
2775	354	8	PolynomialFunction.java	equals	THIS	PolynomialFunction	UNKNOWN_AS	0	3	NO_USE	1
2776	357	8	PolynomialFunction.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	1
2776	357	8	PolynomialFunction.java	equals	THIS	PolynomialFunction	UNKNOWN_AS	0	3	NO_USE	0
2777	361	8	PolynomialFunction.java	equals	other	PolynomialFunction	CAST	0	1	NO_USE	1
2777	361	8	PolynomialFunction.java	equals	obj	Object	PARAM_AS	1	2	NO_USE	0
2777	361	8	PolynomialFunction.java	equals	THIS	PolynomialFunction	UNKNOWN_AS	0	3	NO_USE	1
2778	199	12	PolynomialsUtils.java	buildPolynomial	maxDegree	int	-	0	1	PARAM_USE	1
2778	199	12	PolynomialsUtils.java	buildPolynomial	degree	int	PARAM_AS	1	1	PARAM_USE	1
2778	199	12	PolynomialsUtils.java	buildPolynomial	coefficients	ArrayList<BigFraction>	PARAM_AS	1	0	PARAM_USE	0
2778	199	12	PolynomialsUtils.java	buildPolynomial	generator	RecurrenceCoefficientsGenerator	PARAM_AS	1	0	PARAM_USE	0
2778	199	12	PolynomialsUtils.java	buildPolynomial	THIS	PolynomialsUtils	UNKNOWN_AS	0	0	CLALLER_USE	0
2779	140	8	PolynomialFunctionNewtonForm.java	getCoefficients	THIS	PolynomialFunctionNewtonForm	UNKNOWN_AS	0	1	CLALLER_USE	1
2780	215	8	PolynomialFunctionNewtonForm.java	verifyInputArray	a	double	PARAM_AS	1	2	NO_USE	1
2780	215	8	PolynomialFunctionNewtonForm.java	verifyInputArray	c	double	PARAM_AS	1	2	NO_USE	1
2780	215	8	PolynomialFunctionNewtonForm.java	verifyInputArray	THIS	PolynomialFunctionNewtonForm	UNKNOWN_AS	0	4	FIELD_USE	1
2781	219	8	PolynomialFunctionNewtonForm.java	verifyInputArray	a	double	PARAM_AS	1	2	OTHER_USE	1
2781	219	8	PolynomialFunctionNewtonForm.java	verifyInputArray	c	double	PARAM_AS	1	2	OTHER_USE	1
2781	219	8	PolynomialFunctionNewtonForm.java	verifyInputArray	THIS	PolynomialFunctionNewtonForm	UNKNOWN_AS	0	4	FIELD_USE	1
2782	56	8	SimpsonIntegrator.java	integrate	qtrap	TrapezoidIntegrator	CLASS_INSTANCE_CREATION	0	0	CLALLER_USE	0
2782	56	8	SimpsonIntegrator.java	integrate	f	UnivariateRealFunction	PARAM_AS	1	0	PARAM_USE	0
2782	56	8	SimpsonIntegrator.java	integrate	min	double	PARAM_AS	1	0	PARAM_USE	0
2782	56	8	SimpsonIntegrator.java	integrate	max	double	PARAM_AS	1	0	PARAM_USE	0
2782	56	8	SimpsonIntegrator.java	integrate	THIS	SimpsonIntegrator	UNKNOWN_AS	0	3	CLALLER_USE	1
2783	67	12	SimpsonIntegrator.java	integrate	t	double	stage()	0	0	NO_USE	0
2783	67	12	SimpsonIntegrator.java	integrate	s	double	/	0	0	-	0
2783	67	12	SimpsonIntegrator.java	integrate	i	int	1	0	1	PARAM_USE	1
2783	67	12	SimpsonIntegrator.java	integrate	qtrap	TrapezoidIntegrator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2783	67	12	SimpsonIntegrator.java	integrate	olds	double	0	0	0	-	0
2783	67	12	SimpsonIntegrator.java	integrate	oldt	double	stage()	0	0	NO_USE	0
2783	67	12	SimpsonIntegrator.java	integrate	f	UnivariateRealFunction	PARAM_AS	1	0	NO_USE	0
2783	67	12	SimpsonIntegrator.java	integrate	min	double	PARAM_AS	1	0	NO_USE	0
2783	67	12	SimpsonIntegrator.java	integrate	max	double	PARAM_AS	1	0	NO_USE	0
2783	67	12	SimpsonIntegrator.java	integrate	THIS	SimpsonIntegrator	UNKNOWN_AS	0	3	FIELD_USE	1
2784	71	16	SimpsonIntegrator.java	integrate	delta	double	abs()	0	2	NO_USE	1
2784	71	16	SimpsonIntegrator.java	integrate	rLimit	double	*	0	1	NO_USE	1
2784	71	16	SimpsonIntegrator.java	integrate	t	double	stage()	0	0	NO_USE	0
2784	71	16	SimpsonIntegrator.java	integrate	s	double	/	0	0	PARAM_USE	0
2784	71	16	SimpsonIntegrator.java	integrate	i	int	1	0	1	PARAM_USE	0
2784	71	16	SimpsonIntegrator.java	integrate	qtrap	TrapezoidIntegrator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2784	71	16	SimpsonIntegrator.java	integrate	olds	double	0	0	0	NO_USE	0
2784	71	16	SimpsonIntegrator.java	integrate	oldt	double	stage()	0	0	NO_USE	0
2784	71	16	SimpsonIntegrator.java	integrate	f	UnivariateRealFunction	PARAM_AS	1	0	NO_USE	0
2784	71	16	SimpsonIntegrator.java	integrate	min	double	PARAM_AS	1	0	NO_USE	0
2784	71	16	SimpsonIntegrator.java	integrate	max	double	PARAM_AS	1	0	NO_USE	0
2784	71	16	SimpsonIntegrator.java	integrate	THIS	SimpsonIntegrator	UNKNOWN_AS	0	3	CLALLER_USE	1
2785	87	8	SimpsonIntegrator.java	verifyIterationCount	THIS	SimpsonIntegrator	UNKNOWN_AS	0	1	FIELD_USE	1
2786	102	8	UnivariateRealIntegratorImpl.java	getResult	THIS	UnivariateRealIntegratorImpl	UNKNOWN_AS	0	0	FIELD_USE	1
2787	153	8	UnivariateRealIntegratorImpl.java	verifyInterval	lower	double	PARAM_AS	1	1	PARAM_USE	1
2787	153	8	UnivariateRealIntegratorImpl.java	verifyInterval	upper	double	PARAM_AS	1	1	PARAM_USE	1
2787	153	8	UnivariateRealIntegratorImpl.java	verifyInterval	THIS	UnivariateRealIntegratorImpl	UNKNOWN_AS	0	0	FIELD_USE	0
2788	166	8	UnivariateRealIntegratorImpl.java	verifyIterationCount	THIS	UnivariateRealIntegratorImpl	UNKNOWN_AS	0	3	FIELD_USE	1
2789	190	8	UnivariateRealIntegratorImpl.java	incrementIterationsCounter	THIS	UnivariateRealIntegratorImpl	UNKNOWN_AS	0	2	FIELD_USE	1
2790	69	8	TrapezoidIntegrator.java	stage	f	UnivariateRealFunction	PARAM_AS	1	0	CLALLER_USE	0
2790	69	8	TrapezoidIntegrator.java	stage	min	double	PARAM_AS	1	0	-	0
2790	69	8	TrapezoidIntegrator.java	stage	max	double	PARAM_AS	1	0	-	0
2790	69	8	TrapezoidIntegrator.java	stage	n	int	PARAM_AS	1	1	-	1
2790	69	8	TrapezoidIntegrator.java	stage	THIS	TrapezoidIntegrator	UNKNOWN_AS	0	0	FIELD_USE	0
2791	98	12	TrapezoidIntegrator.java	integrate	t	double	stage()	0	0	-	0
2791	98	12	TrapezoidIntegrator.java	integrate	i	int	1	0	1	PARAM_USE	1
2791	98	12	TrapezoidIntegrator.java	integrate	oldt	double	stage()	0	0	-	0
2791	98	12	TrapezoidIntegrator.java	integrate	f	UnivariateRealFunction	PARAM_AS	1	0	NO_USE	0
2791	98	12	TrapezoidIntegrator.java	integrate	min	double	PARAM_AS	1	0	NO_USE	0
2791	98	12	TrapezoidIntegrator.java	integrate	max	double	PARAM_AS	1	0	NO_USE	0
2791	98	12	TrapezoidIntegrator.java	integrate	THIS	TrapezoidIntegrator	UNKNOWN_AS	0	2	FIELD_USE	1
2792	102	16	TrapezoidIntegrator.java	integrate	delta	double	abs()	0	2	NO_USE	1
2792	102	16	TrapezoidIntegrator.java	integrate	rLimit	double	*	0	1	NO_USE	1
2792	102	16	TrapezoidIntegrator.java	integrate	t	double	stage()	0	0	PARAM_USE	0
2792	102	16	TrapezoidIntegrator.java	integrate	i	int	1	0	1	PARAM_USE	0
2792	102	16	TrapezoidIntegrator.java	integrate	oldt	double	stage()	0	0	NO_USE	0
2792	102	16	TrapezoidIntegrator.java	integrate	f	UnivariateRealFunction	PARAM_AS	1	0	NO_USE	0
2792	102	16	TrapezoidIntegrator.java	integrate	min	double	PARAM_AS	1	0	NO_USE	0
2792	102	16	TrapezoidIntegrator.java	integrate	max	double	PARAM_AS	1	0	NO_USE	0
2792	102	16	TrapezoidIntegrator.java	integrate	THIS	TrapezoidIntegrator	UNKNOWN_AS	0	2	CLALLER_USE	1
2793	117	8	TrapezoidIntegrator.java	verifyIterationCount	THIS	TrapezoidIntegrator	UNKNOWN_AS	0	1	FIELD_USE	1
2794	180	12	LegendreGaussIntegrator.java	integrate	t	double	stage()	0	0	PARAM_USE	0
2794	180	12	LegendreGaussIntegrator.java	integrate	delta	double	abs()	0	1	NO_USE	1
2794	180	12	LegendreGaussIntegrator.java	integrate	limit	double	max()	0	1	NO_USE	1
2794	180	12	LegendreGaussIntegrator.java	integrate	i	int	0	0	1	PARAM_USE	1
2794	180	12	LegendreGaussIntegrator.java	integrate	oldt	double	stage()	0	0	NO_USE	0
2794	180	12	LegendreGaussIntegrator.java	integrate	n	int	2	0	0	NO_USE	0
2794	180	12	LegendreGaussIntegrator.java	integrate	f	UnivariateRealFunction	PARAM_AS	1	0	NO_USE	0
2794	180	12	LegendreGaussIntegrator.java	integrate	min	double	PARAM_AS	1	0	NO_USE	0
2794	180	12	LegendreGaussIntegrator.java	integrate	max	double	PARAM_AS	1	0	NO_USE	0
2794	180	12	LegendreGaussIntegrator.java	integrate	THIS	LegendreGaussIntegrator	UNKNOWN_AS	0	1	CLALLER_USE	1
2795	78	12	RombergIntegrator.java	integrate	tmpRow	double[]	NAME	0	0	NO_USE	0
2795	78	12	RombergIntegrator.java	integrate	s	double	ARRAY_ACCESS	0	0	-	0
2795	78	12	RombergIntegrator.java	integrate	i	int	1	0	1	PARAM_USE	1
2795	78	12	RombergIntegrator.java	integrate	m	int	+	0	0	NO_USE	0
2795	78	12	RombergIntegrator.java	integrate	previousRow	double[]	NAME	0	0	NO_USE	0
2795	78	12	RombergIntegrator.java	integrate	currentRow	double[]	+	0	0	NO_USE	0
2795	78	12	RombergIntegrator.java	integrate	qtrap	TrapezoidIntegrator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2795	78	12	RombergIntegrator.java	integrate	olds	double	ARRAY_ACCESS	0	0	-	0
2795	78	12	RombergIntegrator.java	integrate	f	UnivariateRealFunction	PARAM_AS	1	0	NO_USE	0
2795	78	12	RombergIntegrator.java	integrate	min	double	PARAM_AS	1	0	NO_USE	0
2795	78	12	RombergIntegrator.java	integrate	max	double	PARAM_AS	1	0	NO_USE	0
2795	78	12	RombergIntegrator.java	integrate	THIS	RombergIntegrator	UNKNOWN_AS	0	2	FIELD_USE	1
2796	81	16	RombergIntegrator.java	integrate	delta	double	abs()	0	2	NO_USE	1
2796	81	16	RombergIntegrator.java	integrate	rLimit	double	*	0	1	NO_USE	1
2796	81	16	RombergIntegrator.java	integrate	tmpRow	double[]	NAME	0	0	NO_USE	0
2796	81	16	RombergIntegrator.java	integrate	s	double	ARRAY_ACCESS	0	0	PARAM_USE	0
2796	81	16	RombergIntegrator.java	integrate	i	int	1	0	1	PARAM_USE	0
2796	81	16	RombergIntegrator.java	integrate	m	int	+	0	0	NO_USE	0
2796	81	16	RombergIntegrator.java	integrate	previousRow	double[]	NAME	0	0	NO_USE	0
2796	81	16	RombergIntegrator.java	integrate	currentRow	double[]	+	0	0	NO_USE	0
2796	81	16	RombergIntegrator.java	integrate	qtrap	TrapezoidIntegrator	CLASS_INSTANCE_CREATION	0	0	NO_USE	0
2796	81	16	RombergIntegrator.java	integrate	olds	double	ARRAY_ACCESS	0	0	NO_USE	0
2796	81	16	RombergIntegrator.java	integrate	f	UnivariateRealFunction	PARAM_AS	1	0	NO_USE	0
2796	81	16	RombergIntegrator.java	integrate	min	double	PARAM_AS	1	0	NO_USE	0
2796	81	16	RombergIntegrator.java	integrate	max	double	PARAM_AS	1	0	NO_USE	0
2796	81	16	RombergIntegrator.java	integrate	THIS	RombergIntegrator	UNKNOWN_AS	0	2	CLALLER_USE	1
2797	96	8	RombergIntegrator.java	verifyIterationCount	THIS	RombergIntegrator	UNKNOWN_AS	0	1	FIELD_USE	1
